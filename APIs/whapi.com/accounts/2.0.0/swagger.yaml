swagger: '2.0'
schemes:
  - https
host: sandbox.whapi.com
basePath: /v2/accounts
info:
  contact:
    email: platform@williamhill.com
    name: William Hill Labs
    url: 'http://developer.williamhill.com'
    x-twitter: WilliamHill
  description: The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance.
  title: Accounts
  version: 2.0.0
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: 'https://twitter.com/WillHillHelp/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://developer.williamhill.com/wh-docs/docs-sdks/accounts/swagger/docs'
      version: '2.0'
  x-providerName: whapi.com
  x-serviceName: accounts
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apiKey:
    description: A unique identifier of your application that is generated by the API portal.
    in: header
    name: apiKey
    type: apiKey
security:
  - apiKey: []
parameters:
  param_apiCountryCode:
    default: GB
    description: A two-character ISO 3166-1-Alpha-2 code representing the country API to use.
    in: header
    name: apiCountryCode
    pattern: ^(GB|ES|IT)$
    required: false
    type: string
    x-eg: ES
  param_apiKey:
    description: A unique identifier of your application that is generated by the API portal.
    in: header
    name: apiKey
    pattern: '^[a-zA-Z0-9]{19,50}$'
    required: true
    type: string
    x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
  param_apiSecret:
    description: Another unique identifier for your application.
    in: header
    name: apiSecret
    pattern: '^[a-zA-Z0-9]{19,50}$'
    required: true
    type: string
    x-eg: 355b1e522c544222ab4ff318xxxxxxxx
  param_apiTicket:
    description: Ticket Granting Ticket obtained from a previous request
    in: header
    name: apiTicket
    pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
    required: true
    type: string
    x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
  param_exclude:
    collectionFormat: csv
    description: Specify fields from the default to exclude (Comma-Separated List)
    in: query
    items:
      type: string
    name: exclude
    required: false
    type: array
    x-eg: expiryDateTime
  param_fields:
    collectionFormat: csv
    description: Specify an absolute field list to return (Comma-Separated List)
    in: query
    items:
      type: string
    name: fields
    required: false
    type: array
    x-eg: extended
  param_fromDateTime:
    description: 'The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)'
    in: query
    name: dateFrom
    pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})$'
    required: false
    type: string
    x-eg: '2013-09-25T13:34:20+01:00'
  param_include:
    collectionFormat: csv
    description: Specify fields in addition to the default to return (Comma-Separated List)
    in: query
    items:
      type: string
    name: include
    required: false
    type: array
    x-eg: extended
  param_page:
    default: 1
    description: The page number to return (Used with pageSize)
    in: query
    name: page
    pattern: '^[1-9]{1,7}$'
    required: false
    type: number
    x-eg: 10
  param_pageSize:
    default: 100
    description: Specify the number of results to return per page.
    in: query
    name: pageSize
    pattern: '^[1-9]{1,7}$'
    required: false
    type: number
    x-eg: 15
  param_sort:
    default: 'date,asc'
    description: 'The order the response will be retuned by. i.e. date,desc'
    in: query
    name: sort
    required: false
    type: string
    x-eg: 'date,desc'
  param_toDateTime:
    description: 'The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)'
    in: query
    name: dateTo
    pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})[+-](\d{2})\:(\d{2})$'
    required: false
    type: string
    x-eg: '2013-09-25T13:34:20+01:00'
  param_transactionFilter:
    description: Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned
    in: query
    name: transactionType
    pattern: ^(W|D)$
    required: false
    type: string
    x-eg: W
paths:
  /account:
    get:
      description: 'Retrieves a limited set of customer account details. For security purposes, only a subset is supplied, which does not include fields such as security questions and answers.'
      operationId: getDetails
      parameters:
        - description: Another unique identifier for your application.
          in: header
          name: apiSecret
          pattern: '^[a-zA-Z0-9]{19,50}$'
          required: true
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        - description: Ticket Granting Ticket obtained from a previous request
          in: header
          name: apiTicket
          pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
          required: true
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        - collectionFormat: csv
          description: Specify an absolute field list to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields in addition to the default to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: include
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields from the default to exclude (Comma-Separated List)
          in: query
          items:
            type: string
          name: exclude
          required: false
          type: array
          x-eg: expiryDateTime
      responses:
        '200':
          description: Success
          examples:
            application/json: |
              {
               "status": "A",
               "accountNum": "14652314",
               "accountId": "18164",
               "customerId": "48",
               "currencyCode": "GBP",
               "countryCode": "GB",
               "title": "Mr",
               "firstName": "Joe",
               "lastName": "Bloggs",
               "street1": "10 Rillington Place",
               "street2": "Old Basing",
               "street3": "Lychpit",
               "city": "Basingstoke",
               "county": "Hampshire",
               "postcode": "RG248YQ",
               "country": "United Kingdom",
               "email": "jbloggs@email.com",
               "mobile": "09876543210",
               "partnerContactable": true,
               "contactable": true,
               "flags": [
               {
               "pocf": true
               }
               ]
              }
          schema:
            $ref: '#/definitions/accounts'
        '401':
          description: Not Authorized
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"000000",
               "message":"Error Message Text",
               "field":"aparam"
               }
               ]
              }
          schema:
            $ref: '#/definitions/accountErrors'
      summary: Retrieves details of a customers account
      tags:
        - Accounts
      x-canReturnErrors:
        - 20401
  /account/balance:
    get:
      description: This method can be used to retrieve the customerâ€™s account balance in UK Sterling.
      operationId: getBalance
      parameters:
        - description: Another unique identifier for your application.
          in: header
          name: apiSecret
          pattern: '^[a-zA-Z0-9]{19,50}$'
          required: true
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        - description: Ticket Granting Ticket obtained from a previous request
          in: header
          name: apiTicket
          pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
          required: true
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        - collectionFormat: csv
          description: Specify an absolute field list to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields in addition to the default to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: include
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields from the default to exclude (Comma-Separated List)
          in: query
          items:
            type: string
          name: exclude
          required: false
          type: array
          x-eg: expiryDateTime
      responses:
        '200':
          description: Success
          examples:
            application/json: |
              {
               "currencyCode": "GBP",
               "balance": 234.23,
               "availableFunds": 234.23,
               "withdrawableFunds": 234.23
              }
          schema:
            $ref: '#/definitions/accountBalance'
        '401':
          description: Not Authorized
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"000000",
               "message":"Error Message Text",
               "field":"aparam"
               }
               ]
              }
          schema:
            $ref: '#/definitions/accountErrors'
      summary: Get a customers account balance
      tags:
        - Accounts
  /account/flags:
    post:
      description: Sets a flag based on name to value provided for the user.
      operationId: setAccountFlags
      parameters:
        - description: Another unique identifier for your application.
          in: header
          name: apiSecret
          pattern: '^[a-zA-Z0-9]{19,50}$'
          required: true
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        - description: Ticket Granting Ticket obtained from a previous request
          in: header
          name: apiTicket
          pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
          required: true
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        - default: GB
          description: A two-character ISO 3166-1-Alpha-2 code representing the country API to use.
          in: header
          name: apiCountryCode
          pattern: ^(GB|ES|IT)$
          required: false
          type: string
          x-eg: ES
        - description: Array of KVP for setting flags.
          in: body
          name: flags
          required: true
          schema:
            $ref: '#/definitions/flags'
      responses:
        '200':
          description: Success
          examples:
            application/json: |
              {
               "token": "e0dX/YhYaRax7aI0/SkNS9G1rXlZZWOD64t64JDijaCfEhRe0A=="
              }
          schema:
            $ref: '#/definitions/accountFlagsSet'
        '404':
          description: No such customer
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"10003",
               "message":"Resource Not Found",
               "field":"token"
               }
               ]
              }
          schema:
            $ref: '#/definitions/accountErrors'
      summary: Sets a flag based on name to value provided for the user.
      tags:
        - flags
      x-canReturnErrors:
        - 0
  /account/payments:
    get:
      description: Retrieves the customerâ€™s account payments in UK Sterling.
      operationId: getPayments
      parameters:
        - description: Another unique identifier for your application.
          in: header
          name: apiSecret
          pattern: '^[a-zA-Z0-9]{19,50}$'
          required: true
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        - description: Ticket Granting Ticket obtained from a previous request
          in: header
          name: apiTicket
          pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
          required: true
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
        - default: 1
          description: The page number to return (Used with pageSize)
          in: query
          name: page
          pattern: '^[1-9]{1,7}$'
          required: false
          type: number
          x-eg: 10
        - default: 100
          description: Specify the number of results to return per page.
          in: query
          name: pageSize
          pattern: '^[1-9]{1,7}$'
          required: false
          type: number
          x-eg: 15
        - description: 'The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)'
          in: query
          name: dateFrom
          pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})$'
          required: false
          type: string
          x-eg: '2013-09-25T13:34:20+01:00'
        - description: 'The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)'
          in: query
          name: dateTo
          pattern: '^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})[+-](\d{2})\:(\d{2})$'
          required: false
          type: string
          x-eg: '2013-09-25T13:34:20+01:00'
        - default: 'date,asc'
          description: 'The order the response will be retuned by. i.e. date,desc'
          in: query
          name: sort
          required: false
          type: string
          x-eg: 'date,desc'
        - description: Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned
          in: query
          name: transactionType
          pattern: ^(W|D)$
          required: false
          type: string
          x-eg: W
        - collectionFormat: csv
          description: Specify an absolute field list to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: fields
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields in addition to the default to return (Comma-Separated List)
          in: query
          items:
            type: string
          name: include
          required: false
          type: array
          x-eg: extended
        - collectionFormat: csv
          description: Specify fields from the default to exclude (Comma-Separated List)
          in: query
          items:
            type: string
          name: exclude
          required: false
          type: array
          x-eg: expiryDateTime
      responses:
        '200':
          description: Success - Payments obtained
          examples:
            application/json: |
              {
               "payments":
               [
               {
               "id": "277",
               "methodId": "111",
               "type": "CSH",
               "action": "D",
               "paymentDateTime": "2013-09-25T13:34:20",
               "amount": "20.56",
               "commission": "0.00",
               "status": "Y",
               "channel": "M",
               "ipAddress": "10.0.0.12"
               } 
               ]
              }
          schema:
            $ref: '#/definitions/getPayments'
        '400':
          description: Errors
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"000000",
               "message":"Error Message Text",
               "field":"aparam"
               }
               ]
              }
          schema:
            $ref: '#/definitions/accountErrors'
        '404':
          description: No such customer
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"10003",
               "message":"Resource Not Found",
               "field":"token"
               }
               ]
              }
          schema:
            $ref: '#/definitions/accountErrors'
      summary: Gets a customer's account payments
      tags:
        - Accounts
      x-canReturnErrors:
        - 20401
  /account/rewardsEligibility:
    get:
      description: Gets a customer's rewards eligibility and opt-in/out status
      operationId: getRewardEligibility
      parameters:
        - description: Another unique identifier for your application.
          in: header
          name: apiSecret
          pattern: '^[a-zA-Z0-9]{19,50}$'
          required: true
          type: string
          x-eg: 355b1e522c544222ab4ff318xxxxxxxx
        - description: Ticket Granting Ticket obtained from a previous request
          in: header
          name: apiTicket
          pattern: '^[a-zA-Z][a-zA-Z0-9-]{39,100}$'
          required: true
          type: string
          x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      responses:
        '200':
          description: Success - Rewards Eligibility obtained
          examples:
            application/json: |
              {
               "status": "optedIn"
              }
          schema:
            $ref: '#/definitions/rewardsEligibility'
        '400':
          description: Errors
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"000000",
               "message":"Error Message Text",
               "field":"aparam"
               }
               ]
              } 
          schema:
            $ref: '#/definitions/accountErrors'
        '404':
          description: No such customer
          examples:
            application/json: |
              {
               "errors" : [
               {
               "code":"10003",
               "message":"Account Not Found",
               "field":""
               },
               {
               "code":"20402",
               "message":" Account status not available",
               "field":""
               }
               ] 
               
              }
          schema:
            $ref: '#/definitions/accountErrors'
      summary: Gets a customer's rewards eligibility and opt-in/out status
      tags:
        - Accounts
        - Rewards
definitions:
  accountBalance:
    properties:
      availableFunds:
        description: Current available funds in this account
        type: number
      balance:
        description: Current balance of account
        type: number
      currencyCode:
        description: A three-character ISO4217 currency code. This will be the currency that the user registered in
        type: string
      withdrawableFunds:
        description: Current withdrawable balance of this account
        type: number
    required:
      - balance
      - currencyCode
    type: object
  accountErrors:
    properties:
      errors:
        items:
          $ref: '#/definitions/error'
        type: array
    type: object
  accountFlagsSet:
    properties:
      token:
        type: string
    type: object
  accounts:
    properties:
      accountId:
        description: Account ID
        type: string
      accountNum:
        description: Account number
        type: string
      city:
        description: The city of the customer's address
        type: string
      contactable:
        description: Is it okay for the bookmaker to contact the customer with marketing information
        type: boolean
      country:
        description: The country of the customer's address
        type: string
      countryCode:
        description: A two-character ISO 3166-1-Alpha-2 code representing the customer's country of registration
        type: string
      county:
        description: The county of the customer's address
        type: string
      currencyCode:
        description: A three-character ISO4217 currency code. This will be the currency that the customer registered in
        type: string
      customerId:
        description: Customer ID
        type: string
      email:
        description: The primary email address of the customer with that account. Must be unique.
        type: string
      firstName:
        description: The first name of the customer with that account
        type: string
      flags:
        $ref: '#/definitions/flags'
      lastName:
        description: The last name of the customer with that account
        type: string
      mobile:
        description: The mobile number of the customer with that account
        type: string
      partnerContactable:
        description: Is it okay for the bookmaker to give the user's contact details to companies with which it has partnerships
        type: boolean
      postcode:
        description: The postCode of the customer's address
        type: string
      status:
        description: Account status
        type: string
      street1:
        description: Line number 1 of the customer's street address written out in full
        type: string
      street2:
        description: Line number 2 of the customer's street address written out in full
        type: string
      street3:
        description: Line number 3 of the customer's street address written out in full
        type: string
      title:
        description: The title of the name of the customer with that account
        type: string
    required:
      - accountNum
      - firstName
      - lastName
      - status
    type: object
  error:
    properties:
      code:
        description: A unique William Hill identifier for the error
        type: string
      field:
        description: To help pinpoint the exact parameter where a request has failed
        type: string
      message:
        description: A unique William Hill text string to enable you to identify the error (in English only)
        type: string
    type: object
  flags:
    items:
      $ref: '#/definitions/flags_inner'
    type: array
  flags_inner:
    properties:
      flagName:
        description: Name of the flag to set.
        type: string
      flagReason:
        description: The reason that the flag has been set.
        type: string
      flagValue:
        description: Value to set the flag to.
        type: string
    required:
      - flagName
      - flagValue
  getPayments:
    properties:
      payments:
        items:
          $ref: '#/definitions/payment'
        type: array
    type: object
  payment:
    properties:
      action:
        description: 'Action of the payment (D = Deposit, W = withdrawal)'
        pattern: (D|W)
        type: string
      amount:
        description: The amount of the payment
        type: number
      channel:
        description: The channel through which the payment was made
        type: string
      commision:
        description: The commision for the payment
        type: number
      id:
        description: ID of the payment
        type: string
      ipAddress:
        description: The IP address from which the payment was made
        type: string
      methodId:
        description: ID of the payment method
        type: string
      paymentDateTime:
        description: The date and time when the payment was made
        type: string
      status:
        description: The status of the payment
        type: string
      type:
        description: Type of the payment
        pattern: '([A-Za-z]*)'
        type: string
    required:
      - action
      - amount
      - id
      - paymentDateTime
      - status
    type: object
  rewardsEligibility:
    description: eligibilty status
    properties:
      status:
        pattern: (eligible|optedIn|optedOut)
        type: string
        x-eg: eligible
    type: object
x-customerrors:
  - code: 10003
    message: Cannot have includeAllDescendants active without the headlineSummary parameter. Too much data to be returned.
    status: 404
  - code: 20401
    message: Account details are not available for temporary accounts
    status: 400
  - code: 20402
    message: Account status not available
    status: 404
x-docchapters:
  - fieldSelection
  - apiSummary
  - headAndOptions
  - docsAndSdks
  - errorHandling
  - statusCodes
