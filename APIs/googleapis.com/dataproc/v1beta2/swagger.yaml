swagger: '2.0'
schemes:
  - https
host: dataproc.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Manages Hadoop-based clusters and jobs on Google Cloud Platform.
  title: Cloud Dataproc
  version: v1beta2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.2
      format: google
      url: 'https://dataproc.googleapis.com/$discovery/rest?version=v1beta2'
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: dataproc
externalDocs:
  url: 'https://cloud.google.com/dataproc/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1beta2/projects/{projectId}/regions/{region}/clusters':
    get:
      description: 'Lists all regions/{region}/clusters in a project.'
      operationId: dataproc.projects.regions.clusters.list
      parameters:
        - description: 'Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is one of status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING, or UPDATING. ACTIVE contains the CREATING, UPDATING, and RUNNING states. INACTIVE contains the DELETING and ERROR states. clusterName is the name of the cluster provided at creation time. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = *'
          in: query
          name: filter
          type: string
        - description: Optional. The standard List page size.
          in: query
          name: pageSize
          type: integer
        - description: Optional. The standard List page token.
          in: query
          name: pageToken
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListClustersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a cluster in a project.
      operationId: dataproc.projects.regions.clusters.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Cluster'
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
        - description: 'Optional. A unique id used to identify the request. If the server receives two CreateClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/projects/{projectId}/regions/{region}/clusters/{clusterName}':
    delete:
      description: Deletes a cluster in a project.
      operationId: dataproc.projects.regions.clusters.delete
      parameters:
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          type: string
        - description: Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND) if cluster with specified UUID does not exist.
          in: query
          name: clusterUuid
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
        - description: 'Optional. A unique id used to identify the request. If the server receives two DeleteClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          in: query
          name: requestId
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets the resource representation for a cluster in a project.
      operationId: dataproc.projects.regions.clusters.get
      parameters:
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Cluster'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: Updates a cluster in a project.
      operationId: dataproc.projects.regions.clusters.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Cluster'
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          type: string
        - description: 'Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day.Only supported on Dataproc image versions 1.2 and higher.'
          in: query
          name: gracefulDecommissionTimeout
          type: string
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
        - description: 'Optional. A unique id used to identify the request. If the server receives two UpdateClusterRequest requests with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          in: query
          name: requestId
          type: string
        - description: |-
            Required. Specifies the path, relative to Cluster, of the field to update. For example, to change the number of workers in a cluster to 5, the update_mask parameter would be specified as config.worker_config.num_instances, and the PATCH request body would specify the new value, as follows:
            {
              "config":{
                "workerConfig":{
                  "numInstances":"5"
                }
              }
            }
            Similarly, to change the number of preemptible workers in a cluster to 5, the update_mask parameter would be config.secondary_worker_config.num_instances, and the PATCH request body would be set as follows:
            {
              "config":{
                "secondaryWorkerConfig":{
                  "numInstances":"5"
                }
              }
            }
            <strong>Note:</strong> currently only the following fields can be updated:
            <table>
            <tr>
            <td><strong>Mask</strong></td><td><strong>Purpose</strong></td>
            </tr>
            <tr>
            <td>labels</td><td>Updates labels</td>
            </tr>
            <tr>
            <td>config.worker_config.num_instances</td><td>Resize primary worker group</td>
            </tr>
            <tr>
            <td>config.secondary_worker_config.num_instances</td><td>Resize secondary worker group</td>
            </tr>
            <tr>
            <td>config.lifecycle_config.auto_delete_ttl</td><td>Reset MAX TTL duration</td>
            </tr>
            <tr>
            <td>config.lifecycle_config.auto_delete_time</td><td>Update MAX TTL deletion timestamp</td>
            </tr>
            <tr>
            <td>config.lifecycle_config.idle_delete_ttl</td><td>Update Idle TTL duration</td>
            </tr>
            </table>
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Gets cluster diagnostic information. After the operation completes, the Operation.response field contains DiagnoseClusterOutputLocation.'
      operationId: dataproc.projects.regions.clusters.diagnose
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DiagnoseClusterRequest'
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/projects/{projectId}/regions/{region}/jobs':
    get:
      description: 'Lists regions/{region}/jobs in a project.'
      operationId: dataproc.projects.regions.jobs.list
      parameters:
        - description: 'Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.'
          in: query
          name: clusterName
          type: string
        - description: 'Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *'
          in: query
          name: filter
          type: string
        - description: 'Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.'
          enum:
            - ALL
            - ACTIVE
            - NON_ACTIVE
          in: query
          name: jobStateMatcher
          type: string
        - description: Optional. The number of results to return in each response.
          in: query
          name: pageSize
          type: integer
        - description: 'Optional. The page token, returned by a previous call, to request the next page of results.'
          in: query
          name: pageToken
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListJobsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1beta2/projects/{projectId}/regions/{region}/jobs/{jobId}':
    delete:
      description: 'Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.'
      operationId: dataproc.projects.regions.jobs.delete
      parameters:
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets the resource representation for a job in a project.
      operationId: dataproc.projects.regions.jobs.get
      parameters:
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: Updates a job in a project.
      operationId: dataproc.projects.regions.jobs.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Job'
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
        - description: 'Required. Specifies the path, relative to <code>Job</code>, of the field to update. For example, to update the labels of a Job the <code>update_mask</code> parameter would be specified as <code>labels</code>, and the PATCH request body would specify the new value. <strong>Note:</strong> Currently, <code>labels</code> is the only field that can be updated.'
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list or regions/{region}/jobs.get.'
      operationId: dataproc.projects.regions.jobs.cancel
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelJobRequest'
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          type: string
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/projects/{projectId}/regions/{region}/jobs:submit':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Submits a job to a cluster.
      operationId: dataproc.projects.regions.jobs.submit
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SubmitJobRequest'
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          type: string
        - description: Required. The Cloud Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Job'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{name}':
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.locations.workflowTemplates.delete
      parameters:
        - description: 'Required. The "resource name" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: 'Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.'
          in: query
          name: version
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.locations.workflowTemplates.get
      parameters:
        - description: 'Required. The "resource name" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: 'Optional. The version of workflow template to retrieve. Only previously instatiated versions can be retrieved.If unspecified, retrieves the current version.'
          in: query
          name: version
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.locations.workflowTemplates.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/WorkflowTemplate'
        - description: 'Output only. The "resource name" of the template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.'
      operationId: dataproc.projects.regions.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{name}:instantiate':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiate
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/InstantiateWorkflowTemplateRequest'
        - description: 'Required. The "resource name" of the workflow template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{parent}/workflowTemplates':
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.locations.workflowTemplates.list
      parameters:
        - description: Optional. The maximum number of results to return in each response.
          in: query
          name: pageSize
          type: integer
        - description: 'Optional. The page token, returned by a previous call, to request the next page of results.'
          in: query
          name: pageToken
          type: string
        - description: 'Required. The "resource name" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListWorkflowTemplatesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.locations.workflowTemplates.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/WorkflowTemplate'
        - description: 'Required. The "resource name" of the region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/WorkflowTemplate'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{parent}/workflowTemplates:instantiateInline':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata.On successful completion, Operation.response will be Empty.'
      operationId: dataproc.projects.locations.workflowTemplates.instantiateInline
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/WorkflowTemplate'
        - description: 'Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
          in: query
          name: instanceId
          type: string
        - description: 'Required. The "resource name" of the workflow template region, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}'
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{resource}:getIamPolicy':
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.locations.workflowTemplates.getIamPolicy
      parameters:
        - description: 'REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1beta2/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.
      operationId: dataproc.projects.locations.workflowTemplates.setIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
        - description: 'REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1beta2/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.locations.workflowTemplates.testIamPermissions
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
        - description: 'REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
definitions:
  AcceleratorConfig:
    description: Specifies the type and number of accelerator cards attached to the instances of an instance group (see GPUs on Compute Engine).
    properties:
      acceleratorCount:
        description: The number of the accelerator cards of this type exposed to this instance.
        format: int32
        type: integer
      acceleratorTypeUri:
        description: 'Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes( /compute/docs/reference/beta/acceleratorTypes)Examples * https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 * projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 * nvidia-tesla-k80Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.'
        type: string
    type: object
  Binding:
    description: Associates members with a role.
    properties:
      members:
        description: |-
          Specifies the identities requesting access for a Cloud Platform resource. members can have the following values:
          allUsers: A special identifier that represents anyone who is  on the internet; with or without a Google account.
          allAuthenticatedUsers: A special identifier that represents anyone  who is authenticated with a Google account or a service account.
          user:{emailid}: An email address that represents a specific Google  account. For example, alice@gmail.com .
          serviceAccount:{emailid}: An email address that represents a service  account. For example, my-other-app@appspot.gserviceaccount.com.
          group:{emailid}: An email address that represents a Google group.  For example, admins@example.com.
          domain:{domain}: A Google Apps domain name that represents all the  users of that domain. For example, google.com or example.com.
        items:
          type: string
        type: array
      role:
        description: 'Role that is assigned to members. For example, roles/viewer, roles/editor, or roles/owner. Required'
        type: string
    type: object
  CancelJobRequest:
    description: A request to cancel a job.
    properties: {}
    type: object
  Cluster:
    description: 'Describes the identifying information, config, and status of a cluster of Compute Engine instances.'
    properties:
      clusterName:
        description: Required. The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
        type: string
      clusterUuid:
        description: Output only. A cluster UUID (Unique Universal Identifier). Cloud Dataproc generates this value when it creates the cluster.
        type: string
      config:
        $ref: '#/definitions/ClusterConfig'
        description: 'Required. The cluster config. Note that Cloud Dataproc may set default values, and values may change when clusters are updated.'
      labels:
        additionalProperties:
          type: string
        description: 'Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.'
        type: object
      metrics:
        $ref: '#/definitions/ClusterMetrics'
        description: 'Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
      projectId:
        description: Required. The Google Cloud Platform project ID that the cluster belongs to.
        type: string
      status:
        $ref: '#/definitions/ClusterStatus'
        description: Output only. Cluster status.
      statusHistory:
        description: Output only. The previous cluster status.
        items:
          $ref: '#/definitions/ClusterStatus'
        type: array
    type: object
  ClusterConfig:
    description: The cluster config.
    properties:
      configBucket:
        description: 'Optional. A Cloud Storage staging bucket used for sharing generated SSH keys and config. If you do not specify a staging bucket, Cloud Dataproc will determine an appropriate Cloud Storage location (US, ASIA, or EU) for your cluster''s staging bucket according to the Google Compute Engine zone where your cluster is deployed, and then it will create and manage this project-level, per-location bucket for you.'
        type: string
      gceClusterConfig:
        $ref: '#/definitions/GceClusterConfig'
        description: Required. The shared Compute Engine config settings for all instances in a cluster.
      initializationActions:
        description: |
          Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's <code>role</code> metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget):
          ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1beta2/instance/attributes/dataproc-role)
          if [[ "${ROLE}" == 'Master' ]]; then
            ... master specific actions ...
          else
            ... worker specific actions ...
          fi
        items:
          $ref: '#/definitions/NodeInitializationAction'
        type: array
      lifecycleConfig:
        $ref: '#/definitions/LifecycleConfig'
        description: Optional. The config setting for auto delete cluster schedule.
      masterConfig:
        $ref: '#/definitions/InstanceGroupConfig'
        description: Optional. The Compute Engine config settings for the master instance in a cluster.
      secondaryWorkerConfig:
        $ref: '#/definitions/InstanceGroupConfig'
        description: Optional. The Compute Engine config settings for additional worker instances in a cluster.
      softwareConfig:
        $ref: '#/definitions/SoftwareConfig'
        description: Optional. The config settings for software inside the cluster.
      workerConfig:
        $ref: '#/definitions/InstanceGroupConfig'
        description: Optional. The Compute Engine config settings for worker instances in a cluster.
    type: object
  ClusterMetrics:
    description: 'Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
    properties:
      hdfsMetrics:
        additionalProperties:
          format: int64
          type: string
        description: The HDFS metrics.
        type: object
      yarnMetrics:
        additionalProperties:
          format: int64
          type: string
        description: The YARN metrics.
        type: object
    type: object
  ClusterOperation:
    description: The cluster operation triggered by a workflow.
    properties:
      done:
        description: Output only. Indicates the operation is done.
        type: boolean
      error:
        description: 'Output only. Error, if operation failed.'
        type: string
      operationId:
        description: Output only. The id of the cluster operation.
        type: string
    type: object
  ClusterOperationMetadata:
    description: Metadata describing the operation.
    properties:
      clusterName:
        description: Output only. Name of the cluster for the operation.
        type: string
      clusterUuid:
        description: Output only. Cluster UUID for the operation.
        type: string
      description:
        description: Output only. Short description of operation.
        type: string
      labels:
        additionalProperties:
          type: string
        description: Output only. Labels associated with the operation
        type: object
      operationType:
        description: Output only. The operation type.
        type: string
      status:
        $ref: '#/definitions/ClusterOperationStatus'
        description: Output only. Current operation status.
      statusHistory:
        description: Output only. The previous operation status.
        items:
          $ref: '#/definitions/ClusterOperationStatus'
        type: array
      warnings:
        description: Output only. Errors encountered during operation execution.
        items:
          type: string
        type: array
    type: object
  ClusterOperationStatus:
    description: The status of the operation.
    properties:
      details:
        description: Output only. A message containing any operation metadata details.
        type: string
      innerState:
        description: Output only. A message containing the detailed operation state.
        type: string
      state:
        description: Output only. A message containing the operation state.
        enum:
          - UNKNOWN
          - PENDING
          - RUNNING
          - DONE
        type: string
      stateStartTime:
        description: Output only. The time this state was entered.
        format: google-datetime
        type: string
    type: object
  ClusterSelector:
    description: A selector that chooses target cluster for jobs based on metadata.
    properties:
      clusterLabels:
        additionalProperties:
          type: string
        description: Required. The cluster labels. Cluster must have all labels to match.
        type: object
      zone:
        description: 'Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.'
        type: string
    type: object
  ClusterStatus:
    description: The status of a cluster and its instances.
    properties:
      detail:
        description: Output only. Optional details of cluster's state.
        type: string
      state:
        description: Output only. The cluster's state.
        enum:
          - UNKNOWN
          - CREATING
          - RUNNING
          - ERROR
          - DELETING
          - UPDATING
        type: string
      stateStartTime:
        description: Output only. Time when this state was entered.
        format: google-datetime
        type: string
      substate:
        description: Output only. Additional state information that includes status reported by the agent.
        enum:
          - UNSPECIFIED
          - UNHEALTHY
          - STALE_STATUS
        type: string
    type: object
  DiagnoseClusterRequest:
    description: A request to collect cluster diagnostic information.
    properties: {}
    type: object
  DiagnoseClusterResults:
    description: The location of diagnostic output.
    properties:
      outputUri:
        description: Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.
        type: string
    type: object
  DiskConfig:
    description: Specifies the config of disk options for a group of VM instances.
    properties:
      bootDiskSizeGb:
        description: Optional. Size in GB of the boot disk (default is 500GB).
        format: int32
        type: integer
      bootDiskType:
        description: 'Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).'
        type: string
      numLocalSsds:
        description: 'Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.'
        format: int32
        type: integer
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance:
      service Foo {
        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
      }
      The JSON representation for Empty is empty JSON object {}.
    properties: {}
    type: object
  GceClusterConfig:
    description: 'Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.'
    properties:
      internalIpOnly:
        description: 'Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.'
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: 'The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).'
        type: object
      networkUri:
        description: |-
          Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks for more information).A full URL, partial URI, or short name are valid. Examples:
          https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default
          projects/[project_id]/regions/global/default
          default
        type: string
      serviceAccount:
        description: |-
          Optional. The service account of the instances. Defaults to the default Compute Engine service account. Custom service accounts need permissions equivalent to the following IAM roles:
          roles/logging.logWriter
          roles/storage.objectAdmin(see https://cloud.google.com/compute/docs/access/service-accounts#custom_service_accounts for more information). Example: [account_id]@[project_id].iam.gserviceaccount.com
        type: string
      serviceAccountScopes:
        description: |-
          Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included:
          https://www.googleapis.com/auth/cloud.useraccounts.readonly
          https://www.googleapis.com/auth/devstorage.read_write
          https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided:
          https://www.googleapis.com/auth/bigquery
          https://www.googleapis.com/auth/bigtable.admin.table
          https://www.googleapis.com/auth/bigtable.data
          https://www.googleapis.com/auth/devstorage.full_control
        items:
          type: string
        type: array
      subnetworkUri:
        description: |-
          Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples:
          https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0
          projects/[project_id]/regions/us-east1/sub0
          sub0
        type: string
      tags:
        description: The Compute Engine tags to add to all instances (see Tagging instances).
        items:
          type: string
        type: array
      zoneUri:
        description: |-
          Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Cloud Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples:
          https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]
          projects/[project_id]/zones/[zone]
          us-central1-f
        type: string
    type: object
  GetIamPolicyRequest:
    description: Request message for GetIamPolicy method.
    properties: {}
    type: object
  HadoopJob:
    description: 'A Cloud Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).'
    properties:
      archiveUris:
        description: 'Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.'
        items:
          type: string
        type: array
      args:
        description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
        items:
          type: string
        type: array
      fileUris:
        description: Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
        items:
          type: string
        type: array
      jarFileUris:
        description: Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
        items:
          type: string
        type: array
      loggingConfig:
        $ref: '#/definitions/LoggingConfig'
        description: Optional. The runtime log config for job execution.
      mainClass:
        description: The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
        type: string
      mainJarFileUri:
        description: 'The HCFS URI of the jar file containing the main class. Examples:  ''gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar''  ''hdfs:/tmp/test-samples/custom-wordcount.jar''  ''file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'''
        type: string
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.'
        type: object
    type: object
  HiveJob:
    description: 'A Cloud Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.'
    properties:
      continueOnFailure:
        description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        type: boolean
      jarFileUris:
        description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
        items:
          type: string
        type: array
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.'
        type: object
      queryFileUri:
        description: The HCFS URI of the script that contains Hive queries.
        type: string
      queryList:
        $ref: '#/definitions/QueryList'
        description: A list of queries.
      scriptVariables:
        additionalProperties:
          type: string
        description: 'Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).'
        type: object
    type: object
  InstanceGroupConfig:
    description: 'Optional. The config settings for Compute Engine resources in an instance group, such as a master or worker group.'
    properties:
      accelerators:
        description: 'Optional. The Compute Engine accelerator configuration for these instances.Beta Feature: This feature is still under development. It may be changed before final release.'
        items:
          $ref: '#/definitions/AcceleratorConfig'
        type: array
      diskConfig:
        $ref: '#/definitions/DiskConfig'
        description: Optional. Disk option config settings.
      imageUri:
        description: Output only. The Compute Engine image resource used for cluster instances. Inferred from SoftwareConfig.image_version.
        type: string
      instanceNames:
        description: 'Output only. The list of instance names. Cloud Dataproc derives the names from cluster_name, num_instances, and the instance group.'
        items:
          type: string
        type: array
      isPreemptible:
        description: Optional. Specifies that this instance group contains preemptible instances.
        type: boolean
      machineTypeUri:
        description: |-
          Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples:
          https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
          projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2
          n1-standard-2Auto Zone Exception: If you are using the Cloud Dataproc Auto Zone Placement feature, you must use the short name of the machine type resource, for example, n1-standard-2.
        type: string
      managedGroupConfig:
        $ref: '#/definitions/ManagedGroupConfig'
        description: Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
      minCpuPlatform:
        description: Optional. Specifies the minimum cpu platform for the Instance Group. See Cloud Dataproc&rarr;Minimum CPU Platform.
        type: string
      numInstances:
        description: 'Optional. The number of VM instances in the instance group. For master instance groups, must be set to 1.'
        format: int32
        type: integer
    type: object
  InstantiateWorkflowTemplateRequest:
    description: A request to instantiate a workflow template.
    properties:
      instanceId:
        description: 'Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
        type: string
      parameters:
        additionalProperties:
          type: string
        description: Optional. Map from parameter names to values that should be used for those parameters.
        type: object
      version:
        description: 'Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.'
        format: int32
        type: integer
    type: object
  Job:
    description: A Cloud Dataproc job resource.
    properties:
      driverControlFilesUri:
        description: 'Output only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.'
        type: string
      driverOutputResourceUri:
        description: Output only. A URI pointing to the location of the stdout of the job's driver program.
        type: string
      hadoopJob:
        $ref: '#/definitions/HadoopJob'
        description: Job is a Hadoop job.
      hiveJob:
        $ref: '#/definitions/HiveJob'
        description: Job is a Hive job.
      labels:
        additionalProperties:
          type: string
        description: 'Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.'
        type: object
      pigJob:
        $ref: '#/definitions/PigJob'
        description: Job is a Pig job.
      placement:
        $ref: '#/definitions/JobPlacement'
        description: 'Required. Job information, including how, when, and where to run the job.'
      pysparkJob:
        $ref: '#/definitions/PySparkJob'
        description: Job is a Pyspark job.
      reference:
        $ref: '#/definitions/JobReference'
        description: 'Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a <code>job_id</code>.'
      scheduling:
        $ref: '#/definitions/JobScheduling'
        description: Optional. Job scheduling configuration.
      sparkJob:
        $ref: '#/definitions/SparkJob'
        description: Job is a Spark job.
      sparkSqlJob:
        $ref: '#/definitions/SparkSqlJob'
        description: Job is a SparkSql job.
      status:
        $ref: '#/definitions/JobStatus'
        description: Output only. The job status. Additional application-specific status information may be contained in the <code>type_job</code> and <code>yarn_applications</code> fields.
      statusHistory:
        description: Output only. The previous job status.
        items:
          $ref: '#/definitions/JobStatus'
        type: array
      yarnApplications:
        description: 'Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
        items:
          $ref: '#/definitions/YarnApplication'
        type: array
    type: object
  JobPlacement:
    description: Cloud Dataproc job config.
    properties:
      clusterName:
        description: Required. The name of the cluster where the job will be submitted.
        type: string
      clusterUuid:
        description: Output only. A cluster UUID generated by the Cloud Dataproc service when the job is submitted.
        type: string
    type: object
  JobReference:
    description: Encapsulates the full scoping used to reference a job.
    properties:
      jobId:
        description: 'Optional. The job ID, which must be unique within the project. The job ID is generated by the server upon job submission or provided by the user as a means to perform retries without creating duplicate jobs. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.'
        type: string
      projectId:
        description: Required. The ID of the Google Cloud Platform project that the job belongs to.
        type: string
    type: object
  JobScheduling:
    description: Job scheduling options.
    properties:
      maxFailuresPerHour:
        description: Optional. Maximum number of times per hour a driver may be restarted as a result of driver terminating with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.
        format: int32
        type: integer
    type: object
  JobStatus:
    description: Cloud Dataproc job status.
    properties:
      details:
        description: 'Output only. Optional job state details, such as an error description if the state is <code>ERROR</code>.'
        type: string
      state:
        description: Output only. A state message specifying the overall job state.
        enum:
          - STATE_UNSPECIFIED
          - PENDING
          - SETUP_DONE
          - RUNNING
          - CANCEL_PENDING
          - CANCEL_STARTED
          - CANCELLED
          - DONE
          - ERROR
          - ATTEMPT_FAILURE
        type: string
      stateStartTime:
        description: Output only. The time when this state was entered.
        format: google-datetime
        type: string
      substate:
        description: 'Output only. Additional state information, which includes status reported by the agent.'
        enum:
          - UNSPECIFIED
          - SUBMITTED
          - QUEUED
          - STALE_STATUS
        type: string
    type: object
  LifecycleConfig:
    description: Specifies the cluster auto delete related schedule configuration.
    properties:
      autoDeleteTime:
        description: Optional. The time when cluster will be auto-deleted.
        format: google-datetime
        type: string
      autoDeleteTtl:
        description: 'Optional. The life duration of cluster, the cluster will be auto-deleted at the end of this duration.'
        format: google-duration
        type: string
      idleDeleteTtl:
        description: Optional. The longest duration that cluster would keep alive while staying  idle; passing this threshold will cause cluster to be auto-deleted.
        format: google-duration
        type: string
    type: object
  ListClustersResponse:
    description: The list of all clusters in a project.
    properties:
      clusters:
        description: Output only. The clusters in the project.
        items:
          $ref: '#/definitions/Cluster'
        type: array
      nextPageToken:
        description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent <code>ListClustersRequest</code>.'
        type: string
    type: object
  ListJobsResponse:
    description: A list of jobs in a project.
    properties:
      jobs:
        description: Output only. Jobs list.
        items:
          $ref: '#/definitions/Job'
        type: array
      nextPageToken:
        description: 'Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent <code>ListJobsRequest</code>.'
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  ListWorkflowTemplatesResponse:
    description: A response to a request to list workflow templates in a project.
    properties:
      nextPageToken:
        description: 'Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent <code>ListWorkflowTemplatesRequest</code>.'
        type: string
      templates:
        description: Output only. WorkflowTemplates list.
        items:
          $ref: '#/definitions/WorkflowTemplate'
        type: array
    type: object
  LoggingConfig:
    description: The runtime logging config of the job.
    properties:
      driverLogLevels:
        additionalProperties:
          enum:
            - LEVEL_UNSPECIFIED
            - ALL
            - TRACE
            - DEBUG
            - INFO
            - WARN
            - ERROR
            - FATAL
            - 'OFF'
          type: string
        description: 'The per-package log levels for the driver. This may include "root" package name to configure rootLogger. Examples:  ''com.google = FATAL'', ''root = INFO'', ''org.apache = DEBUG'''
        type: object
    type: object
  ManagedCluster:
    description: Cluster that is managed by the workflow.
    properties:
      clusterName:
        description: 'Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.'
        type: string
      config:
        $ref: '#/definitions/ClusterConfig'
        description: Required. The cluster configuration.
      labels:
        additionalProperties:
          type: string
        description: 'Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.'
        type: object
    type: object
  ManagedGroupConfig:
    description: Specifies the resources used to actively manage an instance group.
    properties:
      instanceGroupManagerName:
        description: Output only. The name of the Instance Group Manager for this group.
        type: string
      instanceTemplateName:
        description: Output only. The name of the Instance Template used for the Managed Instance Group.
        type: string
    type: object
  NodeInitializationAction:
    description: Specifies an executable to run on a fully configured node and a timeout period for executable completion.
    properties:
      executableFile:
        description: Required. Cloud Storage URI of executable file.
        type: string
      executionTimeout:
        description: Optional. Amount of time executable has to complete. Default is 10 minutes. Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
        format: google-duration
        type: string
    type: object
  Operation:
    description: This resource represents a long-running operation that is the result of a network API call.
    properties:
      done:
        description: 'If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.'
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        type: object
      name:
        description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should have the format of operations/some/unique/name.'
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.'
        type: object
    type: object
  OrderedJob:
    description: A job executed by the workflow.
    properties:
      hadoopJob:
        $ref: '#/definitions/HadoopJob'
        description: Job is a Hadoop job.
      hiveJob:
        $ref: '#/definitions/HiveJob'
        description: Job is a Hive job.
      labels:
        additionalProperties:
          type: string
        description: 'Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.'
        type: object
      pigJob:
        $ref: '#/definitions/PigJob'
        description: Job is a Pig job.
      prerequisiteStepIds:
        description: 'Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.'
        items:
          type: string
        type: array
      pysparkJob:
        $ref: '#/definitions/PySparkJob'
        description: Job is a Pyspark job.
      scheduling:
        $ref: '#/definitions/JobScheduling'
        description: Optional. Job scheduling configuration.
      sparkJob:
        $ref: '#/definitions/SparkJob'
        description: Job is a Spark job.
      sparkSqlJob:
        $ref: '#/definitions/SparkSqlJob'
        description: Job is a SparkSql job.
      stepId:
        description: 'Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
        type: string
    type: object
  ParameterValidation:
    description: Configuration for parameter validation.
    properties:
      regex:
        $ref: '#/definitions/RegexValidation'
        description: Validation based on regular expressions.
      values:
        $ref: '#/definitions/ValueValidation'
        description: Validation based on a list of allowed values.
    type: object
  PigJob:
    description: 'A Cloud Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.'
    properties:
      continueOnFailure:
        description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
        type: boolean
      jarFileUris:
        description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
        items:
          type: string
        type: array
      loggingConfig:
        $ref: '#/definitions/LoggingConfig'
        description: Optional. The runtime log config for job execution.
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.'
        type: object
      queryFileUri:
        description: The HCFS URI of the script that contains the Pig queries.
        type: string
      queryList:
        $ref: '#/definitions/QueryList'
        description: A list of queries.
      scriptVariables:
        additionalProperties:
          type: string
        description: 'Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).'
        type: object
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources.A Policy consists of a list of bindings. A binding binds a list of members to a role, where the members can be user accounts, Google groups, Google domains, and service accounts. A role is a named list of permissions defined by IAM.JSON Example
      {
        "bindings": [
          {
            "role": "roles/owner",
            "members": [
              "user:mike@example.com",
              "group:admins@example.com",
              "domain:google.com",
              "serviceAccount:my-other-app@appspot.gserviceaccount.com"
            ]
          },
          {
            "role": "roles/viewer",
            "members": ["user:sean@example.com"]
          }
        ]
      }
      YAML Example
      bindings:
      - members:
        - user:mike@example.com
        - group:admins@example.com
        - domain:google.com
        - serviceAccount:my-other-app@appspot.gserviceaccount.com
        role: roles/owner
      - members:
        - user:sean@example.com
        role: roles/viewer
      For a description of IAM and its features, see the IAM developer's guide (https://cloud.google.com/iam/docs).
    properties:
      bindings:
        description: Associates a list of members to a role. bindings with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: 'etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.If no etag is provided in the call to setIamPolicy, then the existing policy is overwritten blindly.'
        format: byte
        type: string
      version:
        description: Deprecated.
        format: int32
        type: integer
    type: object
  PySparkJob:
    description: 'A Cloud Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.'
    properties:
      archiveUris:
        description: 'Optional. HCFS URIs of archives to be extracted in the working directory of .jar, .tar, .tar.gz, .tgz, and .zip.'
        items:
          type: string
        type: array
      args:
        description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
        items:
          type: string
        type: array
      fileUris:
        description: Optional. HCFS URIs of files to be copied to the working directory of Python drivers and distributed tasks. Useful for naively parallel tasks.
        items:
          type: string
        type: array
      jarFileUris:
        description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
        items:
          type: string
        type: array
      loggingConfig:
        $ref: '#/definitions/LoggingConfig'
        description: Optional. The runtime log config for job execution.
      mainPythonFileUri:
        description: Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
        type: string
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
        type: object
      pythonFileUris:
        description: 'Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.'
        items:
          type: string
        type: array
    type: object
  QueryList:
    description: A list of queries to run on a cluster.
    properties:
      queries:
        description: |
          Required. The queries to execute. You do not need to terminate a query with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of an Cloud Dataproc API snippet that uses a QueryList to specify a HiveJob:
          "hiveJob": {
            "queryList": {
              "queries": [
                "query1",
                "query2",
                "query3;query4",
              ]
            }
          }
        items:
          type: string
        type: array
    type: object
  RegexValidation:
    description: Validation based on regular expressions.
    properties:
      regexes:
        description: 'Required. RE2 regular expressions used to validate the parameter''s value. The provided value must match the regexes in its entirety, e.g. substring matches are not enough.'
        items:
          type: string
        type: array
    type: object
  SetIamPolicyRequest:
    description: Request message for SetIamPolicy method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: 'REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.'
    type: object
  SoftwareConfig:
    description: Specifies the selection and config of software inside the cluster.
    properties:
      imageVersion:
        description: 'Optional. The version of software inside the cluster. It must be one of the supported Cloud Dataproc Versions, such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version. If unspecified, it defaults to the latest version.'
        type: string
      properties:
        additionalProperties:
          type: string
        description: |-
          Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, such as core:fs.defaultFS. The following are supported prefixes and their mappings:
          capacity-scheduler: capacity-scheduler.xml
          core: core-site.xml
          distcp: distcp-default.xml
          hdfs: hdfs-site.xml
          hive: hive-site.xml
          mapred: mapred-site.xml
          pig: pig.properties
          spark: spark-defaults.conf
          yarn: yarn-site.xmlFor more information, see Cluster properties.
        type: object
    type: object
  SparkJob:
    description: 'A Cloud Dataproc job for running Apache Spark (http://spark.apache.org/) applications on YARN.'
    properties:
      archiveUris:
        description: 'Optional. HCFS URIs of archives to be extracted in the working directory of Spark drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.'
        items:
          type: string
        type: array
      args:
        description: 'Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.'
        items:
          type: string
        type: array
      fileUris:
        description: Optional. HCFS URIs of files to be copied to the working directory of Spark drivers and distributed tasks. Useful for naively parallel tasks.
        items:
          type: string
        type: array
      jarFileUris:
        description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
        items:
          type: string
        type: array
      loggingConfig:
        $ref: '#/definitions/LoggingConfig'
        description: Optional. The runtime log config for job execution.
      mainClass:
        description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
        type: string
      mainJarFileUri:
        description: The HCFS URI of the jar file that contains the main class.
        type: string
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Cloud Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.'
        type: object
    type: object
  SparkSqlJob:
    description: 'A Cloud Dataproc job for running Apache Spark SQL (http://spark.apache.org/sql/) queries.'
    properties:
      jarFileUris:
        description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
        items:
          type: string
        type: array
      loggingConfig:
        $ref: '#/definitions/LoggingConfig'
        description: Optional. The runtime log config for job execution.
      properties:
        additionalProperties:
          type: string
        description: 'Optional. A mapping of property names to values, used to configure Spark SQL''s SparkConf. Properties that conflict with values set by the Cloud Dataproc API may be overwritten.'
        type: object
      queryFileUri:
        description: The HCFS URI of the script that contains SQL queries.
        type: string
      queryList:
        $ref: '#/definitions/QueryList'
        description: A list of queries.
      scriptVariables:
        additionalProperties:
          type: string
        description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
        type: object
    type: object
  Status:
    description: |-
      The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). The error model is designed to be:
      Simple to use and understand for most users
      Flexible enough to meet unexpected needsOverviewThe Status message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of google.rpc.Code, but it may accept additional error codes if needed. The error message should be a developer-facing English message that helps developers understand and resolve the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package google.rpc that can be used for common error conditions.Language mappingThe Status message is the logical representation of the error model, but it is not necessarily the actual wire format. When the Status message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.Other usesThe error model and the Status message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.Example uses of this error model include:
      Partial errors. If a service needs to return partial errors to the client, it may embed the Status in the normal response to indicate the partial errors.
      Workflow errors. A typical workflow has multiple steps. Each step may have a Status message for error reporting.
      Batch operations. If a client uses batch request and batch response, the Status message should be used directly inside batch response, one for each error sub-response.
      Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of those operations should be represented directly using the Status message.
      Logging. If some API errors are stored in logs, the message Status could be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        type: string
    type: object
  SubmitJobRequest:
    description: A request to submit a job.
    properties:
      job:
        $ref: '#/definitions/Job'
        description: Required. The job resource.
      requestId:
        description: 'Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest requests with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.'
        type: string
    type: object
  TemplateParameter:
    description: A configurable parameter that replaces one or more fields in the template.
    properties:
      description:
        description: Optional. User-friendly description of the parameter. Must not exceed 1024 characters.
        type: string
      fields:
        description: |-
          Required. Paths to all fields that this parameter replaces. Each field may appear in at most one Parameter's fields list.Field path syntax:A field path is similar to a FieldMask. For example, a field path that references the zone field of the template's cluster selector would look like:placement.clusterSelector.zoneThe only differences between field paths and standard field masks are that:
          Values in maps can be referenced by key.Example: placement.clusterSelector.clusterLabels'key'
          Jobs in the jobs list can be referenced by step id.Example: jobs'step-id'.hadoopJob.mainJarFileUri
          Items in repeated fields can be referenced by zero-based index.Example: jobs'step-id'.sparkJob.args0NOTE: Maps and repeated fields may not be parameterized in their entirety. Only individual map values and items in repeated fields may be referenced. For example, the following field paths are invalid: - placement.clusterSelector.clusterLabels - jobs'step-id'.sparkJob.argsParameterizable fields:Only certain types of fields may be parameterized, specifically: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)Examples of parameterizable fields:Labels:labels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key'File uris:jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0Other:jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zone
        items:
          type: string
        type: array
      name:
        description: 'Required. User-friendly parameter name. This name is used as a key when providing a value for this parameter when the template is instantiated. Must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.'
        type: string
      validation:
        $ref: '#/definitions/ParameterValidation'
        description: Optional. Validation rules to be applied to this parameter's value.
    type: object
  TestIamPermissionsRequest:
    description: Request message for TestIamPermissions method.
    properties:
      permissions:
        description: 'The set of permissions to check for the resource. Permissions with wildcards (such as ''*'' or ''storage.*'') are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).'
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for TestIamPermissions method.
    properties:
      permissions:
        description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
        items:
          type: string
        type: array
    type: object
  ValueValidation:
    description: Validation based on a list of allowed values.
    properties:
      values:
        description: Required. List of allowed values for this parameter.
        items:
          type: string
        type: array
    type: object
  WorkflowGraph:
    description: The workflow graph.
    properties:
      nodes:
        description: Output only. The workflow nodes.
        items:
          $ref: '#/definitions/WorkflowNode'
        type: array
    type: object
  WorkflowMetadata:
    description: A Cloud Dataproc workflow template resource.
    properties:
      clusterName:
        description: Output only. The name of the managed cluster.
        type: string
      createCluster:
        $ref: '#/definitions/ClusterOperation'
        description: Output only. The create cluster operation metadata.
      deleteCluster:
        $ref: '#/definitions/ClusterOperation'
        description: Output only. The delete cluster operation metadata.
      graph:
        $ref: '#/definitions/WorkflowGraph'
        description: Output only. The workflow graph.
      parameters:
        additionalProperties:
          type: string
        description: Map from parameter names to values that were used for those parameters.
        type: object
      state:
        description: Output only. The workflow state.
        enum:
          - UNKNOWN
          - PENDING
          - RUNNING
          - DONE
        type: string
      template:
        description: Output only. The "resource name" of the template.
        type: string
      version:
        description: Output only. The version of template at the time of workflow instantiation.
        format: int32
        type: integer
    type: object
  WorkflowNode:
    description: The workflow node.
    properties:
      error:
        description: Output only. The error detail.
        type: string
      jobId:
        description: Output only. The job id; populated after the node enters RUNNING state.
        type: string
      prerequisiteStepIds:
        description: Output only. Node's prerequisite nodes.
        items:
          type: string
        type: array
      state:
        description: Output only. The node state.
        enum:
          - NODE_STATUS_UNSPECIFIED
          - BLOCKED
          - RUNNABLE
          - RUNNING
          - COMPLETED
          - FAILED
        type: string
      stepId:
        description: Output only. The name of the node.
        type: string
    type: object
  WorkflowTemplate:
    description: A Cloud Dataproc workflow template resource.
    properties:
      createTime:
        description: Output only. The time template was created.
        format: google-datetime
        type: string
      id:
        description: 'Required. The template id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.'
        type: string
      jobs:
        description: Required. The Directed Acyclic Graph of Jobs to submit.
        items:
          $ref: '#/definitions/OrderedJob'
        type: array
      labels:
        additionalProperties:
          type: string
        description: 'Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.'
        type: object
      name:
        description: 'Output only. The "resource name" of the template, as described in https://cloud.google.com/apis/design/resource_names of the form projects/{project_id}/regions/{region}/workflowTemplates/{template_id}'
        type: string
      parameters:
        description: Optional. Template parameters whose values are substituted into the template. Values for these parameters must be provided when the template is instantiated.
        items:
          $ref: '#/definitions/TemplateParameter'
        type: array
      placement:
        $ref: '#/definitions/WorkflowTemplatePlacement'
        description: Required. WorkflowTemplate scheduling information.
      updateTime:
        description: Output only. The time template was last updated.
        format: google-datetime
        type: string
      version:
        description: 'Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.'
        format: int32
        type: integer
    type: object
  WorkflowTemplatePlacement:
    description: Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
    properties:
      clusterSelector:
        $ref: '#/definitions/ClusterSelector'
        description: Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
      managedCluster:
        $ref: '#/definitions/ManagedCluster'
        description: Optional. A cluster that is managed by the workflow.
    type: object
  YarnApplication:
    description: 'A YARN application created by a job. Application information is a subset of <code>org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto</code>.Beta Feature: This report is available for testing purposes only. It may be changed before final release.'
    properties:
      name:
        description: Required. The application name.
        type: string
      progress:
        description: 'Required. The numerical progress of the application, from 1 to 100.'
        format: float
        type: number
      state:
        description: Required. The application state.
        enum:
          - STATE_UNSPECIFIED
          - NEW
          - NEW_SAVING
          - SUBMITTED
          - ACCEPTED
          - RUNNING
          - FINISHED
          - FAILED
          - KILLED
        type: string
      trackingUrl:
        description: 'Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.'
        type: string
    type: object
