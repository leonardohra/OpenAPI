swagger: '2.0'
schemes:
  - https
host: tpu.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: TPU API provides customers with access to Google TPU technology.
  title: Cloud TPU
  version: v1alpha1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.2
      format: google
      url: 'https://tpu.googleapis.com/$discovery/rest?version=v1alpha1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: tpu
externalDocs:
  url: 'https://cloud.google.com/tpu/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1alpha1/{name}':
    delete:
      description: Deletes a node.
      operationId: tpu.projects.locations.nodes.delete
      parameters:
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets the details of a node.
      operationId: tpu.projects.locations.nodes.get
      parameters:
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Node'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{name}/locations':
    get:
      description: Lists information about the supported locations for this service.
      operationId: tpu.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: 'The resource that owns the locations collection, if applicable.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListLocationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{name}/operations':
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: tpu.projects.locations.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{name}:cancel':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Starts asynchronous cancellation on a long-running operation.  The server
        makes a best effort to cancel the operation, but success is not
        guaranteed.  If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
        Operations.GetOperation or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an Operation.error value with a google.rpc.Status.code of 1,
        corresponding to `Code.CANCELLED`.
      operationId: tpu.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{name}:reimage':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Reimages a node's OS.
      operationId: tpu.projects.locations.nodes.reimage
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ReimageNodeRequest'
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{name}:reset':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: 'Resets a node, which stops and starts the VM.'
      operationId: tpu.projects.locations.nodes.reset
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResetNodeRequest'
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{name}:start':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Starts a node.
      operationId: tpu.projects.locations.nodes.start
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StartNodeRequest'
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{name}:stop':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Stops a node.
      operationId: tpu.projects.locations.nodes.stop
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/StopNodeRequest'
        - description: The resource name.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{parent}/acceleratorTypes':
    get:
      description: Lists accelerator types supported by this API.
      operationId: tpu.projects.locations.acceleratorTypes.list
      parameters:
        - description: List filter.
          in: query
          name: filter
          type: string
        - description: Sort results.
          in: query
          name: orderBy
          type: string
        - description: The maximum number of items to return.
          in: query
          name: pageSize
          type: integer
        - description: 'The next_page_token value returned from a previous List request, if any.'
          in: query
          name: pageToken
          type: string
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListAcceleratorTypesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1alpha1/{parent}/nodes':
    get:
      description: Lists nodes.
      operationId: tpu.projects.locations.nodes.list
      parameters:
        - description: The maximum number of items to return.
          in: query
          name: pageSize
          type: integer
        - description: 'The next_page_token value returned from a previous List request, if any.'
          in: query
          name: pageToken
          type: string
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListNodesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a node.
      operationId: tpu.projects.locations.nodes.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Node'
        - description: The unqualified resource name.
          in: query
          name: nodeId
          type: string
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1alpha1/{parent}/tensorflowVersions':
    get:
      description: Lists TensorFlow versions supported by this API.
      operationId: tpu.projects.locations.tensorflowVersions.list
      parameters:
        - description: List filter.
          in: query
          name: filter
          type: string
        - description: Sort results.
          in: query
          name: orderBy
          type: string
        - description: The maximum number of items to return.
          in: query
          name: pageSize
          type: integer
        - description: 'The next_page_token value returned from a previous List request, if any.'
          in: query
          name: pageToken
          type: string
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListTensorFlowVersionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
definitions:
  AcceleratorType:
    description: A accelerator type that a Node can be configured with.
    properties:
      name:
        description: The resource name.
        type: string
      type:
        description: the accelerator type.
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  ListAcceleratorTypesResponse:
    description: Response for ListAcceleratorTypes.
    properties:
      acceleratorTypes:
        description: The listed nodes.
        items:
          $ref: '#/definitions/AcceleratorType'
        type: array
      nextPageToken:
        description: The next page token or empty if none.
        type: string
    type: object
  ListLocationsResponse:
    description: The response message for Locations.ListLocations.
    properties:
      locations:
        description: A list of locations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Location'
        type: array
      nextPageToken:
        description: The standard List next-page token.
        type: string
    type: object
  ListNodesResponse:
    description: Response for ListNodes.
    properties:
      nextPageToken:
        description: The next page token or empty if none.
        type: string
      nodes:
        description: The listed nodes.
        items:
          $ref: '#/definitions/Node'
        type: array
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  ListTensorFlowVersionsResponse:
    description: Response for ListTensorFlowVersions.
    properties:
      nextPageToken:
        description: The next page token or empty if none.
        type: string
      tensorflowVersions:
        description: The listed nodes.
        items:
          $ref: '#/definitions/TensorFlowVersion'
        type: array
    type: object
  Location:
    description: A resource that represents Google Cloud Platform location.
    properties:
      displayName:
        description: |-
          The friendly name for this location, typically a nearby city name.
          For example, "Tokyo".
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Cross-service attributes for the location. For example

              {"cloud.googleapis.com/region": "us-east1"}
        type: object
      locationId:
        description: 'The canonical id for this location. For example: `"us-east1"`.'
        type: string
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata. For example the available capacity at the given
          location.
        type: object
      name:
        description: |-
          Resource name for the location, which may vary between implementations.
          For example: `"projects/example-project/locations/us-east1"`
        type: string
    type: object
  NetworkEndpoint:
    description: A network endpoint over which a TPU worker can be reached.
    properties:
      ipAddress:
        description: The IP address of this network endpoint.
        type: string
      port:
        description: The port of this network endpoint.
        format: int32
        type: integer
    type: object
  Node:
    description: A TPU instance.
    properties:
      acceleratorType:
        description: |-
          The type of hardware accelerators associated with this node.
          Required.
        type: string
      cidrBlock:
        description: |-
          The CIDR block that the TPU node will use when selecting an IP address.
          This CIDR block must be a /29 block; the Compute Engine networks API
          forbids a smaller block, and using a larger block would be wasteful (a
          node can only consume one IP address). Errors will occur if the CIDR block
          has already been used for a currently existing TPU node, the CIDR block
          conflicts with any subnetworks in the user's provided network, or the
          provided network is peered with another network that is using that CIDR
          block.
          Required.
        type: string
      createTime:
        description: |-
          Output only.
          The time when the node was created.
        format: google-datetime
        type: string
      description:
        description: The user-supplied description of the TPU. Maximum of 512 characters.
        type: string
      health:
        description: The health status of the TPU node.
        enum:
          - HEALTH_UNSPECIFIED
          - HEALTHY
          - UNHEALTHY
          - TIMEOUT
        type: string
      healthDescription:
        description: |-
          Output only.
          If this field is populated, it contains a description of why the TPU Node
          is unhealthy.
        type: string
      ipAddress:
        description: |-
          Output only.
          DEPRECATED! Use network_endpoints instead.
          The network address for the TPU Node as visible to Compute Engine
          instances.
        type: string
      labels:
        additionalProperties:
          type: string
        description: Resource labels to represent user-provided metadata.
        type: object
      name:
        description: |-
          Output only.
          The immutable name of the TPU
        type: string
      network:
        description: |-
          The name of a network they wish to peer the TPU node to. It must be a
          preexisting Compute Engine network inside of the project on which this API
          has been activated. If none is provided, "default" will be used.
        type: string
      networkEndpoints:
        description: |-
          Output only. The network endpoints where TPU workers can be accessed and sent work.
          It is recommended that Tensorflow clients of the node reach out to the 0th
          entry in this map first.
        items:
          $ref: '#/definitions/NetworkEndpoint'
        type: array
      port:
        description: |-
          Output only.
          DEPRECATED! Use network_endpoints instead.
          The network port for the TPU Node as visible to Compute Engine instances.
        type: string
      serviceAccount:
        description: |-
          Output only.
          The service account used to run the tensor flow services within the node.
          To share resources, including Google Cloud Storage data, with the
          Tensorflow job running in the Node, this account must have permissions to
          that data.
        type: string
      state:
        description: |-
          Output only.
          The current state for the TPU Node.
        enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - RESTARTING
          - REIMAGING
          - DELETING
          - REPAIRING
          - STOPPED
          - STOPPING
          - STARTING
        type: string
      tensorflowVersion:
        description: |-
          The version of Tensorflow running in the Node.
          Required.
        type: string
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  OperationMetadata:
    description: Represents the metadata of the long-running operation.
    properties:
      apiVersion:
        description: '[Output only] API version used to start the operation.'
        type: string
      cancelRequested:
        description: |-
          [Output only] Identifies whether the user has requested cancellation
          of the operation. Operations that have successfully been cancelled
          have Operation.error value with a google.rpc.Status.code of 1,
          corresponding to `Code.CANCELLED`.
        type: boolean
      createTime:
        description: '[Output only] The time the operation was created.'
        format: google-datetime
        type: string
      endTime:
        description: '[Output only] The time the operation finished running.'
        format: google-datetime
        type: string
      statusDetail:
        description: '[Output only] Human-readable status of the operation, if any.'
        type: string
      target:
        description: '[Output only] Server-defined resource path for the target of the operation.'
        type: string
      verb:
        description: '[Output only] Name of the verb executed by the operation.'
        type: string
    type: object
  ReimageNodeRequest:
    description: Request for ReimageNode.
    properties:
      tensorflowVersion:
        description: The version for reimage to create.
        type: string
    type: object
  ResetNodeRequest:
    description: Request for ResetNode.
    properties: {}
    type: object
  StartNodeRequest:
    description: Request for StartNode.
    properties: {}
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  StopNodeRequest:
    description: Request for StopNode.
    properties: {}
    type: object
  TensorFlowVersion:
    description: A tensorflow version that a Node can be configured with.
    properties:
      name:
        description: The resource name.
        type: string
      version:
        description: the tensorflow version.
        type: string
    type: object
