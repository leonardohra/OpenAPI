swagger: '2.0'
schemes:
  - https
host: chat.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Enables bots to fetch information and perform actions in Hangouts Chat.
  title: Hangouts Chat
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.11
      format: google
      url: 'https://chat.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: chat
externalDocs:
  url: 'https://developers.google.com/hangouts/chat'
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: spaces
paths:
  /v1/spaces:
    get:
      description: Lists spaces the caller is a member of.
      operationId: chat.spaces.list
      parameters:
        - description: |-
            Requested page size. The value is capped at 1000.
            Server may return fewer results than requested.
            If unspecified, server will default to 100.
          in: query
          name: pageSize
          type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListSpacesResponse'
      tags:
        - spaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}':
    delete:
      description: Deletes a message.
      operationId: chat.spaces.messages.delete
      parameters:
        - description: |-
            Required. Resource name of the message to be deleted, in the form
            "spaces/*/messages/*"

            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - spaces
    get:
      description: Returns a message.
      operationId: chat.spaces.messages.get
      parameters:
        - description: |-
            Required. Resource name of the message to be retrieved, in the form
            "spaces/*/messages/*".

            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Message'
      tags:
        - spaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    put:
      description: Updates a message.
      operationId: chat.spaces.messages.update
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Message'
        - description: |-
            Resource name, in the form "spaces/*/messages/*".

            Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Required. The field paths to be updated.

            Currently supported field paths: "text", "cards".
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Message'
      tags:
        - spaces
  '/v1/{parent}/members':
    get:
      description: Lists human memberships in a space.
      operationId: chat.spaces.members.list
      parameters:
        - description: |-
            Requested page size. The value is capped at 1000.
            Server may return fewer results than requested.
            If unspecified, server will default to 100.
          in: query
          name: pageSize
          type: integer
        - description: A token identifying a page of results the server should return.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The resource name of the space for which membership list is to be
            fetched, in the form "spaces/*".

            Example: spaces/AAAAMpdlehY
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListMembershipsResponse'
      tags:
        - spaces
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{parent}/messages':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a message.
      operationId: chat.spaces.messages.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Message'
        - description: |-
            Required. Space resource name, in the form "spaces/*".
            Example: spaces/AAAAMpdlehY
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Opaque thread identifier string that can be specified to group messages
            into a single thread. If this is the first message with a given thread
            identifier, a new thread is created. Subsequent messages with the same
            thread identifier will be posted into the same thread. This relieves bots
            and webhooks from having to store the Hangouts Chat thread ID of a thread (created earlier by them) to post
            further updates to it.

            Has no effect if thread field,
            corresponding to an existing thread, is set in message.
          in: query
          name: threadKey
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Message'
      tags:
        - spaces
definitions:
  ActionParameter:
    description: |-
      List of string parameters to supply when the action method is invoked.
      For example, consider three snooze buttons: snooze now, snooze 1 day,
      snooze next week. You might use action method = snooze(), passing the
      snooze type and snooze time in the list of string parameters.
    properties:
      key:
        description: The name of the parameter for the action script.
        type: string
      value:
        description: The value of the parameter.
        type: string
    type: object
  ActionResponse:
    description: Parameters that a bot can use to configure how it's response is posted.
    properties:
      type:
        description: The type of bot response.
        enum:
          - TYPE_UNSPECIFIED
          - NEW_MESSAGE
          - UPDATE_MESSAGE
          - REQUEST_CONFIG
        type: string
      url:
        description: URL for users to auth or config. (Only for REQUEST_CONFIG response types.)
        type: string
    type: object
  Annotation:
    description: |-
      Annotations associated with the plain-text body of the message.

      Example plain-text message body:
      ```
      Hello @FooBot how are you!"
      ```

      The corresponding annotations metadata:
      ```
      "annotations":[{
        "type":"USER_MENTION",
        "startIndex":6,
        "length":7,
        "userMention": {
          "user": {
            "name":"users/107946847022116401880",
            "displayName":"FooBot",
            "avatarUrl":"https://goo.gl/aeDtrS",
            "type":"BOT"
          },
          "type":"MENTION"
         }
      }]
      ```
    properties:
      length:
        description: |-
          Length of the substring in the plain-text message body this annotation
          corresponds to.
        format: int32
        type: integer
      startIndex:
        description: |-
          Start index (0-based, inclusive) in the plain-text message body this
          annotation corresponds to.
        format: int32
        type: integer
      type:
        description: The type of this annotation.
        enum:
          - ANNOTATION_TYPE_UNSPECIFIED
          - USER_MENTION
        type: string
      userMention:
        $ref: '#/definitions/UserMentionMetadata'
        description: The metadata of user mention.
    type: object
  Button:
    description: A button. Can be a text button or an image button.
    properties:
      imageButton:
        $ref: '#/definitions/ImageButton'
        description: A button with image and onclick action.
      textButton:
        $ref: '#/definitions/TextButton'
        description: A button with text and onclick action.
    type: object
  Card:
    description: 'A card is a UI element that can contain UI widgets such as texts, images.'
    properties:
      cardActions:
        description: The actions of this card.
        items:
          $ref: '#/definitions/CardAction'
        type: array
      header:
        $ref: '#/definitions/CardHeader'
        description: The header of the card. A header usually contains a title and an image.
      name:
        description: Name of the card.
        type: string
      sections:
        description: Sections are separated by a line divider.
        items:
          $ref: '#/definitions/Section'
        type: array
    type: object
  CardAction:
    description: |-
      A card action is
      the action associated with the card. For an invoice card, a
      typical action would be: delete invoice, email invoice or open the
      invoice in browser.
    properties:
      actionLabel:
        description: The label used to be displayed in the action menu item.
        type: string
      onClick:
        $ref: '#/definitions/OnClick'
        description: The onclick action for this action item.
    type: object
  CardHeader:
    properties:
      imageStyle:
        description: The image's type (e.g. square border or circular border).
        enum:
          - IMAGE_STYLE_UNSPECIFIED
          - IMAGE
          - AVATAR
        type: string
      imageUrl:
        description: The URL of the image in the card header.
        type: string
      subtitle:
        description: The subtitle of the card header.
        type: string
      title:
        description: |-
          The title must be specified. The header has a fixed height: if both a
          title and subtitle is specified, each will take up 1 line. If only the
          title is specified, it will take up both lines.
        type: string
    type: object
  DeprecatedEvent:
    description: Hangouts Chat events.
    properties:
      action:
        $ref: '#/definitions/FormAction'
        description: |-
          The form action data associated with an interactive card that was clicked.
          Only populated for
          CARD_CLICKED events.
          See the [Interactive Cards guide](/hangouts/chat/how-tos/cards-onclick) for
          more information.
      configCompleteRedirectUrl:
        description: |-
          The URL the bot should redirect the user to after they have completed an
          authorization or configuration flow outside of Hangouts Chat. See the
          [Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p)
          for more information.
        type: string
      eventTime:
        description: The timestamp indicating when the event was dispatched.
        format: google-datetime
        type: string
      message:
        $ref: '#/definitions/Message'
        description: 'The message that triggered the event, if applicable.'
      space:
        $ref: '#/definitions/Space'
        description: The room or DM in which the event occurred.
      threadKey:
        description: |-
          The bot-defined key for the thread related to the event. See the
          thread_key field of the
          `spaces.message.create` request for more information.
        type: string
      token:
        description: |-
          A secret value that bots can use to verify if a request is from Google. The
          token is randomly generated by Google, remains static, and can be obtained
          from the Hangouts Chat API configuration page in the Cloud Console.
          Developers can revoke/regenerate it if needed from the same page.
        type: string
      type:
        description: The type of the event.
        enum:
          - UNSPECIFIED
          - MESSAGE
          - ADDED_TO_SPACE
          - REMOVED_FROM_SPACE
          - CARD_CLICKED
        type: string
      user:
        $ref: '#/definitions/User'
        description: The user that triggered the event.
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  FormAction:
    description: |-
      A form action describes the behavior when the form is submitted.
      For example, an Apps Script can be invoked to handle the form.
    properties:
      actionMethodName:
        description: |-
          Apps Script function to invoke when the containing element is
          clicked/activated.
        type: string
      parameters:
        description: List of action parameters.
        items:
          $ref: '#/definitions/ActionParameter'
        type: array
    type: object
  Image:
    description: An image that is specified by a URL and can have an onclick action.
    properties:
      aspectRatio:
        description: The aspect ratio of this image (width/height).
        format: double
        type: number
      imageUrl:
        description: The URL of the image.
        type: string
      onClick:
        $ref: '#/definitions/OnClick'
        description: The onclick action.
    type: object
  ImageButton:
    description: An image button with an onclick action.
    properties:
      icon:
        description: |-
          The icon specified by an enum that indices to an icon provided by Chat
          API.
        enum:
          - ICON_UNSPECIFIED
          - AIRPLANE
          - BOOKMARK
          - BUS
          - CAR
          - CLOCK
          - CONFIRMATION_NUMBER_ICON
          - DOLLAR
          - DESCRIPTION
          - EMAIL
          - EVENT_PERFORMER
          - EVENT_SEAT
          - FLIGHT_ARRIVAL
          - FLIGHT_DEPARTURE
          - HOTEL
          - HOTEL_ROOM_TYPE
          - INVITE
          - MAP_PIN
          - MEMBERSHIP
          - MULTIPLE_PEOPLE
          - OFFER
          - PERSON
          - PHONE
          - RESTAURANT_ICON
          - SHOPPING_CART
          - STAR
          - STORE
          - TICKET
          - TRAIN
          - VIDEO_CAMERA
          - VIDEO_PLAY
        type: string
      iconUrl:
        description: The icon specified by a URL.
        type: string
      name:
        description: |-
          The name of this image_button which will be used for accessibility.
          Default value will be provided if developers don't specify.
        type: string
      onClick:
        $ref: '#/definitions/OnClick'
        description: The onclick action.
    type: object
  KeyValue:
    description: |-
      A UI element contains a key (label) and a value (content). And this
      element may also contain some actions such as onclick button.
    properties:
      bottomLabel:
        description: The text of the bottom label. Formatted text supported.
        type: string
      button:
        $ref: '#/definitions/Button'
        description: A button that can be clicked to trigger an action.
      content:
        description: The text of the content. Formatted text supported and always required.
        type: string
      contentMultiline:
        description: If the content should be multiline.
        type: boolean
      icon:
        description: |-
          An enum value that will be replaced by the Chat API with the
          corresponding icon image.
        enum:
          - ICON_UNSPECIFIED
          - AIRPLANE
          - BOOKMARK
          - BUS
          - CAR
          - CLOCK
          - CONFIRMATION_NUMBER_ICON
          - DOLLAR
          - DESCRIPTION
          - EMAIL
          - EVENT_PERFORMER
          - EVENT_SEAT
          - FLIGHT_ARRIVAL
          - FLIGHT_DEPARTURE
          - HOTEL
          - HOTEL_ROOM_TYPE
          - INVITE
          - MAP_PIN
          - MEMBERSHIP
          - MULTIPLE_PEOPLE
          - OFFER
          - PERSON
          - PHONE
          - RESTAURANT_ICON
          - SHOPPING_CART
          - STAR
          - STORE
          - TICKET
          - TRAIN
          - VIDEO_CAMERA
          - VIDEO_PLAY
        type: string
      iconUrl:
        description: The icon specified by a URL.
        type: string
      onClick:
        $ref: '#/definitions/OnClick'
        description: |-
          The onclick action. Only the top label, bottom label and content region
          are clickable.
      topLabel:
        description: The text of the top label. Formatted text supported.
        type: string
    type: object
  ListMembershipsResponse:
    properties:
      memberships:
        description: List of memberships in the requested (or first) page.
        items:
          $ref: '#/definitions/Membership'
        type: array
      nextPageToken:
        description: |-
          Continuation token to retrieve the next page of results. It will be empty
          for the last page of results.
        type: string
    type: object
  ListSpacesResponse:
    properties:
      nextPageToken:
        description: |-
          Continuation token to retrieve the next page of results. It will be empty
          for the last page of results. Tokens expire in an hour. An error is thrown
          if an expired token is passed.
        type: string
      spaces:
        description: List of spaces in the requested (or first) page.
        items:
          $ref: '#/definitions/Space'
        type: array
    type: object
  Membership:
    description: Represents a membership relation in Hangouts Chat.
    properties:
      createTime:
        description: |-
          The creation time of the membership a.k.a the time at which the member
          joined the space, if applicable.
        format: google-datetime
        type: string
      member:
        $ref: '#/definitions/User'
        description: Member details.
      name:
        description: |-
          Resource name of the membership, in the form "spaces/*/members/*".

          Example: spaces/AAAAMpdlehY/members/105115627578887013105
        type: string
      state:
        description: State of the membership.
        enum:
          - MEMBERSHIP_STATE_UNSPECIFIED
          - JOINED
          - INVITED
          - NOT_A_MEMBER
        type: string
    type: object
  Message:
    description: A message in Hangouts Chat.
    properties:
      actionResponse:
        $ref: '#/definitions/ActionResponse'
        description: |-
          Input only. Parameters that a bot can use to configure how its response is
          posted.
      annotations:
        description: Output only. Annotations associated with the text in this message.
        items:
          $ref: '#/definitions/Annotation'
        type: array
      argumentText:
        description: Plain-text body of the message with all bot mentions stripped out.
        type: string
      cards:
        description: |-
          Rich, formatted and interactive cards that can be used to display UI
          elements such as: formatted texts, buttons, clickable images. Cards are
          normally displayed below the plain-text body of the message.
        items:
          $ref: '#/definitions/Card'
        type: array
      createTime:
        description: |-
          Output only. The time at which the message was created in Hangouts Chat
          server.
        format: google-datetime
        type: string
      fallbackText:
        description: |-
          A plain-text description of the message's cards, used when the actual cards
          cannot be displayed (e.g. mobile notifications).
        type: string
      name:
        description: |-
          Resource name, in the form "spaces/*/messages/*".

          Example: spaces/AAAAMpdlehY/messages/UMxbHmzDlr4.UMxbHmzDlr4
        type: string
      previewText:
        description: |-
          Text for generating preview chips. This text will not be displayed to the
          user, but any links to images, web pages, videos, etc. included here will
          generate preview chips.
        type: string
      sender:
        $ref: '#/definitions/User'
        description: The user who created the message.
      space:
        $ref: '#/definitions/Space'
        description: The space the message belongs to.
      text:
        description: Plain-text body of the message.
        type: string
      thread:
        $ref: '#/definitions/Thread'
        description: The thread the message belongs to.
    type: object
  OnClick:
    description: An onclick action (e.g. open a link).
    properties:
      action:
        $ref: '#/definitions/FormAction'
        description: A form action will be trigger by this onclick if specified.
      openLink:
        $ref: '#/definitions/OpenLink'
        description: This onclick triggers an open link action if specified.
    type: object
  OpenLink:
    description: A link that opens a new window.
    properties:
      url:
        description: The URL to open.
        type: string
    type: object
  Section:
    description: |-
      A section contains a collection of widgets that are rendered
      (vertically) in the order that they are specified. Across all platforms,
      cards have a narrow fixed width, so
      there is currently no need for layout properties (e.g. float).
    properties:
      header:
        description: 'The header of the section, text formatted supported.'
        type: string
      widgets:
        description: A section must contain at least 1 widget.
        items:
          $ref: '#/definitions/WidgetMarkup'
        type: array
    type: object
  Space:
    description: A room or DM in Hangouts Chat.
    properties:
      displayName:
        description: Output only. The display name (only if the space is a room).
        type: string
      name:
        description: |-
          Resource name of the space, in the form "spaces/*".

          Example: spaces/AAAAMpdlehYs
        type: string
      type:
        description: Output only. The type of a space.
        enum:
          - TYPE_UNSPECIFIED
          - ROOM
          - DM
        type: string
    type: object
  TextButton:
    description: A button with text and onclick action.
    properties:
      onClick:
        $ref: '#/definitions/OnClick'
        description: The onclick action of the button.
      text:
        description: The text of the button.
        type: string
    type: object
  TextParagraph:
    description: A paragraph of text. Formatted text supported.
    properties:
      text:
        type: string
    type: object
  Thread:
    description: A thread in Hangouts Chat.
    properties:
      name:
        description: |-
          Resource name, in the form "spaces/*/threads/*".

          Example: spaces/AAAAMpdlehY/threads/UMxbHmzDlr4
        type: string
    type: object
  User:
    description: A user in Hangouts Chat.
    properties:
      displayName:
        description: The user's display name.
        type: string
      name:
        description: 'Resource name, in the format "users/*".'
        type: string
      type:
        description: User type.
        enum:
          - TYPE_UNSPECIFIED
          - HUMAN
          - BOT
        type: string
    type: object
  UserMentionMetadata:
    description: Annotation metadata for user mentions (@).
    properties:
      type:
        description: The type of user mention.
        enum:
          - TYPE_UNSPECIFIED
          - ADD
          - MENTION
        type: string
      user:
        $ref: '#/definitions/User'
        description: The user mentioned.
    type: object
  WidgetMarkup:
    description: 'A widget is a UI element that presents texts, images, etc.'
    properties:
      buttons:
        description: |-
          A list of buttons. Buttons is also oneof data and only one of these
          fields should be set.
        items:
          $ref: '#/definitions/Button'
        type: array
      image:
        $ref: '#/definitions/Image'
        description: Display an image in this widget.
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: Display a key value item in this widget.
      textParagraph:
        $ref: '#/definitions/TextParagraph'
        description: Display a text paragraph in this widget.
    type: object
