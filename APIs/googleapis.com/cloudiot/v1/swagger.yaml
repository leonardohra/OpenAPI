swagger: '2.0'
schemes:
  - https
host: cloudiot.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: |
    Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform.
  title: Cloud IoT
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.7.11
      format: google
      url: 'https://cloudiot.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudiot
externalDocs:
  url: 'https://cloud.google.com/iot'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/cloudiot': Register and manage devices in the Google Cloud IoT service
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1/{name}':
    delete:
      description: Deletes a device.
      operationId: cloudiot.projects.locations.registries.devices.delete
      parameters:
        - description: |-
            The name of the device. For example,
            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    get:
      description: Gets details about a device.
      operationId: cloudiot.projects.locations.registries.devices.get
      parameters:
        - description: |-
            The fields of the `Device` resource to be returned in the response. If the
            field mask is unset or empty, all fields are returned.
          in: query
          name: fieldMask
          type: string
        - description: |-
            The name of the device. For example,
            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: Updates a device.
      operationId: cloudiot.projects.locations.registries.devices.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Device'
        - description: |-
            The resource path name. For example,
            `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
            `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
            When `name` is populated as a response from the service, it always ends
            in the device numeric ID.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Only updates the `device` fields indicated by this mask.
            The field mask must not be empty, and it must not contain fields that
            are immutable or only set by the server.
            Mutable top-level fields: `credentials`, `blocked`, and `metadata`
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{name}/configVersions':
    get:
      description: |-
        Lists the last few versions of the device configuration in descending
        order (i.e.: newest first).
      operationId: cloudiot.projects.locations.registries.devices.configVersions.list
      parameters:
        - description: |-
            The name of the device. For example,
            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The number of versions to list. Versions are listed in decreasing order of
            the version number. The maximum number of versions retained is 10. If this
            value is zero, it will return all the versions available.
          in: query
          name: numVersions
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDeviceConfigVersionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}/states':
    get:
      description: |-
        Lists the last few versions of the device state in descending order (i.e.:
        newest first).
      operationId: cloudiot.projects.locations.registries.devices.states.list
      parameters:
        - description: |-
            The name of the device. For example,
            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            The number of states to list. States are listed in descending order of
            update time. The maximum number of states retained is 10. If this
            value is zero, it will return all the states available.
          in: query
          name: numStates
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDeviceStatesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{name}:modifyCloudToDeviceConfig':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Modifies the configuration for the device, which is eventually sent from
        the Cloud IoT Core servers. Returns the modified configuration version and
        its metadata.
      operationId: cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ModifyCloudToDeviceConfigRequest'
        - description: |-
            The name of the device. For example,
            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or
            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DeviceConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{parent}/devices':
    get:
      description: List devices in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.list
      parameters:
        - collectionFormat: multi
          description: |-
            A list of device string identifiers. If empty, it will ignore this field.
            For example, `['device0', 'device12']`. This field cannot hold more than
            10,000 entries.
          in: query
          items:
            type: string
          name: deviceIds
          type: array
        - collectionFormat: multi
          description: |-
            A list of device numerical ids. If empty, it will ignore this field. This
            field cannot hold more than 10,000 entries.
          in: query
          items:
            type: string
          name: deviceNumIds
          type: array
        - description: |-
            The fields of the `Device` resource to be returned in the response. The
            fields `id`, and `num_id` are always returned by default, along with any
            other fields specified.
          in: query
          name: fieldMask
          type: string
        - collectionFormat: multi
          description: |-
            The maximum number of devices to return in the response. If this value
            is zero, the service will select a default size. A call may return fewer
            objects than requested, but if there is a non-empty `page_token`, it
            indicates that more entries are available.
          in: query
          items:
            type: string
          name: pageSize
          type: integer
        - description: |-
            The value returned by the last `ListDevicesResponse`; indicates
            that this is a continuation of a prior `ListDevices` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          type: string
        - description: |-
            The device registry path. Required. For example,
            `projects/my-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDevicesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a device in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Device'
        - description: |-
            The name of the device registry where this device should be created.
            For example,
            `projects/example-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{parent}/registries':
    get:
      description: Lists device registries.
      operationId: cloudiot.projects.locations.registries.list
      parameters:
        - description: |-
            The maximum number of registries to return in the response. If this value
            is zero, the service will select a default size. A call may return fewer
            objects than requested, but if there is a non-empty `page_token`, it
            indicates that more entries are available.
          in: query
          name: pageSize
          type: integer
        - description: |-
            The value returned by the last `ListDeviceRegistriesResponse`; indicates
            that this is a continuation of a prior `ListDeviceRegistries` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          type: string
        - description: |-
            The project and cloud region path. For example,
            `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListDeviceRegistriesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Creates a device registry that contains devices.
      operationId: cloudiot.projects.locations.registries.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/DeviceRegistry'
        - description: |-
            The project and cloud region where this device registry must be created.
            For example, `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DeviceRegistry'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Gets the access control policy for a resource.
        Returns an empty policy if the resource exists and does not have a policy
        set.
      operationId: cloudiot.projects.locations.registries.groups.getIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GetIamPolicyRequest'
        - description: |-
            REQUIRED: The resource for which the policy is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: cloudiot.projects.locations.registries.groups.setIamPolicy
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
        - description: |-
            REQUIRED: The resource for which the policy is being specified.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
  '/v1/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Returns permissions that a caller has on the specified resource.
        If the resource does not exist, this will return an empty set of
        permissions, not a NOT_FOUND error.
      operationId: cloudiot.projects.locations.registries.groups.testIamPermissions
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
        - description: |-
            REQUIRED: The resource for which the policy detail is being requested.
            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudiot'
      tags:
        - projects
definitions:
  Binding:
    description: Associates `members` with a `role`.
    properties:
      condition:
        $ref: '#/definitions/Expr'
        description: |-
          Unimplemented. The condition that is associated with this binding.
          NOTE: an unsatisfied condition will not allow user access via current
          binding. Different bindings, including their conditions, are examined
          independently.
      members:
        description: |+
          Specifies the identities requesting access for a Cloud Platform resource.
          `members` can have the following values:

          * `allUsers`: A special identifier that represents anyone who is
             on the internet; with or without a Google account.

          * `allAuthenticatedUsers`: A special identifier that represents anyone
             who is authenticated with a Google account or a service account.

          * `user:{emailid}`: An email address that represents a specific Google
             account. For example, `alice@gmail.com` .


          * `serviceAccount:{emailid}`: An email address that represents a service
             account. For example, `my-other-app@appspot.gserviceaccount.com`.

          * `group:{emailid}`: An email address that represents a Google group.
             For example, `admins@example.com`.


          * `domain:{domain}`: A Google Apps domain name that represents all the
             users of that domain. For example, `google.com` or `example.com`.

        items:
          type: string
        type: array
      role:
        description: |-
          Role that is assigned to `members`.
          For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        type: string
    type: object
  Device:
    description: The device resource.
    properties:
      blocked:
        description: |-
          If a device is blocked, connections or requests from this device will fail.
          Can be used to temporarily prevent the device from connecting if, for
          example, the sensor is generating bad data and needs maintenance.
        type: boolean
      config:
        $ref: '#/definitions/DeviceConfig'
        description: |-
          The most recent device configuration, which is eventually sent from
          Cloud IoT Core to the device. If not present on creation, the
          configuration will be initialized with an empty payload and version value
          of `1`. To update this field after creation, use the
          `DeviceManager.ModifyCloudToDeviceConfig` method.
      credentials:
        description: |-
          The credentials used to authenticate this device. To allow credential
          rotation without interruption, multiple device credentials can be bound to
          this device. No more than 3 credentials can be bound to a single device at
          a time. When new credentials are added to a device, they are verified
          against the registry credentials. For details, see the description of the
          `DeviceRegistry.credentials` field.
        items:
          $ref: '#/definitions/DeviceCredential'
        type: array
      id:
        description: |-
          The user-defined device identifier. The device ID must be unique
          within a device registry.
        type: string
      lastConfigAckTime:
        description: |-
          [Output only] The last time a cloud-to-device config version acknowledgment
          was received from the device. This field is only for configurations
          sent through MQTT.
        format: google-datetime
        type: string
      lastConfigSendTime:
        description: |-
          [Output only] The last time a cloud-to-device config version was sent to
          the device.
        format: google-datetime
        type: string
      lastErrorStatus:
        $ref: '#/definitions/Status'
        description: |-
          [Output only] The error message of the most recent error, such as a failure
          to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
          field. If no errors have occurred, this field has an empty message
          and the status code 0 == OK. Otherwise, this field is expected to have a
          status code other than OK.
      lastErrorTime:
        description: |-
          [Output only] The time the most recent error occurred, such as a failure to
          publish to Cloud Pub/Sub. This field is the timestamp of
          'last_error_status'.
        format: google-datetime
        type: string
      lastEventTime:
        description: |-
          [Output only] The last time a telemetry event was received. Timestamps are
          periodically collected and written to storage; they may be stale by a few
          minutes.
        format: google-datetime
        type: string
      lastHeartbeatTime:
        description: |-
          [Output only] The last time an MQTT `PINGREQ` was received. This field
          applies only to devices connecting through MQTT. MQTT clients usually only
          send `PINGREQ` messages if the connection is idle, and no other messages
          have been sent. Timestamps are periodically collected and written to
          storage; they may be stale by a few minutes.
        format: google-datetime
        type: string
      lastStateTime:
        description: |-
          [Output only] The last time a state event was received. Timestamps are
          periodically collected and written to storage; they may be stale by a few
          minutes.
        format: google-datetime
        type: string
      metadata:
        additionalProperties:
          type: string
        description: |-
          The metadata key-value pairs assigned to the device. This metadata is not
          interpreted or indexed by Cloud IoT Core. It can be used to add contextual
          information for the device.

          Keys must conform to the regular expression a-zA-Z+ and
          be less than 128 bytes in length.

          Values are free-form strings. Each value must be less than or equal to 32
          KB in size.

          The total size of all keys and values must be less than 256 KB, and the
          maximum number of key-value pairs is 500.
        type: object
      name:
        description: |-
          The resource path name. For example,
          `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
          `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
          When `name` is populated as a response from the service, it always ends
          in the device numeric ID.
        type: string
      numId:
        description: |-
          [Output only] A server-defined unique numeric ID for the device. This is a
          more compact way to identify devices, and it is globally unique.
        format: uint64
        type: string
      state:
        $ref: '#/definitions/DeviceState'
        description: |-
          [Output only] The state most recently received from the device. If no state
          has been reported, this field is not present.
    type: object
  DeviceConfig:
    description: The device configuration. Eventually delivered to devices.
    properties:
      binaryData:
        description: The device configuration data.
        format: byte
        type: string
      cloudUpdateTime:
        description: |-
          [Output only] The time at which this configuration version was updated in
          Cloud IoT Core. This timestamp is set by the server.
        format: google-datetime
        type: string
      deviceAckTime:
        description: |-
          [Output only] The time at which Cloud IoT Core received the
          acknowledgment from the device, indicating that the device has received
          this configuration version. If this field is not present, the device has
          not yet acknowledged that it received this version. Note that when
          the config was sent to the device, many config versions may have been
          available in Cloud IoT Core while the device was disconnected, and on
          connection, only the latest version is sent to the device. Some
          versions may never be sent to the device, and therefore are never
          acknowledged. This timestamp is set by Cloud IoT Core.
        format: google-datetime
        type: string
      version:
        description: |-
          [Output only] The version of this update. The version number is assigned by
          the server, and is always greater than 0 after device creation. The
          version must be 0 on the `CreateDevice` request if a `config` is
          specified; the response of `CreateDevice` will always have a value of 1.
        format: int64
        type: string
    type: object
  DeviceCredential:
    description: A server-stored device credential used for authentication.
    properties:
      expirationTime:
        description: |-
          [Optional] The time at which this credential becomes invalid. This
          credential will be ignored for new client authentication requests after
          this timestamp; however, it will not be automatically deleted.
        format: google-datetime
        type: string
      publicKey:
        $ref: '#/definitions/PublicKeyCredential'
        description: |-
          A public key used to verify the signature of JSON Web Tokens (JWTs).
          When adding a new device credential, either via device creation or via
          modifications, this public key credential may be required to be signed by
          one of the registry level certificates. More specifically, if the
          registry contains at least one certificate, any new device credential
          must be signed by one of the registry certificates. As a result,
          when the registry contains certificates, only X.509 certificates are
          accepted as device credentials. However, if the registry does
          not contain a certificate, self-signed certificates and public keys will
          be accepted. New device credentials must be different from every
          registry-level certificate.
    type: object
  DeviceRegistry:
    description: A container for a group of devices.
    properties:
      credentials:
        description: |-
          The credentials used to verify the device credentials. No more than 10
          credentials can be bound to a single registry at a time. The verification
          process occurs at the time of device creation or update. If this field is
          empty, no verification is performed. Otherwise, the credentials of a newly
          created device or added credentials of an updated device should be signed
          with one of these registry credentials.

          Note, however, that existing devices will never be affected by
          modifications to this list of credentials: after a device has been
          successfully created in a registry, it should be able to connect even if
          its registry credentials are revoked, deleted, or modified.
        items:
          $ref: '#/definitions/RegistryCredential'
        type: array
      eventNotificationConfigs:
        description: |-
          The configuration for notification of telemetry events received from the
          device. All telemetry events that were successfully published by the
          device and acknowledged by Cloud IoT Core are guaranteed to be
          delivered to Cloud Pub/Sub. If multiple configurations match a message,
          only the first matching configuration is used. If you try to publish a
          device telemetry event using MQTT without specifying a Cloud Pub/Sub topic
          for the device's registry, the connection closes automatically. If you try
          to do so using an HTTP connection, an error is returned. Up to 10
          configurations may be provided.
        items:
          $ref: '#/definitions/EventNotificationConfig'
        type: array
      httpConfig:
        $ref: '#/definitions/HttpConfig'
        description: The DeviceService (HTTP) configuration for this device registry.
      id:
        description: 'The identifier of this device registry. For example, `myRegistry`.'
        type: string
      mqttConfig:
        $ref: '#/definitions/MqttConfig'
        description: The MQTT configuration for this device registry.
      name:
        description: |-
          The resource path name. For example,
          `projects/example-project/locations/us-central1/registries/my-registry`.
        type: string
      stateNotificationConfig:
        $ref: '#/definitions/StateNotificationConfig'
        description: |-
          The configuration for notification of new states received from the device.
          State updates are guaranteed to be stored in the state history, but
          notifications to Cloud Pub/Sub are not guaranteed. For example, if
          permissions are misconfigured or the specified topic doesn't exist, no
          notification will be published but the state will still be stored in Cloud
          IoT Core.
    type: object
  DeviceState:
    description: 'The device state, as reported by the device.'
    properties:
      binaryData:
        description: The device state data.
        format: byte
        type: string
      updateTime:
        description: |-
          [Output only] The time at which this state version was updated in Cloud
          IoT Core.
        format: google-datetime
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  EventNotificationConfig:
    description: The configuration for forwarding telemetry events.
    properties:
      pubsubTopicName:
        description: |-
          A Cloud Pub/Sub topic name. For example,
          `projects/myProject/topics/deviceEvents`.
        type: string
      subfolderMatches:
        description: |-
          If the subfolder name matches this string exactly, this configuration will
          be used. The string must not include the leading '/' character. If empty,
          all strings are matched. This field is used only for telemetry events;
          subfolders are not supported for state changes.
        type: string
    type: object
  Expr:
    description: |-
      Represents an expression text. Example:

          title: "User account presence"
          description: "Determines whether the request has a user account"
          expression: "size(request.user) > 0"
    properties:
      description:
        description: |-
          An optional description of the expression. This is a longer text which
          describes the expression, e.g. when hovered over it in a UI.
        type: string
      expression:
        description: |-
          Textual representation of an expression in
          Common Expression Language syntax.

          The application context of the containing message determines which
          well-known feature set of CEL is supported.
        type: string
      location:
        description: |-
          An optional string indicating the location of the expression for error
          reporting, e.g. a file name and a position in the file.
        type: string
      title:
        description: |-
          An optional title for the expression, i.e. a short string describing
          its purpose. This can be used e.g. in UIs which allow to enter the
          expression.
        type: string
    type: object
  GetIamPolicyRequest:
    description: Request message for `GetIamPolicy` method.
    properties: {}
    type: object
  HttpConfig:
    description: The configuration of the HTTP bridge for a device registry.
    properties:
      httpEnabledState:
        description: |-
          If enabled, allows devices to use DeviceService via the HTTP protocol.
          Otherwise, any requests to DeviceService will fail for this registry.
        enum:
          - HTTP_STATE_UNSPECIFIED
          - HTTP_ENABLED
          - HTTP_DISABLED
        type: string
    type: object
  ListDeviceConfigVersionsResponse:
    description: Response for `ListDeviceConfigVersions`.
    properties:
      deviceConfigs:
        description: |-
          The device configuration for the last few versions. Versions are listed
          in decreasing order, starting from the most recent one.
        items:
          $ref: '#/definitions/DeviceConfig'
        type: array
    type: object
  ListDeviceRegistriesResponse:
    description: Response for `ListDeviceRegistries`.
    properties:
      deviceRegistries:
        description: The registries that matched the query.
        items:
          $ref: '#/definitions/DeviceRegistry'
        type: array
      nextPageToken:
        description: |-
          If not empty, indicates that there may be more registries that match the
          request; this value should be passed in a new
          `ListDeviceRegistriesRequest`.
        type: string
    type: object
  ListDeviceStatesResponse:
    description: Response for `ListDeviceStates`.
    properties:
      deviceStates:
        description: |-
          The last few device states. States are listed in descending order of server
          update time, starting from the most recent one.
        items:
          $ref: '#/definitions/DeviceState'
        type: array
    type: object
  ListDevicesResponse:
    description: Response for `ListDevices`.
    properties:
      devices:
        description: The devices that match the request.
        items:
          $ref: '#/definitions/Device'
        type: array
      nextPageToken:
        description: |-
          If not empty, indicates that there may be more devices that match the
          request; this value should be passed in a new `ListDevicesRequest`.
        type: string
    type: object
  ModifyCloudToDeviceConfigRequest:
    description: Request for `ModifyCloudToDeviceConfig`.
    properties:
      binaryData:
        description: The configuration data for the device.
        format: byte
        type: string
      versionToUpdate:
        description: |-
          The version number to update. If this value is zero, it will not check the
          version number of the server and will always update the current version;
          otherwise, this update will fail if the version number found on the server
          does not match this version number. This is used to support multiple
          simultaneous updates without losing data.
        format: int64
        type: string
    type: object
  MqttConfig:
    description: The configuration of MQTT for a device registry.
    properties:
      mqttEnabledState:
        description: |-
          If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
          connections to this registry will fail.
        enum:
          - MQTT_STATE_UNSPECIFIED
          - MQTT_ENABLED
          - MQTT_DISABLED
        type: string
    type: object
  Policy:
    description: |-
      Defines an Identity and Access Management (IAM) policy. It is used to
      specify access control policies for Cloud Platform resources.


      A `Policy` consists of a list of `bindings`. A `binding` binds a list of
      `members` to a `role`, where the members can be user accounts, Google groups,
      Google domains, and service accounts. A `role` is a named list of permissions
      defined by IAM.

      **JSON Example**

          {
            "bindings": [
              {
                "role": "roles/owner",
                "members": [
                  "user:mike@example.com",
                  "group:admins@example.com",
                  "domain:google.com",
                  "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                ]
              },
              {
                "role": "roles/viewer",
                "members": ["user:sean@example.com"]
              }
            ]
          }

      **YAML Example**

          bindings:
          - members:
            - user:mike@example.com
            - group:admins@example.com
            - domain:google.com
            - serviceAccount:my-other-app@appspot.gserviceaccount.com
            role: roles/owner
          - members:
            - user:sean@example.com
            role: roles/viewer


      For a description of IAM and its features, see the
      [IAM developer's guide](https://cloud.google.com/iam/docs).
    properties:
      bindings:
        description: |-
          Associates a list of `members` to a `role`.
          `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: |-
          `etag` is used for optimistic concurrency control as a way to help
          prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the
          read-modify-write cycle to perform policy updates in order to avoid race
          conditions: An `etag` is returned in the response to `getIamPolicy`, and
          systems are expected to put that etag in the request to `setIamPolicy` to
          ensure that their change will be applied to the same version of the policy.

          If no `etag` is provided in the call to `setIamPolicy`, then the existing
          policy is overwritten blindly.
        format: byte
        type: string
      version:
        description: Deprecated.
        format: int32
        type: integer
    type: object
  PublicKeyCertificate:
    description: A public key certificate format and data.
    properties:
      certificate:
        description: The certificate data.
        type: string
      format:
        description: The certificate format.
        enum:
          - UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT
          - X509_CERTIFICATE_PEM
        type: string
      x509Details:
        $ref: '#/definitions/X509CertificateDetails'
        description: '[Output only] The certificate details. Used only for X.509 certificates.'
    type: object
  PublicKeyCredential:
    description: A public key format and data.
    properties:
      format:
        description: The format of the key.
        enum:
          - UNSPECIFIED_PUBLIC_KEY_FORMAT
          - RSA_PEM
          - RSA_X509_PEM
          - ES256_PEM
          - ES256_X509_PEM
        type: string
      key:
        description: The key data.
        type: string
    type: object
  RegistryCredential:
    description: A server-stored registry credential used to validate device credentials.
    properties:
      publicKeyCertificate:
        $ref: '#/definitions/PublicKeyCertificate'
        description: A public key certificate used to verify the device credentials.
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: |-
          REQUIRED: The complete policy to be applied to the `resource`. The size of
          the policy is limited to a few 10s of KB. An empty policy is a
          valid policy but certain Cloud Platform services (such as Projects)
          might reject them.
    type: object
  StateNotificationConfig:
    description: The configuration for notification of new states received from the device.
    properties:
      pubsubTopicName:
        description: |-
          A Cloud Pub/Sub topic name. For example,
          `projects/myProject/topics/deviceEvents`.
        type: string
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          The set of permissions to check for the `resource`. Permissions with
          wildcards (such as '*' or 'storage.*') are not allowed. For more
          information see
          [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: |-
          A subset of `TestPermissionsRequest.permissions` that the caller is
          allowed.
        items:
          type: string
        type: array
    type: object
  X509CertificateDetails:
    description: Details of an X.509 certificate. For informational purposes only.
    properties:
      expiryTime:
        description: The time the certificate becomes invalid.
        format: google-datetime
        type: string
      issuer:
        description: The entity that signed the certificate.
        type: string
      publicKeyType:
        description: The type of public key in the certificate.
        type: string
      signatureAlgorithm:
        description: The algorithm used to sign the certificate.
        type: string
      startTime:
        description: The time the certificate becomes valid.
        format: google-datetime
        type: string
      subject:
        description: The entity the certificate and public key belong to.
        type: string
    type: object
