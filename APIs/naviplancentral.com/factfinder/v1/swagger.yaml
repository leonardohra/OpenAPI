swagger: '2.0'
schemes:
  - https
  - http
host: demo.uat.naviplancentral.com
basePath: /factfinder
info:
  contact:
    x-twitter: AdvicentFP
  description: An API for accessing the Narrator Fact Finder.
  title: Advicent.FactFinderService
  version: v1
  x-apisguru-categories:
    - financial
  x-logo:
    url: 'https://twitter.com/AdvicentFP/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://demo.uat.naviplancentral.com/factfinder/swagger/docs/v1'
      version: '2.0'
  x-providerName: naviplancentral.com
  x-serviceName: factfinder
produces:
  - application/json
  - text/json
paths:
  /api/AccountTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Account Types for the specified country.<br />\r\n              Purpose: Provides access to the Account Types including id and type description."
      operationId: AccountTypes_GetByCountry
      parameters:
        - description: The country used to filter Account Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Account Type not found.
      tags:
        - AccountTypes
  '/api/AccountTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Account Types for the specified id.<br />\r\n              Purpose: Provides access to the Account Types including id and type description."
      operationId: AccountTypes_GetById
      parameters:
        - description: The ID of Account Type used to retreive the Account Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Account Type not found.
      tags:
        - AccountTypes
  /api/Accounts:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Accounts for the specified Fact Finder ID and/or external source ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value."
      operationId: Accounts_GetAccountsByFactFinderIdByFactfinderidExternalsourceid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Accounts
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
        - description: The external ID used to filter Accounts
          in: query
          name: externalSourceId
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Account.<br />\r\n              Purpose: Allows for creation of Accounts on a Fact Finder."
      operationId: Accounts_PostByModel
      parameters:
        - description: The Account to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
  '/api/Accounts/{accountId}/Holdings/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides access to the Account Holding information including description and market value."
      operationId: Accounts_GetAccountHoldingByAccountidId
      parameters:
        - description: The ID of the Account used to retreive the Account Holding data
          format: int32
          in: path
          name: accountId
          required: true
          type: integer
        - description: The ID of the Account Holding used to retreive the Account Holding data
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountHoldingWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
  '/api/Accounts/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes an Account tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Account from a Fact Finder."
      operationId: Accounts_DeleteAccountById
      parameters:
        - description: The Account ID used to identify which Account to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Account for the specified Account ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value."
      operationId: Accounts_GetById
      parameters:
        - description: The ID of the Account used to retreive the Account data
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates an Account.<br />\r\n              Purpose: Allows for complete replacement of an Account on a Fact Finder."
      operationId: Accounts_PutByIdModel
      parameters:
        - description: The existing Account ID used to identify which Account to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Account to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.AccountWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Account.
        '403':
          description: Request is restricted for access to Account.
        '404':
          description: Account not found.
      tags:
        - Accounts
  /api/Clients:
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: This operation submits the Fact Finder data to an external system.<br />\r\n              Purpose: Allows Fact Finder data to be persisted in another system for that system's consumption and use."
      operationId: Clients_PostByModel
      parameters:
        - in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ClientsModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ClientModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Client.
        '403':
          description: Request is restricted for access to Client.
      tags:
        - Clients
  /api/CriticalIllnessInsurancePolicies:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Critical Illness Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policies including description and policy type."
      operationId: CriticalIllnessInsurancePolicies_GetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Critical Illness Insurance Policies
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePoliciesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Critical Illness Insurance Policy.
        '403':
          description: Request is restricted for access to Critical Illness Insurance Policy.
        '404':
          description: Critical Illness Insurance Policy not found.
      tags:
        - CriticalIllnessInsurancePolicies
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for creation of Critical Illness Insurance Policies on a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_PostByModel
      parameters:
        - description: The Critical Illness Insurance Policy to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Critical Illness Insurance Policy.
        '403':
          description: Request is restricted for access to Critical Illness Insurance Policy.
        '404':
          description: Critical Illness Insurance Policy not found.
      tags:
        - CriticalIllnessInsurancePolicies
  '/api/CriticalIllnessInsurancePolicies/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Critical Illness Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Critical Illness Insurance Policy from a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_DeleteById
      parameters:
        - description: The Critical Illness Insurance Policy ID used to identify which Critical Illness Insurance Policy to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Critical Illness Insurance Policy.
        '403':
          description: Request is restricted for access to Critical Illness Insurance Policy.
        '404':
          description: Critical Illness Insurance Policy not found.
      tags:
        - CriticalIllnessInsurancePolicies
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Critical Illness Insurance Policy for the specified Critical Illness Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy including description and policy type."
      operationId: CriticalIllnessInsurancePolicies_GetById
      parameters:
        - description: The ID of the Critical Illness Insurance Policy used to retreive the Critical Illness Insurance Policy
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Critical Illness Insurance Policy.
        '403':
          description: Request is restricted for access to Critical Illness Insurance Policy.
        '404':
          description: Critical Illness Insurance Policy not found.
      tags:
        - CriticalIllnessInsurancePolicies
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Critical Illness Insurance Policy on a Fact Finder."
      operationId: CriticalIllnessInsurancePolicies_PutByIdModel
      parameters:
        - description: The existing Critical Illness Insurance Policy ID used to identify which Critical Illness Insurance Policy to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Critical Illness Insurance Policy to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Critical Illness Insurance Policy.
        '403':
          description: Request is restricted for access to Critical Illness Insurance Policy.
        '404':
          description: Critical Illness Insurance Policy not found.
      tags:
        - CriticalIllnessInsurancePolicies
  /api/CriticalIllnessInsurancePolicyTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Critical Illness Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description."
      operationId: CriticalIllnessInsurancePolicyTypes_GetByCountry
      parameters:
        - description: The country used to filter Critical Illness Insurance Policy Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Critical Illness Insurance Policy Type not found.
      tags:
        - CriticalIllnessInsurancePolicyTypes
  '/api/CriticalIllnessInsurancePolicyTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Critical Illness Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description."
      operationId: CriticalIllnessInsurancePolicyTypes_GetById
      parameters:
        - description: The ID of Critical Illness Insurance Policy Type used to retreive the Critical Illness Insurance Policy Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Critical Illness Insurance Policy Type not found.
      tags:
        - CriticalIllnessInsurancePolicyTypes
  /api/DefinedBenefitPensions:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pensions including description and start date."
      operationId: DefinedBenefitPensions_GetDefinedBenefitPensionsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Defined Benefit Pensions
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Defined Benefit Pension.
        '403':
          description: Request is restricted for access to Defined Benefit Pension.
        '404':
          description: Defined Benefit Pension not found.
      tags:
        - DefinedBenefitPensions
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for creation of Defined Benefit Pensions on a Fact Finder."
      operationId: DefinedBenefitPensions_PostByModel
      parameters:
        - description: The Defined Benefit Pension to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/System.Object'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Defined Benefit Pension.
        '403':
          description: Request is restricted for access to Defined Benefit Pension.
        '404':
          description: Defined Benefit Pension not found.
      tags:
        - DefinedBenefitPensions
  '/api/DefinedBenefitPensions/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Defined Benefit Pension tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Defined Benefit Pension from a Fact Finder."
      operationId: DefinedBenefitPensions_DeleteDefinedBenefitPensionById
      parameters:
        - description: The Defined Benefit Pension ID used to identify which Defined Benefit Pension to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/System.Object'
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Defined Benefit Pension.
        '403':
          description: Request is restricted for access to Defined Benefit Pension.
        '404':
          description: Defined Benefit Pension not found.
      tags:
        - DefinedBenefitPensions
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Defined Benefit Pension for the specified Defined Benefit Pension ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pension including description and start date."
      operationId: DefinedBenefitPensions_GetById
      parameters:
        - description: The ID of the Defined Benefit Pension used to retreive the Defined Benefit Pension
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Defined Benefit Pension.
        '403':
          description: Request is restricted for access to Defined Benefit Pension.
        '404':
          description: Defined Benefit Pension not found.
      tags:
        - DefinedBenefitPensions
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for complete replacement of a Defined Benefit Pension on a Fact Finder."
      operationId: DefinedBenefitPensions_PutDefinedBenefitPensionByIdModel
      parameters:
        - description: The existing Defined Benefit Pension ID used to identify which Defined Benefit Pension to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Defined Benefit Pension to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Defined Benefit Pension.
        '403':
          description: Request is restricted for access to Defined Benefit Pension.
        '404':
          description: Defined Benefit Pension not found.
      tags:
        - DefinedBenefitPensions
  /api/Demographics:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Demographic information for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state."
      operationId: Demographics_GetDemographicsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Demographic information
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Demographic information.
        '403':
          description: Request is restricted for access to Demographic information.
        '404':
          description: Demographic information not found.
      tags:
        - Demographics
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates Demographic information.<br />\r\n              Purpose: Allows for creation of Demographic information on a Fact Finder."
      operationId: Demographics_PostByModel
      parameters:
        - description: The Demographic information to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Demographic information.
        '403':
          description: Request is restricted for access to Demographic information.
        '404':
          description: Demographic information not found.
      tags:
        - Demographics
  '/api/Demographics/{demographicId}/Dependents':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Dependents for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Dependents including first and last name."
      operationId: Demographics_GetDependentsByDemographicid
      parameters:
        - description: The ID of the Demographic information used to retrieve Dependents
          format: int32
          in: path
          name: demographicId
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Dependent information.
        '403':
          description: Request is restricted for access to Dependent information.
        '404':
          description: Dependent information not found.
      tags:
        - Demographics
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Dependent.<br />\r\n              Purpose: Allows for creation of Dependents on a Fact Finder."
      operationId: Demographics_PostByDemographicidModel
      parameters:
        - description: The ID of the Demographic information to add the Dependent to
          format: int32
          in: path
          name: demographicId
          required: true
          type: integer
        - description: The Dependent to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Dependent information.
        '403':
          description: Request is restricted for access to Dependent information.
        '404':
          description: Dependent information not found.
        '409':
          description: The request cannot be completed.
      tags:
        - Demographics
  '/api/Demographics/{demographicId}/Dependents/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Dependent tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Dependent from a Fact Finder."
      operationId: Demographics_DeleteDependentByDemographicidId
      parameters:
        - description: The ID of the Demographic information used to identify which Dependent to remove
          format: int32
          in: path
          name: demographicId
          required: true
          type: integer
        - description: The Dependent ID used to identify which Dependent to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Dependent information.
        '403':
          description: Request is restricted for access to Dependent information.
        '404':
          description: Dependent information not found.
      tags:
        - Demographics
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Dependent for the specified Dependent ID.<br />\r\n              Purpose: Provides access to the Dependent including first and last name."
      operationId: Demographics_GetDependentByDemographicidId
      parameters:
        - description: The ID of the Demographic information used to retrieve Dependents
          format: int32
          in: path
          name: demographicId
          required: true
          type: integer
        - description: The ID of the Dependent used to retreive the Dependent
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Dependent information.
        '403':
          description: Request is restricted for access to Dependent information.
        '404':
          description: Dependent information not found.
      tags:
        - Demographics
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Dependent.<br />\r\n              Purpose: Allows for complete replacement of a Dependent on a Fact Finder."
      operationId: Demographics_PutByDemographicidIdModel
      parameters:
        - description: The ID of the Demographic information used to identify which Dependent to update
          format: int32
          in: path
          name: demographicId
          required: true
          type: integer
        - description: The existing Dependent ID used to identify which Dependent to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Dependent to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Dependent information.
        '403':
          description: Request is restricted for access to Dependent information.
        '404':
          description: Dependent information not found.
      tags:
        - Demographics
  '/api/Demographics/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves Demographic information for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state."
      operationId: Demographics_GetById
      parameters:
        - description: The ID of the Demographic information used to retreive the Demographic information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Demographic information.
        '403':
          description: Request is restricted for access to Demographic information.
        '404':
          description: Demographic information not found.
      tags:
        - Demographics
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates Demographic information.<br />\r\n              Purpose: Allows for complete replacement of Demographic information on a Fact Finder."
      operationId: Demographics_PutByIdModel
      parameters:
        - description: The existing Demographic information ID used to identify which Demographic information to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Demographic information to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Demographic information.
        '403':
          description: Request is restricted for access to Demographic information.
        '404':
          description: Demographic information not found.
        '409':
          description: The request cannot be completed.
      tags:
        - Demographics
  /api/DisabilityInsurancePolicies:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policies including description and policy type."
      operationId: DisabilityInsurancePolicies_GetDisabilityInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Disability Insurance Policies
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePoliciesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Disability Insurance Policy.
        '403':
          description: Request is restricted for access to Disability Insurance Policy.
        '404':
          description: Disability Insurance Policy not found.
      tags:
        - DisabilityInsurancePolicies
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for creation of Disability Insurance Policies on a Fact Finder."
      operationId: DisabilityInsurancePolicies_PostByModel
      parameters:
        - description: The Disability Insurance Policy to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Disability Insurance Policy.
        '403':
          description: Request is restricted for access to Disability Insurance Policy.
        '404':
          description: Disability Insurance Policy not found.
      tags:
        - DisabilityInsurancePolicies
  '/api/DisabilityInsurancePolicies/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Disability Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Disability Insurance Policy from a Fact Finder."
      operationId: DisabilityInsurancePolicies_DeleteById
      parameters:
        - description: The Disability Insurance Policy ID used to identify which Disability Insurance Policy to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Disability Insurance Policy.
        '403':
          description: Request is restricted for access to Disability Insurance Policy.
        '404':
          description: Disability Insurance Policy not found.
      tags:
        - DisabilityInsurancePolicies
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Disability Insurance Policy for the specified Disability Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy including description and policy type."
      operationId: DisabilityInsurancePolicies_GetById
      parameters:
        - description: The ID of the Disability Insurance Policy used to retreive the Disability Insurance Policy
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Disability Insurance Policy.
        '403':
          description: Request is restricted for access to Disability Insurance Policy.
        '404':
          description: Disability Insurance Policy not found.
      tags:
        - DisabilityInsurancePolicies
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Disability Insurance Policy on a Fact Finder."
      operationId: DisabilityInsurancePolicies_PutByIdModel
      parameters:
        - description: The existing Disability Insurance Policy ID used to identify which Disability Insurance Policy to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Disability Insurance Policy to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Disability Insurance Policy.
        '403':
          description: Request is restricted for access to Disability Insurance Policy.
        '404':
          description: Disability Insurance Policy not found.
      tags:
        - DisabilityInsurancePolicies
  /api/DisabilityInsurancePolicyTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description."
      operationId: DisabilityInsurancePolicyTypes_GetByCountry
      parameters:
        - description: The country used to filter Disability Insurance Policy Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Disability Insurance Policy Type not found.
      tags:
        - DisabilityInsurancePolicyTypes
  '/api/DisabilityInsurancePolicyTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Disability Insurance Policy Types for the specified id.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description."
      operationId: DisabilityInsurancePolicyTypes_GetById
      parameters:
        - description: The ID of Disability Insurance Policy Type used to retreive the Disability Insurance Policy Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Disability Insurance Policy Type not found.
      tags:
        - DisabilityInsurancePolicyTypes
  /api/EducationGoals:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Education Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Education Goals including description and projected cost."
      operationId: EducationGoals_GetEducationGoalsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Education Goals
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal.
        '403':
          description: Request is restricted for access to Education Goal.
        '404':
          description: Education Goal not found.
      tags:
        - EducationGoals
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Education Goal.<br />\r\n              Purpose: Allows for creation of Education Goals on a Fact Finder."
      operationId: EducationGoals_PostByModel
      parameters:
        - description: The Education Goal to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal.
        '403':
          description: Request is restricted for access to Education Goal.
        '404':
          description: Education Goal not found.
      tags:
        - EducationGoals
  '/api/EducationGoals/{educationGoalId}/Expenses':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Education Goal Expenses for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal Expenses including description and annual cost."
      operationId: EducationGoals_GetEducationExpensesByEducationGoalIdByEducationgoalid
      parameters:
        - description: The ID of the Education Goal used to retrieve Education Goal Expenses
          format: int32
          in: path
          name: educationGoalId
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpensesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal Expense not found.
      tags:
        - EducationGoals
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder."
      operationId: EducationGoals_PostByEducationgoalidModel
      parameters:
        - description: The Education Goal ID used to locate the Goal to add the expense to
          format: int32
          in: path
          name: educationGoalId
          required: true
          type: integer
        - description: The Education Goal Expense to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal Expense not found.
      tags:
        - EducationGoals
  '/api/EducationGoals/{educationGoalId}/Expenses/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes an Education Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal Expense from a Fact Finder."
      operationId: EducationGoals_DeleteByEducationgoalidId
      parameters:
        - description: The Education Goal ID used to locate the Goal to delete the Expense under
          format: int32
          in: path
          name: educationGoalId
          required: true
          type: integer
        - description: The Education Goal Expense ID used to identify which Education Goal Expense to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal Expense not found.
      tags:
        - EducationGoals
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Education Goal Expense for the specified Education Goal Expense ID.<br />\r\n              Purpose: Provides access to the Education Goal Expense including description and annual cost."
      operationId: EducationGoals_GetEducationExpenseByEducationgoalidId
      parameters:
        - description: The ID of the Education Goal used to retrieve Education Goal Expenses
          format: int32
          in: path
          name: educationGoalId
          required: true
          type: integer
        - description: The ID of the Education Goal Expense used to retreive the Education Goal Expense
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal Expense not found.
      tags:
        - EducationGoals
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates an Education Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of an Education Goal Expense on a Fact Finder."
      operationId: EducationGoals_PutByEducationgoalidIdModel
      parameters:
        - description: The Education Goal ID used to locate the Goal to update the Expense under
          format: int32
          in: path
          name: educationGoalId
          required: true
          type: integer
        - description: The existing Education Goal Expense ID used to identify which Education Goal Expense to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Education Goal Expense to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal Expense not found.
      tags:
        - EducationGoals
  '/api/EducationGoals/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes an Education Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal from a Fact Finder."
      operationId: EducationGoals_DeleteById
      parameters:
        - description: The Education Goal ID used to identify which Education Goal to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal.
        '403':
          description: Request is restricted for access to Education Goal.
        '404':
          description: Education Goal not found.
      tags:
        - EducationGoals
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Education Goal for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal including description and projected cost."
      operationId: EducationGoals_GetById
      parameters:
        - description: The ID of the Education Goal used to retreive the Education Goal
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal.
        '403':
          description: Request is restricted for access to Education Goal.
        '404':
          description: Education Goal not found.
      tags:
        - EducationGoals
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder."
      operationId: EducationGoals_PutByIdModel
      parameters:
        - description: The Education Goal ID used to locate the Goal to add the Expense to
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Education Goal Expense to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Education Goal Expense.
        '403':
          description: Request is restricted for access to Education Goal Expense.
        '404':
          description: Education Goal not found.
      tags:
        - EducationGoals
  /api/ExpenseTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description."
      operationId: ExpenseTypes_GetByCountry
      parameters:
        - description: The country used to filter Expense Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Expense Type not found.
      tags:
        - ExpenseTypes
  '/api/ExpenseTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description."
      operationId: ExpenseTypes_GetById
      parameters:
        - description: The ID of Expense Type used to retreive the Expense Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Expense Type not found.
      tags:
        - ExpenseTypes
  /api/Expenses:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Expenses for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Expenses including description and Expense type."
      operationId: Expenses_GetExpensesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Expenses
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpensesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Expense.
        '403':
          description: Request is restricted for access to Expense.
        '404':
          description: Expense not found.
      tags:
        - Expenses
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Expense.<br />\r\n              Purpose: Allows for creation of Expenses on a Fact Finder."
      operationId: Expenses_PostByModel
      parameters:
        - description: The Expense to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseModel'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Expense.
        '403':
          description: Request is restricted for access to Expense.
        '404':
          description: Expense not found.
      tags:
        - Expenses
  '/api/Expenses/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes an Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Expense from a Fact Finder."
      operationId: Expenses_DeleteById
      parameters:
        - description: The Expense ID used to identify which Expense to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Expense.
        '403':
          description: Request is restricted for access to Expense.
        '404':
          description: Expense not found.
      tags:
        - Expenses
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Expense for the specified Expense ID.<br />\r\n              Purpose: Provides access to the Expense including description and Expense type."
      operationId: Expenses_GetById
      parameters:
        - description: The ID of the Expense used to retreive the Expense
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Expense.
        '403':
          description: Request is restricted for access to Expense.
        '404':
          description: Expense not found.
      tags:
        - Expenses
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates an Expense.<br />\r\n              Purpose: Allows for complete replacement of an Expense on a Fact Finder."
      operationId: Expenses_PutByIdModel
      parameters:
        - description: The existing Expense ID used to identify which Expense to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Expense to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Expense.
        '403':
          description: Request is restricted for access to Expense.
        '404':
          description: Expense not found.
      tags:
        - Expenses
  /api/FactFinders:
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Fact Finder.<br />\r\n              Purpose: Allows for creation of Fact Finders."
      operationId: FactFinders_PostByModel
      parameters:
        - description: The Fact Finder to be added to the User
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithExternalIdModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/System.Object'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Fact Finder.
        '403':
          description: Request is restricted for access to Fact Finder.
        '404':
          description: Fact Finder not found.
        '409':
          description: The request cannot be completed.
      tags:
        - FactFinders
  '/api/FactFinders/{factFinderId}/Modules':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Fact Finder Modules for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder Modules including description and policy type."
      operationId: FactFinderModules_GetByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Fact Finder Modules
          format: int32
          in: path
          name: factFinderId
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModulesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Fact Finder Module.
        '404':
          description: Fact Finder Module not found.
      tags:
        - FactFinderModules
  '/api/FactFinders/{factFinderId}/Modules/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder Module for the specified Fact Finder Module ID.<br />\r\n              Purpose: Provides access to the Fact Finder Module including description and policy type."
      operationId: FactFinderModules_GetByFactfinderidId
      parameters:
        - description: The ID of the Fact Finder used to retrieve Fact Finder Module
          format: int32
          in: path
          name: factFinderId
          required: true
          type: integer
        - description: The ID of the Fact Finder Module used to retreive the Fact Finder Module
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Fact Finder Module.
        '404':
          description: Fact Finder Module not found.
      tags:
        - FactFinderModules
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Fact Finder Module.<br />\r\n              Purpose: Allows for complete replacement of a Fact Finder Module on a Fact Finder."
      operationId: FactFinderModules_PutByModelFactfinderidId
      parameters:
        - description: The Fact Finder Module to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleModel'
        - description: The ID of the Fact Finder used to identify the Fact Finder Module to update
          format: int32
          in: path
          name: factFinderId
          required: true
          type: integer
        - description: The existing Fact Finder Module ID used to identify which Fact Finder Module to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Fact Finder Module.
        '404':
          description: Fact Finder Module not found.
      tags:
        - FactFinderModules
  '/api/FactFinders/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder including status."
      operationId: FactFinders_GetById
      parameters:
        - description: The ID of the Fact Finder used to retreive the Fact Finder
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Unauthorized for Fact Finder data access
        '403':
          description: Request is restricted for access to Fact Finder.
        '404':
          description: Fact Finder not found.
      tags:
        - FactFinders
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Fact Finder.<br />\r\n              Purpose: Allows for the updating of a Fact Finder."
      operationId: FactFinders_PutByIdModel
      parameters:
        - description: The existing Fact Finder ID used to identify which Fact Finder to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Fact Finder to be updated
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Fact Finder.
        '403':
          description: Request is restricted for access to Fact Finder.
        '404':
          description: Fact Finder not found.
      tags:
        - FactFinders
  '/api/FactFinders/{id}/Snapshot':
    post:
      consumes: []
      deprecated: false
      description: "Description: The operation produces a Fact Finder based on input from a back office system.<br />\r\n              Purpose: Allows for advisors to compare the fact finder to the old plan prior to acceptance."
      operationId: FactFinders_PostById
      parameters:
        - description: The ID of the Fact Finder used to retreive the Fact Finder Snapshot
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/System.Object'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderSnapshotModel'
        '400':
          description: The request is invalid.
        '401':
          description: Unauthorized for Fact Finder data access
        '403':
          description: Request is restricted for access to Fact Finder.
        '404':
          description: Fact Finder Snapshot not found.
      tags:
        - FactFinders
  /api/FilingStatusTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Filing Status Types for the specified country.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description."
      operationId: FilingStatusTypes_GetByCountry
      parameters:
        - description: The country used to filter Filing Status Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FilingStatusTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Filing Status Type not found.
      tags:
        - FilingStatusTypes
  '/api/FilingStatusTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Filing Status Type for the specified id.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description."
      operationId: FilingStatusTypes_GetById
      parameters:
        - description: The ID of Filing Status Type used to retreive the Filing Status Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FilingStatusTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Filing Status Type not found.
      tags:
        - FilingStatusTypes
  /api/FrequencyTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Frequency Types for the specified country and entity.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description."
      operationId: FrequencyTypes_GetByEntityCountry
      parameters:
        - description: The entity used to filter Frequency Types
          enum:
            - CriticalIllnessInsurancePolicies
            - DisabilityInsurancePoliciesPremium
            - DisabilityInsurancePoliciesBenefit
            - Expenses
            - Liabilities
            - LifeInsurancePolicies
            - LongTermCareInsurancePoliciesBenefit
            - LongTermCareInsurancePoliciesPremium
            - RealEstateAssets
            - RetirementExpenses
          in: query
          name: entity
          required: true
          type: string
        - description: The country used to filter Frequency Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FrequencyTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Frequency Type not found.
      tags:
        - FrequencyTypes
  '/api/FrequencyTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Frequency Type for the specified id.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description."
      operationId: FrequencyTypes_GetById
      parameters:
        - description: The ID of Frequency Type used to retreive the Frequency Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FrequencyTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Frequency Type not found.
      tags:
        - FrequencyTypes
  /api/IncomeTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Income Types for the specified country.<br />\r\n              Purpose: Provides access to the Income Types including id and type description."
      operationId: IncomeTypes_GetByCountry
      parameters:
        - description: The country used to filter Income Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Income Type not found.
      tags:
        - IncomeTypes
  '/api/IncomeTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Income Type for the specified id.<br />\r\n              Purpose: Provides access to the Income Types including id and type description."
      operationId: IncomeTypes_GetById
      parameters:
        - description: The ID of Income Type used to retreive the Income Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Income Type not found.
      tags:
        - IncomeTypes
  /api/Incomes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes including annual amount and start date."
      operationId: Incomes_GetIncomesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Incomes
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Income.
        '403':
          description: Request is restricted for access to Income.
        '404':
          description: Income not found.
      tags:
        - Incomes
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates an Income.<br />\r\n              Purpose: Allows for creation of Incomes on a Fact Finder."
      operationId: Incomes_PostByModel
      parameters:
        - description: The Income to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeModel'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Income.
        '403':
          description: Request is restricted for access to Income.
        '404':
          description: Income not found.
      tags:
        - Incomes
  '/api/Incomes/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes an Income tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Income from a Fact Finder."
      operationId: Incomes_DeleteById
      parameters:
        - description: The Income ID used to identify which Income to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Income.
        '403':
          description: Request is restricted for access to Income.
        '404':
          description: Income not found.
      tags:
        - Incomes
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Income for the specified Income ID.<br />\r\n              Purpose: Provides access to the Income including annual amount and start date."
      operationId: Incomes_GetById
      parameters:
        - description: The ID of the Income used to retreive the Income
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Income.
        '403':
          description: Request is restricted for access to Income.
        '404':
          description: Income not found.
      tags:
        - Incomes
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates an Income.<br />\r\n              Purpose: Allows for complete replacement of an Income on a Fact Finder."
      operationId: Incomes_PutByIdModel
      parameters:
        - description: The existing Income ID used to identify which Income to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Income to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Income.
        '403':
          description: Request is restricted for access to Income.
        '404':
          description: Income not found.
      tags:
        - Incomes
  /api/Liabilities:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities including owner and type."
      operationId: Liabilities_GetLiabilitiesByFactFinderIdByFactfinderidExternalsourceid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Liabilities
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
        - description: The external source ID used to filter Liabilities
          in: query
          name: externalSourceId
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilitiesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Liability.
        '403':
          description: Request is restricted for access to Liability.
        '404':
          description: Liability not found.
      tags:
        - Liabilities
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Liability.<br />\r\n              Purpose: Allows for creation of Liabilities on a Fact Finder."
      operationId: Liabilities_PostByModel
      parameters:
        - description: The Liability to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Liability.
        '403':
          description: Request is restricted for access to Liability.
        '404':
          description: Liability not found.
      tags:
        - Liabilities
  '/api/Liabilities/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Liability tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Liability from a Fact Finder."
      operationId: Liabilities_DeleteById
      parameters:
        - description: The Liability ID used to identify which Liability to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Liability.
        '403':
          description: Request is restricted for access to Liability.
        '404':
          description: Liability not found.
      tags:
        - Liabilities
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Liability for the specified Liability ID.<br />\r\n              Purpose: Provides access to the Liability including owner and type."
      operationId: Liabilities_GetById
      parameters:
        - description: The ID of the Liability used to retreive the Liability
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Liability.
        '403':
          description: Request is restricted for access to Liability.
        '404':
          description: Liability not found.
      tags:
        - Liabilities
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Liability.<br />\r\n              Purpose: Allows for complete replacement of a Liability on a Fact Finder."
      operationId: Liabilities_PutByIdModel
      parameters:
        - description: The existing Liability ID used to identify which Liability to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Liability to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Liability.
        '403':
          description: Request is restricted for access to Liability.
        '404':
          description: Liability not found.
      tags:
        - Liabilities
  /api/LiabilityTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Liability Types for the specified country.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description."
      operationId: LiabilityTypes_GetByCountry
      parameters:
        - description: The country used to filter Liability Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Liability Type not found.
      tags:
        - LiabilityTypes
  '/api/LiabilityTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Liability Type for the specified id.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description."
      operationId: LiabilityTypes_GetById
      parameters:
        - description: The ID of Liability Type used to retreive the Liability Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Liability Type not found.
      tags:
        - LiabilityTypes
  /api/LifeInsurancePolicies:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Life Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies including description and policy type."
      operationId: LifeInsurancePolicies_GetLifeInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Life Insurance Policies
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePoliciesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Life Insurance Policy.
        '403':
          description: Request is restricted for access to Life Insurance Policy.
        '404':
          description: Life Insurance Policy not found.
      tags:
        - LifeInsurancePolicies
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of Life Insurance Policies on a Fact Finder."
      operationId: LifeInsurancePolicies_PostByModel
      parameters:
        - description: The Life Insurance Policy to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyModel'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Life Insurance Policy.
        '403':
          description: Request is restricted for access to Life Insurance Policy.
        '404':
          description: Life Insurance Policy not found.
      tags:
        - LifeInsurancePolicies
  '/api/LifeInsurancePolicies/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Life Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Life Insurance Policy from a Fact Finder."
      operationId: LifeInsurancePolicies_DeleteById
      parameters:
        - description: The Life Insurance Policy ID used to identify which Life Insurance Policy to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Life Insurance Policy.
        '403':
          description: Request is restricted for access to Life Insurance Policy.
        '404':
          description: Life Insurance Policy not found.
      tags:
        - LifeInsurancePolicies
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Life Insurance Policy for the specified Life Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policy including description and policy type."
      operationId: LifeInsurancePolicies_GetById
      parameters:
        - description: The ID of the Life Insurance Policy used to retreive the Life Insurance Policy
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Life Insurance Policy.
        '403':
          description: Request is restricted for access to Life Insurance Policy.
        '404':
          description: Life Insurance Policy not found.
      tags:
        - LifeInsurancePolicies
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Life Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Life Insurance Policy on a Fact Finder."
      operationId: LifeInsurancePolicies_PutByIdModel
      parameters:
        - description: The existing Life Insurance Policy ID used to identify which Life Insurance Policy to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Life Insurance Policy to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Life Insurance Policy.
        '403':
          description: Request is restricted for access to Life Insurance Policy.
        '404':
          description: Life Insurance Policy not found.
      tags:
        - LifeInsurancePolicies
  /api/LifeInsurancePolicyTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Life Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description."
      operationId: LifeInsurancePolicyTypes_GetByCountry
      parameters:
        - description: The country used to filter Life Insurance Policy Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Life Insurance Policy Type not found.
      tags:
        - LifeInsurancePolicyTypes
  '/api/LifeInsurancePolicyTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Life Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description."
      operationId: LifeInsurancePolicyTypes_GetById
      parameters:
        - description: The ID of Life Insurance Policy Type used to retreive the Life Insurance Policy Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Life Insurance Policy Type not found.
      tags:
        - LifeInsurancePolicyTypes
  /api/LifestyleAssetTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Lifestyle Asset Types for the specified country.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description."
      operationId: LifestyleAssetTypes_GetByCountry
      parameters:
        - description: The country used to filter Lifestyle Asset Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Lifestyle Asset Type not found.
      tags:
        - LifestyleAssetTypes
  '/api/LifestyleAssetTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Lifestyle Asset Type for the specified id.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description."
      operationId: LifestyleAssetTypes_GetById
      parameters:
        - description: The ID of Lifestyle Asset Type used to retreive the Lifestyle Asset Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Lifestyle Asset Type not found.
      tags:
        - LifestyleAssetTypes
  /api/LifestyleAssets:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Lifestyle Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Lifestyle Assets including description and market value."
      operationId: LifestyleAssets_GetLifestyleAssetsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Lifestyle Assets
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Lifestyle Asset.
        '403':
          description: Request is restricted for access to Lifestyle Asset.
        '404':
          description: Lifestyle Asset not found.
      tags:
        - LifestyleAssets
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Lifestyle Asset.<br />\r\n              Purpose: Allows for creation of Lifestyle Assets on a Fact Finder."
      operationId: LifestyleAssets_PostByModel
      parameters:
        - description: The Lifestyle Asset to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Lifestyle Asset.
        '403':
          description: Request is restricted for access to Lifestyle Asset.
        '404':
          description: Lifestyle Asset not found.
      tags:
        - LifestyleAssets
  '/api/LifestyleAssets/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Lifestyle Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Lifestyle Asset from a Fact Finder."
      operationId: LifestyleAssets_DeleteById
      parameters:
        - description: The Lifestyle Asset ID used to identify which Lifestyle Asset to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Lifestyle Asset.
        '403':
          description: Request is restricted for access to Lifestyle Asset.
        '404':
          description: Lifestyle Asset not found.
      tags:
        - LifestyleAssets
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Lifestyle Asset for the specified Lifestyle Asset ID.<br />\r\n              Purpose: Provides access to the Lifestyle Asset including description and market value."
      operationId: LifestyleAssets_GetById
      parameters:
        - description: The ID of the Lifestyle Asset used to retreive the Lifestyle Asset
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Lifestyle Asset.
        '403':
          description: Request is restricted for access to Lifestyle Asset.
        '404':
          description: Lifestyle Asset not found.
      tags:
        - LifestyleAssets
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Lifestyle Asset.<br />\r\n              Purpose: Allows for complete replacement of a Lifestyle Asset on a Fact Finder."
      operationId: LifestyleAssets_PutByIdModel
      parameters:
        - description: The existing Lifestyle Asset ID used to identify which Lifestyle Asset to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Lifestyle Asset to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Lifestyle Asset.
        '403':
          description: Request is restricted for access to Lifestyle Asset.
        '404':
          description: Lifestyle Asset not found.
      tags:
        - LifestyleAssets
  /api/LongTermCareInsurancePolicies:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Long Term Care Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policies including description and premium."
      operationId: LongTermCareInsurancePolicies_GetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Long Term Care Insurance Policies
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePoliciesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Long Term Care Insurance Policy.
        '403':
          description: Request is restricted for access to Long Term Care Insurance Policy.
        '404':
          description: Long Term Care Insurance Policy not found.
      tags:
        - LongTermCareInsurancePolicies
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for creation of Long Term Care Insurance Policies on a Fact Finder."
      operationId: LongTermCareInsurancePolicies_PostByModel
      parameters:
        - description: The Long Term Care Insurance Policy to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePolicyModel'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Long Term Care Insurance Policy.
        '403':
          description: Request is restricted for access to Long Term Care Insurance Policy.
        '404':
          description: Long Term Care Insurance Policy not found.
      tags:
        - LongTermCareInsurancePolicies
  '/api/LongTermCareInsurancePolicies/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Long Term Care Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Long Term Care Insurance Policy from a Fact Finder."
      operationId: LongTermCareInsurancePolicies_DeleteById
      parameters:
        - description: The Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Long Term Care Insurance Policy.
        '403':
          description: Request is restricted for access to Long Term Care Insurance Policy.
        '404':
          description: Long Term Care Insurance Policy not found.
      tags:
        - LongTermCareInsurancePolicies
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Long Term Care Insurance Policy for the specified Long Term Care Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policy including description and premium."
      operationId: LongTermCareInsurancePolicies_GetById
      parameters:
        - description: The ID of the Long Term Care Insurance Policy used to retreive the Long Term Care Insurance Policy
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePolicyWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Long Term Care Insurance Policy.
        '403':
          description: Request is restricted for access to Long Term Care Insurance Policy.
        '404':
          description: Long Term Care Insurance Policy not found.
      tags:
        - LongTermCareInsurancePolicies
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Long Term Care Insurance Policy on a Fact Finder."
      operationId: LongTermCareInsurancePolicies_PutByIdModel
      parameters:
        - description: The existing Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Long Term Care Insurance Policy to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePolicyModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/System.Object'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Long Term Care Insurance Policy.
        '403':
          description: Request is restricted for access to Long Term Care Insurance Policy.
        '404':
          description: Long Term Care Insurance Policy not found.
      tags:
        - LongTermCareInsurancePolicies
  /api/MajorPurchaseGoalTypes:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Major Purchase Goal Types for the specified country.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description."
      operationId: MajorPurchaseGoalTypes_GetByCountry
      parameters:
        - description: The country used to filter Major Purchase Goal Types
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalTypesModel'
        '400':
          description: The request is invalid.
        '404':
          description: Major Purchase Goal Type not found.
      tags:
        - MajorPurchaseGoalTypes
  '/api/MajorPurchaseGoalTypes/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the Major Purchase Goal Type for the specified id.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description."
      operationId: MajorPurchaseGoalTypes_GetById
      parameters:
        - description: The ID of Major Purchase Goal Type used to retreive the Major Purchase Goal Type information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalTypeModel'
        '400':
          description: The request is invalid.
        '404':
          description: Major Purchase Goal Type not found.
      tags:
        - MajorPurchaseGoalTypes
  /api/MajorPurchaseGoals:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Major Purchases for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Major Purchases including description and amount."
      operationId: MajorPurchaseGoals_GetMajorPurchaseGoalsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Major Purchases
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Major Purchase.
        '403':
          description: Request is restricted for access to Major Purchase.
        '404':
          description: Major Purchase not found.
      tags:
        - MajorPurchaseGoals
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Major Purchase.<br />\r\n              Purpose: Allows for creation of Major Purchases on a Fact Finder."
      operationId: MajorPurchaseGoals_PostByModel
      parameters:
        - description: The Major Purchase to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalModel'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Major Purchase.
        '403':
          description: Request is restricted for access to Major Purchase.
        '404':
          description: Major Purchase not found.
      tags:
        - MajorPurchaseGoals
  '/api/MajorPurchaseGoals/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Major Purchase tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Major Purchase from a Fact Finder."
      operationId: MajorPurchaseGoals_DeleteById
      parameters:
        - description: The Major Purchase ID used to identify which Major Purchase to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Major Purchase.
        '403':
          description: Request is restricted for access to Major Purchase.
        '404':
          description: Major Purchase not found.
      tags:
        - MajorPurchaseGoals
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Major Purchase for the specified Major Purchase ID.<br />\r\n              Purpose: Provides access to the Major Purchase including description and amount."
      operationId: MajorPurchaseGoals_GetById
      parameters:
        - description: The ID of the Major Purchase used to retreive the Major Purchase
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Major Purchase.
        '403':
          description: Request is restricted for access to Major Purchase.
        '404':
          description: Major Purchase not found.
      tags:
        - MajorPurchaseGoals
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Major Purchase.<br />\r\n              Purpose: Allows for complete replacement of a Major Purchase on a Fact Finder."
      operationId: MajorPurchaseGoals_PutByIdModel
      parameters:
        - description: The existing Major Purchase ID used to identify which Major Purchase to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Major Purchase to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Major Purchase.
        '403':
          description: Request is restricted for access to Major Purchase.
        '404':
          description: Major Purchase not found.
      tags:
        - MajorPurchaseGoals
  /api/RealEstateAssets:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Real Estate Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Real Estate Assets including description and market value."
      operationId: RealEstateAssets_GetRealEstateAssetsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Real Estate Assets
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Real Estate Asset.
        '403':
          description: Request is restricted for access to Real Estate Asset.
        '404':
          description: Real Estate Asset not found.
      tags:
        - RealEstateAssets
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Real Estate Asset.<br />\r\n              Purpose: Allows for creation of Real Estate Assets on a Fact Finder."
      operationId: RealEstateAssets_PostByModel
      parameters:
        - description: The Real Estate Asset to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Real Estate Asset.
        '403':
          description: Request is restricted for access to Real Estate Asset.
        '404':
          description: Real Estate Asset not found.
      tags:
        - RealEstateAssets
  '/api/RealEstateAssets/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Real Estate Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Real Estate Asset from a Fact Finder."
      operationId: RealEstateAssets_DeleteById
      parameters:
        - description: The Real Estate Asset ID used to identify which Real Estate Asset to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Real Estate Asset.
        '403':
          description: Request is restricted for access to Real Estate Asset.
        '404':
          description: Real Estate Asset not found.
      tags:
        - RealEstateAssets
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Real Estate Asset for the specified Real Estate Asset ID.<br />\r\n              Purpose: Provides access to the Real Estate Asset including description and market value."
      operationId: RealEstateAssets_GetById
      parameters:
        - description: The ID of the Real Estate Asset used to retreive the Real Estate Asset
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Real Estate Asset.
        '403':
          description: Request is restricted for access to Real Estate Asset.
        '404':
          description: Real Estate Asset not found.
      tags:
        - RealEstateAssets
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Real Estate Asset.<br />\r\n              Purpose: Allows for complete replacement of a Real Estate Asset on a Fact Finder."
      operationId: RealEstateAssets_PutByIdModel
      parameters:
        - description: The existing Real Estate Asset ID used to identify which Real Estate Asset to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Real Estate Asset to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Real Estate Asset.
        '403':
          description: Request is restricted for access to Real Estate Asset.
        '404':
          description: Real Estate Asset not found.
      tags:
        - RealEstateAssets
  /api/RetirementGoals:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Retirement Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Retirement Goals including retirement date."
      operationId: RetirementGoals_GetRetirementGoalsByFactFinderIdByFactfinderid
      parameters:
        - description: The ID of the Fact Finder used to retrieve Retirement Goals
          format: int32
          in: query
          name: factFinderId
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal.
        '403':
          description: Request is restricted for access to Retirement Goal.
        '404':
          description: Retirement Goal not found.
      tags:
        - RetirementGoals
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Retirement Goal.<br />\r\n              Purpose: Allows for creation of Retirement Goals on a Fact Finder."
      operationId: RetirementGoals_PostByModel
      parameters:
        - description: The Retirement Goal to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal.
        '403':
          description: Request is restricted for access to Retirement Goal.
        '404':
          description: Retirement Goal not found.
      tags:
        - RetirementGoals
  '/api/RetirementGoals/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Retirement Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal from a Fact Finder."
      operationId: RetirementGoals_DeleteById
      parameters:
        - description: The Retirement Goal ID used to identify which Retirement Goal to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal.
        '403':
          description: Request is restricted for access to Retirement Goal.
        '404':
          description: Retirement Goal not found.
      tags:
        - RetirementGoals
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Retirement Goal for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal including retirement date."
      operationId: RetirementGoals_GetById
      parameters:
        - description: The ID of the Retirement Goal used to retreive the Retirement Goal
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal.
        '403':
          description: Request is restricted for access to Retirement Goal.
        '404':
          description: Retirement Goal not found.
      tags:
        - RetirementGoals
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Retirement Goal.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal on a Fact Finder."
      operationId: RetirementGoals_PutByIdModel
      parameters:
        - description: The existing Retirement Goal ID used to identify which Retirement Goal to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Retirement Goal to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal.
        '403':
          description: Request is restricted for access to Retirement Goal.
        '404':
          description: Retirement Goal not found.
      tags:
        - RetirementGoals
  '/api/RetirementGoals/{retirementGoalId}/Expenses':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Retirement Goal Expenses for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expenses including description and amount."
      operationId: RetirementGoals_GetRetirementExpensesByRetirementGoalIdByRetirementgoalid
      parameters:
        - description: The ID of the Retirement Goal used to retrieve Retirement Goal Expenses
          format: int32
          in: path
          name: retirementGoalId
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpensesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal Expense.
        '403':
          description: Request is restricted for access to Retirement Goal Expense.
        '404':
          description: Retirement Goal Expense not found.
      tags:
        - RetirementGoals
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for creation of Retirement Goal Expenses on a Fact Finder."
      operationId: RetirementGoals_PostByRetirementgoalidModel
      parameters:
        - description: The ID of the Retirement Goal to add the Retirement Goal Expense to
          format: int32
          in: path
          name: retirementGoalId
          required: true
          type: integer
        - description: The Retirement Goal Expense to be added to the Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal Expense.
        '403':
          description: Request is restricted for access to Retirement Goal Expense.
        '404':
          description: Retirement Goal Expense not found.
      tags:
        - RetirementGoals
  '/api/RetirementGoals/{retirementGoalId}/Expenses/{id}':
    delete:
      consumes: []
      deprecated: false
      description: "Description: The operation removes a Retirement Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal Expense from a Fact Finder."
      operationId: RetirementGoals_DeleteByRetirementgoalidId
      parameters:
        - description: The Retirement Goal ID used to locate the Goal to delete the Retirement Goal Expense under
          format: int32
          in: path
          name: retirementGoalId
          required: true
          type: integer
        - description: The Retirement Goal Expense ID used to identify which Retirement Goal Expense to remove
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal Expense.
        '403':
          description: Request is restricted for access to Retirement Goal Expense.
        '404':
          description: Retirement Goal Expense not found.
      tags:
        - RetirementGoals
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Retirement Goal Expense for the specified Retirement Goal Expense ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expense including description and amount."
      operationId: RetirementGoals_GetRetirementExpenseByRetirementgoalidId
      parameters:
        - description: The ID of the Retirement Goal used to retrieve the Retirement Goal Expense
          format: int32
          in: path
          name: retirementGoalId
          required: true
          type: integer
        - description: The ID of the Retirement Goal Expense used to retreive the Retirement Goal Expense
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal Expense.
        '403':
          description: Request is restricted for access to Retirement Goal Expense.
        '404':
          description: Retirement Goal Expense not found.
      tags:
        - RetirementGoals
    put:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation updates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal Expense on a Fact Finder."
      operationId: RetirementGoals_PutByRetirementgoalidIdModel
      parameters:
        - description: The Retirement Goal ID used to locate the Goal to update the Retirement Goal Expense under
          format: int32
          in: path
          name: retirementGoalId
          required: true
          type: integer
        - description: The existing Retirement Goal Expense ID used to identify which Retirement Goal Expense to update
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: The Retirement Goal Expense to be updated on a Fact Finder
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to Retirement Goal Expense.
        '403':
          description: Request is restricted for access to Retirement Goal Expense.
        '404':
          description: Retirement Goal Expense not found.
      tags:
        - RetirementGoals
  /api/ServiceInformation:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves information statistics for the current service.<br />\r\n              Purpose: Provides access to Service Information."
      operationId: FactFinderServiceInformation_Get
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.ServiceInformationModel'
        '404':
          description: Object not found
      tags:
        - FactFinderServiceInformation
  /api/StatesProvinces:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all States and Provinces for the specified country.<br />\r\n              Purpose: Provides access to the States and Provinces."
      operationId: StatesProvinces_GetByCountry
      parameters:
        - description: The country used to filter States and Provinces
          enum:
            - UnitedStates
            - Canada
          in: query
          name: country
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.StatesProvincesModel'
        '400':
          description: The request is invalid.
        '404':
          description: State or Province not found.
      tags:
        - StatesProvinces
  '/api/StatesProvinces/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves the States and Provinces for the specified id.<br />\r\n              Purpose: Provides access to the States and Provinces."
      operationId: StatesProvinces_GetById
      parameters:
        - description: The ID of the State or Province used to retreive the State or Province information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.StateProvinceModel'
        '400':
          description: The request is invalid.
        '404':
          description: State or Province not found.
      tags:
        - StatesProvinces
  /api/Users:
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder User.<br />\r\n              Purpose: Provides access to a Fact Finder User information including the User ID."
      operationId: Users_GetByUsername
      parameters:
        - description: The username used to look up the Fact Finder User information
          in: query
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderUserWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '403':
          description: Request is restricted for access to User.
        '404':
          description: User not found.
      tags:
        - Users
    post:
      consumes:
        - application/json
        - text/json
      deprecated: false
      description: "Description: The operation creates a Fact Finder User.<br />\r\n              Purpose: Allows for creation of Users to collect Fact Finder information."
      operationId: Users_PostByModel
      parameters:
        - description: The Fact Finder User to be added
          in: body
          name: model
          required: true
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderUserModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderUserWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '403':
          description: Request is restricted for access to User.
        '404':
          description: User not found.
      tags:
        - Users
  '/api/Users/{advisorGuid}/ClientFactFinders':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Fact Finders related to the specified Advisor's Clients.<br />\r\n              Purpose: Provides access to a Client Fact Finder listing."
      operationId: Users_GetFactFindersByAdvisorGuidByAdvisorguid
      parameters:
        - description: The Advisor Guid used to locate related Clients and then those Client's Fact Finders
          in: path
          name: advisorGuid
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithUserGuidsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '403':
          description: Request is restricted for access to User.
        '404':
          description: User not found.
      tags:
        - Users
  '/api/Users/{advisorGuid}/ClientFactFinders/{clientGuid}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a list of Fact Finders related to the specified Advisor's Client.<br />\r\n              Purpose: Provides access to a Client's Fact Finders."
      operationId: Users_GetFactFinderByUserGuidByAdvisorguidClientguid
      parameters:
        - description: The Advisor Guid used to locate related Clients
          in: path
          name: advisorGuid
          required: true
          type: string
        - description: The Client Guid used to locate related Fact Finders
          in: path
          name: clientGuid
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithUserGuidsModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '403':
          description: Request is restricted for access to User.
        '404':
          description: User not found.
      tags:
        - Users
  '/api/Users/{id}':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves a single Fact Finder User.<br />\r\n              Purpose: Provides access to a Fact Finder User information including the username."
      operationId: Users_GetById
      parameters:
        - description: The User ID used to look up the Fact Finder User information
          format: int32
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderUserWithIdModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '404':
          description: User not found.
      tags:
        - Users
  '/api/Users/{username}/FactFinders':
    get:
      consumes: []
      deprecated: false
      description: "Description: This operation retrieves all Fact Finders for the specified username.<br />\r\n              Purpose: Provides access to the Fact Finder listing including status."
      operationId: Users_GetFactFindersByUserNameByUsername
      parameters:
        - description: The username used to filter Fact Finders
          in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Advicent.FactFinderService.Models.FactFindersWithUserNamesModel'
        '400':
          description: The request is invalid.
        '401':
          description: Request is unauthorized for access to User.
        '403':
          description: Request is restricted for access to User.
        '404':
          description: User not found.
      tags:
        - Users
definitions:
  Advicent.DomainLogic.Models.IAccountHoldingDomainObject:
    properties:
      accountHoldingId:
        format: int32
        type: integer
      accountId:
        format: int32
        type: integer
      costBasis:
        format: double
        type: number
      cusip:
        type: string
      description:
        type: string
      externalDestinationId:
        type: string
      heldAway:
        type: boolean
      marketValue:
        format: double
        type: number
      symbol:
        type: string
      valuationDate:
        format: date-time
        type: string
    type: object
  Advicent.DomainLogic.Models.IAccountWithHoldingsDomainObject:
    properties:
      accountHoldings:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IAccountHoldingDomainObject'
        type: array
      accountId:
        format: int32
        type: integer
      accountType:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      externalSourceName:
        type: string
      factFinderId:
        format: int32
        type: integer
      lastUpdated:
        format: date-time
        type: string
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Head1
          - Head2
          - Joint
          - FamilyMember
          - Other
        type: string
      ownerDependentId:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.ICriticalIllnessInsurancePolicyDomainObject:
    properties:
      benefit:
        format: double
        type: number
      criticalIllnessInsurancePolicyId:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    type: object
  Advicent.DomainLogic.Models.IDemographicsDependentDomainObject:
    properties:
      birthDate:
        format: date-time
        type: string
      demographicsId:
        format: int32
        type: integer
      dependentId:
        format: int32
        type: integer
      dependentOf:
        enum:
          - Head1
          - Head2
          - Joint
          - Other
        type: string
      externalDestinationId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      relationship:
        enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
        type: string
    type: object
  Advicent.DomainLogic.Models.IDemographicsWithDependentsDomainObject:
    properties:
      city:
        type: string
      created:
        format: date-time
        type: string
      demographicsId:
        format: int32
        type: integer
      dependents:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IDemographicsDependentDomainObject'
        type: array
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      factFinderId:
        format: int32
        type: integer
      head1:
        $ref: '#/definitions/Advicent.DomainLogic.Models.IFamilyHeadDomainObject'
      head2:
        $ref: '#/definitions/Advicent.DomainLogic.Models.IFamilyHeadDomainObject'
      jointAnalysis:
        type: boolean
      lockRetirement:
        type: boolean
      state:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.IDisabilityInsurancePolicyDomainObject:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        type: string
      disabilityInsurancePolicyId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.IEducationExpenseDomainObject:
    properties:
      annualCost:
        format: double
        type: number
      educationExpenseId:
        format: int32
        type: integer
      educationGoalId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      member:
        enum:
          - Head1
          - Head2
          - Dependent
        type: string
      memberDependentId:
        format: int32
        type: integer
      startYear:
        format: date-time
        type: string
      years:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.IEducationGoalWithExpensesDomainObject:
    properties:
      description:
        type: string
      educationExpenses:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IEducationExpenseDomainObject'
        type: array
      educationGoalId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      projectedCost:
        format: double
        type: number
    type: object
  Advicent.DomainLogic.Models.IExpenseDomainObject:
    properties:
      annualPeriod:
        format: int32
        type: integer
      description:
        type: string
      endDate:
        format: date-time
        type: string
      expenseAmount:
        format: double
        type: number
      expenseId:
        format: int32
        type: integer
      expenseTypeId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.DomainLogic.Models.IFactFinderDefinedBenefitPensionDomainObject:
    properties:
      definedBenefitPensionId:
        format: int32
        readOnly: true
        type: integer
      description:
        readOnly: true
        type: string
      estimatedAmount:
        format: double
        readOnly: true
        type: number
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        readOnly: true
        type: integer
      member:
        enum:
          - Client
          - CoClient
        readOnly: true
        type: string
      startDate:
        format: date-time
        readOnly: true
        type: string
    type: object
  Advicent.DomainLogic.Models.IFactFinderLiabilityDomainObject:
    properties:
      balance:
        format: double
        type: number
      balanceAsOfDate:
        format: date-time
        type: string
      description:
        type: string
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      importSource:
        type: string
      interestRate:
        format: double
        type: number
      lastUpdated:
        format: date-time
        type: string
      liabilityId:
        format: int32
        type: integer
      liabilityType:
        format: int32
        type: integer
      loanDate:
        format: date-time
        type: string
      originalPrincipal:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      payment:
        format: double
        type: number
      paymentType:
        enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
        type: string
    type: object
  Advicent.DomainLogic.Models.IFactFinderLifestyleAssetDomainObject:
    properties:
      description:
        readOnly: true
        type: string
      externalDestinationId:
        readOnly: true
        type: string
      factFinderId:
        format: int32
        readOnly: true
        type: integer
      lifestyleAssetId:
        format: int32
        readOnly: true
        type: integer
      marketValue:
        format: double
        readOnly: true
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        readOnly: true
        type: string
      purchaseAmount:
        format: double
        readOnly: true
        type: number
      purchaseDate:
        format: date-time
        readOnly: true
        type: string
      type:
        format: int32
        readOnly: true
        type: integer
    type: object
  Advicent.DomainLogic.Models.IFamilyHeadDomainObject:
    properties:
      alreadyRetired:
        type: boolean
      birthDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      firstName:
        type: string
      gender:
        enum:
          - Male
          - Female
        type: string
      lastName:
        type: string
      taxFilingStatus:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.IIncomeDomainObject:
    properties:
      annualAmount:
        format: double
        type: number
      description:
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      incomeId:
        format: int32
        type: integer
      incomeTypeId:
        format: int32
        type: integer
      owner:
        enum:
          - Client
          - CoClient
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.DomainLogic.Models.ILifeInsurancePolicyDomainObject:
    properties:
      beneficiary:
        enum:
          - Client
          - CoClient
          - Dependent
          - Other
        type: string
      beneficiaryDependentId:
        format: int32
        type: integer
      benefit:
        format: double
        type: number
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
        type: string
      lifeInsurancePolicyId:
        format: int32
        type: integer
      payer:
        enum:
          - Client
          - CoClient
          - Joint
          - Other
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    type: object
  Advicent.DomainLogic.Models.ILongTermCareInsurancePolicyDomainObject:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      longTermCareInsurancePolicyId:
        format: int32
        type: integer
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    type: object
  Advicent.DomainLogic.Models.IMajorPurchaseGoalDomainObject:
    properties:
      amount:
        format: double
        readOnly: true
        type: number
      description:
        readOnly: true
        type: string
      externalDestinationId:
        readOnly: true
        type: string
      factFinderId:
        format: int32
        readOnly: true
        type: integer
      majorPurchaseGoalId:
        format: int32
        readOnly: true
        type: integer
      majorPurchaseGoalTypeId:
        format: int32
        readOnly: true
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        readOnly: true
        type: string
      targetDate:
        format: date-time
        readOnly: true
        type: string
    type: object
  Advicent.DomainLogic.Models.IRealEstateAssetDomainObject:
    properties:
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      purchaseAmount:
        format: double
        type: number
      purchaseDate:
        format: date-time
        type: string
      realEstateAssetId:
        format: int32
        type: integer
      rentalIncome:
        format: double
        type: number
    type: object
  Advicent.DomainLogic.Models.IRetirementExpenseDomainObject:
    properties:
      amount:
        format: double
        type: number
      annualPeriod:
        format: int32
        type: integer
      description:
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      frequency:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      retirementExpenseId:
        format: int32
        type: integer
      retirementGoalId:
        format: int32
        type: integer
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.DomainLogic.Models.IRetirementGoalWithExpensesDomainObject:
    properties:
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      head1RetirementDate:
        format: date-time
        type: string
      head2RetirementDate:
        format: date-time
        type: string
      retirementExpenses:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IRetirementExpenseDomainObject'
        type: array
      retirementGoalId:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.AccountHoldingModel:
    properties:
      costBasis:
        format: double
        type: number
      cusip:
        maxLength: 31
        minLength: 0
        type: string
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      marketValue:
        format: double
        type: number
      symbol:
        maxLength: 31
        minLength: 0
        type: string
      valuationDate:
        format: date-time
        type: string
    required:
      - description
    type: object
  Advicent.FactFinderService.Models.AccountHoldingWithIdModel:
    properties:
      accountHoldingId:
        format: int32
        type: integer
      accountId:
        format: int32
        type: integer
      costBasis:
        format: double
        type: number
      cusip:
        type: string
      description:
        type: string
      externalDestinationId:
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      marketValue:
        format: double
        type: number
      symbol:
        type: string
      valuationDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.AccountModel:
    properties:
      accountType:
        format: int32
        type: integer
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      externalSourceId:
        maxLength: 64
        minLength: 0
        type: string
      externalSourceName:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      holdings:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.AccountHoldingModel'
        type: array
      lastUpdated:
        format: date-time
        type: string
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Head1
          - Head2
          - Joint
          - FamilyMember
          - Other
        type: string
      ownerDependentId:
        format: int32
        type: integer
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.AccountTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.AccountTypesModel:
    properties:
      accountTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.AccountTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.AccountWithIdModel:
    properties:
      accountId:
        format: int32
        type: integer
      accountType:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      externalSourceName:
        type: string
      factFinderId:
        format: int32
        type: integer
      lastUpdated:
        format: date-time
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Head1
          - Head2
          - Joint
          - FamilyMember
          - Other
        type: string
      ownerDependentId:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.AccountsModel:
    properties:
      accounts:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.AccountWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.ClientModel:
    properties:
      clientId:
        format: int32
        type: integer
      message:
        type: string
      ownerUser:
        type: string
      planId:
        format: int32
        type: integer
      success:
        type: boolean
    type: object
  Advicent.FactFinderService.Models.ClientsModel:
    properties:
      externalDestinationName:
        maxLength: 49
        minLength: 0
        type: string
      externalSystem:
        enum:
          - Naviplan
        type: string
      factFinderId:
        format: int32
        type: integer
      planAction:
        enum:
          - New
          - Duplicate
          - Project
        type: string
    required:
      - factFinderId
      - externalSystem
      - planAction
    type: object
  Advicent.FactFinderService.Models.CriticalIllnessInsurancePoliciesModel:
    properties:
      criticalIllnessInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyModel:
    properties:
      benefit:
        format: double
        type: number
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypesModel:
    properties:
      insurancePolicyTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel:
    properties:
      benefit:
        format: double
        type: number
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insurancePolicyId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    type: object
  Advicent.FactFinderService.Models.DefinedBenefitPensionModel:
    properties:
      description:
        maxLength: 255
        minLength: 0
        type: string
      estimatedAmount:
        format: double
        type: number
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      member:
        enum:
          - Client
          - CoClient
        type: string
      startDate:
        format: date-time
        type: string
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.DefinedBenefitPensionWithIdModel:
    properties:
      definedBenefitPensionId:
        format: int32
        type: integer
      description:
        type: string
      estimatedAmount:
        format: double
        type: number
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      member:
        enum:
          - Client
          - CoClient
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.DefinedBenefitPensionsModel:
    properties:
      definedBenefitPensions:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.DefinedBenefitPensionWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.DemographicsDependentModel:
    properties:
      birthDate:
        format: date-time
        type: string
      dependentOf:
        enum:
          - Head1
          - Head2
          - Joint
          - Other
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      firstName:
        maxLength: 255
        minLength: 0
        type: string
      lastName:
        maxLength: 255
        minLength: 0
        type: string
      relationship:
        enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
        type: string
    required:
      - firstName
      - lastName
      - birthDate
      - relationship
      - dependentOf
    type: object
  Advicent.FactFinderService.Models.DemographicsDependentWithIdModel:
    properties:
      birthDate:
        format: date-time
        type: string
      demographicsId:
        format: int32
        type: integer
      dependentId:
        format: int32
        type: integer
      dependentOf:
        enum:
          - Head1
          - Head2
          - Joint
          - Other
        type: string
      externalDestinationId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      relationship:
        enum:
          - Son
          - Daughter
          - FosterSon
          - FosterDaughter
          - Grandson
          - Granddaughter
          - Nephew
          - Niece
          - MaleCousin
          - FemaleCousin
          - Father
          - Mother
          - Grandfather
          - Grandmother
          - Uncle
          - Aunt
          - Brother
          - Sister
          - SonInLaw
          - DaughterInLaw
          - MaleOther
          - FemaleOther
        type: string
    type: object
  Advicent.FactFinderService.Models.DemographicsDependentsModel:
    properties:
      dependents:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.DemographicsDependentWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.DemographicsModel:
    properties:
      city:
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      externalSourceId:
        type: string
      factFinderId:
        format: int32
        type: integer
      head1:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FamilyHeadModel'
      head2:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FamilyHeadModel'
      jointAnalysis:
        type: boolean
      state:
        format: int32
        type: integer
    required:
      - jointAnalysis
      - head1
      - factFinderId
      - city
      - state
    type: object
  Advicent.FactFinderService.Models.DemographicsWithIdModel:
    properties:
      city:
        type: string
      created:
        format: date-time
        type: string
      demographicsId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      factFinderId:
        format: int32
        type: integer
      head1:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FamilyHeadModel'
      head2:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FamilyHeadModel'
      jointAnalysis:
        type: boolean
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      lockRetirement:
        type: boolean
      state:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.DisabilityInsurancePoliciesModel:
    properties:
      disabilityInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.DisabilityInsurancePolicyModel:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypesModel:
    properties:
      insurancePolicyTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      insurancePolicyId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.EducationExpenseModel:
    properties:
      annualCost:
        format: double
        type: number
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      member:
        enum:
          - Head1
          - Head2
          - Dependent
        type: string
      memberDependentId:
        format: int32
        type: integer
      startYear:
        format: date-time
        type: string
      years:
        format: int32
        maximum: 99
        minimum: 1
        type: integer
    type: object
  Advicent.FactFinderService.Models.EducationExpenseWithIdModel:
    properties:
      annualCost:
        format: double
        type: number
      educationExpenseId:
        format: int32
        type: integer
      educationGoalId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      member:
        enum:
          - Head1
          - Head2
          - Dependent
        type: string
      memberDependentId:
        format: int32
        type: integer
      startYear:
        format: date-time
        type: string
      years:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.EducationExpensesModel:
    properties:
      educationExpenses:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.EducationExpenseWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.EducationGoalModel:
    properties:
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      projectedCost:
        format: double
        type: number
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.EducationGoalWithIdModel:
    properties:
      description:
        type: string
      educationGoalId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      projectedCost:
        format: double
        type: number
    type: object
  Advicent.FactFinderService.Models.EducationGoalsModel:
    properties:
      educationGoals:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.EducationGoalWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.ExpenseModel:
    properties:
      annualPeriod:
        format: int32
        maximum: 99
        minimum: 1
        type: integer
      description:
        maxLength: 255
        minLength: 0
        type: string
      endDate:
        format: date-time
        type: string
      expenseAmount:
        format: double
        type: number
      expenseTypeId:
        format: int32
        type: integer
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      startDate:
        format: date-time
        type: string
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.ExpenseTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.ExpenseTypesModel:
    properties:
      expenseTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.ExpenseWithIdModel:
    properties:
      annualPeriod:
        format: int32
        type: integer
      description:
        type: string
      endDate:
        format: date-time
        type: string
      expenseAmount:
        format: double
        type: number
      expenseId:
        format: int32
        type: integer
      expenseTypeId:
        format: int32
        type: integer
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.ExpensesModel:
    properties:
      expenses:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.ExpenseWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.FactFinderModel:
    properties:
      countryCode:
        enum:
          - UnitedStates
          - Canada
        type: string
      factFinderUserId:
        format: int32
        type: integer
      modules:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleModel'
        type: array
      status:
        enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
        type: string
    required:
      - factFinderUserId
    type: object
  Advicent.FactFinderService.Models.FactFinderModuleModel:
    properties:
      available:
        type: boolean
      moduleName:
        enum:
          - Demographics
          - Assets
          - Liabilities
          - Incomes
          - Expenses
          - Insurance
          - Retirement
          - Education
          - MajorPurchase
        type: string
      visited:
        type: boolean
    required:
      - moduleName
    type: object
  Advicent.FactFinderService.Models.FactFinderModuleWithIdModel:
    properties:
      available:
        type: boolean
      factFinderId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      moduleId:
        format: int32
        type: integer
      moduleName:
        enum:
          - Demographics
          - Assets
          - Liabilities
          - Incomes
          - Expenses
          - Insurance
          - Retirement
          - Education
          - MajorPurchase
        type: string
      visited:
        type: boolean
    type: object
  Advicent.FactFinderService.Models.FactFinderModulesModel:
    properties:
      factFinderModules:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.FactFinderSnapshotModel:
    properties:
      accounts:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IAccountWithHoldingsDomainObject'
        type: array
      criticalIllnessInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.ICriticalIllnessInsurancePolicyDomainObject'
        type: array
      definedBenefitPensions:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IFactFinderDefinedBenefitPensionDomainObject'
        type: array
      demographics:
        $ref: '#/definitions/Advicent.DomainLogic.Models.IDemographicsWithDependentsDomainObject'
      disabilityInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IDisabilityInsurancePolicyDomainObject'
        type: array
      educationGoals:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IEducationGoalWithExpensesDomainObject'
        type: array
      expenses:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IExpenseDomainObject'
        type: array
      incomes:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IIncomeDomainObject'
        type: array
      liabilities:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IFactFinderLiabilityDomainObject'
        type: array
      lifeInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.ILifeInsurancePolicyDomainObject'
        type: array
      lifestyleAssets:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IFactFinderLifestyleAssetDomainObject'
        type: array
      longTermCareInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.ILongTermCareInsurancePolicyDomainObject'
        type: array
      majorPurchaseGoals:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IMajorPurchaseGoalDomainObject'
        type: array
      planYear:
        format: int32
        type: integer
      realEstateAssets:
        items:
          $ref: '#/definitions/Advicent.DomainLogic.Models.IRealEstateAssetDomainObject'
        type: array
      retirementGoal:
        $ref: '#/definitions/Advicent.DomainLogic.Models.IRetirementGoalWithExpensesDomainObject'
    type: object
  Advicent.FactFinderService.Models.FactFinderUserModel:
    properties:
      userGuid:
        type: string
      userName:
        type: string
    required:
      - userName
      - userGuid
    type: object
  Advicent.FactFinderService.Models.FactFinderUserWithIdModel:
    properties:
      email:
        type: string
      factFinderUserId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      userGuid:
        type: string
      userName:
        type: string
    type: object
  Advicent.FactFinderService.Models.FactFinderWithExternalIdModel:
    properties:
      countryCode:
        enum:
          - UnitedStates
          - Canada
        type: string
      externalDemographicsSourceId:
        type: string
      externalId:
        type: string
      externalSystem:
        enum:
          - Naviplan
        type: string
      factFinderUserId:
        format: int32
        type: integer
      modules:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModuleModel'
        type: array
      status:
        enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
        type: string
    required:
      - factFinderUserId
    type: object
  Advicent.FactFinderService.Models.FactFinderWithIdModel:
    properties:
      countryCode:
        enum:
          - UnitedStates
          - Canada
        type: string
      created:
        format: date-time
        type: string
      externalId:
        type: string
      externalSystem:
        enum:
          - Naviplan
        type: string
      factFinderId:
        format: int32
        type: integer
      factFinderUserId:
        format: int32
        type: integer
      lastStatusUpdate:
        format: date-time
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      modules:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModulesModel'
      status:
        enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
        type: string
    type: object
  Advicent.FactFinderService.Models.FactFinderWithUserGuidModel:
    properties:
      countryCode:
        enum:
          - UnitedStates
          - Canada
        type: string
      created:
        format: date-time
        type: string
      externalId:
        type: string
      externalSystem:
        enum:
          - Naviplan
        type: string
      factFinderId:
        format: int32
        type: integer
      factFinderUserId:
        format: int32
        type: integer
      lastStatusUpdate:
        format: date-time
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      modules:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModulesModel'
      status:
        enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
        type: string
      userGuid:
        type: string
    type: object
  Advicent.FactFinderService.Models.FactFinderWithUserGuidsModel:
    properties:
      factFinderWithUserGuids:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithUserGuidModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.FactFinderWithUserNameModel:
    properties:
      countryCode:
        enum:
          - UnitedStates
          - Canada
        type: string
      created:
        format: date-time
        type: string
      externalId:
        type: string
      externalSystem:
        enum:
          - Naviplan
        type: string
      factFinderId:
        format: int32
        type: integer
      factFinderUserId:
        format: int32
        type: integer
      lastStatusUpdate:
        format: date-time
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      modules:
        $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderModulesModel'
      status:
        enum:
          - New
          - InProgress
          - ClientSubmitted
          - AdvisorAccepted
        type: string
      userName:
        type: string
    type: object
  Advicent.FactFinderService.Models.FactFindersWithUserNamesModel:
    properties:
      factFinderWithUserNames:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FactFinderWithUserNameModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.FamilyHeadModel:
    properties:
      alreadyRetired:
        type: boolean
      birthDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      firstName:
        maxLength: 255
        minLength: 0
        type: string
      gender:
        enum:
          - Male
          - Female
        type: string
      lastName:
        maxLength: 255
        minLength: 0
        type: string
      taxFilingStatus:
        format: int32
        type: integer
    required:
      - firstName
      - lastName
      - birthDate
      - gender
      - taxFilingStatus
      - alreadyRetired
    type: object
  Advicent.FactFinderService.Models.FilingStatusTypeModel:
    properties:
      filingStatusTypeId:
        format: int32
        type: integer
      filingStatusTypeName:
        type: string
      hasJointDependent:
        type: boolean
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      partnerStatuses:
        items:
          format: int32
          type: integer
        type: array
      validForSingleAnalysis:
        type: boolean
    type: object
  Advicent.FactFinderService.Models.FilingStatusTypesModel:
    properties:
      filingStatusTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FilingStatusTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.FrequencyTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.FrequencyTypesModel:
    properties:
      frequencyTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.FrequencyTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.IncomeModel:
    properties:
      annualAmount:
        format: double
        type: number
      description:
        maxLength: 255
        minLength: 0
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      incomeTypeId:
        format: int32
        type: integer
      owner:
        enum:
          - Client
          - CoClient
        type: string
      startDate:
        format: date-time
        type: string
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.IncomeTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.IncomeTypesModel:
    properties:
      incomeTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.IncomeWithIdModel:
    properties:
      annualAmount:
        format: double
        type: number
      description:
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      incomeId:
        format: int32
        type: integer
      incomeTypeId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      owner:
        enum:
          - Client
          - CoClient
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.IncomesModel:
    properties:
      incomes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.IncomeWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LiabilitiesModel:
    properties:
      liabilities:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LiabilityModel:
    properties:
      balance:
        format: double
        type: number
      balanceAsOfDate:
        format: date-time
        type: string
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      externalSourceId:
        maxLength: 64
        minLength: 0
        type: string
      externalSourceName:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      interestRate:
        format: double
        maximum: 50
        minimum: 0
        type: number
      lastUpdated:
        format: date-time
        type: string
      liabilityType:
        format: int32
        type: integer
      loanDate:
        format: date-time
        type: string
      originalPrincipal:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      payment:
        format: double
        type: number
      paymentType:
        enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
        type: string
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.LiabilityTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.LiabilityTypesModel:
    properties:
      liabilityTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LiabilityTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LiabilityWithIdModel:
    properties:
      balance:
        format: double
        type: number
      balanceAsOfDate:
        format: date-time
        type: string
      description:
        type: string
      externalDestinationId:
        type: string
      externalSourceId:
        type: string
      externalSourceName:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      interestRate:
        format: double
        type: number
      lastUpdated:
        format: date-time
        type: string
      liabilityId:
        format: int32
        type: integer
      liabilityType:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      loanDate:
        format: date-time
        type: string
      originalPrincipal:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      payment:
        format: double
        type: number
      paymentType:
        enum:
          - InterestOnly
          - PrincipalAndInterest
          - SetPrincipal
          - LastPeriod
        type: string
    type: object
  Advicent.FactFinderService.Models.LifeInsurancePoliciesModel:
    properties:
      lifeInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LifeInsurancePolicyModel:
    properties:
      beneficiary:
        enum:
          - Client
          - CoClient
          - Dependent
          - Other
        type: string
      beneficiaryDependentId:
        format: int32
        type: integer
      benefit:
        format: double
        type: number
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
        type: string
      payer:
        enum:
          - Client
          - CoClient
          - Joint
          - Other
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.LifeInsurancePolicyTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.LifeInsurancePolicyTypesModel:
    properties:
      insurancePolicyTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LifeInsurancePolicyTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel:
    properties:
      beneficiary:
        enum:
          - Client
          - CoClient
          - Dependent
          - Other
        type: string
      beneficiaryDependentId:
        format: int32
        type: integer
      benefit:
        format: double
        type: number
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      insurancePolicyId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
          - FirstToDie
          - SecondToDie
          - Other
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      payer:
        enum:
          - Client
          - CoClient
          - Joint
          - Other
        type: string
      policyType:
        format: int32
        type: integer
      premium:
        format: double
        type: number
    type: object
  Advicent.FactFinderService.Models.LifestyleAssetModel:
    properties:
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      purchaseAmount:
        format: double
        type: number
      purchaseDate:
        format: date-time
        type: string
      type:
        format: int32
        type: integer
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.LifestyleAssetTypeModel:
    properties:
      id:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      name:
        type: string
    type: object
  Advicent.FactFinderService.Models.LifestyleAssetTypesModel:
    properties:
      lifestyleAssetTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LifestyleAssetWithIdModel:
    properties:
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      lifestyleAssetId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      purchaseAmount:
        format: double
        type: number
      purchaseDate:
        format: date-time
        type: string
      type:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.LifestyleAssetsModel:
    properties:
      lifestyleAssets:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LifestyleAssetWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LongTermCareInsurancePoliciesModel:
    properties:
      longTermCareInsurancePolicies:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.LongTermCareInsurancePolicyWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.LongTermCareInsurancePolicyModel:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.LongTermCareInsurancePolicyWithIdModel:
    properties:
      benefit:
        format: double
        type: number
      benefitFrequency:
        format: int32
        type: integer
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      insurancePolicyId:
        format: int32
        type: integer
      insured:
        enum:
          - Client
          - CoClient
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      premium:
        format: double
        type: number
      premiumFrequency:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.MajorPurchaseGoalModel:
    properties:
      amount:
        format: double
        type: number
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      majorPurchaseGoalTypeId:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      targetDate:
        format: date-time
        type: string
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.MajorPurchaseGoalTypeModel:
    properties:
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      majorPurchaseGoalTypeId:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.MajorPurchaseGoalTypesModel:
    properties:
      majorPurchaseGoalTypes:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalTypeModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel:
    properties:
      amount:
        format: double
        type: number
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      majorPurchaseGoalId:
        format: int32
        type: integer
      majorPurchaseGoalTypeId:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      targetDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.MajorPurchaseGoalsModel:
    properties:
      majorPurchaseGoals:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.RealEstateAssetModel:
    properties:
      description:
        maxLength: 255
        minLength: 0
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      purchaseAmount:
        format: double
        type: number
      purchaseDate:
        format: date-time
        type: string
      rentalIncome:
        format: double
        type: number
    required:
      - factFinderId
      - description
    type: object
  Advicent.FactFinderService.Models.RealEstateAssetWithIdModel:
    properties:
      description:
        type: string
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      frequency:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      marketValue:
        format: double
        type: number
      owner:
        enum:
          - Client
          - CoClient
          - Joint
        type: string
      purchaseAmount:
        format: double
        type: number
      purchaseDate:
        format: date-time
        type: string
      realEstateAssetId:
        format: int32
        type: integer
      rentalIncome:
        format: double
        type: number
    type: object
  Advicent.FactFinderService.Models.RealEstateAssetsModel:
    properties:
      realEstateAssets:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.RealEstateAssetWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.RetirementExpenseModel:
    properties:
      amount:
        format: double
        type: number
      annualPeriod:
        format: int32
        maximum: 99
        minimum: 1
        type: integer
      description:
        maxLength: 255
        minLength: 0
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      frequency:
        format: int32
        type: integer
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      startDate:
        format: date-time
        type: string
    required:
      - description
    type: object
  Advicent.FactFinderService.Models.RetirementExpenseWithIdModel:
    properties:
      amount:
        format: double
        type: number
      annualPeriod:
        format: int32
        type: integer
      description:
        type: string
      endDate:
        format: date-time
        type: string
      externalDestinationId:
        type: string
      frequency:
        format: int32
        type: integer
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      member:
        enum:
          - Head1
          - Head2
          - Joint
        type: string
      retirementExpenseId:
        format: int32
        type: integer
      retirementGoalId:
        format: int32
        type: integer
      startDate:
        format: date-time
        type: string
    type: object
  Advicent.FactFinderService.Models.RetirementExpensesModel:
    properties:
      retirementExpenses:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementExpenseWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.RetirementGoalModel:
    properties:
      externalDestinationId:
        maxLength: 64
        minLength: 0
        type: string
      factFinderId:
        format: int32
        type: integer
      head1RetirementDate:
        format: date-time
        type: string
      head2RetirementDate:
        format: date-time
        type: string
    required:
      - factFinderId
    type: object
  Advicent.FactFinderService.Models.RetirementGoalWithIdModel:
    properties:
      externalDestinationId:
        type: string
      factFinderId:
        format: int32
        type: integer
      head1RetirementDate:
        format: date-time
        type: string
      head2RetirementDate:
        format: date-time
        type: string
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      retirementGoalId:
        format: int32
        type: integer
    type: object
  Advicent.FactFinderService.Models.RetirementGoalsModel:
    properties:
      retirementGoals:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.RetirementGoalWithIdModel'
        type: array
    type: object
  Advicent.FactFinderService.Models.ServiceInformationModel:
    properties:
      name:
        type: string
      schemaVersion:
        format: int32
        type: integer
      serviceVersion:
        type: string
      status:
        type: string
    type: object
  Advicent.FactFinderService.Models.StateProvinceModel:
    properties:
      links:
        items:
          $ref: '#/definitions/Advicent.Web.Base.Links.ObjectLink'
        type: array
      stateProvinceId:
        format: int32
        type: integer
      stateProvinceName:
        type: string
    type: object
  Advicent.FactFinderService.Models.StatesProvincesModel:
    properties:
      statesProvinces:
        items:
          $ref: '#/definitions/Advicent.FactFinderService.Models.StateProvinceModel'
        type: array
    type: object
  Advicent.Web.Base.Links.ObjectLink:
    properties:
      href:
        type: string
      rel:
        type: string
    type: object
  System.Object:
    properties: {}
    type: object
