swagger: '2.0'
info:
  version: '2013-01-01'
  x-release: v4
  title: Amazon CloudSearch Domain
  description: '<p>You use the AmazonCloudSearch2013 API to upload documents to a search domain and search those documents. </p> <p>The endpoints for submitting <code>UploadDocuments</code>, <code>Search</code>, and <code>Suggest</code> requests are domain-specific. To get the endpoints for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. The domain endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. You submit suggest requests to the search endpoint. </p> <p>For more information, see the <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide">Amazon CloudSearch Developer Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: cloudsearchdomain
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/cloudsearchdomain-2013-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/cloudsearchdomain/'
host: cloudsearchdomain.amazonaws.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /2013-01-01/search?format=sdk&pretty=true:
    get:
      operationId: Search
      description: '<p>Retrieves a list of documents that match the specified search criteria. How you specify the search criteria depends on which query parser you use. Amazon CloudSearch supports four query parsers:</p> <ul> <li><code>simple</code>: search all <code>text</code> and <code>text-array</code> fields for the specified string. Search for phrases, individual terms, and prefixes. </li> <li><code>structured</code>: search specific fields, construct compound queries using Boolean operators, and use advanced features such as term boosting and proximity searching.</li> <li><code>lucene</code>: specify search criteria using the Apache Lucene query parser syntax.</li> <li><code>dismax</code>: specify search criteria using the simplified subset of the Apache Lucene query parser syntax defined by the DisMax query parser.</li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching.html">Searching Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>.</p> <p>The endpoint for submitting <code>Search</code> requests is domain-specific. You submit search requests to a domain''s search endpoint. To get the search endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain''s endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResponse'
        '480':
          description: SearchException
          schema:
            $ref: '#/definitions/SearchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-01-01/suggest?format=sdk&pretty=true:
    get:
      operationId: Suggest
      description: '<p>Retrieves autocomplete suggestions for a partial query string. You can use suggestions enable you to display likely matches before users finish typing. In Amazon CloudSearch, suggestions are based on the contents of a particular text field. When you request suggestions, Amazon CloudSearch finds all of the documents whose values in the suggester field start with the specified query string. The beginning of the field must match the query string to be considered a match. </p> <p>For more information about configuring suggesters and retrieving suggestions, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html">Getting Suggestions</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p> <p>The endpoint for submitting <code>Suggest</code> requests is domain-specific. You submit suggest requests to a domain''s search endpoint. To get the search endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain''s endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuggestResponse'
        '480':
          description: SearchException
          schema:
            $ref: '#/definitions/SearchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SuggestRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-01-01/documents/batch?format=sdk:
    post:
      operationId: UploadDocuments
      description: '<p>Posts a batch of documents to a search domain for indexing. A document batch is a collection of add and delete operations that represent the documents you want to add, update, or delete from your domain. Batches can be described in either JSON or XML. Each item that you want Amazon CloudSearch to return as a search result (such as a product) is represented as a document. Every document has a unique ID and one or more fields that contain the data that you want to search and return in results. Individual documents cannot contain more than 1 MB of data. The entire batch cannot exceed 5 MB. To get the best possible upload performance, group add and delete operations in batches that are close the 5 MB limit. Submitting a large volume of single-document batches can overload a domain''s document service. </p> <p>The endpoint for submitting <code>UploadDocuments</code> requests is domain-specific. To get the document endpoint for your domain, use the Amazon CloudSearch configuration service <code>DescribeDomains</code> action. A domain''s endpoints are also displayed on the domain dashboard in the Amazon CloudSearch console. </p> <p>For more information about formatting your data for Amazon CloudSearch, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/preparing-data.html">Preparing Your Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. For more information about uploading data for indexing, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/uploading-data.html">Uploading Data</a> in the <i>Amazon CloudSearch Developer Guide</i>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadDocumentsResponse'
        '480':
          description: DocumentServiceException
          schema:
            $ref: '#/definitions/DocumentServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadDocumentsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  SearchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/SearchStatus'
        description: The status information returned for the search request.
      hits:
        $ref: '#/definitions/Hits'
        description: The documents that match the search criteria.
      facets:
        $ref: '#/definitions/Facets'
        description: The requested facet information.
      stats:
        $ref: '#/definitions/Stats'
        description: The requested field statistics information.
    description: 'The result of a <code>Search</code> request. Contains the documents that match the specified search criteria and any requested fields, highlights, and facet information.'
  SearchRequest:
    type: object
    properties: {}
    description: Container for the parameters to the <code>Search</code> request.
  SearchException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
        description: A description of the error returned by the search service.
    description: Information about any problems encountered while processing a search request.
  SuggestResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/SuggestStatus'
        description: The status of a <code>SuggestRequest</code>. Contains the resource ID (<code>rid</code>) and how long it took to process the request (<code>timems</code>).
      suggest:
        $ref: '#/definitions/SuggestModel'
        description: Container for the matching search suggestion information.
    description: Contains the response to a <code>Suggest</code> request.
  SuggestRequest:
    type: object
    properties: {}
    description: Container for the parameters to the <code>Suggest</code> request.
  UploadDocumentsResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/String'
        description: The status of an <code>UploadDocumentsRequest</code>.
      adds:
        $ref: '#/definitions/Adds'
        description: The number of documents that were added to the search domain.
      deletes:
        $ref: '#/definitions/Deletes'
        description: The number of documents that were deleted from the search domain.
      warnings:
        $ref: '#/definitions/DocumentServiceWarnings'
        description: Any warnings returned by the document service about the documents being uploaded.
    description: Contains the response to an <code>UploadDocuments</code> request.
  UploadDocumentsRequest:
    type: object
    required:
      - documents
    properties:
      documents:
        $ref: '#/definitions/Blob'
        description: A batch of documents formatted in JSON or HTML.
    description: Container for the parameters to the <code>UploadDocuments</code> request.
  DocumentServiceException:
    type: object
    properties:
      status:
        $ref: '#/definitions/String'
        description: 'The return status of a document upload request, <code>error</code> or <code>success</code>.'
      message:
        $ref: '#/definitions/String'
        description: The description of the errors returned by the document service.
    description: Information about any problems encountered while processing an upload request.
  Adds:
    type: integer
  Blob:
    type: string
  String:
    type: string
  Long:
    type: integer
  Bucket:
    type: object
    properties:
      value:
        $ref: '#/definitions/String'
        description: The facet value being counted.
      count:
        $ref: '#/definitions/Long'
        description: The number of hits that contain the facet value in the specified facet field.
    description: 'A container for facet information. '
  BucketList:
    type: array
    items:
      $ref: '#/definitions/Bucket'
  BucketInfo:
    type: object
    properties:
      buckets:
        $ref: '#/definitions/BucketList'
        description: A list of the calculated facet values and counts.
    description: A container for the calculated facet values and counts.
  ContentType:
    type: string
    enum:
      - application/json
      - application/xml
  Cursor:
    type: string
  Deletes:
    type: integer
  DocumentServiceWarning:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
        description: The description for a warning returned by the document service.
    description: A warning returned by the document service when an issue is discovered while processing an upload request.
  DocumentServiceWarnings:
    type: array
    items:
      $ref: '#/definitions/DocumentServiceWarning'
  Double:
    type: number
    format: double
  Expr:
    type: string
  Exprs:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  Facet:
    type: string
  Facets:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/BucketInfo'
  FieldStats:
    type: object
    properties:
      min:
        $ref: '#/definitions/String'
        description: '<p>The minimum value found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>min</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>min</code> is the string representation of a date with the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>'
      max:
        $ref: '#/definitions/String'
        description: '<p>The maximum value found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>max</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>max</code> is the string representation of a date with the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>'
      count:
        $ref: '#/definitions/Long'
        description: The number of documents that contain a value in the specified field in the result set.
      missing:
        $ref: '#/definitions/Long'
        description: The number of documents that do not contain a value in the specified field in the result set.
      sum:
        $ref: '#/definitions/Double'
        description: The sum of the field values across the documents in the result set. <code>null</code> for date fields.
      sumOfSquares:
        $ref: '#/definitions/Double'
        description: The sum of all field values in the result set squared.
      mean:
        $ref: '#/definitions/String'
        description: '<p>The average of the values found in the specified field in the result set.</p> <p>If the field is numeric (<code>int</code>, <code>int-array</code>, <code>double</code>, or <code>double-array</code>), <code>mean</code> is the string representation of a double-precision 64-bit floating point value. If the field is <code>date</code> or <code>date-array</code>, <code>mean</code> is the string representation of a date with the format specified in <a href="http://tools.ietf.org/html/rfc3339">IETF RFC3339</a>: yyyy-mm-ddTHH:mm:ss.SSSZ.</p>'
      stddev:
        $ref: '#/definitions/Double'
        description: The standard deviation of the values in the specified field in the result set.
    description: The statistics for a field calculated in the request.
  FieldValue:
    type: array
    items:
      $ref: '#/definitions/String'
  Fields:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/FieldValue'
  FilterQuery:
    type: string
  Highlight:
    type: string
  Highlights:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  Hit:
    type: object
    properties:
      id:
        $ref: '#/definitions/String'
        description: The document ID of a document that matches the search request.
      fields:
        $ref: '#/definitions/Fields'
        description: The fields returned from a document that matches the search request.
      exprs:
        $ref: '#/definitions/Exprs'
        description: The expressions returned from a document that matches the search request.
      highlights:
        $ref: '#/definitions/Highlights'
        description: The highlights returned from a document that matches the search request.
    description: Information about a document that matches the search request.
  HitList:
    type: array
    items:
      $ref: '#/definitions/Hit'
  Hits:
    type: object
    properties:
      found:
        $ref: '#/definitions/Long'
        description: The total number of documents that match the search request.
      start:
        $ref: '#/definitions/Long'
        description: The index of the first matching document.
      cursor:
        $ref: '#/definitions/String'
        description: A cursor that can be used to retrieve the next set of matching documents when you want to page through a large result set.
      hit:
        $ref: '#/definitions/HitList'
        description: A document that matches the search request.
    description: The collection of documents that match the search request.
  Partial:
    type: boolean
  Query:
    type: string
  QueryOptions:
    type: string
  QueryParser:
    type: string
    enum:
      - simple
      - structured
      - lucene
      - dismax
  Return:
    type: string
  Size:
    type: integer
  Sort:
    type: string
  Start:
    type: integer
  Stat:
    type: string
  SearchStatus:
    type: object
    properties:
      timems:
        $ref: '#/definitions/Long'
        description: 'How long it took to process the request, in milliseconds.'
      rid:
        $ref: '#/definitions/String'
        description: The encrypted resource ID for the request.
    description: Contains the resource id (<code>rid</code>) and the time it took to process the request (<code>timems</code>).
  Stats:
    type: array
    description: The statistics calculated in the request.
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/FieldStats'
  Suggestions:
    type: array
    items:
      $ref: '#/definitions/SuggestionMatch'
  SuggestModel:
    type: object
    properties:
      query:
        $ref: '#/definitions/String'
        description: The query string specified in the suggest request.
      found:
        $ref: '#/definitions/Long'
        description: The number of documents that were found to match the query string.
      suggestions:
        $ref: '#/definitions/Suggestions'
        description: The documents that match the query string.
    description: Container for the suggestion information returned in a <code>SuggestResponse</code>.
  Suggester:
    type: string
  SuggestionsSize:
    type: integer
  SuggestStatus:
    type: object
    properties:
      timems:
        $ref: '#/definitions/Long'
        description: 'How long it took to process the request, in milliseconds.'
      rid:
        $ref: '#/definitions/String'
        description: The encrypted resource ID for the request.
    description: Contains the resource id (<code>rid</code>) and the time it took to process the request (<code>timems</code>).
  SuggestionMatch:
    type: object
    properties:
      suggestion:
        $ref: '#/definitions/String'
        description: 'The string that matches the query string specified in the <code>SuggestRequest</code>. '
      score:
        $ref: '#/definitions/Long'
        description: The relevance score of a suggested match.
      id:
        $ref: '#/definitions/String'
        description: The document ID of the suggested document.
    description: 'An autocomplete suggestion that matches the query string specified in a <code>SuggestRequest</code>. '
