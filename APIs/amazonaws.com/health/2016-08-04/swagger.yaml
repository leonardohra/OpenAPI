swagger: '2.0'
info:
  version: '2016-08-04'
  x-release: v4
  title: AWS Health APIs and Notifications
  description: '<fullname>AWS Health</fullname> <p>The AWS Health API provides programmatic access to the AWS Health information that is presented in the <a href="https://phd.aws.amazon.com/phd/home#/">AWS Personal Health Dashboard</a>. You can get information about events that affect your AWS resources:</p> <ul> <li> <p> <a>DescribeEvents</a>: Summary information about events.</p> </li> <li> <p> <a>DescribeEventDetails</a>: Detailed information about one or more events.</p> </li> <li> <p> <a>DescribeAffectedEntities</a>: Information about AWS resources that are affected by one or more events.</p> </li> </ul> <p>In addition, these operations provide information about event types and summary counts of events or affected entities:</p> <ul> <li> <p> <a>DescribeEventTypes</a>: Information about the kinds of events that AWS Health tracks.</p> </li> <li> <p> <a>DescribeEventAggregates</a>: A count of the number of events that meet specified criteria.</p> </li> <li> <p> <a>DescribeEntityAggregates</a>: A count of the number of affected entities that meet specified criteria.</p> </li> </ul> <p>The Health API requires a Business or Enterprise support plan from <a href="http://aws.amazon.com/premiumsupport/">AWS Support</a>. Calling the Health API from an account that does not have a Business or Enterprise support plan causes a <code>SubscriptionRequiredException</code>. </p> <p>For authentication of requests, AWS Health uses the <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.</p> <p>See the <a href="http://docs.aws.amazon.com/health/latest/ug/what-is-aws-health.html">AWS Health User Guide</a> for information about how to use the API.</p> <p> <b>Service Endpoint</b> </p> <p>The HTTP endpoint for the AWS Health API is:</p> <ul> <li> <p>https://health.us-east-1.amazonaws.com </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: health
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/health-2016-08-04.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/health/'
host: health.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: DescribeAffectedEntities
      description: '<p>Returns a list of entities that have been affected by the specified events, based on the specified filter criteria. Entities can refer to individual customer resources, groups of customer resources, or any other construct, depending on the AWS service. Events that have impact beyond that of the affected entities, or where the extent of impact is unknown, include at least one entity indicating this.</p> <p>At least one event ARN is required. Results are sorted by the <code>lastUpdatedTime</code> of the entity, starting with the most recent.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAffectedEntitiesResponse'
        '480':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          schema:
            $ref: '#/definitions/UnsupportedLocale'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAffectedEntitiesRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEntityAggregates':
    post:
      operationId: DescribeEntityAggregates
      description: 'Returns the number of entities that are affected by each of the specified events. If no events are specified, the counts of all affected entities are returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEntityAggregatesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEntityAggregatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventAggregates':
    post:
      operationId: DescribeEventAggregates
      description: 'Returns the number of events of each event type (issue, scheduled change, and account notification). If no filter is specified, the counts of all events in each category are returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventAggregatesResponse'
        '480':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventAggregatesRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventDetails':
    post:
      operationId: DescribeEventDetails
      description: '<p>Returns detailed information about one or more specified events. Information includes standard event data (region, service, etc., as returned by <a>DescribeEvents</a>), a detailed event description, and possible additional metadata that depends upon the nature of the event. Affected entities are not included; to retrieve those, use the <a>DescribeAffectedEntities</a> operation.</p> <p>If a specified event cannot be retrieved, an error message is returned for that event.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventDetailsResponse'
        '480':
          description: UnsupportedLocale
          schema:
            $ref: '#/definitions/UnsupportedLocale'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventDetailsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventTypes':
    post:
      operationId: DescribeEventTypes
      description: 'Returns the event types that meet the specified filter criteria. If no filter criteria are specified, all event types are returned, in no particular order.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventTypesResponse'
        '480':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          schema:
            $ref: '#/definitions/UnsupportedLocale'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventTypesRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: '<p>Returns information about events that meet the specified filter criteria. Events are returned in a summary form and do not include the detailed description, any additional metadata that depends on the event type, or any affected resources. To retrieve that information, use the <a>DescribeEventDetails</a> and <a>DescribeAffectedEntities</a> operations.</p> <p>If no filter criteria are specified, all events are returned. Results are sorted by <code>lastModifiedTime</code>, starting with the most recent.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventsResponse'
        '480':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
        '481':
          description: UnsupportedLocale
          schema:
            $ref: '#/definitions/UnsupportedLocale'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  DescribeAffectedEntitiesResponse:
    type: object
    properties:
      entities:
        $ref: '#/definitions/EntityList'
        description: The entities that match the filter criteria.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
  DescribeAffectedEntitiesRequest:
    type: object
    required:
      - filter
    properties:
      filter:
        $ref: '#/definitions/EntityFilter'
        description: 'Values to narrow the results returned. At least one event ARN is required. '
      locale:
        $ref: '#/definitions/locale'
        description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
      maxResults:
        $ref: '#/definitions/maxResults'
        description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
  InvalidPaginationToken:
    type: object
    properties:
      message:
        $ref: '#/definitions/string'
    description: The specified pagination token (<code>nextToken</code>) is not valid.
  UnsupportedLocale:
    type: object
    properties:
      message:
        $ref: '#/definitions/string'
    description: The specified locale is not supported.
  DescribeEntityAggregatesResponse:
    type: object
    properties:
      entityAggregates:
        $ref: '#/definitions/EntityAggregateList'
        description: The number of entities that are affected by each of the specified events.
  DescribeEntityAggregatesRequest:
    type: object
    properties:
      eventArns:
        $ref: '#/definitions/EventArnsList'
        description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
  DescribeEventAggregatesResponse:
    type: object
    properties:
      eventAggregates:
        $ref: '#/definitions/EventAggregateList'
        description: The number of events in each category that meet the optional filter criteria.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
  DescribeEventAggregatesRequest:
    type: object
    required:
      - aggregateField
    properties:
      filter:
        $ref: '#/definitions/EventFilter'
        description: Values to narrow the results returned.
      aggregateField:
        $ref: '#/definitions/eventAggregateField'
        description: The only currently supported value is <code>eventTypeCategory</code>.
      maxResults:
        $ref: '#/definitions/maxResults'
        description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
  DescribeEventDetailsResponse:
    type: object
    properties:
      successfulSet:
        $ref: '#/definitions/DescribeEventDetailsSuccessfulSet'
        description: Information about the events that could be retrieved.
      failedSet:
        $ref: '#/definitions/DescribeEventDetailsFailedSet'
        description: Error messages for any events that could not be retrieved.
  DescribeEventDetailsRequest:
    type: object
    required:
      - eventArns
    properties:
      eventArns:
        $ref: '#/definitions/eventArnList'
        description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
      locale:
        $ref: '#/definitions/locale'
        description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
  DescribeEventTypesResponse:
    type: object
    properties:
      eventTypes:
        $ref: '#/definitions/EventTypeList'
        description: 'A list of event types that match the filter criteria. Event types have a category (<code>issue</code>, <code>accountNotification</code>, or <code>scheduledChange</code>), a service (for example, <code>EC2</code>, <code>RDS</code>, <code>DATAPIPELINE</code>, <code>BILLING</code>), and a code (in the format <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).'
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
  DescribeEventTypesRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/EventTypeFilter'
        description: Values to narrow the results returned.
      locale:
        $ref: '#/definitions/locale'
        description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
      maxResults:
        $ref: '#/definitions/maxResults'
        description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
  DescribeEventsResponse:
    type: object
    properties:
      events:
        $ref: '#/definitions/EventList'
        description: The events that match the specified filter criteria.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
  DescribeEventsRequest:
    type: object
    properties:
      filter:
        $ref: '#/definitions/EventFilter'
        description: Values to narrow the results returned.
      nextToken:
        $ref: '#/definitions/nextToken'
        description: 'If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.'
      maxResults:
        $ref: '#/definitions/maxResults'
        description: 'The maximum number of items to return in one batch, between 10 and 100, inclusive.'
      locale:
        $ref: '#/definitions/locale'
        description: The locale (language) to return information in. English (en) is the default and the only supported value at this time.
  entityArn:
    type: string
    maxLength: 1600
  eventArn:
    type: string
    pattern: 'arn:aws:health:[^:]*:[^:]*:event(?:/[\w-]+){1}((?:/[\w-]+){2})?'
    maxLength: 1600
  entityValue:
    type: string
    maxLength: 256
  accountId:
    type: string
    pattern: '[0-9]{12}'
  timestamp:
    type: string
    format: date-time
  entityStatusCode:
    type: string
    enum:
      - IMPAIRED
      - UNIMPAIRED
      - UNKNOWN
  tagSet:
    type: array
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/tagKey'
        value:
          $ref: '#/definitions/tagValue'
  AffectedEntity:
    type: object
    properties:
      entityArn:
        $ref: '#/definitions/entityArn'
        description: 'The unique identifier for the entity. Format: <code>arn:aws:health:<i>entity-region</i>:<i>aws-account</i>:entity/<i>entity-id</i> </code>. Example: <code>arn:aws:health:us-east-1:111222333444:entity/AVh5GGT7ul1arKr1sE1K</code> '
      eventArn:
        $ref: '#/definitions/eventArn'
        description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
      entityValue:
        $ref: '#/definitions/entityValue'
        description: The ID of the affected entity.
      awsAccountId:
        $ref: '#/definitions/accountId'
        description: The 12-digit AWS account number that contains the affected entity.
      lastUpdatedTime:
        $ref: '#/definitions/timestamp'
        description: The most recent time that the entity was updated.
      statusCode:
        $ref: '#/definitions/entityStatusCode'
        description: 'The most recent status of the entity affected by the event. The possible values are <code>IMPAIRED</code>, <code>UNIMPAIRED</code>, and <code>UNKNOWN</code>.'
      tags:
        $ref: '#/definitions/tagSet'
        description: A map of entity tags attached to the affected entity.
    description: Information about an entity that is affected by a Health event.
  DateTimeRange:
    type: object
    properties:
      from:
        $ref: '#/definitions/timestamp'
        description: The starting date and time of a time range.
      to:
        $ref: '#/definitions/timestamp'
        description: The ending date and time of a time range.
    description: 'A range of dates and times that is used by the <a>EventFilter</a> and <a>EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set: match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code> inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set and <code>to</code> is set: match items where the timestamp value is equal to or before <code>to</code>.'
  EntityFilter:
    type: object
    required:
      - eventArns
    properties:
      eventArns:
        $ref: '#/definitions/eventArnList'
        description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
      entityArns:
        $ref: '#/definitions/entityArnList'
        description: A list of entity ARNs (unique identifiers).
      entityValues:
        $ref: '#/definitions/entityValueList'
        description: A list of IDs for affected entities.
      lastUpdatedTimes:
        $ref: '#/definitions/dateTimeRangeList'
        description: A list of the most recent dates and times that the entity was updated.
      tags:
        $ref: '#/definitions/tagFilter'
        description: A map of entity tags attached to the affected entity.
      statusCodes:
        $ref: '#/definitions/entityStatusCodeList'
        description: 'A list of entity status codes (<code>IMPAIRED</code>, <code>UNIMPAIRED</code>, or <code>UNKNOWN</code>).'
    description: The values to use to filter results from the <a>DescribeAffectedEntities</a> operation.
  locale:
    type: string
    minLength: 2
    maxLength: 256
  nextToken:
    type: string
    pattern: '[a-zA-Z0-9=/+_.-]{4,512}'
  maxResults:
    type: integer
    minimum: 10
    maximum: 100
  EntityList:
    type: array
    items:
      $ref: '#/definitions/AffectedEntity'
  EventArnsList:
    type: array
    items:
      $ref: '#/definitions/eventArn'
    minItems: 1
    maxItems: 50
  EntityAggregateList:
    type: array
    items:
      $ref: '#/definitions/EntityAggregate'
  EventFilter:
    type: object
    properties:
      eventArns:
        $ref: '#/definitions/eventArnList'
        description: 'A list of event ARNs (unique identifiers). For example: <code>"arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-CDE456", "arn:aws:health:us-west-1::event/EBS/AWS_EBS_LOST_VOLUME/AWS_EBS_LOST_VOLUME_CHI789_JKL101"</code> '
      eventTypeCodes:
        $ref: '#/definitions/eventTypeList'
        description: 'A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED"</code> '
      services:
        $ref: '#/definitions/serviceList'
        description: 'The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.'
      regions:
        $ref: '#/definitions/regionList'
        description: A list of AWS regions.
      availabilityZones:
        $ref: '#/definitions/availabilityZones'
        description: A list of AWS availability zones.
      startTimes:
        $ref: '#/definitions/dateTimeRangeList'
        description: A list of dates and times that the event began.
      endTimes:
        $ref: '#/definitions/dateTimeRangeList'
        description: A list of dates and times that the event ended.
      lastUpdatedTimes:
        $ref: '#/definitions/dateTimeRangeList'
        description: A list of dates and times that the event was last updated.
      entityArns:
        $ref: '#/definitions/entityArnList'
        description: A list of entity ARNs (unique identifiers).
      entityValues:
        $ref: '#/definitions/entityValueList'
        description: 'A list of entity identifiers, such as EC2 instance IDs (<code>i-34ab692e</code>) or EBS volumes (<code>vol-426ab23e</code>).'
      eventTypeCategories:
        $ref: '#/definitions/eventTypeCategoryList'
        description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
      tags:
        $ref: '#/definitions/tagFilter'
        description: A map of entity tags attached to the affected entity.
      eventStatusCodes:
        $ref: '#/definitions/eventStatusCodeList'
        description: A list of event status codes.
    description: The values to use to filter results from the <a>DescribeEvents</a> and <a>DescribeEventAggregates</a> operations.
  eventAggregateField:
    type: string
    enum:
      - eventTypeCategory
  EventAggregateList:
    type: array
    items:
      $ref: '#/definitions/EventAggregate'
  EventDetailsErrorItem:
    type: object
    properties:
      eventArn:
        $ref: '#/definitions/eventArn'
        description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
      errorName:
        $ref: '#/definitions/string'
        description: The name of the error.
      errorMessage:
        $ref: '#/definitions/string'
        description: A message that describes the error.
    description: Error information returned when a <a>DescribeEventDetails</a> operation cannot find a specified event.
  DescribeEventDetailsFailedSet:
    type: array
    items:
      $ref: '#/definitions/EventDetailsErrorItem'
  eventArnList:
    type: array
    items:
      $ref: '#/definitions/eventArn'
    minItems: 1
    maxItems: 10
  DescribeEventDetailsSuccessfulSet:
    type: array
    items:
      $ref: '#/definitions/EventDetails'
  EventDetails:
    type: object
    properties:
      event:
        $ref: '#/definitions/Event'
        description: Summary information about the event.
      eventDescription:
        $ref: '#/definitions/EventDescription'
        description: The most recent description of the event.
      eventMetadata:
        $ref: '#/definitions/eventMetadata'
        description: Additional metadata about the event.
    description: 'Detailed information about an event. A combination of an <a>Event</a> object, an <a>EventDescription</a> object, and additional metadata about the event. Returned by the <a>DescribeEventDetails</a> operation.'
  EventTypeFilter:
    type: object
    properties:
      eventTypeCodes:
        $ref: '#/definitions/EventTypeCodeList'
        description: A list of event type codes.
      services:
        $ref: '#/definitions/serviceList'
        description: 'The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.'
      eventTypeCategories:
        $ref: '#/definitions/EventTypeCategoryList'
        description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
    description: The values to use to filter results from the <a>DescribeEventTypes</a> operation.
  EventTypeList:
    type: array
    items:
      $ref: '#/definitions/EventType'
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
  count:
    type: integer
  EntityAggregate:
    type: object
    properties:
      eventArn:
        $ref: '#/definitions/eventArn'
        description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
      count:
        $ref: '#/definitions/count'
        description: The number entities that match the criteria for the specified events.
    description: The number of entities that are affected by one or more events. Returned by the <a>DescribeEntityAggregates</a> operation.
  entityArnList:
    type: array
    items:
      $ref: '#/definitions/entityArn'
    minItems: 1
    maxItems: 100
  entityValueList:
    type: array
    items:
      $ref: '#/definitions/entityValue'
    minItems: 1
    maxItems: 100
  dateTimeRangeList:
    type: array
    items:
      $ref: '#/definitions/DateTimeRange'
    minItems: 1
    maxItems: 10
  tagFilter:
    type: array
    items:
      $ref: '#/definitions/tagSet'
    maxItems: 50
  entityStatusCodeList:
    type: array
    items:
      $ref: '#/definitions/entityStatusCode'
    minItems: 1
    maxItems: 3
  service:
    type: string
    minLength: 2
    maxLength: 30
  eventTypeCode:
    type: string
    minLength: 3
    maxLength: 100
  eventTypeCategory:
    type: string
    enum:
      - issue
      - accountNotification
      - scheduledChange
    minLength: 3
    maxLength: 255
  region:
    type: string
    pattern: '[^:/]{2,25}'
  availabilityZone:
    type: string
    pattern: '[a-z]{2}\-[0-9a-z\-]{4,16}'
  eventStatusCode:
    type: string
    enum:
      - open
      - closed
      - upcoming
  Event:
    type: object
    properties:
      arn:
        $ref: '#/definitions/eventArn'
        description: 'The unique identifier for the event. Format: <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i> </code>. Example: <code>Example: arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code> '
      service:
        $ref: '#/definitions/service'
        description: 'The AWS service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.'
      eventTypeCode:
        $ref: '#/definitions/eventTypeCode'
        description: 'The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
      eventTypeCategory:
        $ref: '#/definitions/eventTypeCategory'
        description: 'The category of the event. Possible values are <code>issue</code>, <code>scheduledChange</code>, and <code>accountNotification</code>.'
      region:
        $ref: '#/definitions/region'
        description: The AWS region name of the event.
      availabilityZone:
        $ref: '#/definitions/availabilityZone'
        description: 'The AWS Availability Zone of the event. For example, us-east-1a.'
      startTime:
        $ref: '#/definitions/timestamp'
        description: The date and time that the event began.
      endTime:
        $ref: '#/definitions/timestamp'
        description: The date and time that the event ended.
      lastUpdatedTime:
        $ref: '#/definitions/timestamp'
        description: The most recent date and time that the event was updated.
      statusCode:
        $ref: '#/definitions/eventStatusCode'
        description: 'The most recent status of the event. Possible values are <code>open</code>, <code>closed</code>, and <code>upcoming</code>.'
    description: 'Summary information about an event, returned by the <a>DescribeEvents</a> operation. The <a>DescribeEventDetails</a> operation also returns this information, as well as the <a>EventDescription</a> and additional event metadata.'
  aggregateValue:
    type: string
  EventAggregate:
    type: object
    properties:
      aggregateValue:
        $ref: '#/definitions/aggregateValue'
        description: The issue type for the associated count.
      count:
        $ref: '#/definitions/count'
        description: The number of events of the associated issue type.
    description: The number of events of each issue type. Returned by the <a>DescribeEventAggregates</a> operation.
  eventDescription:
    type: string
  EventDescription:
    type: object
    properties:
      latestDescription:
        $ref: '#/definitions/eventDescription'
        description: The most recent description of the event.
    description: The detailed description of the event. Included in the information returned by the <a>DescribeEventDetails</a> operation.
  eventMetadata:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/metadataKey'
        value:
          $ref: '#/definitions/metadataValue'
  string:
    type: string
  eventTypeList:
    type: array
    items:
      $ref: '#/definitions/eventType'
    minItems: 1
    maxItems: 10
  serviceList:
    type: array
    items:
      $ref: '#/definitions/service'
    minItems: 1
    maxItems: 10
  regionList:
    type: array
    items:
      $ref: '#/definitions/region'
    minItems: 1
    maxItems: 10
  availabilityZones:
    type: array
    items:
      $ref: '#/definitions/availabilityZone'
  eventTypeCategoryList:
    type: array
    items:
      $ref: '#/definitions/eventTypeCategory'
    minItems: 1
    maxItems: 10
  eventStatusCodeList:
    type: array
    items:
      $ref: '#/definitions/eventStatusCode'
    minItems: 1
    maxItems: 6
  EventType:
    type: object
    properties:
      service:
        $ref: '#/definitions/service'
        description: 'The AWS service that is affected by the event. For example, <code>EC2</code>, <code>RDS</code>.'
      code:
        $ref: '#/definitions/eventTypeCode'
        description: 'The unique identifier for the event type. The format is <code>AWS_<i>SERVICE</i>_<i>DESCRIPTION</i> </code>; for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.'
      category:
        $ref: '#/definitions/eventTypeCategory'
        description: 'A list of event type category codes (<code>issue</code>, <code>scheduledChange</code>, or <code>accountNotification</code>).'
    description: 'Metadata about a type of event that is reported by AWS Health. Data consists of the category (for example, <code>issue</code>), the service (for example, <code>EC2</code>), and the event type code (for example, <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>).'
  EventTypeCategoryList:
    type: array
    items:
      $ref: '#/definitions/eventTypeCategory'
    minItems: 1
    maxItems: 10
  EventTypeCodeList:
    type: array
    items:
      $ref: '#/definitions/eventTypeCode'
    minItems: 1
    maxItems: 10
  metadataKey:
    type: string
  metadataValue:
    type: string
    maxLength: 10240
  eventType:
    type: string
    minLength: 3
    maxLength: 100
  tagKey:
    type: string
    maxLength: 127
  tagValue:
    type: string
    maxLength: 255
