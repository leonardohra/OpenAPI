swagger: '2.0'
info:
  version: '2017-11-27'
  x-release: v4
  title: AWS Resource Groups
  description: '<fullname>AWS Resource Groups</fullname> <p>AWS Resource Groups lets you organize AWS resources such as Amazon EC2 instances, Amazon Relational Database Service databases, and Amazon S3 buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource groups enable you to automate management tasks, such as those in AWS Systems Manager Automation documents, on tag-related resources in AWS Systems Manager. Groups of tagged resources also let you quickly view a custom console in AWS Systems Manager that shows AWS Config compliance and other monitoring data about member resources.</p> <p>To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.</p> <p>For more information about Resource Groups, see the <a href="https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html">AWS Resource Groups User Guide</a>.</p> <p>AWS Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.</p> <ul> <li> <p>Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities</p> </li> <li> <p>Applying, editing, and removing tags from resource groups</p> </li> <li> <p>Resolving resource group member ARNs so they can be returned as search results</p> </li> <li> <p>Getting data about resources that are members of a group</p> </li> <li> <p>Searching AWS resources based on a resource query</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: resource-groups
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resource-groups-2017-11-27.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/resource-groups/'
host: resource-groups.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /groups:
    post:
      operationId: CreateGroup
      description: 'Creates a group with a specified name, description, and resource query.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/groups/{GroupName}':
    delete:
      operationId: DeleteGroup
      description: Deletes a specified resource group. Deleting a resource group does not delete resources that are members of the group; it only deletes the group structure.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupInput'
        - name: GroupName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetGroup
      description: Returns information about a specified resource group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupInput'
        - name: GroupName
          in: path
          type: string
          required: true
    put:
      operationId: UpdateGroup
      description: Updates an existing group with a new or changed description. You cannot update the name of a resource group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupInput'
        - name: GroupName
          in: path
          type: string
          required: true
  '/groups/{GroupName}/query':
    get:
      operationId: GetGroupQuery
      description: Returns the resource query associated with the specified resource group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupQueryOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupQueryInput'
        - name: GroupName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateGroupQuery
      description: Updates the resource query of a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupQueryOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupQueryInput'
        - name: GroupName
          in: path
          type: string
          required: true
  '/resources/{Arn}/tags':
    get:
      operationId: GetTags
      description: 'Returns a list of tags that are associated with a resource, specified by an ARN.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTagsOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTagsInput'
        - name: Arn
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: Tag
      description: Adds specified tags to a resource with the specified ARN. Existing tags on a resource are not changed if they are not specified in the request parameters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagInput'
        - name: Arn
          in: path
          type: string
          required: true
    patch:
      operationId: Untag
      description: Deletes specified tags from a specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagInput'
        - name: Arn
          in: path
          type: string
          required: true
  '/groups/{GroupName}/resource-identifiers-list':
    post:
      operationId: ListGroupResources
      description: Returns a list of ARNs of resources that are members of a specified resource group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupResourcesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '486':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupResourcesInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: GroupName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /groups-list:
    post:
      operationId: ListGroups
      description: Returns a list of existing resource groups in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsOutput'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '482':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '483':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '484':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /resources/search:
    post:
      operationId: SearchResources
      description: Returns a list of AWS resource identifiers that matches a specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchResourcesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '484':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '485':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchResourcesInput'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateGroupOutput:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: A full description of the resource group after it is created.
      ResourceQuery:
        $ref: '#/definitions/ResourceQuery'
        description: The resource query associated with the group.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags associated with the group.
  CreateGroupInput:
    type: object
    required:
      - Name
      - ResourceQuery
    properties:
      Name:
        $ref: '#/definitions/GroupName'
        description: 'The name of the group, which is the identifier of the group in other operations. A resource group name cannot be updated after it is created. A resource group name can have a maximum of 128 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with <code>AWS</code> or <code>aws</code>; these are reserved. A resource group name must be unique within your account.'
      Description:
        $ref: '#/definitions/GroupDescription'
        description: 'The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.'
      ResourceQuery:
        $ref: '#/definitions/ResourceQuery'
        description: The resource query that determines which AWS resources are members of this group.
      Tags:
        $ref: '#/definitions/Tags'
        description: 'The tags to add to the group. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
  BadRequestException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The request does not comply with validation rules that are defined for the request parameters.
  ForbiddenException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The caller is not authorized to make the request.
  MethodNotAllowedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The request uses an HTTP method which is not allowed for the specified resource.
  TooManyRequestsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The caller has exceeded throttling limits.
  InternalServerErrorException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: An internal error occurred while processing the request.
  DeleteGroupOutput:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: A full description of the deleted resource group.
  DeleteGroupInput:
    type: object
    properties: {}
  NotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: One or more resources specified in the request do not exist.
  GetGroupOutput:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: A full description of the resource group.
  GetGroupInput:
    type: object
    properties: {}
  GetGroupQueryOutput:
    type: object
    properties:
      GroupQuery:
        $ref: '#/definitions/GroupQuery'
        description: The resource query associated with the specified group.
  GetGroupQueryInput:
    type: object
    properties: {}
  GetTagsOutput:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/GroupArn'
        description: The ARN of the tagged resource.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags associated with the specified resource.
  GetTagsInput:
    type: object
    properties: {}
  ListGroupResourcesOutput:
    type: object
    properties:
      ResourceIdentifiers:
        $ref: '#/definitions/ResourceIdentifierList'
        description: The ARNs and resource types of resources that are members of the group that you specified.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The NextToken value to include in a subsequent <code>ListGroupResources</code> request, to get more results.'
  ListGroupResourcesInput:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ResourceFilterList'
        description: '<p>Filters, formatted as ResourceFilter objects, that you want to apply to a ListGroupResources operation.</p> <ul> <li> <p> <code>resource-type</code> - Filter resources by their type. Specify up to five resource types in the format AWS::ServiceCode::ResourceType. For example, AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>'
  UnauthorizedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The request has not been applied because it lacks valid authentication credentials for the target resource.
  ListGroupsOutput:
    type: object
    properties:
      Groups:
        $ref: '#/definitions/GroupList'
        description: A list of resource groups.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The NextToken value to include in a subsequent <code>ListGroups</code> request, to get more results.'
  ListGroupsInput:
    type: object
    properties: {}
  SearchResourcesOutput:
    type: object
    properties:
      ResourceIdentifiers:
        $ref: '#/definitions/ResourceIdentifierList'
        description: The ARNs and resource types of resources that are members of the group that you specified.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The NextToken value to include in a subsequent <code>SearchResources</code> request, to get more results.'
  SearchResourcesInput:
    type: object
    required:
      - ResourceQuery
    properties:
      ResourceQuery:
        $ref: '#/definitions/ResourceQuery'
        description: 'The search query, using the same formats that are supported for resource group definition.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of group member ARNs returned by <code>SearchResources</code> in paginated output. By default, this number is 50.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The NextToken value that is returned in a paginated <code>SearchResources</code> request. To get the next page of results, run the call again, add the NextToken parameter, and specify the NextToken value.'
  TagOutput:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/GroupArn'
        description: The ARN of the tagged resource.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags that have been added to the specified resource.
  TagInput:
    type: object
    required:
      - Tags
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: 'The tags to add to the specified resource. A tag is a string-to-string map of key-value pairs. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.'
  UntagOutput:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/GroupArn'
        description: The ARN of the resource from which tags have been removed.
      Keys:
        $ref: '#/definitions/TagKeyList'
        description: The keys of tags that have been removed.
  UntagInput:
    type: object
    required:
      - Keys
    properties:
      Keys:
        $ref: '#/definitions/TagKeyList'
        description: The keys of the tags to be removed.
  UpdateGroupOutput:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: The full description of the resource group after it has been updated.
  UpdateGroupInput:
    type: object
    properties:
      Description:
        $ref: '#/definitions/GroupDescription'
        description: 'The description of the resource group. Descriptions can have a maximum of 511 characters, including letters, numbers, hyphens, underscores, punctuation, and spaces.'
  UpdateGroupQueryOutput:
    type: object
    properties:
      GroupQuery:
        $ref: '#/definitions/GroupQuery'
        description: The resource query associated with the resource group after the update.
  UpdateGroupQueryInput:
    type: object
    required:
      - ResourceQuery
    properties:
      ResourceQuery:
        $ref: '#/definitions/ResourceQuery'
        description: The resource query that determines which AWS resources are members of the resource group.
  ErrorMessage:
    type: string
    minLength: 1
    maxLength: 1024
  GroupName:
    type: string
    pattern: '[a-zA-Z0-9_\.-]+'
    minLength: 1
    maxLength: 128
  GroupDescription:
    type: string
    pattern: '[\sa-zA-Z0-9_\.-]*'
    maxLength: 512
  ResourceQuery:
    type: object
    required:
      - Type
      - Query
    properties:
      Type:
        $ref: '#/definitions/QueryType'
        description: '<p>The type of the query. The valid value in this release is <code>TAG_FILTERS_1_0</code>.</p> <p> <i> <code>TAG_FILTERS_1_0:</code> </i> A JSON syntax that lets you specify a collection of simple tag filters for resource types and tags, as supported by the AWS Tagging API GetResources operation. When more than one element is present, only resources that match all filters are part of the result. If a filter specifies more than one value for a key, a resource matches the filter if its tag value matches any of the specified values.</p>'
      Query:
        $ref: '#/definitions/Query'
        description: The query that defines a group or a search.
    description: The query that is used to define a resource group or a search for resources.
  Tags:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TagKey'
        value:
          $ref: '#/definitions/TagValue'
  Group:
    type: object
    required:
      - GroupArn
      - Name
    properties:
      GroupArn:
        $ref: '#/definitions/GroupArn'
        description: The ARN of a resource group.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of a resource group.
      Description:
        $ref: '#/definitions/GroupDescription'
        description: The description of the resource group.
    description: A resource group.
  GroupQuery:
    type: object
    required:
      - GroupName
      - ResourceQuery
    properties:
      GroupName:
        $ref: '#/definitions/GroupName'
        description: The name of a resource group that is associated with a specific resource query.
      ResourceQuery:
        $ref: '#/definitions/ResourceQuery'
        description: The resource query which determines which AWS resources are members of the associated resource group.
    description: The underlying resource query of a resource group. Resources that match query results are part of the group.
  GroupArn:
    type: string
    pattern: 'arn:aws:resource-groups:[a-z]{2}-[a-z]+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}'
  GroupList:
    type: array
    items:
      $ref: '#/definitions/Group'
  ResourceFilterList:
    type: array
    items:
      $ref: '#/definitions/ResourceFilter'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 50
  NextToken:
    type: string
  ResourceIdentifierList:
    type: array
    items:
      $ref: '#/definitions/ResourceIdentifier'
  Query:
    type: string
    maxLength: 2048
  QueryType:
    type: string
    enum:
      - TAG_FILTERS_1_0
  ResourceArn:
    type: string
    pattern: 'arn:aws:[a-z0-9\-]*:([a-z]{2}-[a-z]+-\d{1})?:([0-9]{12})?:.+'
  ResourceFilterName:
    type: string
    enum:
      - resource-type
  ResourceFilterValues:
    type: array
    items:
      $ref: '#/definitions/ResourceFilterValue'
    minItems: 1
    maxItems: 5
  ResourceFilter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/ResourceFilterName'
        description: The name of the filter. Filter names are case-sensitive.
      Values:
        $ref: '#/definitions/ResourceFilterValues'
        description: 'One or more filter values. Allowed filter values vary by resource filter name, and are case-sensitive.'
    description: A filter name and value pair that is used to obtain more specific results from a list of resources.
  ResourceFilterValue:
    type: string
    pattern: 'AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+'
    minLength: 1
    maxLength: 128
  ResourceType:
    type: string
    pattern: 'AWS::[a-zA-Z0-9]+::\w+'
  ResourceIdentifier:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The ARN of a resource.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The resource type of a resource, such as <code>AWS::EC2::Instance</code>.'
    description: 'The ARN of a resource, and its resource type.'
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
