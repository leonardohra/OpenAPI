swagger: '2.0'
info:
  version: '2016-12-01'
  x-release: v4
  title: Amazon Pinpoint
  description: Amazon Pinpoint
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: pinpoint
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pinpoint-2016-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/pinpoint/'
host: pinpoint.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /v1/apps:
    post:
      operationId: CreateApp
      description: Creates or updates an app.
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateAppResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAppRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApps
      description: Returns information about your apps.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAppsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAppsRequest'
  '/v1/apps/{application-id}/campaigns':
    post:
      operationId: CreateCampaign
      description: Creates or updates a campaign.
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateCampaignResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCampaignRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCampaigns
      description: Returns information about your campaigns.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCampaignsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCampaignsRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/jobs/export':
    post:
      operationId: CreateExportJob
      description: Creates an export job.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/CreateExportJobResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateExportJobRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetExportJobs
      description: Returns information about your export jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetExportJobsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetExportJobsRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/jobs/import':
    post:
      operationId: CreateImportJob
      description: Creates or updates an import job.
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateImportJobResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateImportJobRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetImportJobs
      description: Returns information about your import jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImportJobsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetImportJobsRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/segments':
    post:
      operationId: CreateSegment
      description: Used to create or update a segment.
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateSegmentResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSegmentRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSegments
      description: Used to get information about your segments.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentsRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/adm':
    delete:
      operationId: DeleteAdmChannel
      description: Delete an ADM channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAdmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAdmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetAdmChannel
      description: Get an ADM channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAdmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAdmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateAdmChannel
      description: Update an ADM channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAdmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAdmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/apns':
    delete:
      operationId: DeleteApnsChannel
      description: Deletes the APNs channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApnsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApnsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApnsChannel
      description: Returns information about the APNs channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetApnsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetApnsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateApnsChannel
      description: Use to update the APNs channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApnsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApnsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/apns_sandbox':
    delete:
      operationId: DeleteApnsSandboxChannel
      description: Delete an APNS sandbox channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApnsSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApnsSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApnsSandboxChannel
      description: Get an APNS sandbox channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetApnsSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetApnsSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateApnsSandboxChannel
      description: Update an APNS sandbox channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApnsSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApnsSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/apns_voip':
    delete:
      operationId: DeleteApnsVoipChannel
      description: Delete an APNS VoIP channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApnsVoipChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApnsVoipChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApnsVoipChannel
      description: Get an APNS VoIP channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetApnsVoipChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetApnsVoipChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateApnsVoipChannel
      description: Update an APNS VoIP channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApnsVoipChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApnsVoipChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/apns_voip_sandbox':
    delete:
      operationId: DeleteApnsVoipSandboxChannel
      description: Delete an APNS VoIP sandbox channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApnsVoipSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApnsVoipSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApnsVoipSandboxChannel
      description: Get an APNS VoIPSandbox channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetApnsVoipSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetApnsVoipSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateApnsVoipSandboxChannel
      description: Update an APNS VoIP sandbox channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApnsVoipSandboxChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApnsVoipSandboxChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}':
    delete:
      operationId: DeleteApp
      description: Deletes an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAppResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAppRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetApp
      description: Returns information about an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAppResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAppRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/baidu':
    delete:
      operationId: DeleteBaiduChannel
      description: Delete a BAIDU GCM channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBaiduChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBaiduChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBaiduChannel
      description: Get a BAIDU GCM channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBaiduChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBaiduChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateBaiduChannel
      description: Update a BAIDU GCM channel
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBaiduChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBaiduChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/campaigns/{campaign-id}':
    delete:
      operationId: DeleteCampaign
      description: Deletes a campaign.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCampaignResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCampaignRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCampaign
      description: Returns information about a campaign.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCampaignResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCampaignRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateCampaign
      description: Use to update a campaign.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCampaignResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCampaignRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/email':
    delete:
      operationId: DeleteEmailChannel
      description: Delete an email channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEmailChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEmailChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEmailChannel
      description: Get an email channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEmailChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEmailChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateEmailChannel
      description: Update an email channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEmailChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEmailChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/endpoints/{endpoint-id}':
    delete:
      operationId: DeleteEndpoint
      description: Deletes an endpoint.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEndpointResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: endpoint-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEndpoint
      description: Returns information about an endpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEndpointResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEndpointRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: endpoint-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateEndpoint
      description: Creates or updates an endpoint.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: endpoint-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/eventstream':
    delete:
      operationId: DeleteEventStream
      description: Deletes the event stream for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventStreamResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventStreamRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetEventStream
      description: Returns the event stream for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEventStreamResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEventStreamRequest'
        - name: application-id
          in: path
          type: string
          required: true
    post:
      operationId: PutEventStream
      description: Use to create or update the event stream for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutEventStreamResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutEventStreamRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/gcm':
    delete:
      operationId: DeleteGcmChannel
      description: Deletes the GCM channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGcmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGcmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetGcmChannel
      description: Returns information about the GCM channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGcmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGcmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateGcmChannel
      description: Use to update the GCM channel for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGcmChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGcmChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/segments/{segment-id}':
    delete:
      operationId: DeleteSegment
      description: Deletes a segment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSegmentResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSegmentRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSegment
      description: Returns information about a segment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateSegment
      description: Used to update a segment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSegmentResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSegmentRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/channels/sms':
    delete:
      operationId: DeleteSmsChannel
      description: Delete an SMS channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSmsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSmsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSmsChannel
      description: Get an SMS channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSmsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSmsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateSmsChannel
      description: Update an SMS channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSmsChannelResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSmsChannelRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/users/{user-id}':
    delete:
      operationId: DeleteUserEndpoints
      description: Deletes endpoints that are associated with a User ID.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserEndpointsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserEndpointsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: user-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetUserEndpoints
      description: Returns information about the endpoints that are associated with a User ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUserEndpointsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUserEndpointsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: user-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/settings':
    get:
      operationId: GetApplicationSettings
      description: Used to request the settings for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetApplicationSettingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetApplicationSettingsRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateApplicationSettings
      description: Used to update the settings for an app.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApplicationSettingsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApplicationSettingsRequest'
        - name: application-id
          in: path
          type: string
          required: true
  '/v1/apps/{application-id}/campaigns/{campaign-id}/activities':
    get:
      operationId: GetCampaignActivities
      description: Returns information about the activity performed by a campaign.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCampaignActivitiesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCampaignActivitiesRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/campaigns/{campaign-id}/versions/{version}':
    get:
      operationId: GetCampaignVersion
      description: Returns information about a specific version of a campaign.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCampaignVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCampaignVersionRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
        - name: version
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/campaigns/{campaign-id}/versions':
    get:
      operationId: GetCampaignVersions
      description: Returns information about your campaign versions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCampaignVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCampaignVersionsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: campaign-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/channels':
    get:
      operationId: GetChannels
      description: Get all channels.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetChannelsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetChannelsRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/jobs/export/{job-id}':
    get:
      operationId: GetExportJob
      description: Returns information about an export job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetExportJobResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetExportJobRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: job-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/jobs/import/{job-id}':
    get:
      operationId: GetImportJob
      description: Returns information about an import job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImportJobResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetImportJobRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: job-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/segments/{segment-id}/jobs/export':
    get:
      operationId: GetSegmentExportJobs
      description: Returns a list of export jobs for a specific segment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentExportJobsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentExportJobsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/segments/{segment-id}/jobs/import':
    get:
      operationId: GetSegmentImportJobs
      description: Returns a list of import jobs for a specific segment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentImportJobsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentImportJobsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/segments/{segment-id}/versions/{version}':
    get:
      operationId: GetSegmentVersion
      description: Returns information about a segment version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentVersionRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
        - name: version
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/segments/{segment-id}/versions':
    get:
      operationId: GetSegmentVersions
      description: Returns information about your segment versions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSegmentVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSegmentVersionsRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: segment-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/phone/number/validate:
    post:
      operationId: PhoneNumberValidate
      description: Returns information about the specified phone number.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PhoneNumberValidateResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PhoneNumberValidateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/events':
    post:
      operationId: PutEvents
      description: Use to record events for endpoints. This method creates events and creates or updates the endpoints that those events are associated with.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/PutEventsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutEventsRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/attributes/{attribute-type}':
    put:
      operationId: RemoveAttributes
      description: Used to remove the attributes for an app
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveAttributesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveAttributesRequest'
        - name: application-id
          in: path
          type: string
          required: true
        - name: attribute-type
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/messages':
    post:
      operationId: SendMessages
      description: Used to send a direct message.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendMessagesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendMessagesRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/users-messages':
    post:
      operationId: SendUsersMessages
      description: Used to send a message to a list of users.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendUsersMessagesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendUsersMessagesRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/apps/{application-id}/endpoints':
    put:
      operationId: UpdateEndpointsBatch
      description: Use to update a batch of endpoints.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEndpointsBatchResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: MethodNotAllowedException
          schema:
            $ref: '#/definitions/MethodNotAllowedException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEndpointsBatchRequest'
        - name: application-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateAppResponse:
    type: object
    required:
      - ApplicationResponse
    properties:
      ApplicationResponse:
        $ref: '#/definitions/ApplicationResponse'
  CreateAppRequest:
    type: object
    required:
      - CreateApplicationRequest
    properties:
      CreateApplicationRequest:
        $ref: '#/definitions/CreateApplicationRequest'
  BadRequestException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  InternalServerErrorException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  ForbiddenException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  NotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  MethodNotAllowedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  TooManyRequestsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  CreateCampaignResponse:
    type: object
    required:
      - CampaignResponse
    properties:
      CampaignResponse:
        $ref: '#/definitions/CampaignResponse'
  CreateCampaignRequest:
    type: object
    required:
      - WriteCampaignRequest
    properties:
      WriteCampaignRequest:
        $ref: '#/definitions/WriteCampaignRequest'
  CreateExportJobResponse:
    type: object
    required:
      - ExportJobResponse
    properties:
      ExportJobResponse:
        $ref: '#/definitions/ExportJobResponse'
  CreateExportJobRequest:
    type: object
    required:
      - ExportJobRequest
    properties:
      ExportJobRequest:
        $ref: '#/definitions/ExportJobRequest'
  CreateImportJobResponse:
    type: object
    required:
      - ImportJobResponse
    properties:
      ImportJobResponse:
        $ref: '#/definitions/ImportJobResponse'
  CreateImportJobRequest:
    type: object
    required:
      - ImportJobRequest
    properties:
      ImportJobRequest:
        $ref: '#/definitions/ImportJobRequest'
  CreateSegmentResponse:
    type: object
    required:
      - SegmentResponse
    properties:
      SegmentResponse:
        $ref: '#/definitions/SegmentResponse'
  CreateSegmentRequest:
    type: object
    required:
      - WriteSegmentRequest
    properties:
      WriteSegmentRequest:
        $ref: '#/definitions/WriteSegmentRequest'
  DeleteAdmChannelResponse:
    type: object
    required:
      - ADMChannelResponse
    properties:
      ADMChannelResponse:
        $ref: '#/definitions/ADMChannelResponse'
  DeleteAdmChannelRequest:
    type: object
    properties: {}
  DeleteApnsChannelResponse:
    type: object
    required:
      - APNSChannelResponse
    properties:
      APNSChannelResponse:
        $ref: '#/definitions/APNSChannelResponse'
  DeleteApnsChannelRequest:
    type: object
    properties: {}
  DeleteApnsSandboxChannelResponse:
    type: object
    required:
      - APNSSandboxChannelResponse
    properties:
      APNSSandboxChannelResponse:
        $ref: '#/definitions/APNSSandboxChannelResponse'
  DeleteApnsSandboxChannelRequest:
    type: object
    properties: {}
  DeleteApnsVoipChannelResponse:
    type: object
    required:
      - APNSVoipChannelResponse
    properties:
      APNSVoipChannelResponse:
        $ref: '#/definitions/APNSVoipChannelResponse'
  DeleteApnsVoipChannelRequest:
    type: object
    properties: {}
  DeleteApnsVoipSandboxChannelResponse:
    type: object
    required:
      - APNSVoipSandboxChannelResponse
    properties:
      APNSVoipSandboxChannelResponse:
        $ref: '#/definitions/APNSVoipSandboxChannelResponse'
  DeleteApnsVoipSandboxChannelRequest:
    type: object
    properties: {}
  DeleteAppResponse:
    type: object
    required:
      - ApplicationResponse
    properties:
      ApplicationResponse:
        $ref: '#/definitions/ApplicationResponse'
  DeleteAppRequest:
    type: object
    properties: {}
  DeleteBaiduChannelResponse:
    type: object
    required:
      - BaiduChannelResponse
    properties:
      BaiduChannelResponse:
        $ref: '#/definitions/BaiduChannelResponse'
  DeleteBaiduChannelRequest:
    type: object
    properties: {}
  DeleteCampaignResponse:
    type: object
    required:
      - CampaignResponse
    properties:
      CampaignResponse:
        $ref: '#/definitions/CampaignResponse'
  DeleteCampaignRequest:
    type: object
    properties: {}
  DeleteEmailChannelResponse:
    type: object
    required:
      - EmailChannelResponse
    properties:
      EmailChannelResponse:
        $ref: '#/definitions/EmailChannelResponse'
  DeleteEmailChannelRequest:
    type: object
    properties: {}
  DeleteEndpointResponse:
    type: object
    required:
      - EndpointResponse
    properties:
      EndpointResponse:
        $ref: '#/definitions/EndpointResponse'
  DeleteEndpointRequest:
    type: object
    properties: {}
  DeleteEventStreamResponse:
    type: object
    required:
      - EventStream
    properties:
      EventStream:
        $ref: '#/definitions/EventStream'
  DeleteEventStreamRequest:
    type: object
    properties: {}
  DeleteGcmChannelResponse:
    type: object
    required:
      - GCMChannelResponse
    properties:
      GCMChannelResponse:
        $ref: '#/definitions/GCMChannelResponse'
  DeleteGcmChannelRequest:
    type: object
    properties: {}
  DeleteSegmentResponse:
    type: object
    required:
      - SegmentResponse
    properties:
      SegmentResponse:
        $ref: '#/definitions/SegmentResponse'
  DeleteSegmentRequest:
    type: object
    properties: {}
  DeleteSmsChannelResponse:
    type: object
    required:
      - SMSChannelResponse
    properties:
      SMSChannelResponse:
        $ref: '#/definitions/SMSChannelResponse'
  DeleteSmsChannelRequest:
    type: object
    properties: {}
  DeleteUserEndpointsResponse:
    type: object
    required:
      - EndpointsResponse
    properties:
      EndpointsResponse:
        $ref: '#/definitions/EndpointsResponse'
  DeleteUserEndpointsRequest:
    type: object
    properties: {}
  GetAdmChannelResponse:
    type: object
    required:
      - ADMChannelResponse
    properties:
      ADMChannelResponse:
        $ref: '#/definitions/ADMChannelResponse'
  GetAdmChannelRequest:
    type: object
    properties: {}
  GetApnsChannelResponse:
    type: object
    required:
      - APNSChannelResponse
    properties:
      APNSChannelResponse:
        $ref: '#/definitions/APNSChannelResponse'
  GetApnsChannelRequest:
    type: object
    properties: {}
  GetApnsSandboxChannelResponse:
    type: object
    required:
      - APNSSandboxChannelResponse
    properties:
      APNSSandboxChannelResponse:
        $ref: '#/definitions/APNSSandboxChannelResponse'
  GetApnsSandboxChannelRequest:
    type: object
    properties: {}
  GetApnsVoipChannelResponse:
    type: object
    required:
      - APNSVoipChannelResponse
    properties:
      APNSVoipChannelResponse:
        $ref: '#/definitions/APNSVoipChannelResponse'
  GetApnsVoipChannelRequest:
    type: object
    properties: {}
  GetApnsVoipSandboxChannelResponse:
    type: object
    required:
      - APNSVoipSandboxChannelResponse
    properties:
      APNSVoipSandboxChannelResponse:
        $ref: '#/definitions/APNSVoipSandboxChannelResponse'
  GetApnsVoipSandboxChannelRequest:
    type: object
    properties: {}
  GetAppResponse:
    type: object
    required:
      - ApplicationResponse
    properties:
      ApplicationResponse:
        $ref: '#/definitions/ApplicationResponse'
  GetAppRequest:
    type: object
    properties: {}
  GetApplicationSettingsResponse:
    type: object
    required:
      - ApplicationSettingsResource
    properties:
      ApplicationSettingsResource:
        $ref: '#/definitions/ApplicationSettingsResource'
  GetApplicationSettingsRequest:
    type: object
    properties: {}
  GetAppsResponse:
    type: object
    required:
      - ApplicationsResponse
    properties:
      ApplicationsResponse:
        $ref: '#/definitions/ApplicationsResponse'
  GetAppsRequest:
    type: object
    properties: {}
  GetBaiduChannelResponse:
    type: object
    required:
      - BaiduChannelResponse
    properties:
      BaiduChannelResponse:
        $ref: '#/definitions/BaiduChannelResponse'
  GetBaiduChannelRequest:
    type: object
    properties: {}
  GetCampaignResponse:
    type: object
    required:
      - CampaignResponse
    properties:
      CampaignResponse:
        $ref: '#/definitions/CampaignResponse'
  GetCampaignRequest:
    type: object
    properties: {}
  GetCampaignActivitiesResponse:
    type: object
    required:
      - ActivitiesResponse
    properties:
      ActivitiesResponse:
        $ref: '#/definitions/ActivitiesResponse'
  GetCampaignActivitiesRequest:
    type: object
    properties: {}
  GetCampaignVersionResponse:
    type: object
    required:
      - CampaignResponse
    properties:
      CampaignResponse:
        $ref: '#/definitions/CampaignResponse'
  GetCampaignVersionRequest:
    type: object
    properties: {}
  GetCampaignVersionsResponse:
    type: object
    required:
      - CampaignsResponse
    properties:
      CampaignsResponse:
        $ref: '#/definitions/CampaignsResponse'
  GetCampaignVersionsRequest:
    type: object
    properties: {}
  GetCampaignsResponse:
    type: object
    required:
      - CampaignsResponse
    properties:
      CampaignsResponse:
        $ref: '#/definitions/CampaignsResponse'
  GetCampaignsRequest:
    type: object
    properties: {}
  GetChannelsResponse:
    type: object
    required:
      - ChannelsResponse
    properties:
      ChannelsResponse:
        $ref: '#/definitions/ChannelsResponse'
  GetChannelsRequest:
    type: object
    properties: {}
  GetEmailChannelResponse:
    type: object
    required:
      - EmailChannelResponse
    properties:
      EmailChannelResponse:
        $ref: '#/definitions/EmailChannelResponse'
  GetEmailChannelRequest:
    type: object
    properties: {}
  GetEndpointResponse:
    type: object
    required:
      - EndpointResponse
    properties:
      EndpointResponse:
        $ref: '#/definitions/EndpointResponse'
  GetEndpointRequest:
    type: object
    properties: {}
  GetEventStreamResponse:
    type: object
    required:
      - EventStream
    properties:
      EventStream:
        $ref: '#/definitions/EventStream'
  GetEventStreamRequest:
    type: object
    properties: {}
  GetExportJobResponse:
    type: object
    required:
      - ExportJobResponse
    properties:
      ExportJobResponse:
        $ref: '#/definitions/ExportJobResponse'
  GetExportJobRequest:
    type: object
    properties: {}
  GetExportJobsResponse:
    type: object
    required:
      - ExportJobsResponse
    properties:
      ExportJobsResponse:
        $ref: '#/definitions/ExportJobsResponse'
  GetExportJobsRequest:
    type: object
    properties: {}
  GetGcmChannelResponse:
    type: object
    required:
      - GCMChannelResponse
    properties:
      GCMChannelResponse:
        $ref: '#/definitions/GCMChannelResponse'
  GetGcmChannelRequest:
    type: object
    properties: {}
  GetImportJobResponse:
    type: object
    required:
      - ImportJobResponse
    properties:
      ImportJobResponse:
        $ref: '#/definitions/ImportJobResponse'
  GetImportJobRequest:
    type: object
    properties: {}
  GetImportJobsResponse:
    type: object
    required:
      - ImportJobsResponse
    properties:
      ImportJobsResponse:
        $ref: '#/definitions/ImportJobsResponse'
  GetImportJobsRequest:
    type: object
    properties: {}
  GetSegmentResponse:
    type: object
    required:
      - SegmentResponse
    properties:
      SegmentResponse:
        $ref: '#/definitions/SegmentResponse'
  GetSegmentRequest:
    type: object
    properties: {}
  GetSegmentExportJobsResponse:
    type: object
    required:
      - ExportJobsResponse
    properties:
      ExportJobsResponse:
        $ref: '#/definitions/ExportJobsResponse'
  GetSegmentExportJobsRequest:
    type: object
    properties: {}
  GetSegmentImportJobsResponse:
    type: object
    required:
      - ImportJobsResponse
    properties:
      ImportJobsResponse:
        $ref: '#/definitions/ImportJobsResponse'
  GetSegmentImportJobsRequest:
    type: object
    properties: {}
  GetSegmentVersionResponse:
    type: object
    required:
      - SegmentResponse
    properties:
      SegmentResponse:
        $ref: '#/definitions/SegmentResponse'
  GetSegmentVersionRequest:
    type: object
    properties: {}
  GetSegmentVersionsResponse:
    type: object
    required:
      - SegmentsResponse
    properties:
      SegmentsResponse:
        $ref: '#/definitions/SegmentsResponse'
  GetSegmentVersionsRequest:
    type: object
    properties: {}
  GetSegmentsResponse:
    type: object
    required:
      - SegmentsResponse
    properties:
      SegmentsResponse:
        $ref: '#/definitions/SegmentsResponse'
  GetSegmentsRequest:
    type: object
    properties: {}
  GetSmsChannelResponse:
    type: object
    required:
      - SMSChannelResponse
    properties:
      SMSChannelResponse:
        $ref: '#/definitions/SMSChannelResponse'
  GetSmsChannelRequest:
    type: object
    properties: {}
  GetUserEndpointsResponse:
    type: object
    required:
      - EndpointsResponse
    properties:
      EndpointsResponse:
        $ref: '#/definitions/EndpointsResponse'
  GetUserEndpointsRequest:
    type: object
    properties: {}
  PhoneNumberValidateResponse:
    type: object
    required:
      - NumberValidateResponse
    properties:
      NumberValidateResponse:
        $ref: '#/definitions/NumberValidateResponse'
  PhoneNumberValidateRequest:
    type: object
    required:
      - NumberValidateRequest
    properties:
      NumberValidateRequest:
        $ref: '#/definitions/NumberValidateRequest'
  PutEventStreamResponse:
    type: object
    required:
      - EventStream
    properties:
      EventStream:
        $ref: '#/definitions/EventStream'
  PutEventStreamRequest:
    type: object
    required:
      - WriteEventStream
    properties:
      WriteEventStream:
        $ref: '#/definitions/WriteEventStream'
  PutEventsResponse:
    type: object
    required:
      - EventsResponse
    properties:
      EventsResponse:
        $ref: '#/definitions/EventsResponse'
  PutEventsRequest:
    type: object
    required:
      - EventsRequest
    properties:
      EventsRequest:
        $ref: '#/definitions/EventsRequest'
  RemoveAttributesResponse:
    type: object
    required:
      - AttributesResource
    properties:
      AttributesResource:
        $ref: '#/definitions/AttributesResource'
  RemoveAttributesRequest:
    type: object
    required:
      - UpdateAttributesRequest
    properties:
      UpdateAttributesRequest:
        $ref: '#/definitions/UpdateAttributesRequest'
  SendMessagesResponse:
    type: object
    required:
      - MessageResponse
    properties:
      MessageResponse:
        $ref: '#/definitions/MessageResponse'
  SendMessagesRequest:
    type: object
    required:
      - MessageRequest
    properties:
      MessageRequest:
        $ref: '#/definitions/MessageRequest'
  SendUsersMessagesResponse:
    type: object
    required:
      - SendUsersMessageResponse
    properties:
      SendUsersMessageResponse:
        $ref: '#/definitions/SendUsersMessageResponse'
  SendUsersMessagesRequest:
    type: object
    required:
      - SendUsersMessageRequest
    properties:
      SendUsersMessageRequest:
        $ref: '#/definitions/SendUsersMessageRequest'
  UpdateAdmChannelResponse:
    type: object
    required:
      - ADMChannelResponse
    properties:
      ADMChannelResponse:
        $ref: '#/definitions/ADMChannelResponse'
  UpdateAdmChannelRequest:
    type: object
    required:
      - ADMChannelRequest
    properties:
      ADMChannelRequest:
        $ref: '#/definitions/ADMChannelRequest'
  UpdateApnsChannelResponse:
    type: object
    required:
      - APNSChannelResponse
    properties:
      APNSChannelResponse:
        $ref: '#/definitions/APNSChannelResponse'
  UpdateApnsChannelRequest:
    type: object
    required:
      - APNSChannelRequest
    properties:
      APNSChannelRequest:
        $ref: '#/definitions/APNSChannelRequest'
  UpdateApnsSandboxChannelResponse:
    type: object
    required:
      - APNSSandboxChannelResponse
    properties:
      APNSSandboxChannelResponse:
        $ref: '#/definitions/APNSSandboxChannelResponse'
  UpdateApnsSandboxChannelRequest:
    type: object
    required:
      - APNSSandboxChannelRequest
    properties:
      APNSSandboxChannelRequest:
        $ref: '#/definitions/APNSSandboxChannelRequest'
  UpdateApnsVoipChannelResponse:
    type: object
    required:
      - APNSVoipChannelResponse
    properties:
      APNSVoipChannelResponse:
        $ref: '#/definitions/APNSVoipChannelResponse'
  UpdateApnsVoipChannelRequest:
    type: object
    required:
      - APNSVoipChannelRequest
    properties:
      APNSVoipChannelRequest:
        $ref: '#/definitions/APNSVoipChannelRequest'
  UpdateApnsVoipSandboxChannelResponse:
    type: object
    required:
      - APNSVoipSandboxChannelResponse
    properties:
      APNSVoipSandboxChannelResponse:
        $ref: '#/definitions/APNSVoipSandboxChannelResponse'
  UpdateApnsVoipSandboxChannelRequest:
    type: object
    required:
      - APNSVoipSandboxChannelRequest
    properties:
      APNSVoipSandboxChannelRequest:
        $ref: '#/definitions/APNSVoipSandboxChannelRequest'
  UpdateApplicationSettingsResponse:
    type: object
    required:
      - ApplicationSettingsResource
    properties:
      ApplicationSettingsResource:
        $ref: '#/definitions/ApplicationSettingsResource'
  UpdateApplicationSettingsRequest:
    type: object
    required:
      - WriteApplicationSettingsRequest
    properties:
      WriteApplicationSettingsRequest:
        $ref: '#/definitions/WriteApplicationSettingsRequest'
  UpdateBaiduChannelResponse:
    type: object
    required:
      - BaiduChannelResponse
    properties:
      BaiduChannelResponse:
        $ref: '#/definitions/BaiduChannelResponse'
  UpdateBaiduChannelRequest:
    type: object
    required:
      - BaiduChannelRequest
    properties:
      BaiduChannelRequest:
        $ref: '#/definitions/BaiduChannelRequest'
  UpdateCampaignResponse:
    type: object
    required:
      - CampaignResponse
    properties:
      CampaignResponse:
        $ref: '#/definitions/CampaignResponse'
  UpdateCampaignRequest:
    type: object
    required:
      - WriteCampaignRequest
    properties:
      WriteCampaignRequest:
        $ref: '#/definitions/WriteCampaignRequest'
  UpdateEmailChannelResponse:
    type: object
    required:
      - EmailChannelResponse
    properties:
      EmailChannelResponse:
        $ref: '#/definitions/EmailChannelResponse'
  UpdateEmailChannelRequest:
    type: object
    required:
      - EmailChannelRequest
    properties:
      EmailChannelRequest:
        $ref: '#/definitions/EmailChannelRequest'
  UpdateEndpointResponse:
    type: object
    required:
      - MessageBody
    properties:
      MessageBody:
        $ref: '#/definitions/MessageBody'
  UpdateEndpointRequest:
    type: object
    required:
      - EndpointRequest
    properties:
      EndpointRequest:
        $ref: '#/definitions/EndpointRequest'
  UpdateEndpointsBatchResponse:
    type: object
    required:
      - MessageBody
    properties:
      MessageBody:
        $ref: '#/definitions/MessageBody'
  UpdateEndpointsBatchRequest:
    type: object
    required:
      - EndpointBatchRequest
    properties:
      EndpointBatchRequest:
        $ref: '#/definitions/EndpointBatchRequest'
  UpdateGcmChannelResponse:
    type: object
    required:
      - GCMChannelResponse
    properties:
      GCMChannelResponse:
        $ref: '#/definitions/GCMChannelResponse'
  UpdateGcmChannelRequest:
    type: object
    required:
      - GCMChannelRequest
    properties:
      GCMChannelRequest:
        $ref: '#/definitions/GCMChannelRequest'
  UpdateSegmentResponse:
    type: object
    required:
      - SegmentResponse
    properties:
      SegmentResponse:
        $ref: '#/definitions/SegmentResponse'
  UpdateSegmentRequest:
    type: object
    required:
      - WriteSegmentRequest
    properties:
      WriteSegmentRequest:
        $ref: '#/definitions/WriteSegmentRequest'
  UpdateSmsChannelResponse:
    type: object
    required:
      - SMSChannelResponse
    properties:
      SMSChannelResponse:
        $ref: '#/definitions/SMSChannelResponse'
  UpdateSmsChannelRequest:
    type: object
    required:
      - SMSChannelRequest
    properties:
      SMSChannelRequest:
        $ref: '#/definitions/SMSChannelRequest'
  __string:
    type: string
  __boolean:
    type: boolean
  ADMChannelRequest:
    type: object
    properties:
      ClientId:
        $ref: '#/definitions/__string'
        description: The Client ID that you obtained from the Amazon App Distribution Portal.
      ClientSecret:
        $ref: '#/definitions/__string'
        description: The Client Secret that you obtained from the Amazon App Distribution Portal.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: Indicates whether or not the channel is enabled for sending messages.
    description: Amazon Device Messaging channel definition.
  __integer:
    type: integer
  ADMChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application to which the channel applies.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date and time when this channel was created.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: Indicates whether or not the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: (Deprecated) An identifier for the channel. Retained for backwards compatibility.
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Indicates whether or not the channel is archived.
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: The user who last updated this channel.
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: The date and time when this channel was last modified.
      Platform:
        $ref: '#/definitions/__string'
        description: 'The platform type. For this channel, the value is always "ADM."'
      Version:
        $ref: '#/definitions/__integer'
        description: The channel version.
    description: Amazon Device Messaging channel definition.
  Action:
    type: string
    enum:
      - OPEN_APP
      - DEEP_LINK
      - URL
  MapOf__string:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/__string'
  MapOfListOf__string:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/ListOf__string'
  ADMMessage:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that occurs if the user taps a push notification delivered by the campaign: OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action. DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app. URL - The default mobile browser on the user''s device launches and opens a web page at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK | URL'
      Body:
        $ref: '#/definitions/__string'
        description: The message body of the notification.
      ConsolidationKey:
        $ref: '#/definitions/__string'
        description: Optional. Arbitrary string used to indicate multiple messages are logically the same and that ADM is allowed to drop previously enqueued messages in favor of this one.
      Data:
        $ref: '#/definitions/MapOf__string'
        description: The data payload used for a silent push. This payload is added to the notifications' data.pinpoint.jsonBody' object
      ExpiresAfter:
        $ref: '#/definitions/__string'
        description: Optional. Number of seconds ADM should retain the message if the device is offline
      IconReference:
        $ref: '#/definitions/__string'
        description: The icon image name of the asset saved in your application.
      ImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the large icon to the notification content view.
      ImageUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used in the push notification.
      MD5:
        $ref: '#/definitions/__string'
        description: Optional. Base-64-encoded MD5 checksum of the data parameter. Used to verify data integrity
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: Indicates if the message should display on the users device. Silent pushes can be used for Remote Configuration and Phone Home use cases.
      SmallImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the small icon for the notification which will be used to represent the notification in the status bar and content view
      Sound:
        $ref: '#/definitions/__string'
        description: 'Indicates a sound to play when the device receives the notification. Supports default, or the filename of a sound resource bundled in the app. Android sound files must reside in /res/raw/'
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: ADM Message.
  APNSChannelRequest:
    type: object
    properties:
      BundleId:
        $ref: '#/definitions/__string'
        description: The bundle id used for APNs Tokens.
      Certificate:
        $ref: '#/definitions/__string'
        description: The distribution certificate from Apple.
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      PrivateKey:
        $ref: '#/definitions/__string'
        description: The certificate private key.
      TeamId:
        $ref: '#/definitions/__string'
        description: The team id used for APNs Tokens.
      TokenKey:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
      TokenKeyId:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
    description: Apple Push Notification Service channel definition.
  APNSChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application that the channel applies to.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date and time when this channel was created.
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      HasTokenKey:
        $ref: '#/definitions/__boolean'
        description: Indicates whether the channel is configured with a key for APNs token authentication. Provide a token key by setting the TokenKey attribute.
      Id:
        $ref: '#/definitions/__string'
        description: (Deprecated) An identifier for the channel. Retained for backwards compatibility.
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Indicates whether or not the channel is archived.
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: The user who last updated this channel.
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: The date and time when this channel was last modified.
      Platform:
        $ref: '#/definitions/__string'
        description: 'The platform type. For this channel, the value is always "ADM."'
      Version:
        $ref: '#/definitions/__integer'
        description: The channel version.
    description: Apple Distribution Push Notification Service channel definition.
  APNSMessage:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that occurs if the user taps a push notification delivered by the campaign: OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action. DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app. URL - The default mobile browser on the user''s device launches and opens a web page at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK | URL'
      Badge:
        $ref: '#/definitions/__integer'
        description: 'Include this key when you want the system to modify the badge of your app icon. If this key is not included in the dictionary, the badge is not changed. To remove the badge, set the value of this key to 0.'
      Body:
        $ref: '#/definitions/__string'
        description: The message body of the notification.
      Category:
        $ref: '#/definitions/__string'
        description: Provide this key with a string value that represents the notification's type. This value corresponds to the value in the identifier property of one of your app's registered categories.
      CollapseId:
        $ref: '#/definitions/__string'
        description: 'An ID that, if assigned to multiple messages, causes APNs to coalesce the messages into a single push notification instead of delivering each message individually. The value must not exceed 64 bytes. Amazon Pinpoint uses this value to set the apns-collapse-id request header when it sends the message to APNs.'
      Data:
        $ref: '#/definitions/MapOf__string'
        description: The data payload used for a silent push. This payload is added to the notifications' data.pinpoint.jsonBody' object
      MediaUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to a video used in the push notification.
      PreferredAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: 'The preferred authentication method, either "CERTIFICATE" or "TOKEN"'
      Priority:
        $ref: '#/definitions/__string'
        description: |-
          The message priority. Amazon Pinpoint uses this value to set the apns-priority request header when it sends the message to APNs. Accepts the following values:

          "5" - Low priority. Messages might be delayed, delivered in groups, and throttled.

          "10" - High priority. Messages are sent immediately. High priority messages must cause an alert, sound, or badge on the receiving device.

          The default value is "10".

          The equivalent values for FCM or GCM messages are "normal" and "high". Amazon Pinpoint accepts these values for APNs messages and converts them.

          For more information about the apns-priority parameter, see Communicating with APNs in the APNs Local and Remote Notification Programming Guide.
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: Indicates if the message should display on the users device. Silent pushes can be used for Remote Configuration and Phone Home use cases.
      Sound:
        $ref: '#/definitions/__string'
        description: 'Include this key when you want the system to play a sound. The value of this key is the name of a sound file in your app''s main bundle or in the Library/Sounds folder of your app''s data container. If the sound file cannot be found, or if you specify defaultfor the value, the system plays the default alert sound.'
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
      ThreadId:
        $ref: '#/definitions/__string'
        description: 'Provide this key with a string value that represents the app-specific identifier for grouping notifications. If you provide a Notification Content app extension, you can use this value to group your notifications together.'
      TimeToLive:
        $ref: '#/definitions/__integer'
        description: 'The length of time (in seconds) that APNs stores and attempts to deliver the message. If the value is 0, APNs does not store the message or attempt to deliver it more than once. Amazon Pinpoint uses this value to set the apns-expiration request header when it sends the message to APNs.'
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: APNS Message.
  APNSSandboxChannelRequest:
    type: object
    properties:
      BundleId:
        $ref: '#/definitions/__string'
        description: The bundle id used for APNs Tokens.
      Certificate:
        $ref: '#/definitions/__string'
        description: The distribution certificate from Apple.
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      PrivateKey:
        $ref: '#/definitions/__string'
        description: The certificate private key.
      TeamId:
        $ref: '#/definitions/__string'
        description: The team id used for APNs Tokens.
      TokenKey:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
      TokenKeyId:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
    description: Apple Development Push Notification Service channel definition.
  APNSSandboxChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application to which the channel applies.
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      HasTokenKey:
        $ref: '#/definitions/__boolean'
        description: Indicates whether the channel is configured with a key for APNs token authentication. Provide a token key by setting the TokenKey attribute.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who last updated this entry
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: The platform type. Will be APNS_SANDBOX.
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Apple Development Push Notification Service channel definition.
  APNSVoipChannelRequest:
    type: object
    properties:
      BundleId:
        $ref: '#/definitions/__string'
        description: The bundle id used for APNs Tokens.
      Certificate:
        $ref: '#/definitions/__string'
        description: The distribution certificate from Apple.
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      PrivateKey:
        $ref: '#/definitions/__string'
        description: The certificate private key.
      TeamId:
        $ref: '#/definitions/__string'
        description: The team id used for APNs Tokens.
      TokenKey:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
      TokenKeyId:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
    description: Apple VoIP Push Notification Service channel definition.
  APNSVoipChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: Application id
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      HasTokenKey:
        $ref: '#/definitions/__boolean'
        description: If the channel is registered with a token key for authentication.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who made the last change
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: The platform type. Will be APNS.
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Apple VoIP Push Notification Service channel definition.
  APNSVoipSandboxChannelRequest:
    type: object
    properties:
      BundleId:
        $ref: '#/definitions/__string'
        description: The bundle id used for APNs Tokens.
      Certificate:
        $ref: '#/definitions/__string'
        description: The distribution certificate from Apple.
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      PrivateKey:
        $ref: '#/definitions/__string'
        description: The certificate private key.
      TeamId:
        $ref: '#/definitions/__string'
        description: The team id used for APNs Tokens.
      TokenKey:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
      TokenKeyId:
        $ref: '#/definitions/__string'
        description: The token key used for APNs Tokens.
    description: Apple VoIP Developer Push Notification Service channel definition.
  APNSVoipSandboxChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: Application id
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      DefaultAuthenticationMethod:
        $ref: '#/definitions/__string'
        description: The default authentication method used for APNs.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      HasTokenKey:
        $ref: '#/definitions/__boolean'
        description: If the channel is registered with a token key for authentication.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who made the last change
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: The platform type. Will be APNS.
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Apple VoIP Developer Push Notification Service channel definition.
  ListOfActivityResponse:
    type: array
    items:
      $ref: '#/definitions/ActivityResponse'
  ActivitiesResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfActivityResponse'
        description: List of campaign activities
      NextToken:
        $ref: '#/definitions/__string'
        description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    description: Activities for campaign.
  ActivityResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application to which the campaign applies.
      CampaignId:
        $ref: '#/definitions/__string'
        description: The ID of the campaign to which the activity applies.
      End:
        $ref: '#/definitions/__string'
        description: The actual time the activity was marked CANCELLED or COMPLETED. Provided in ISO 8601 format.
      Id:
        $ref: '#/definitions/__string'
        description: The unique activity ID.
      Result:
        $ref: '#/definitions/__string'
        description: |-
          Indicates whether the activity succeeded.

          Valid values: SUCCESS, FAIL
      ScheduledStart:
        $ref: '#/definitions/__string'
        description: The scheduled start time for the activity in ISO 8601 format.
      Start:
        $ref: '#/definitions/__string'
        description: The actual start time of the activity in ISO 8601 format.
      State:
        $ref: '#/definitions/__string'
        description: |-
          The state of the activity.

          Valid values: PENDING, INITIALIZING, RUNNING, PAUSED, CANCELLED, COMPLETED
      SuccessfulEndpointCount:
        $ref: '#/definitions/__integer'
        description: The total number of endpoints to which the campaign successfully delivered messages.
      TimezonesCompletedCount:
        $ref: '#/definitions/__integer'
        description: The total number of timezones completed.
      TimezonesTotalCount:
        $ref: '#/definitions/__integer'
        description: The total number of unique timezones present in the segment.
      TotalEndpointCount:
        $ref: '#/definitions/__integer'
        description: The total number of endpoints to which the campaign attempts to deliver messages.
      TreatmentId:
        $ref: '#/definitions/__string'
        description: The ID of a variation of the campaign used for A/B testing.
    description: Activity definition
  ChannelType:
    type: string
    enum:
      - GCM
      - APNS
      - APNS_SANDBOX
      - APNS_VOIP
      - APNS_VOIP_SANDBOX
      - ADM
      - SMS
      - EMAIL
      - BAIDU
      - CUSTOM
  AddressConfiguration:
    type: object
    properties:
      BodyOverride:
        $ref: '#/definitions/__string'
        description: Body override. If specified will override default body.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: |-
          The channel type.

          Valid values: GCM | APNS | APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
      Context:
        $ref: '#/definitions/MapOf__string'
        description: A map of custom attributes to attributes to be attached to the message for this address. This payload is added to the push notification's 'data.pinpoint' object or added to the email/sms delivery receipt event attributes.
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: A map of substitution values for the message to be merged with the DefaultMessage's substitutions. Substitutions on this map take precedence over the all other substitutions.
      TitleOverride:
        $ref: '#/definitions/__string'
        description: Title override. If specified will override default title if applicable.
    description: Address configuration.
  ApplicationResponse:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: The unique application ID.
      Name:
        $ref: '#/definitions/__string'
        description: The display name of the application.
    description: Application Response.
  CampaignHook:
    type: object
    properties:
      LambdaFunctionName:
        $ref: '#/definitions/__string'
        description: Lambda function name or arn to be called for delivery
      Mode:
        $ref: '#/definitions/Mode'
        description: What mode Lambda should be invoked in.
      WebUrl:
        $ref: '#/definitions/__string'
        description: Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request
    description: Campaign hook information.
  CampaignLimits:
    type: object
    properties:
      Daily:
        $ref: '#/definitions/__integer'
        description: The maximum number of messages that the campaign can send daily.
      MaximumDuration:
        $ref: '#/definitions/__integer'
        description: The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
      MessagesPerSecond:
        $ref: '#/definitions/__integer'
        description: 'The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.'
      Total:
        $ref: '#/definitions/__integer'
        description: The maximum total number of messages that the campaign can send.
    description: Campaign Limits are used to limit the number of messages that can be sent to a user.
  QuietTime:
    type: object
    properties:
      End:
        $ref: '#/definitions/__string'
        description: The default end time for quiet time in ISO 8601 format.
      Start:
        $ref: '#/definitions/__string'
        description: The default start time for quiet time in ISO 8601 format.
    description: Quiet Time
  ApplicationSettingsResource:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID for the application.
      CampaignHook:
        $ref: '#/definitions/CampaignHook'
        description: Default campaign hook.
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: The date that the settings were last updated in ISO 8601 format.
      Limits:
        $ref: '#/definitions/CampaignLimits'
        description: 'The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own.'
      QuietTime:
        $ref: '#/definitions/QuietTime'
        description: The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own.
    description: Application settings.
  ListOfApplicationResponse:
    type: array
    items:
      $ref: '#/definitions/ApplicationResponse'
  ApplicationsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfApplicationResponse'
        description: List of applications returned in this page.
      NextToken:
        $ref: '#/definitions/__string'
        description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    description: Get Applications Result.
  AttributeType:
    type: string
    enum:
      - INCLUSIVE
      - EXCLUSIVE
  ListOf__string:
    type: array
    items:
      $ref: '#/definitions/__string'
  AttributeDimension:
    type: object
    properties:
      AttributeType:
        $ref: '#/definitions/AttributeType'
        description: |-
          The type of dimension:
          INCLUSIVE - Endpoints that match the criteria are included in the segment.
          EXCLUSIVE - Endpoints that match the criteria are excluded from the segment.
      Values:
        $ref: '#/definitions/ListOf__string'
        description: 'The criteria values for the segment dimension. Endpoints with matching attribute values are included or excluded from the segment, depending on the setting for Type.'
    description: Custom attibute dimension
  AttributesResource:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID for the application.
      AttributeType:
        $ref: '#/definitions/__string'
        description: The attribute type for the application.
      Attributes:
        $ref: '#/definitions/ListOf__string'
        description: The attributes for the application.
    description: Attributes.
  BaiduChannelRequest:
    type: object
    properties:
      ApiKey:
        $ref: '#/definitions/__string'
        description: Platform credential API key from Baidu.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      SecretKey:
        $ref: '#/definitions/__string'
        description: Platform credential Secret key from Baidu.
    description: Baidu Cloud Push credentials
  BaiduChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: Application id
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      Credential:
        $ref: '#/definitions/__string'
        description: The Baidu API key from Baidu.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who made the last change
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: The platform type. Will be BAIDU
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Baidu Cloud Messaging channel definition
  BaiduMessage:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that occurs if the user taps a push notification delivered by the campaign: OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action. DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app. URL - The default mobile browser on the user''s device launches and opens a web page at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK | URL'
      Body:
        $ref: '#/definitions/__string'
        description: The message body of the notification.
      Data:
        $ref: '#/definitions/MapOf__string'
        description: The data payload used for a silent push. This payload is added to the notifications' data.pinpoint.jsonBody' object
      IconReference:
        $ref: '#/definitions/__string'
        description: The icon image name of the asset saved in your application.
      ImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the large icon to the notification content view.
      ImageUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used in the push notification.
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: Indicates if the message should display on the users device. Silent pushes can be used for Remote Configuration and Phone Home use cases.
      SmallImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the small icon for the notification which will be used to represent the notification in the status bar and content view
      Sound:
        $ref: '#/definitions/__string'
        description: 'Indicates a sound to play when the device receives the notification. Supports default, or the filename of a sound resource bundled in the app. Android sound files must reside in /res/raw/'
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
      TimeToLive:
        $ref: '#/definitions/__integer'
        description: This parameter specifies how long (in seconds) the message should be kept in Baidu storage if the device is offline. The and the default value and the maximum time to live supported is 7 days (604800 seconds)
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: Baidu Message.
  CampaignEmailMessage:
    type: object
    properties:
      Body:
        $ref: '#/definitions/__string'
        description: The email text body.
      FromAddress:
        $ref: '#/definitions/__string'
        description: The email address used to send the email from. Defaults to use FromAddress specified in the Email Channel.
      HtmlBody:
        $ref: '#/definitions/__string'
        description: The email html body.
      Title:
        $ref: '#/definitions/__string'
        description: The email title (Or subject).
    description: The email message configuration.
  Mode:
    type: string
    enum:
      - DELIVERY
      - FILTER
  ListOfTreatmentResource:
    type: array
    items:
      $ref: '#/definitions/TreatmentResource'
  CampaignState:
    type: object
    properties:
      CampaignStatus:
        $ref: '#/definitions/CampaignStatus'
        description: |-
          The status of the campaign, or the status of a treatment that belongs to an A/B test campaign.

          Valid values: SCHEDULED, EXECUTING, PENDING_NEXT_RUN, COMPLETED, PAUSED
    description: State of the Campaign
  MessageConfiguration:
    type: object
    properties:
      ADMMessage:
        $ref: '#/definitions/Message'
        description: The message that the campaign delivers to ADM channels. Overrides the default message.
      APNSMessage:
        $ref: '#/definitions/Message'
        description: The message that the campaign delivers to APNS channels. Overrides the default message.
      BaiduMessage:
        $ref: '#/definitions/Message'
        description: The message that the campaign delivers to Baidu channels. Overrides the default message.
      DefaultMessage:
        $ref: '#/definitions/Message'
        description: The default message for all channels.
      EmailMessage:
        $ref: '#/definitions/CampaignEmailMessage'
        description: The email message configuration.
      GCMMessage:
        $ref: '#/definitions/Message'
        description: The message that the campaign delivers to GCM channels. Overrides the default message.
      SMSMessage:
        $ref: '#/definitions/CampaignSmsMessage'
        description: The SMS message configuration.
    description: Message configuration for a campaign.
  Schedule:
    type: object
    properties:
      EndTime:
        $ref: '#/definitions/__string'
        description: The scheduled time that the campaign ends in ISO 8601 format.
      Frequency:
        $ref: '#/definitions/Frequency'
        description: |-
          How often the campaign delivers messages.

          Valid values: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY
      IsLocalTime:
        $ref: '#/definitions/__boolean'
        description: Indicates whether the campaign schedule takes effect according to each user's local time.
      QuietTime:
        $ref: '#/definitions/QuietTime'
        description: The time during which the campaign sends no messages.
      StartTime:
        $ref: '#/definitions/__string'
        description: The scheduled time that the campaign begins in ISO 8601 format.
      Timezone:
        $ref: '#/definitions/__string'
        description: |-
          The starting UTC offset for the schedule if the value for isLocalTime is true

          Valid values: 
          UTC
          UTC+01
          UTC+02
          UTC+03
          UTC+03:30
          UTC+04
          UTC+04:30
          UTC+05
          UTC+05:30
          UTC+05:45
          UTC+06
          UTC+06:30
          UTC+07
          UTC+08
          UTC+09
          UTC+09:30
          UTC+10
          UTC+10:30
          UTC+11
          UTC+12
          UTC+13
          UTC-02
          UTC-03
          UTC-04
          UTC-05
          UTC-06
          UTC-07
          UTC-08
          UTC-09
          UTC-10
          UTC-11
    description: Shcedule that defines when a campaign is run.
  CampaignResponse:
    type: object
    properties:
      AdditionalTreatments:
        $ref: '#/definitions/ListOfTreatmentResource'
        description: Treatments that are defined in addition to the default treatment.
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application to which the campaign applies.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date the campaign was created in ISO 8601 format.
      DefaultState:
        $ref: '#/definitions/CampaignState'
        description: The status of the campaign's default treatment. Only present for A/B test campaigns.
      Description:
        $ref: '#/definitions/__string'
        description: A description of the campaign.
      HoldoutPercent:
        $ref: '#/definitions/__integer'
        description: The allocated percentage of end users who will not receive messages from this campaign.
      Hook:
        $ref: '#/definitions/CampaignHook'
        description: Campaign hook information.
      Id:
        $ref: '#/definitions/__string'
        description: The unique campaign ID.
      IsPaused:
        $ref: '#/definitions/__boolean'
        description: Indicates whether the campaign is paused. A paused campaign does not send messages unless you resume it by setting IsPaused to false.
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: "The date the campaign was last updated in ISO 8601 format.\t"
      Limits:
        $ref: '#/definitions/CampaignLimits'
        description: The campaign limits settings.
      MessageConfiguration:
        $ref: '#/definitions/MessageConfiguration'
        description: The message configuration settings.
      Name:
        $ref: '#/definitions/__string'
        description: The custom name of the campaign.
      Schedule:
        $ref: '#/definitions/Schedule'
        description: The campaign schedule.
      SegmentId:
        $ref: '#/definitions/__string'
        description: The ID of the segment to which the campaign sends messages.
      SegmentVersion:
        $ref: '#/definitions/__integer'
        description: The version of the segment to which the campaign sends messages.
      State:
        $ref: '#/definitions/CampaignState'
        description: |-
          The campaign status.

          An A/B test campaign will have a status of COMPLETED only when all treatments have a status of COMPLETED.
      TreatmentDescription:
        $ref: '#/definitions/__string'
        description: A custom description for the treatment.
      TreatmentName:
        $ref: '#/definitions/__string'
        description: The custom name of a variation of the campaign used for A/B testing.
      Version:
        $ref: '#/definitions/__integer'
        description: The campaign version number.
    description: Campaign definition
  MessageType:
    type: string
    enum:
      - TRANSACTIONAL
      - PROMOTIONAL
  CampaignSmsMessage:
    type: object
    properties:
      Body:
        $ref: '#/definitions/__string'
        description: The SMS text body.
      MessageType:
        $ref: '#/definitions/MessageType'
        description: 'Is this is a transactional SMS message, otherwise a promotional message.'
      SenderId:
        $ref: '#/definitions/__string'
        description: Sender ID of sent message.
    description: SMS message configuration.
  CampaignStatus:
    type: string
    enum:
      - SCHEDULED
      - EXECUTING
      - PENDING_NEXT_RUN
      - COMPLETED
      - PAUSED
      - DELETED
  ListOfCampaignResponse:
    type: array
    items:
      $ref: '#/definitions/CampaignResponse'
  CampaignsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfCampaignResponse'
        description: A list of campaigns.
      NextToken:
        $ref: '#/definitions/__string'
        description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    description: List of available campaigns.
  ChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: Application id
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who made the last change
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Base definition for channel response.
  MapOfChannelResponse:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/ChannelResponse'
  ChannelsResponse:
    type: object
    properties:
      Channels:
        $ref: '#/definitions/MapOfChannelResponse'
        description: 'A map of channels, with the ChannelType as the key and the Channel as the value.'
    description: Get channels definition
  CreateApplicationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The display name of the application. Used in the Amazon Pinpoint console.
    description: Application Request.
  WriteCampaignRequest:
    type: object
    properties:
      AdditionalTreatments:
        $ref: '#/definitions/ListOfWriteTreatmentResource'
        description: Treatments that are defined in addition to the default treatment.
      Description:
        $ref: '#/definitions/__string'
        description: A description of the campaign.
      HoldoutPercent:
        $ref: '#/definitions/__integer'
        description: The allocated percentage of end users who will not receive messages from this campaign.
      Hook:
        $ref: '#/definitions/CampaignHook'
        description: Campaign hook information.
      IsPaused:
        $ref: '#/definitions/__boolean'
        description: Indicates whether the campaign is paused. A paused campaign does not send messages unless you resume it by setting IsPaused to false.
      Limits:
        $ref: '#/definitions/CampaignLimits'
        description: The campaign limits settings.
      MessageConfiguration:
        $ref: '#/definitions/MessageConfiguration'
        description: The message configuration settings.
      Name:
        $ref: '#/definitions/__string'
        description: The custom name of the campaign.
      Schedule:
        $ref: '#/definitions/Schedule'
        description: The campaign schedule.
      SegmentId:
        $ref: '#/definitions/__string'
        description: The ID of the segment to which the campaign sends messages.
      SegmentVersion:
        $ref: '#/definitions/__integer'
        description: The version of the segment to which the campaign sends messages.
      TreatmentDescription:
        $ref: '#/definitions/__string'
        description: A custom description for the treatment.
      TreatmentName:
        $ref: '#/definitions/__string'
        description: The custom name of a variation of the campaign used for A/B testing.
    description: Used to create a campaign.
  ExportJobRequest:
    type: object
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that endpoints will be exported to.
      S3UrlPrefix:
        $ref: '#/definitions/__string'
        description: |-
          A URL that points to the location within an Amazon S3 bucket that will receive the export. The location is typically a folder with multiple files.

          The URL should follow this format: s3://bucket-name/folder-name/

          Amazon Pinpoint will export endpoints to this location.
      SegmentId:
        $ref: '#/definitions/__string'
        description: 'The ID of the segment to export endpoints from. If not present, Amazon Pinpoint exports all of the endpoints that belong to the application.'
      SegmentVersion:
        $ref: '#/definitions/__integer'
        description: The version of the segment to export if specified.
    description: Export job request.
  ExportJobResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID of the application associated with the export job.
      CompletedPieces:
        $ref: '#/definitions/__integer'
        description: The number of pieces that have successfully completed as of the time of the request.
      CompletionDate:
        $ref: '#/definitions/__string'
        description: The date the job completed in ISO 8601 format.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date the job was created in ISO 8601 format.
      Definition:
        $ref: '#/definitions/ExportJobResource'
        description: The export job settings.
      FailedPieces:
        $ref: '#/definitions/__integer'
        description: The number of pieces that failed to be processed as of the time of the request.
      Failures:
        $ref: '#/definitions/ListOf__string'
        description: 'Provides up to 100 of the first failed entries for the job, if any exist.'
      Id:
        $ref: '#/definitions/__string'
        description: The unique ID of the job.
      JobStatus:
        $ref: '#/definitions/JobStatus'
        description: |-
          The status of the job.
          Valid values: CREATED, INITIALIZING, PROCESSING, COMPLETING, COMPLETED, FAILING, FAILED

          The job status is FAILED if one or more pieces failed.
      TotalFailures:
        $ref: '#/definitions/__integer'
        description: 'The number of endpoints that were not processed; for example, because of syntax errors.'
      TotalPieces:
        $ref: '#/definitions/__integer'
        description: The total number of pieces that must be processed to finish the job. Each piece is an approximately equal portion of the endpoints.
      TotalProcessed:
        $ref: '#/definitions/__integer'
        description: The number of endpoints that were processed by the job.
      Type:
        $ref: '#/definitions/__string'
        description: The job type. Will be 'EXPORT'.
    description: Export job response.
  ImportJobRequest:
    type: object
    properties:
      DefineSegment:
        $ref: '#/definitions/__boolean'
        description: Sets whether the endpoints create a segment when they are imported.
      ExternalId:
        $ref: '#/definitions/__string'
        description: '(Deprecated) Your AWS account ID, which you assigned to the ExternalID key in an IAM trust policy. Used by Amazon Pinpoint to assume an IAM role. This requirement is removed, and external IDs are not recommended for IAM roles assumed by Amazon Pinpoint.'
      Format:
        $ref: '#/definitions/Format'
        description: |-
          The format of the files that contain the endpoint definitions.
          Valid values: CSV, JSON
      RegisterEndpoints:
        $ref: '#/definitions/__boolean'
        description: Sets whether the endpoints are registered with Amazon Pinpoint when they are imported.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that contains the endpoints to import.
      S3Url:
        $ref: '#/definitions/__string'
        description: |-
          The URL of the S3 bucket that contains the segment information to import. The location can be a folder or a single file. The URL should use the following format: s3://bucket-name/folder-name/file-name

          Amazon Pinpoint imports endpoints from this location and any subfolders it contains.
      SegmentId:
        $ref: '#/definitions/__string'
        description: The ID of the segment to update if the import job is meant to update an existing segment.
      SegmentName:
        $ref: '#/definitions/__string'
        description: A custom name for the segment created by the import job. Use if DefineSegment is true.
    description: Import job request.
  ImportJobResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID of the application to which the import job applies.
      CompletedPieces:
        $ref: '#/definitions/__integer'
        description: The number of pieces that have successfully imported as of the time of the request.
      CompletionDate:
        $ref: '#/definitions/__string'
        description: The date the import job completed in ISO 8601 format.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date the import job was created in ISO 8601 format.
      Definition:
        $ref: '#/definitions/ImportJobResource'
        description: The import job settings.
      FailedPieces:
        $ref: '#/definitions/__integer'
        description: The number of pieces that have failed to import as of the time of the request.
      Failures:
        $ref: '#/definitions/ListOf__string'
        description: 'Provides up to 100 of the first failed entries for the job, if any exist.'
      Id:
        $ref: '#/definitions/__string'
        description: The unique ID of the import job.
      JobStatus:
        $ref: '#/definitions/JobStatus'
        description: |-
          The status of the import job.
          Valid values: CREATED, INITIALIZING, PROCESSING, COMPLETING, COMPLETED, FAILING, FAILED

          The job status is FAILED if one or more pieces failed to import.
      TotalFailures:
        $ref: '#/definitions/__integer'
        description: 'The number of endpoints that failed to import; for example, because of syntax errors.'
      TotalPieces:
        $ref: '#/definitions/__integer'
        description: The total number of pieces that must be imported to finish the job. Each piece is an approximately equal portion of the endpoints to import.
      TotalProcessed:
        $ref: '#/definitions/__integer'
        description: The number of endpoints that were processed by the import job.
      Type:
        $ref: '#/definitions/__string'
        description: The job type. Will be Import.
    description: Import job response.
  WriteSegmentRequest:
    type: object
    properties:
      Dimensions:
        $ref: '#/definitions/SegmentDimensions'
        description: The segment dimensions attributes.
      Name:
        $ref: '#/definitions/__string'
        description: The name of segment
      SegmentGroups:
        $ref: '#/definitions/SegmentGroupList'
        description: 'A segment group, which consists of zero or more source segments, plus dimensions that are applied to those source segments. Your request can only include one segment group. Your request can include either a SegmentGroups object or a Dimensions object, but not both.'
    description: Segment definition.
  SegmentResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application that the segment applies to.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date and time when the segment was created.
      Dimensions:
        $ref: '#/definitions/SegmentDimensions'
        description: The segment dimensions attributes.
      Id:
        $ref: '#/definitions/__string'
        description: The unique segment ID.
      ImportDefinition:
        $ref: '#/definitions/SegmentImportResource'
        description: The import job settings.
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: The date and time when the segment was last modified.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the segment.
      SegmentGroups:
        $ref: '#/definitions/SegmentGroupList'
        description: 'A segment group, which consists of zero or more source segments, plus dimensions that are applied to those source segments.'
      SegmentType:
        $ref: '#/definitions/SegmentType'
        description: |-
          The segment type:
          DIMENSIONAL - A dynamic segment built from selection criteria based on endpoint data reported by your app. You create this type of segment by using the segment builder in the Amazon Pinpoint console or by making a POST request to the segments resource.
          IMPORT - A static segment built from an imported set of endpoint definitions. You create this type of segment by importing a segment in the Amazon Pinpoint console or by making a POST request to the jobs/import resource.
      Version:
        $ref: '#/definitions/__integer'
        description: The segment version number.
    description: Segment definition.
  DefaultMessage:
    type: object
    properties:
      Body:
        $ref: '#/definitions/__string'
        description: 'The message body of the notification, the email body or the text message.'
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
    description: The default message to use across all channels.
  DefaultPushNotificationMessage:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that occurs if the user taps a push notification delivered by the campaign: OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action. DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app. URL - The default mobile browser on the user''s device launches and opens a web page at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK | URL'
      Body:
        $ref: '#/definitions/__string'
        description: The message body of the notification.
      Data:
        $ref: '#/definitions/MapOf__string'
        description: The data payload used for a silent push. This payload is added to the notifications' data.pinpoint.jsonBody' object
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: Indicates if the message should display on the users device. Silent pushes can be used for Remote Configuration and Phone Home use cases.
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: Default Push Notification Message.
  EmailChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID of the application to which the email channel belongs.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date that the settings were last updated in ISO 8601 format.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      FromAddress:
        $ref: '#/definitions/__string'
        description: The email address used to send emails from.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      Identity:
        $ref: '#/definitions/__string'
        description: The ARN of an identity verified with SES.
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who last updated this entry
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      MessagesPerSecond:
        $ref: '#/definitions/__integer'
        description: Messages per second that can be sent
      Platform:
        $ref: '#/definitions/__string'
        description: Platform type. Will be "EMAIL"
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Email Channel Response.
  EndpointResponse:
    type: object
    properties:
      Address:
        $ref: '#/definitions/__string'
        description: 'The address of the endpoint as provided by your push provider. For example, the DeviceToken or RegistrationId.'
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application that is associated with the endpoint.
      Attributes:
        $ref: '#/definitions/MapOfListOf__string'
        description: |-
          Custom attributes that describe the endpoint by associating a name with an array of values. For example, an attribute named "interests" might have the following values: ["science", "politics", "travel"]. You can use these attributes as selection criteria when you create segments.

          The Amazon Pinpoint console can't display attribute names that include the following characters: hash/pound sign (#), colon (:), question mark (?), backslash (\), and forward slash (/). For this reason, you should avoid using these characters in the names of custom attributes.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: |-
          The channel type.

          Valid values: GCM | APNS | APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
      CohortId:
        $ref: '#/definitions/__string'
        description: 'A number from 0-99 that represents the cohort the endpoint is assigned to. Endpoints are grouped into cohorts randomly, and each cohort contains approximately 1 percent of the endpoints for an app. Amazon Pinpoint assigns cohorts to the holdout or treatment allocations for a campaign.'
      CreationDate:
        $ref: '#/definitions/__string'
        description: 'The date and time when the endpoint was created, shown in ISO 8601 format.'
      Demographic:
        $ref: '#/definitions/EndpointDemographic'
        description: The endpoint demographic attributes.
      EffectiveDate:
        $ref: '#/definitions/__string'
        description: 'The date and time when the endpoint was last updated, shown in ISO 8601 format.'
      EndpointStatus:
        $ref: '#/definitions/__string'
        description: Unused.
      Id:
        $ref: '#/definitions/__string'
        description: The unique ID that you assigned to the endpoint. The ID should be a globally unique identifier (GUID) to ensure that it doesn't conflict with other endpoint IDs associated with the application.
      Location:
        $ref: '#/definitions/EndpointLocation'
        description: The endpoint location attributes.
      Metrics:
        $ref: '#/definitions/MapOf__double'
        description: Custom metrics that your app reports to Amazon Pinpoint.
      OptOut:
        $ref: '#/definitions/__string'
        description: |-
          Indicates whether a user has opted out of receiving messages with one of the following values:

          ALL - User has opted out of all messages.

          NONE - Users has not opted out and receives all messages.
      RequestId:
        $ref: '#/definitions/__string'
        description: The unique ID for the most recent request to update the endpoint.
      User:
        $ref: '#/definitions/EndpointUser'
        description: Custom user-specific attributes that your app reports to Amazon Pinpoint.
    description: Endpoint response
  EventStream:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application from which events should be published.
      DestinationStreamArn:
        $ref: '#/definitions/__string'
        description: |-
          The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.
           Firehose ARN: arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
           Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
      ExternalId:
        $ref: '#/definitions/__string'
        description: '(Deprecated) Your AWS account ID, which you assigned to the ExternalID key in an IAM trust policy. Used by Amazon Pinpoint to assume an IAM role. This requirement is removed, and external IDs are not recommended for IAM roles assumed by Amazon Pinpoint.'
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: The date the event stream was last updated in ISO 8601 format.
      LastUpdatedBy:
        $ref: '#/definitions/__string'
        description: The IAM user who last modified the event stream.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account.
    description: Model for an event publishing subscription export.
  GCMChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The ID of the application to which the channel applies.
      CreationDate:
        $ref: '#/definitions/__string'
        description: When was this segment created
      Credential:
        $ref: '#/definitions/__string'
        description: The GCM API key from Google.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: Channel ID. Not used. Present only for backwards compatibility.
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who last updated this entry
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: The platform type. Will be GCM
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: Google Cloud Messaging channel definition
  SMSChannelResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID of the application to which the SMS channel belongs.
      CreationDate:
        $ref: '#/definitions/__string'
        description: The date that the settings were last updated in ISO 8601 format.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      HasCredential:
        $ref: '#/definitions/__boolean'
        description: Not used. Retained for backwards compatibility.
      Id:
        $ref: '#/definitions/__string'
        description: 'Channel ID. Not used, only for backwards compatibility.'
      IsArchived:
        $ref: '#/definitions/__boolean'
        description: Is this channel archived
      LastModifiedBy:
        $ref: '#/definitions/__string'
        description: Who last updated this entry
      LastModifiedDate:
        $ref: '#/definitions/__string'
        description: Last date this was updated
      Platform:
        $ref: '#/definitions/__string'
        description: Platform type. Will be "SMS"
      PromotionalMessagesPerSecond:
        $ref: '#/definitions/__integer'
        description: Promotional messages per second that can be sent
      SenderId:
        $ref: '#/definitions/__string'
        description: Sender identifier of your messages.
      ShortCode:
        $ref: '#/definitions/__string'
        description: The short code registered with the phone provider.
      TransactionalMessagesPerSecond:
        $ref: '#/definitions/__integer'
        description: Transactional messages per second that can be sent
      Version:
        $ref: '#/definitions/__integer'
        description: Version of channel
    description: SMS Channel Response.
  EndpointsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfEndpointResponse'
        description: The list of endpoints.
    description: List of endpoints
  DeliveryStatus:
    type: string
    enum:
      - SUCCESSFUL
      - THROTTLED
      - TEMPORARY_FAILURE
      - PERMANENT_FAILURE
      - UNKNOWN_FAILURE
      - OPT_OUT
      - DUPLICATE
  DimensionType:
    type: string
    enum:
      - INCLUSIVE
      - EXCLUSIVE
  GCMMessage:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that occurs if the user taps a push notification delivered by the campaign: OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action. DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app. URL - The default mobile browser on the user''s device launches and opens a web page at the URL you specify. Possible values include: OPEN_APP | DEEP_LINK | URL'
      Body:
        $ref: '#/definitions/__string'
        description: The message body of the notification.
      CollapseKey:
        $ref: '#/definitions/__string'
        description: 'This parameter identifies a group of messages (e.g., with collapse_key: "Updates Available") that can be collapsed, so that only the last message gets sent when delivery can be resumed. This is intended to avoid sending too many of the same messages when the device comes back online or becomes active.'
      Data:
        $ref: '#/definitions/MapOf__string'
        description: The data payload used for a silent push. This payload is added to the notifications' data.pinpoint.jsonBody' object
      IconReference:
        $ref: '#/definitions/__string'
        description: The icon image name of the asset saved in your application.
      ImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the large icon to the notification content view.
      ImageUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used in the push notification.
      Priority:
        $ref: '#/definitions/__string'
        description: |-
          The message priority. Amazon Pinpoint uses this value to set the FCM or GCM priority parameter when it sends the message. Accepts the following values:

          "Normal" - Messages might be delayed. Delivery is optimized for battery usage on the receiving device. Use normal priority unless immediate delivery is required.

          "High" - Messages are sent immediately and might wake a sleeping device.

          The equivalent values for APNs messages are "5" and "10". Amazon Pinpoint accepts these values here and converts them.

          For more information, see About FCM Messages in the Firebase documentation.
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      RestrictedPackageName:
        $ref: '#/definitions/__string'
        description: This parameter specifies the package name of the application where the registration tokens must match in order to receive the message.
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: Indicates if the message should display on the users device. Silent pushes can be used for Remote Configuration and Phone Home use cases.
      SmallImageIconUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used as the small icon for the notification which will be used to represent the notification in the status bar and content view
      Sound:
        $ref: '#/definitions/__string'
        description: 'Indicates a sound to play when the device receives the notification. Supports default, or the filename of a sound resource bundled in the app. Android sound files must reside in /res/raw/'
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
      TimeToLive:
        $ref: '#/definitions/__integer'
        description: 'The length of time (in seconds) that FCM or GCM stores and attempts to deliver the message. If unspecified, the value defaults to the maximum, which is 2,419,200 seconds (28 days). Amazon Pinpoint uses this value to set the FCM or GCM time_to_live parameter.'
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: GCM Message.
  SMSMessage:
    type: object
    properties:
      Body:
        $ref: '#/definitions/__string'
        description: The body of the SMS message.
      Keyword:
        $ref: '#/definitions/__string'
        description: The SMS program name that you provided to AWS Support when you requested your dedicated number.
      MessageType:
        $ref: '#/definitions/MessageType'
        description: Is this a transaction priority message or lower priority.
      OriginationNumber:
        $ref: '#/definitions/__string'
        description: 'The phone number that the SMS message originates from. Specify one of the dedicated long codes or short codes that you requested from AWS Support and that is assigned to your account. If this attribute is not specified, Amazon Pinpoint randomly assigns a long code.'
      SenderId:
        $ref: '#/definitions/__string'
        description: The sender ID that is shown as the message sender on the recipient's device. Support for sender IDs varies by country or region.
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: Default message substitutions. Can be overridden by individual address substitutions.
    description: SMS Message.
  DirectMessageConfiguration:
    type: object
    properties:
      ADMMessage:
        $ref: '#/definitions/ADMMessage'
        description: The message to ADM channels. Overrides the default push notification message.
      APNSMessage:
        $ref: '#/definitions/APNSMessage'
        description: The message to APNS channels. Overrides the default push notification message.
      BaiduMessage:
        $ref: '#/definitions/BaiduMessage'
        description: The message to Baidu GCM channels. Overrides the default push notification message.
      DefaultMessage:
        $ref: '#/definitions/DefaultMessage'
        description: The default message for all channels.
      DefaultPushNotificationMessage:
        $ref: '#/definitions/DefaultPushNotificationMessage'
        description: The default push notification message for all push channels.
      GCMMessage:
        $ref: '#/definitions/GCMMessage'
        description: The message to GCM channels. Overrides the default push notification message.
      SMSMessage:
        $ref: '#/definitions/SMSMessage'
        description: The message to SMS channels. Overrides the default message.
    description: Message definitions for the default message and any messages that are tailored for specific channels.
  Duration:
    type: string
    enum:
      - HR_24
      - DAY_7
      - DAY_14
      - DAY_30
  EmailChannelRequest:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      FromAddress:
        $ref: '#/definitions/__string'
        description: The email address used to send emails from.
      Identity:
        $ref: '#/definitions/__string'
        description: The ARN of an identity verified with SES.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of an IAM Role used to submit events to Mobile Analytics' event ingestion service
    description: Email Channel Request
  EndpointDemographic:
    type: object
    properties:
      AppVersion:
        $ref: '#/definitions/__string'
        description: The version of the application associated with the endpoint.
      Locale:
        $ref: '#/definitions/__string'
        description: |
          The endpoint locale in the following format: The ISO 639-1 alpha-2 code, followed by an underscore, followed by an ISO 3166-1 alpha-2 value.
      Make:
        $ref: '#/definitions/__string'
        description: 'The manufacturer of the endpoint device, such as Apple or Samsung.'
      Model:
        $ref: '#/definitions/__string'
        description: 'The model name or number of the endpoint device, such as iPhone.'
      ModelVersion:
        $ref: '#/definitions/__string'
        description: The model version of the endpoint device.
      Platform:
        $ref: '#/definitions/__string'
        description: 'The platform of the endpoint device, such as iOS or Android.'
      PlatformVersion:
        $ref: '#/definitions/__string'
        description: The platform version of the endpoint device.
      Timezone:
        $ref: '#/definitions/__string'
        description: 'The timezone of the endpoint. Specified as a tz database value, such as Americas/Los_Angeles.'
    description: Demographic information about the endpoint.
  EndpointLocation:
    type: object
    properties:
      City:
        $ref: '#/definitions/__string'
        description: The city where the endpoint is located.
      Country:
        $ref: '#/definitions/__string'
        description: 'The two-letter code for the country or region of the endpoint. Specified as an ISO 3166-1 Alpha-2 code, such as "US" for the United States.'
      Latitude:
        $ref: '#/definitions/__double'
        description: 'The latitude of the endpoint location, rounded to one decimal place.'
      Longitude:
        $ref: '#/definitions/__double'
        description: 'The longitude of the endpoint location, rounded to one decimal place.'
      PostalCode:
        $ref: '#/definitions/__string'
        description: The postal code or zip code of the endpoint.
      Region:
        $ref: '#/definitions/__string'
        description: 'The region of the endpoint location. For example, in the United States, this corresponds to a state.'
    description: Location data for the endpoint.
  MapOf__double:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/__double'
  EndpointUser:
    type: object
    properties:
      UserAttributes:
        $ref: '#/definitions/MapOfListOf__string'
        description: |-
          Custom attributes that describe the user by associating a name with an array of values. For example, an attribute named "interests" might have the following values: ["science", "politics", "travel"]. You can use these attributes as selection criteria when you create segments.

          The Amazon Pinpoint console can't display attribute names that include the following characters: hash/pound sign (#), colon (:), question mark (?), backslash (\), and forward slash (/). For this reason, you should avoid using these characters in the names of custom attributes.
      UserId:
        $ref: '#/definitions/__string'
        description: The unique ID of the user.
    description: Endpoint user specific custom userAttributes
  EndpointBatchItem:
    type: object
    properties:
      Address:
        $ref: '#/definitions/__string'
        description: 'The destination for messages that you send to this endpoint. The address varies by channel. For mobile push channels, use the token provided by the push notification service, such as the APNs device token or the FCM registration token. For the SMS channel, use a phone number in E.164 format, such as +12065550100. For the email channel, use an email address.'
      Attributes:
        $ref: '#/definitions/MapOfListOf__string'
        description: |-
          Custom attributes that describe the endpoint by associating a name with an array of values. For example, an attribute named "interests" might have the values ["science", "politics", "travel"]. You can use these attributes as selection criteria when you create a segment of users to engage with a messaging campaign.

          The following characters are not recommended in attribute names: # : ? \ /. The Amazon Pinpoint console does not display attributes that include these characters in the name. This limitation does not apply to attribute values.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: |-
          The channel type.

          Valid values: GCM | APNS | APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
      Demographic:
        $ref: '#/definitions/EndpointDemographic'
        description: The endpoint demographic attributes.
      EffectiveDate:
        $ref: '#/definitions/__string'
        description: The last time the endpoint was updated. Provided in ISO 8601 format.
      EndpointStatus:
        $ref: '#/definitions/__string'
        description: Unused.
      Id:
        $ref: '#/definitions/__string'
        description: The unique Id for the Endpoint in the batch.
      Location:
        $ref: '#/definitions/EndpointLocation'
        description: The endpoint location attributes.
      Metrics:
        $ref: '#/definitions/MapOf__double'
        description: Custom metrics that your app reports to Amazon Pinpoint.
      OptOut:
        $ref: '#/definitions/__string'
        description: |-
          Indicates whether a user has opted out of receiving messages with one of the following values:

          ALL - User has opted out of all messages.

          NONE - Users has not opted out and receives all messages.
      RequestId:
        $ref: '#/definitions/__string'
        description: The unique ID for the most recent request to update the endpoint.
      User:
        $ref: '#/definitions/EndpointUser'
        description: Custom user-specific attributes that your app reports to Amazon Pinpoint.
    description: Endpoint update request
  ListOfEndpointBatchItem:
    type: array
    items:
      $ref: '#/definitions/EndpointBatchItem'
  EndpointBatchRequest:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfEndpointBatchItem'
        description: List of items to update. Maximum 100 items
    description: Endpoint batch update request.
  EndpointItemResponse:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: A custom message associated with the registration of an endpoint when issuing a response.
      StatusCode:
        $ref: '#/definitions/__integer'
        description: The status code to respond with for a particular endpoint id after endpoint registration
    description: The responses that are returned after you create or update an endpoint and record an event.
  __double:
    type: number
    format: double
  EndpointMessageResult:
    type: object
    properties:
      Address:
        $ref: '#/definitions/__string'
        description: Address that endpoint message was delivered to.
      DeliveryStatus:
        $ref: '#/definitions/DeliveryStatus'
        description: |-
          The delivery status of the message. Possible values:

          SUCCESS - The message was successfully delivered to the endpoint.

          TRANSIENT_FAILURE - A temporary error occurred. Amazon Pinpoint will attempt to deliver the message again later.

          FAILURE_PERMANENT - An error occurred when delivering the message to the endpoint. Amazon Pinpoint won't attempt to send the message again.

          TIMEOUT - The message couldn't be sent within the timeout period.

          QUIET_TIME - The local time for the endpoint was within the Quiet Hours for the campaign.

          DAILY_CAP - The endpoint has received the maximum number of messages it can receive within a 24-hour period.

          HOLDOUT - The endpoint was in a hold out treatment for the campaign.

          THROTTLED - Amazon Pinpoint throttled sending to this endpoint.

          EXPIRED - The endpoint address is expired.

          CAMPAIGN_CAP - The endpoint received the maximum number of messages allowed by the campaign.

          SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from delivering the message.

          UNKNOWN - An unknown error occurred.
      MessageId:
        $ref: '#/definitions/__string'
        description: Unique message identifier associated with the message that was sent.
      StatusCode:
        $ref: '#/definitions/__integer'
        description: Downstream service status code.
      StatusMessage:
        $ref: '#/definitions/__string'
        description: Status message for message delivery.
      UpdatedToken:
        $ref: '#/definitions/__string'
        description: If token was updated as part of delivery. (This is GCM Specific)
    description: The result from sending a message to an endpoint.
  EndpointRequest:
    type: object
    properties:
      Address:
        $ref: '#/definitions/__string'
        description: 'The destination for messages that you send to this endpoint. The address varies by channel. For mobile push channels, use the token provided by the push notification service, such as the APNs device token or the FCM registration token. For the SMS channel, use a phone number in E.164 format, such as +12065550100. For the email channel, use an email address.'
      Attributes:
        $ref: '#/definitions/MapOfListOf__string'
        description: |-
          Custom attributes that describe the endpoint by associating a name with an array of values. For example, an attribute named "interests" might have the values ["science", "politics", "travel"]. You can use these attributes as selection criteria when you create a segment of users to engage with a messaging campaign.

          The following characters are not recommended in attribute names: # : ? \ /. The Amazon Pinpoint console does not display attributes that include these characters in the name. This limitation does not apply to attribute values.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: |-
          The channel type.

          Valid values: GCM | APNS | APNS_SANDBOX | APNS_VOIP | APNS_VOIP_SANDBOX | ADM | SMS | EMAIL | BAIDU
      Demographic:
        $ref: '#/definitions/EndpointDemographic'
        description: Demographic attributes for the endpoint.
      EffectiveDate:
        $ref: '#/definitions/__string'
        description: 'The date and time when the endpoint was updated, shown in ISO 8601 format.'
      EndpointStatus:
        $ref: '#/definitions/__string'
        description: Unused.
      Location:
        $ref: '#/definitions/EndpointLocation'
        description: The endpoint location attributes.
      Metrics:
        $ref: '#/definitions/MapOf__double'
        description: Custom metrics that your app reports to Amazon Pinpoint.
      OptOut:
        $ref: '#/definitions/__string'
        description: |-
          Indicates whether a user has opted out of receiving messages with one of the following values:

          ALL - User has opted out of all messages.

          NONE - Users has not opted out and receives all messages.
      RequestId:
        $ref: '#/definitions/__string'
        description: The unique ID for the most recent request to update the endpoint.
      User:
        $ref: '#/definitions/EndpointUser'
        description: Custom user-specific attributes that your app reports to Amazon Pinpoint.
    description: Endpoint update request
  EndpointSendConfiguration:
    type: object
    properties:
      BodyOverride:
        $ref: '#/definitions/__string'
        description: Body override. If specified will override default body.
      Context:
        $ref: '#/definitions/MapOf__string'
        description: A map of custom attributes to attributes to be attached to the message for this address. This payload is added to the push notification's 'data.pinpoint' object or added to the email/sms delivery receipt event attributes.
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      Substitutions:
        $ref: '#/definitions/MapOfListOf__string'
        description: A map of substitution values for the message to be merged with the DefaultMessage's substitutions. Substitutions on this map take precedence over the all other substitutions.
      TitleOverride:
        $ref: '#/definitions/__string'
        description: Title override. If specified will override default title if applicable.
    description: Endpoint send configuration.
  ListOfEndpointResponse:
    type: array
    items:
      $ref: '#/definitions/EndpointResponse'
  Session:
    type: object
    properties:
      Duration:
        $ref: '#/definitions/__integer'
        description: Session duration in millis
      Id:
        $ref: '#/definitions/__string'
        description: A unique identifier for the session.
      StartTimestamp:
        $ref: '#/definitions/__string'
        description: The date and time when the session began.
      StopTimestamp:
        $ref: '#/definitions/__string'
        description: The date and time when the session ended.
    description: Information about a session.
  Event:
    type: object
    properties:
      Attributes:
        $ref: '#/definitions/MapOf__string'
        description: Custom attributes that are associated with the event you're adding or updating.
      ClientSdkVersion:
        $ref: '#/definitions/__string'
        description: The version of the SDK that's running on the client device.
      EventType:
        $ref: '#/definitions/__string'
        description: The name of the custom event that you're recording.
      Metrics:
        $ref: '#/definitions/MapOf__double'
        description: Event metrics
      Session:
        $ref: '#/definitions/Session'
        description: The session
      Timestamp:
        $ref: '#/definitions/__string'
        description: 'The date and time when the event occurred, in ISO 8601 format.'
    description: Model for creating or updating events.
  EventItemResponse:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: A custom message that is associated with the processing of an event.
      StatusCode:
        $ref: '#/definitions/__integer'
        description: The status code to respond with for a particular event id
    description: The responses that are returned after you record an event.
  PublicEndpoint:
    type: object
    properties:
      Address:
        $ref: '#/definitions/__string'
        description: 'The unique identifier for the recipient. For example, an address could be a device token or an endpoint ID.'
      Attributes:
        $ref: '#/definitions/MapOfListOf__string'
        description: Custom attributes that your app reports to Amazon Pinpoint. You can use these attributes as selection criteria when you create a segment.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: |-
          The channel type.

          Valid values: APNS, GCM
      Demographic:
        $ref: '#/definitions/EndpointDemographic'
        description: The endpoint demographic attributes.
      EffectiveDate:
        $ref: '#/definitions/__string'
        description: The date and time when the endpoint was last updated.
      EndpointStatus:
        $ref: '#/definitions/__string'
        description: 'The status of the endpoint. If the update fails, the value is INACTIVE. If the endpoint is updated successfully, the value is ACTIVE.'
      Location:
        $ref: '#/definitions/EndpointLocation'
        description: The endpoint location attributes.
      Metrics:
        $ref: '#/definitions/MapOf__double'
        description: Custom metrics that your app reports to Amazon Pinpoint.
      OptOut:
        $ref: '#/definitions/__string'
        description: |-
          Indicates whether a user has opted out of receiving messages with one of the following values:

          ALL - User has opted out of all messages.

          NONE - Users has not opted out and receives all messages.
      RequestId:
        $ref: '#/definitions/__string'
        description: A unique identifier that is generated each time the endpoint is updated.
      User:
        $ref: '#/definitions/EndpointUser'
        description: Custom user-specific attributes that your app reports to Amazon Pinpoint.
    description: Public endpoint attributes.
  MapOfEvent:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/Event'
  EventsBatch:
    type: object
    properties:
      Endpoint:
        $ref: '#/definitions/PublicEndpoint'
        description: Endpoint information
      Events:
        $ref: '#/definitions/MapOfEvent'
        description: Events
    description: Events batch definition
  MapOfEventsBatch:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/EventsBatch'
  EventsRequest:
    type: object
    properties:
      BatchItem:
        $ref: '#/definitions/MapOfEventsBatch'
        description: Batch of events with endpoint id as the key and an object of EventsBatch as value. The EventsBatch object has the PublicEndpoint and a map of event Id's to events
    description: Put Events request
  MapOfItemResponse:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/ItemResponse'
  EventsResponse:
    type: object
    properties:
      Results:
        $ref: '#/definitions/MapOfItemResponse'
        description: 'A map containing a multi part response for each endpoint, with the endpoint id as the key and item response as the value'
    description: The results from processing a put events request
  ExportJobResource:
    type: object
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that endpoints will be exported to.
      S3UrlPrefix:
        $ref: '#/definitions/__string'
        description: |-
          A URL that points to the location within an Amazon S3 bucket that will receive the export. The location is typically a folder with multiple files.

          The URL should follow this format: s3://bucket-name/folder-name/

          Amazon Pinpoint will export endpoints to this location.
      SegmentId:
        $ref: '#/definitions/__string'
        description: 'The ID of the segment to export endpoints from. If not present, Amazon Pinpoint exports all of the endpoints that belong to the application.'
      SegmentVersion:
        $ref: '#/definitions/__integer'
        description: The version of the segment to export if specified.
    description: Export job resource.
  JobStatus:
    type: string
    enum:
      - CREATED
      - INITIALIZING
      - PROCESSING
      - COMPLETING
      - COMPLETED
      - FAILING
      - FAILED
  ListOfExportJobResponse:
    type: array
    items:
      $ref: '#/definitions/ExportJobResponse'
  ExportJobsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfExportJobResponse'
        description: A list of export jobs for the application.
      NextToken:
        $ref: '#/definitions/__string'
        description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    description: Export job list.
  Format:
    type: string
    enum:
      - CSV
      - JSON
  Frequency:
    type: string
    enum:
      - ONCE
      - HOURLY
      - DAILY
      - WEEKLY
      - MONTHLY
  GCMChannelRequest:
    type: object
    properties:
      ApiKey:
        $ref: '#/definitions/__string'
        description: Platform credential API key from Google.
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
    description: Google Cloud Messaging credentials
  GPSCoordinates:
    type: object
    properties:
      Latitude:
        $ref: '#/definitions/__double'
        description: Latitude
      Longitude:
        $ref: '#/definitions/__double'
        description: Longitude
    description: GPS coordinates
  GPSPointDimension:
    type: object
    properties:
      Coordinates:
        $ref: '#/definitions/GPSCoordinates'
        description: Coordinate to measure distance from.
      RangeInKilometers:
        $ref: '#/definitions/__double'
        description: Range in kilometers from the coordinate.
    description: GPS point location dimension
  ImportJobsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfImportJobResponse'
        description: A list of import jobs for the application.
      NextToken:
        $ref: '#/definitions/__string'
        description: The string that you use in a subsequent request to get the next page of results in a paginated response.
    description: Import job list.
  SegmentsResponse:
    type: object
    properties:
      Item:
        $ref: '#/definitions/ListOfSegmentResponse'
        description: The list of segments.
      NextToken:
        $ref: '#/definitions/__string'
        description: An identifier used to retrieve the next page of results. The token is null if no additional pages exist.
    description: Segments in your account.
  ImportJobResource:
    type: object
    properties:
      DefineSegment:
        $ref: '#/definitions/__boolean'
        description: Sets whether the endpoints create a segment when they are imported.
      ExternalId:
        $ref: '#/definitions/__string'
        description: '(Deprecated) Your AWS account ID, which you assigned to the ExternalID key in an IAM trust policy. Used by Amazon Pinpoint to assume an IAM role. This requirement is removed, and external IDs are not recommended for IAM roles assumed by Amazon Pinpoint.'
      Format:
        $ref: '#/definitions/Format'
        description: |-
          The format of the files that contain the endpoint definitions.
          Valid values: CSV, JSON
      RegisterEndpoints:
        $ref: '#/definitions/__boolean'
        description: Sets whether the endpoints are registered with Amazon Pinpoint when they are imported.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the Amazon S3 location that contains the endpoints to import.
      S3Url:
        $ref: '#/definitions/__string'
        description: |-
          The URL of the S3 bucket that contains the segment information to import. The location can be a folder or a single file. The URL should use the following format: s3://bucket-name/folder-name/file-name

          Amazon Pinpoint imports endpoints from this location and any subfolders it contains.
      SegmentId:
        $ref: '#/definitions/__string'
        description: The ID of the segment to update if the import job is meant to update an existing segment.
      SegmentName:
        $ref: '#/definitions/__string'
        description: A custom name for the segment created by the import job. Use if DefineSegment is true.
    description: Import job resource
  ListOfImportJobResponse:
    type: array
    items:
      $ref: '#/definitions/ImportJobResponse'
  Include:
    type: string
    enum:
      - ALL
      - ANY
      - NONE
  MapOfEventItemResponse:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/EventItemResponse'
  ItemResponse:
    type: object
    properties:
      EndpointItemResponse:
        $ref: '#/definitions/EndpointItemResponse'
        description: Endpoint item response after endpoint registration
      EventsItemResponse:
        $ref: '#/definitions/MapOfEventItemResponse'
        description: 'Events item response is a multipart response object per event Id, with eventId as the key and EventItemResponse object as the value'
    description: The endpoint and events combined response definition
  Message:
    type: object
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: |-
          The action that occurs if the user taps a push notification delivered by the campaign:
          OPEN_APP - Your app launches, or it becomes the foreground app if it has been sent to the background. This is the default action.

          DEEP_LINK - Uses deep linking features in iOS and Android to open your app and display a designated user interface within the app.

          URL - The default mobile browser on the user's device launches and opens a web page at the URL you specify.
      Body:
        $ref: '#/definitions/__string'
        description: The message body. Can include up to 140 characters.
      ImageIconUrl:
        $ref: '#/definitions/__string'
        description: 'The URL that points to the icon image for the push notification icon, for example, the app icon.'
      ImageSmallIconUrl:
        $ref: '#/definitions/__string'
        description: 'The URL that points to the small icon image for the push notification icon, for example, the app icon.'
      ImageUrl:
        $ref: '#/definitions/__string'
        description: The URL that points to an image used in the push notification.
      JsonBody:
        $ref: '#/definitions/__string'
        description: The JSON payload used for a silent push.
      MediaUrl:
        $ref: '#/definitions/__string'
        description: 'The URL that points to the media resource, for example a .mp4 or .gif file.'
      RawContent:
        $ref: '#/definitions/__string'
        description: The Raw JSON formatted string to be used as the payload. This value overrides the message.
      SilentPush:
        $ref: '#/definitions/__boolean'
        description: |-
          Indicates if the message should display on the users device.

          Silent pushes can be used for Remote Configuration and Phone Home use cases. 
      TimeToLive:
        $ref: '#/definitions/__integer'
        description: 'This parameter specifies how long (in seconds) the message should be kept if the service is unable to deliver the notification the first time. If the value is 0, it treats the notification as if it expires immediately and does not store the notification or attempt to redeliver it. This value is converted to the expiration field when sent to the service. It only applies to APNs and GCM'
      Title:
        $ref: '#/definitions/__string'
        description: The message title that displays above the message on the user's device.
      Url:
        $ref: '#/definitions/__string'
        description: The URL to open in the user's mobile browser. Used if the value for Action is URL.
    description: Message to send
  MessageBody:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: The error message that's returned from the API.
      RequestID:
        $ref: '#/definitions/__string'
        description: The unique message body ID.
    description: Simple message object.
  MapOfAddressConfiguration:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/AddressConfiguration'
  MapOfEndpointSendConfiguration:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/EndpointSendConfiguration'
  MessageRequest:
    type: object
    properties:
      Addresses:
        $ref: '#/definitions/MapOfAddressConfiguration'
        description: 'A map of key-value pairs, where each key is an address and each value is an AddressConfiguration object. An address can be a push notification token, a phone number, or an email address.'
      Context:
        $ref: '#/definitions/MapOf__string'
        description: A map of custom attributes to attributes to be attached to the message. This payload is added to the push notification's 'data.pinpoint' object or added to the email/sms delivery receipt event attributes.
      Endpoints:
        $ref: '#/definitions/MapOfEndpointSendConfiguration'
        description: 'A map of key-value pairs, where each key is an endpoint ID and each value is an EndpointSendConfiguration object. Within an EndpointSendConfiguration object, you can tailor the message for an endpoint by specifying message overrides or substitutions.'
      MessageConfiguration:
        $ref: '#/definitions/DirectMessageConfiguration'
        description: Message configuration.
      TraceId:
        $ref: '#/definitions/__string'
        description: A unique ID that you can use to trace a message. This ID is visible to recipients.
    description: Send message request.
  MapOfEndpointMessageResult:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/EndpointMessageResult'
  MapOfMessageResult:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/MessageResult'
  MessageResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: Application id of the message.
      EndpointResult:
        $ref: '#/definitions/MapOfEndpointMessageResult'
        description: 'A map containing a multi part response for each address, with the endpointId as the key and the result as the value.'
      RequestId:
        $ref: '#/definitions/__string'
        description: Original request Id for which this message was delivered.
      Result:
        $ref: '#/definitions/MapOfMessageResult'
        description: 'A map containing a multi part response for each address, with the address as the key(Email address, phone number or push token) and the result as the value.'
    description: Send message response.
  MessageResult:
    type: object
    properties:
      DeliveryStatus:
        $ref: '#/definitions/DeliveryStatus'
        description: |-
          The delivery status of the message. Possible values:

          SUCCESS - The message was successfully delivered to the endpoint.

          TRANSIENT_FAILURE - A temporary error occurred. Amazon Pinpoint will attempt to deliver the message again later.

          FAILURE_PERMANENT - An error occurred when delivering the message to the endpoint. Amazon Pinpoint won't attempt to send the message again.

          TIMEOUT - The message couldn't be sent within the timeout period.

          QUIET_TIME - The local time for the endpoint was within the Quiet Hours for the campaign.

          DAILY_CAP - The endpoint has received the maximum number of messages it can receive within a 24-hour period.

          HOLDOUT - The endpoint was in a hold out treatment for the campaign.

          THROTTLED - Amazon Pinpoint throttled sending to this endpoint.

          EXPIRED - The endpoint address is expired.

          CAMPAIGN_CAP - The endpoint received the maximum number of messages allowed by the campaign.

          SERVICE_FAILURE - A service-level failure prevented Amazon Pinpoint from delivering the message.

          UNKNOWN - An unknown error occurred.
      MessageId:
        $ref: '#/definitions/__string'
        description: Unique message identifier associated with the message that was sent.
      StatusCode:
        $ref: '#/definitions/__integer'
        description: Downstream service status code.
      StatusMessage:
        $ref: '#/definitions/__string'
        description: Status message for message delivery.
      UpdatedToken:
        $ref: '#/definitions/__string'
        description: If token was updated as part of delivery. (This is GCM Specific)
    description: The result from sending a message to an address.
  MetricDimension:
    type: object
    properties:
      ComparisonOperator:
        $ref: '#/definitions/__string'
        description: GREATER_THAN | LESS_THAN | GREATER_THAN_OR_EQUAL | LESS_THAN_OR_EQUAL | EQUAL
      Value:
        $ref: '#/definitions/__double'
        description: Value to be compared.
    description: Custom metric dimension
  NumberValidateRequest:
    type: object
    properties:
      IsoCountryCode:
        $ref: '#/definitions/__string'
        description: (Optional) The two-character ISO country code for the country or region where the phone number was originally registered.
      PhoneNumber:
        $ref: '#/definitions/__string'
        description: 'The phone number to get information about. The phone number that you provide should include a country code. If the number doesn''t include a valid country code, the operation might result in an error.'
    description: Phone Number Information request.
  NumberValidateResponse:
    type: object
    properties:
      Carrier:
        $ref: '#/definitions/__string'
        description: The carrier or servive provider that the phone number is currently registered with.
      City:
        $ref: '#/definitions/__string'
        description: The city where the phone number was originally registered.
      CleansedPhoneNumberE164:
        $ref: '#/definitions/__string'
        description: 'The cleansed phone number, shown in E.164 format.'
      CleansedPhoneNumberNational:
        $ref: '#/definitions/__string'
        description: 'The cleansed phone number, shown in the local phone number format.'
      Country:
        $ref: '#/definitions/__string'
        description: The country or region where the phone number was originally registered.
      CountryCodeIso2:
        $ref: '#/definitions/__string'
        description: The two-character ISO code for the country or region where the phone number was originally registered.
      CountryCodeNumeric:
        $ref: '#/definitions/__string'
        description: The numeric code for the country or region where the phone number was originally registered.
      County:
        $ref: '#/definitions/__string'
        description: The county where the phone number was originally registered.
      OriginalCountryCodeIso2:
        $ref: '#/definitions/__string'
        description: The two-character ISO code for the country or region that you included in the request body.
      OriginalPhoneNumber:
        $ref: '#/definitions/__string'
        description: The phone number that you included in the request body.
      PhoneType:
        $ref: '#/definitions/__string'
        description: 'A description of the phone type. Possible values are MOBILE, LANDLINE, VOIP, INVALID, PREPAID, and OTHER.'
      PhoneTypeCode:
        $ref: '#/definitions/__integer'
        description: 'The phone type, represented by an integer. Possible values include 0 (MOBILE), 1 (LANDLINE), 2 (VOIP), 3 (INVALID), 4 (OTHER), and 5 (PREPAID).'
      Timezone:
        $ref: '#/definitions/__string'
        description: The time zone for the location where the phone number was originally registered.
      ZipCode:
        $ref: '#/definitions/__string'
        description: The postal code for the location where the phone number was originally registered.
    description: Phone Number Information response.
  WriteEventStream:
    type: object
    properties:
      DestinationStreamArn:
        $ref: '#/definitions/__string'
        description: |-
          The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.
           Firehose ARN: arn:aws:firehose:REGION:ACCOUNT_ID:deliverystream/STREAM_NAME
           Kinesis ARN: arn:aws:kinesis:REGION:ACCOUNT_ID:stream/STREAM_NAME
      RoleArn:
        $ref: '#/definitions/__string'
        description: The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account.
    description: Request to save an EventStream.
  RecencyType:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  RecencyDimension:
    type: object
    properties:
      Duration:
        $ref: '#/definitions/Duration'
        description: |-
          The length of time during which users have been active or inactive with your app.
          Valid values: HR_24, DAY_7, DAY_14, DAY_30
      RecencyType:
        $ref: '#/definitions/RecencyType'
        description: |-
          The recency dimension type:
          ACTIVE - Users who have used your app within the specified duration are included in the segment.
          INACTIVE - Users who have not used your app within the specified duration are included in the segment.
    description: Define how a segment based on recency of use.
  UpdateAttributesRequest:
    type: object
    properties:
      Blacklist:
        $ref: '#/definitions/ListOf__string'
        description: The GLOB wildcard for removing the attributes in the application
    description: Update attributes request
  SMSChannelRequest:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/__boolean'
        description: If the channel is enabled for sending messages.
      SenderId:
        $ref: '#/definitions/__string'
        description: Sender identifier of your messages.
      ShortCode:
        $ref: '#/definitions/__string'
        description: ShortCode registered with phone provider.
    description: SMS Channel Request
  SegmentBehaviors:
    type: object
    properties:
      Recency:
        $ref: '#/definitions/RecencyDimension'
        description: The recency of use.
    description: Segment behavior dimensions
  SetDimension:
    type: object
    properties:
      DimensionType:
        $ref: '#/definitions/DimensionType'
        description: |-
          The type of dimension:
          INCLUSIVE - Endpoints that match the criteria are included in the segment.
          EXCLUSIVE - Endpoints that match the criteria are excluded from the segment.
      Values:
        $ref: '#/definitions/ListOf__string'
        description: 'The criteria values for the segment dimension. Endpoints with matching attribute values are included or excluded from the segment, depending on the setting for Type.'
    description: Dimension specification of a segment.
  SegmentDemographics:
    type: object
    properties:
      AppVersion:
        $ref: '#/definitions/SetDimension'
        description: The app version criteria for the segment.
      Channel:
        $ref: '#/definitions/SetDimension'
        description: The channel criteria for the segment.
      DeviceType:
        $ref: '#/definitions/SetDimension'
        description: The device type criteria for the segment.
      Make:
        $ref: '#/definitions/SetDimension'
        description: The device make criteria for the segment.
      Model:
        $ref: '#/definitions/SetDimension'
        description: The device model criteria for the segment.
      Platform:
        $ref: '#/definitions/SetDimension'
        description: The device platform criteria for the segment.
    description: Segment demographic dimensions
  MapOfAttributeDimension:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/AttributeDimension'
  SegmentLocation:
    type: object
    properties:
      Country:
        $ref: '#/definitions/SetDimension'
        description: The country filter according to ISO 3166-1 Alpha-2 codes.
      GPSPoint:
        $ref: '#/definitions/GPSPointDimension'
        description: The GPS Point dimension.
    description: Segment location dimensions
  MapOfMetricDimension:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/MetricDimension'
  SegmentDimensions:
    type: object
    properties:
      Attributes:
        $ref: '#/definitions/MapOfAttributeDimension'
        description: Custom segment attributes.
      Behavior:
        $ref: '#/definitions/SegmentBehaviors'
        description: The segment behaviors attributes.
      Demographic:
        $ref: '#/definitions/SegmentDemographics'
        description: The segment demographics attributes.
      Location:
        $ref: '#/definitions/SegmentLocation'
        description: The segment location attributes.
      Metrics:
        $ref: '#/definitions/MapOfMetricDimension'
        description: Custom segment metrics.
      UserAttributes:
        $ref: '#/definitions/MapOfAttributeDimension'
        description: Custom segment user attributes.
    description: Segment dimensions
  ListOfSegmentDimensions:
    type: array
    items:
      $ref: '#/definitions/SegmentDimensions'
  ListOfSegmentReference:
    type: array
    items:
      $ref: '#/definitions/SegmentReference'
  SourceType:
    type: string
    enum:
      - ALL
      - ANY
      - NONE
  Type:
    type: string
    enum:
      - ALL
      - ANY
      - NONE
  SegmentGroup:
    type: object
    properties:
      Dimensions:
        $ref: '#/definitions/ListOfSegmentDimensions'
        description: List of dimensions to include or exclude.
      SourceSegments:
        $ref: '#/definitions/ListOfSegmentReference'
        description: 'The base segment that you build your segment on. The source segment defines the starting "universe" of endpoints. When you add dimensions to the segment, it filters the source segment based on the dimensions that you specify. You can specify more than one dimensional segment. You can only specify one imported segment.'
      SourceType:
        $ref: '#/definitions/SourceType'
        description: 'Specify how to handle multiple source segments. For example, if you specify three source segments, should the resulting segment be based on any or all of the segments? Acceptable values: ANY or ALL.'
      Type:
        $ref: '#/definitions/Type'
        description: 'Specify how to handle multiple segment dimensions. For example, if you specify three dimensions, should the resulting segment include endpoints that are matched by all, any, or none of the dimensions? Acceptable values: ALL, ANY, or NONE.'
    description: Segment group definition.
  ListOfSegmentGroup:
    type: array
    items:
      $ref: '#/definitions/SegmentGroup'
  SegmentGroupList:
    type: object
    properties:
      Groups:
        $ref: '#/definitions/ListOfSegmentGroup'
        description: A set of segment criteria to evaluate.
      Include:
        $ref: '#/definitions/Include'
        description: 'Specify how to handle multiple segment groups. For example, if the segment includes three segment groups, should the resulting segment include endpoints that are matched by all, any, or none of the segment groups you created. Acceptable values: ALL, ANY, or NONE.'
    description: Segment group definition.
  MapOf__integer:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/__integer'
  SegmentImportResource:
    type: object
    properties:
      ChannelCounts:
        $ref: '#/definitions/MapOf__integer'
        description: The number of channel types in the imported segment.
      ExternalId:
        $ref: '#/definitions/__string'
        description: '(Deprecated) Your AWS account ID, which you assigned to the ExternalID key in an IAM trust policy. Used by Amazon Pinpoint to assume an IAM role. This requirement is removed, and external IDs are not recommended for IAM roles assumed by Amazon Pinpoint.'
      Format:
        $ref: '#/definitions/Format'
        description: |-
          The format of the endpoint files that were imported to create this segment.
          Valid values: CSV, JSON
      RoleArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of an IAM role that grants Amazon Pinpoint access to the endpoints in Amazon S3.
      S3Url:
        $ref: '#/definitions/__string'
        description: The URL of the S3 bucket that the segment was imported from.
      Size:
        $ref: '#/definitions/__integer'
        description: The number of endpoints that were successfully imported to create this segment.
    description: Segment import definition.
  SegmentReference:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: A unique identifier for the segment.
      Version:
        $ref: '#/definitions/__integer'
        description: If specified contains a specific version of the segment included.
    description: Segment reference.
  SegmentType:
    type: string
    enum:
      - DIMENSIONAL
      - IMPORT
  ListOfSegmentResponse:
    type: array
    items:
      $ref: '#/definitions/SegmentResponse'
  SendUsersMessageRequest:
    type: object
    properties:
      Context:
        $ref: '#/definitions/MapOf__string'
        description: A map of custom attribute-value pairs. Amazon Pinpoint adds these attributes to the data.pinpoint object in the body of the push notification payload. Amazon Pinpoint also provides these attributes in the events that it generates for users-messages deliveries.
      MessageConfiguration:
        $ref: '#/definitions/DirectMessageConfiguration'
        description: Message definitions for the default message and any messages that are tailored for specific channels.
      TraceId:
        $ref: '#/definitions/__string'
        description: A unique ID that you can use to trace a message. This ID is visible to recipients.
      Users:
        $ref: '#/definitions/MapOfEndpointSendConfiguration'
        description: 'A map that associates user IDs with EndpointSendConfiguration objects. Within an EndpointSendConfiguration object, you can tailor the message for a user by specifying message overrides or substitutions.'
    description: Send message request.
  MapOfMapOfEndpointMessageResult:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/MapOfEndpointMessageResult'
  SendUsersMessageResponse:
    type: object
    properties:
      ApplicationId:
        $ref: '#/definitions/__string'
        description: The unique ID of the Amazon Pinpoint project used to send the message.
      RequestId:
        $ref: '#/definitions/__string'
        description: The unique ID assigned to the users-messages request.
      Result:
        $ref: '#/definitions/MapOfMapOfEndpointMessageResult'
        description: 'An object that shows the endpoints that were messaged for each user. The object provides a list of user IDs. For each user ID, it provides the endpoint IDs that were messaged. For each endpoint ID, it provides an EndpointMessageResult object.'
    description: User send message response.
  TreatmentResource:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: The unique treatment ID.
      MessageConfiguration:
        $ref: '#/definitions/MessageConfiguration'
        description: The message configuration settings.
      Schedule:
        $ref: '#/definitions/Schedule'
        description: The campaign schedule.
      SizePercent:
        $ref: '#/definitions/__integer'
        description: The allocated percentage of users for this treatment.
      State:
        $ref: '#/definitions/CampaignState'
        description: The treatment status.
      TreatmentDescription:
        $ref: '#/definitions/__string'
        description: A custom description for the treatment.
      TreatmentName:
        $ref: '#/definitions/__string'
        description: The custom name of a variation of the campaign used for A/B testing.
    description: Treatment resource
  WriteApplicationSettingsRequest:
    type: object
    properties:
      CampaignHook:
        $ref: '#/definitions/CampaignHook'
        description: Default campaign hook information.
      CloudWatchMetricsEnabled:
        $ref: '#/definitions/__boolean'
        description: The CloudWatchMetrics settings for the app.
      Limits:
        $ref: '#/definitions/CampaignLimits'
        description: 'The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own.'
      QuietTime:
        $ref: '#/definitions/QuietTime'
        description: The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own.
    description: Creating application setting request
  ListOfWriteTreatmentResource:
    type: array
    items:
      $ref: '#/definitions/WriteTreatmentResource'
  WriteTreatmentResource:
    type: object
    properties:
      MessageConfiguration:
        $ref: '#/definitions/MessageConfiguration'
        description: The message configuration settings.
      Schedule:
        $ref: '#/definitions/Schedule'
        description: The campaign schedule.
      SizePercent:
        $ref: '#/definitions/__integer'
        description: The allocated percentage of users for this treatment.
      TreatmentDescription:
        $ref: '#/definitions/__string'
        description: A custom description for the treatment.
      TreatmentName:
        $ref: '#/definitions/__string'
        description: The custom name of a variation of the campaign used for A/B testing.
    description: Used to create a campaign treatment.
  __long:
    type: integer
  __timestampIso8601:
    type: string
    format: date-time
  __timestampUnix:
    type: string
    format: date-time
