swagger: '2.0'
info:
  version: '2015-12-10'
  x-release: v4
  title: AWS Service Catalog
  description: '<fullname>AWS Service Catalog</fullname> <p> <a href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> enables organizations to create and manage catalogs of IT services that are approved for use on AWS. To get the most out of this documentation, you should be familiar with the terminology discussed in <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/what-is_concepts.html">AWS Service Catalog Concepts</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: servicecatalog
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-2015-12-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/servicecatalog/'
host: servicecatalog.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AcceptPortfolioShare
      description: Accepts an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptPortfolioShareOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcceptPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociatePrincipalWithPortfolio':
    post:
      operationId: AssociatePrincipalWithPortfolio
      description: Associates the specified principal ARN with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateProductWithPortfolio':
    post:
      operationId: AssociateProductWithPortfolio
      description: Associates the specified product with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateTagOptionWithResource':
    post:
      operationId: AssociateTagOptionWithResource
      description: Associate the specified TagOption with the specified portfolio or product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '485':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateTagOptionWithResourceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CopyProduct':
    post:
      operationId: CopyProduct
      description: '<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CopyProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateConstraint':
    post:
      operationId: CreateConstraint
      description: Creates a constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolio':
    post:
      operationId: CreatePortfolio
      description: Creates a portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolioShare':
    post:
      operationId: CreatePortfolioShare
      description: Shares the specified portfolio with the specified account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProduct':
    post:
      operationId: CreateProduct
      description: Creates a product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProvisionedProductPlan':
    post:
      operationId: CreateProvisionedProductPlan
      description: '<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProvisioningArtifact':
    post:
      operationId: CreateProvisioningArtifact
      description: <p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTagOption':
    post:
      operationId: CreateTagOption
      description: Creates a TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteConstraint':
    post:
      operationId: DeleteConstraint
      description: Deletes the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolio':
    post:
      operationId: DeletePortfolio
      description: '<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolioShare':
    post:
      operationId: DeletePortfolioShare
      description: Stops sharing the specified portfolio with the specified account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProduct':
    post:
      operationId: DeleteProduct
      description: <p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProvisionedProductPlan':
    post:
      operationId: DeleteProvisionedProductPlan
      description: Deletes the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProvisioningArtifact':
    post:
      operationId: DeleteProvisioningArtifact
      description: '<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTagOption':
    post:
      operationId: DeleteTagOption
      description: <p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeConstraint':
    post:
      operationId: DescribeConstraint
      description: Gets information about the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCopyProductStatus':
    post:
      operationId: DescribeCopyProductStatus
      description: Gets the status of the specified copy product operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCopyProductStatusInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePortfolio':
    post:
      operationId: DescribePortfolio
      description: Gets information about the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProduct':
    post:
      operationId: DescribeProduct
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductAsAdmin':
    post:
      operationId: DescribeProductAsAdmin
      description: Gets information about the specified product. This operation is run with administrator access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductAsAdminInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductView':
    post:
      operationId: DescribeProductView
      description: Gets information about the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductViewOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductViewInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisionedProduct':
    post:
      operationId: DescribeProvisionedProduct
      description: Gets information about the specified provisioned product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisionedProductPlan':
    post:
      operationId: DescribeProvisionedProductPlan
      description: Gets information about the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisionedProductPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningArtifact':
    post:
      operationId: DescribeProvisioningArtifact
      description: Gets information about the specified provisioning artifact (also known as a version) for the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningParameters':
    post:
      operationId: DescribeProvisioningParameters
      description: '<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRecord':
    post:
      operationId: DescribeRecord
      description: '<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecordInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTagOption':
    post:
      operationId: DescribeTagOption
      description: Gets information about the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociatePrincipalFromPortfolio':
    post:
      operationId: DisassociatePrincipalFromPortfolio
      description: Disassociates a previously associated principal ARN from a specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateProductFromPortfolio':
    post:
      operationId: DisassociateProductFromPortfolio
      description: 'Disassociates the specified product from the specified portfolio. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateTagOptionFromResource':
    post:
      operationId: DisassociateTagOptionFromResource
      description: Disassociates the specified TagOption from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateTagOptionFromResourceInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ExecuteProvisionedProductPlan':
    post:
      operationId: ExecuteProvisionedProductPlan
      description: Provisions or modifies a product based on the resource changes for the specified plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductPlanOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteProvisionedProductPlanInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAcceptedPortfolioShares':
    post:
      operationId: ListAcceptedPortfolioShares
      description: Lists all portfolios for which sharing was accepted by this account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListConstraintsForPortfolio':
    post:
      operationId: ListConstraintsForPortfolio
      description: Lists the constraints for the specified portfolio and product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListLaunchPaths':
    post:
      operationId: ListLaunchPaths
      description: 'Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchPathsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLaunchPathsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolioAccess':
    post:
      operationId: ListPortfolioAccess
      description: Lists the account IDs that have access to the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfolioAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolios':
    post:
      operationId: ListPortfolios
      description: Lists all portfolios in the catalog.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfoliosForProduct':
    post:
      operationId: ListPortfoliosForProduct
      description: Lists all portfolios that the specified product is associated with.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosForProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosForProductInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPrincipalsForPortfolio':
    post:
      operationId: ListPrincipalsForPortfolio
      description: Lists all principal ARNs associated with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisionedProductPlans':
    post:
      operationId: ListProvisionedProductPlans
      description: Lists the plans for the specified provisioned product or all plans to which the user has access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisionedProductPlansOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisionedProductPlansInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisioningArtifacts':
    post:
      operationId: ListProvisioningArtifacts
      description: Lists all provisioning artifacts (also known as versions) for the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRecordHistory':
    post:
      operationId: ListRecordHistory
      description: Lists the specified requests or all performed requests.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecordHistoryOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRecordHistoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourcesForTagOption':
    post:
      operationId: ListResourcesForTagOption
      description: Lists the resources associated with the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourcesForTagOptionInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagOptions':
    post:
      operationId: ListTagOptions
      description: Lists the specified TagOptions or all TagOptions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagOptionsOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagOptionsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ProvisionProduct':
    post:
      operationId: ProvisionProduct
      description: '<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>".</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProvisionProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RejectPortfolioShare':
    post:
      operationId: RejectPortfolioShare
      description: Rejects an offer to share the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectPortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RejectPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ScanProvisionedProducts':
    post:
      operationId: ScanProvisionedProducts
      description: '<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScanProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ScanProvisionedProductsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProducts':
    post:
      operationId: SearchProducts
      description: Gets information about the products to which the caller has access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProductsAsAdmin':
    post:
      operationId: SearchProductsAsAdmin
      description: Gets information about the products for the specified portfolio or all products.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsAsAdminInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProvisionedProducts':
    post:
      operationId: SearchProvisionedProducts
      description: Gets information about the provisioned products that meet the specified criteria.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProvisionedProductsInput'
        - name: PageSize
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PageToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateProvisionedProduct':
    post:
      operationId: TerminateProvisionedProduct
      description: <p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateConstraint':
    post:
      operationId: UpdateConstraint
      description: Updates the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePortfolio':
    post:
      operationId: UpdatePortfolio
      description: <p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProduct':
    post:
      operationId: UpdateProduct
      description: Updates the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisionedProduct':
    post:
      operationId: UpdateProvisionedProduct
      description: '<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisioningArtifact':
    post:
      operationId: UpdateProvisioningArtifact
      description: <p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateTagOption':
    post:
      operationId: UpdateTagOption
      description: Updates the specified TagOption.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTagOptionOutput'
        '480':
          description: TagOptionNotMigratedException
          schema:
            $ref: '#/definitions/TagOptionNotMigratedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
        '483':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTagOptionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptPortfolioShareOutput:
    type: object
    properties: {}
  AcceptPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  InvalidParametersException:
    type: object
    properties: {}
    description: One or more parameters provided to the operation are not valid.
  ResourceNotFoundException:
    type: object
    properties: {}
    description: The specified resource was not found.
  LimitExceededException:
    type: object
    properties: {}
    description: The current limits of the service would have been exceeded by this operation. Decrease your resource use or increase your service limits and retry the operation.
  AssociatePrincipalWithPortfolioOutput:
    type: object
    properties: {}
  AssociatePrincipalWithPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
      - PrincipalType
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN of the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: The principal type. The supported value is <code>IAM</code>.
  AssociateProductWithPortfolioOutput:
    type: object
    properties: {}
  AssociateProductWithPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      SourcePortfolioId:
        $ref: '#/definitions/Id'
        description: The identifier of the source portfolio.
  AssociateTagOptionWithResourceOutput:
    type: object
    properties: {}
  AssociateTagOptionWithResourceInput:
    type: object
    required:
      - ResourceId
      - TagOptionId
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource identifier.
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
  TagOptionNotMigratedException:
    type: object
    properties: {}
    description: An operation requiring TagOptions failed because the TagOptions migration process has not been performed for this account. Please use the AWS console to perform the migration process before retrying the operation.
  DuplicateResourceException:
    type: object
    properties: {}
    description: The specified resource is a duplicate.
  InvalidStateException:
    type: object
    properties: {}
    description: An attempt was made to modify a resource that is in a state that is not valid. Check your resources to ensure that they are in valid states before retrying the operation.
  CopyProductOutput:
    type: object
    properties:
      CopyProductToken:
        $ref: '#/definitions/Id'
        description: The token to use to track the progress of the operation.
  CopyProductInput:
    type: object
    required:
      - SourceProductArn
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      SourceProductArn:
        $ref: '#/definitions/ProductArn'
        description: The Amazon Resource Name (ARN) of the source product.
      TargetProductId:
        $ref: '#/definitions/Id'
        description: 'The identifier of the target product. By default, a new product is created.'
      TargetProductName:
        $ref: '#/definitions/ProductViewName'
        description: A name for the target product. The default is the name of the source product.
      SourceProvisioningArtifactIdentifiers:
        $ref: '#/definitions/SourceProvisioningArtifactProperties'
        description: 'The identifiers of the provisioning artifacts (also known as versions) of the product to copy. By default, all provisioning artifacts are copied.'
      CopyOptions:
        $ref: '#/definitions/CopyOptions'
        description: 'The copy options. If the value is <code>CopyTags</code>, the tags from the source product are copied to the target product.'
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: ' A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request. '
  CreateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  CreateConstraintInput:
    type: object
    required:
      - PortfolioId
      - ProductId
      - Parameters
      - Type
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/ConstraintParameters'
        description: '<p>The constraint parameters, in JSON format. The syntax depends on the constraint type as follows:</p> <dl> <dt>LAUNCH</dt> <dd> <p>Specify the <code>RoleArn</code> property as follows:</p> <p>\"RoleArn\" : \"arn:aws:iam::123456789012:role/LaunchRole\"</p> </dd> <dt>NOTIFICATION</dt> <dd> <p>Specify the <code>NotificationArns</code> property as follows:</p> <p>\"NotificationArns\" : [\"arn:aws:sns:us-east-1:123456789012:Topic\"]</p> </dd> <dt>TEMPLATE</dt> <dd> <p>Specify the <code>Rules</code> property. For more information, see <a href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html">Template Constraint Rules</a>.</p> </dd> </dl>'
      Type:
        $ref: '#/definitions/ConstraintType'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The description of the constraint.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the portfolio.
  CreatePortfolioInput:
    type: object
    required:
      - DisplayName
      - ProviderName
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The description of the portfolio.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
      Tags:
        $ref: '#/definitions/AddTags'
        description: One or more tags.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreatePortfolioShareOutput:
    type: object
    properties: {}
  CreatePortfolioShareInput:
    type: object
    required:
      - PortfolioId
      - AccountId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The AWS account ID.
  CreateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: Information about the product view.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Information about the provisioning artifact.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the product.
  CreateProductInput:
    type: object
    required:
      - Name
      - Owner
      - ProductType
      - ProvisioningArtifactParameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The owner of the product.
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The distributor of the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The support information about the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The contact email for product support.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The contact URL for product support.
      ProductType:
        $ref: '#/definitions/ProductType'
        description: The type of product.
      Tags:
        $ref: '#/definitions/AddTags'
        description: One or more tags.
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: The configuration of the provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreateProvisionedProductPlanOutput:
    type: object
    properties:
      PlanName:
        $ref: '#/definitions/ProvisionedProductPlanName'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the provisioned product.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
  CreateProvisionedProductPlanInput:
    type: object
    required:
      - PlanName
      - PlanType
      - ProductId
      - ProvisionedProductName
      - ProvisioningArtifactId
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanName:
        $ref: '#/definitions/ProvisionedProductPlanName'
        description: The name of the plan.
      PlanType:
        $ref: '#/definitions/ProvisionedProductPlanType'
        description: The plan type.
      NotificationArns:
        $ref: '#/definitions/NotificationArns'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      ProvisioningParameters:
        $ref: '#/definitions/UpdateProvisioningParameters'
        description: Parameters specified by the administrator that are required for provisioning the product.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      Tags:
        $ref: '#/definitions/Tags'
        description: One or more tags.
  CreateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: 'The URL of the CloudFormation template in Amazon S3, in JSON format.'
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  CreateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - Parameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: The configuration for the provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  CreateTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: Information about the TagOption.
  CreateTagOptionInput:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The TagOption value.
  DeleteConstraintOutput:
    type: object
    properties: {}
  DeleteConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
  DeletePortfolioOutput:
    type: object
    properties: {}
  DeletePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  ResourceInUseException:
    type: object
    properties: {}
    description: A resource that is currently in use. Ensure that the resource is not in use and retry the operation.
  DeletePortfolioShareOutput:
    type: object
    properties: {}
  DeletePortfolioShareInput:
    type: object
    required:
      - PortfolioId
      - AccountId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The AWS account ID.
  DeleteProductOutput:
    type: object
    properties: {}
  DeleteProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The product identifier.
  DeleteProvisionedProductPlanOutput:
    type: object
    properties: {}
  DeleteProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      IgnoreErrors:
        $ref: '#/definitions/IgnoreErrors'
        description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
  DeleteProvisioningArtifactOutput:
    type: object
    properties: {}
  DeleteProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
  DeleteTagOptionOutput:
    type: object
    properties: {}
  DeleteTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
  DescribeConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  DescribeConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
  DescribeCopyProductStatusOutput:
    type: object
    properties:
      CopyProductStatus:
        $ref: '#/definitions/CopyProductStatus'
        description: The status of the copy product operation.
      TargetProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the copied product.
      StatusDetail:
        $ref: '#/definitions/StatusDetail'
        description: The status message.
  DescribeCopyProductStatusInput:
    type: object
    required:
      - CopyProductToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      CopyProductToken:
        $ref: '#/definitions/Id'
        description: The token for the copy product operation. This token is returned by <a>CopyProduct</a>.
  DescribePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the portfolio.
      TagOptions:
        $ref: '#/definitions/TagOptionDetails'
        description: Information about the TagOptions associated with the portfolio.
  DescribePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  DescribeProductOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: Summary information about the product view.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: Information about the provisioning artifacts for the specified product.
  DescribeProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The product identifier.
  DescribeProductAsAdminOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: Information about the product view.
      ProvisioningArtifactSummaries:
        $ref: '#/definitions/ProvisioningArtifactSummaries'
        description: Information about the provisioning artifacts (also known as versions) for the specified product.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the product.
      TagOptions:
        $ref: '#/definitions/TagOptionDetails'
        description: Information about the TagOptions associated with the product.
  DescribeProductAsAdminInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The product identifier.
  DescribeProductViewOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: Summary information about the product.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: Information about the provisioning artifacts for the product.
  DescribeProductViewInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The product view identifier.
  DescribeProvisionedProductOutput:
    type: object
    properties:
      ProvisionedProductDetail:
        $ref: '#/definitions/ProvisionedProductDetail'
        description: Information about the provisioned product.
      CloudWatchDashboards:
        $ref: '#/definitions/CloudWatchDashboards'
        description: Any CloudWatch dashboards that were created when provisioning the product.
  DescribeProvisionedProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The provisioned product identifier.
  DescribeProvisionedProductPlanOutput:
    type: object
    properties:
      ProvisionedProductPlanDetails:
        $ref: '#/definitions/ProvisionedProductPlanDetails'
        description: Information about the plan.
      ResourceChanges:
        $ref: '#/definitions/ResourceChanges'
        description: Information about the resource changes that will occur when the plan is executed.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  DescribeProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  DescribeProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: The URL of the CloudFormation template in Amazon S3.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  DescribeProvisioningArtifactInput:
    type: object
    required:
      - ProvisioningArtifactId
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Verbose:
        $ref: '#/definitions/Verbose'
        description: Indicates whether a verbose level of detail is enabled.
  DescribeProvisioningParametersOutput:
    type: object
    properties:
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactParameters'
        description: Information about the parameters used to provision the product.
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: Information about the constraints used to provision the product.
      UsageInstructions:
        $ref: '#/definitions/UsageInstructions'
        description: 'Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.'
      TagOptions:
        $ref: '#/definitions/TagOptionSummaries'
        description: Information about the TagOptions associated with the resource.
  DescribeProvisioningParametersInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
  DescribeRecordOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: Information about the product.
      RecordOutputs:
        $ref: '#/definitions/RecordOutputs'
        description: 'Information about the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  DescribeRecordInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The record identifier of the provisioned product. This identifier is returned by the request operation.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
  DescribeTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: Information about the TagOption.
  DescribeTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
  DisassociatePrincipalFromPortfolioOutput:
    type: object
    properties: {}
  DisassociatePrincipalFromPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN of the principal (IAM user, role, or group).'
  DisassociateProductFromPortfolioOutput:
    type: object
    properties: {}
  DisassociateProductFromPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  DisassociateTagOptionFromResourceOutput:
    type: object
    properties: {}
  DisassociateTagOptionFromResourceInput:
    type: object
    required:
      - ResourceId
      - TagOptionId
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource identifier.
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
  ExecuteProvisionedProductPlanOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: Information about the result of provisioning the product.
  ExecuteProvisionedProductPlanInput:
    type: object
    required:
      - PlanId
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
  ListAcceptedPortfolioSharesOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListAcceptedPortfolioSharesInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PortfolioShareType:
        $ref: '#/definitions/PortfolioShareType'
        description: <p>The type of shared portfolios to list. The default is to list imported portfolios.</p> <ul> <li> <p> <code>AWS_SERVICECATALOG</code> - List default portfolios</p> </li> <li> <p> <code>IMPORTED</code> - List imported portfolios</p> </li> </ul>
  ListConstraintsForPortfolioOutput:
    type: object
    properties:
      ConstraintDetails:
        $ref: '#/definitions/ConstraintDetails'
        description: Information about the constraints.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListConstraintsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListLaunchPathsOutput:
    type: object
    properties:
      LaunchPathSummaries:
        $ref: '#/definitions/LaunchPathSummaries'
        description: Information about the launch path.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListLaunchPathsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListPortfolioAccessOutput:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: Information about the AWS accounts with access to the portfolio.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfolioAccessInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  ListPortfoliosOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfoliosInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
  ListPortfoliosForProductOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: Information about the portfolios.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPortfoliosForProductInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
  ListPrincipalsForPortfolioOutput:
    type: object
    properties:
      Principals:
        $ref: '#/definitions/Principals'
        description: The IAM principals (users or roles) associated with the portfolio.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListPrincipalsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListProvisionedProductPlansOutput:
    type: object
    properties:
      ProvisionedProductPlans:
        $ref: '#/definitions/ProvisionedProductPlans'
        description: Information about the plans.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListProvisionedProductPlansInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisionProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: The access level to use to obtain results. The default is <code>User</code>.
  ListProvisioningArtifactsOutput:
    type: object
    properties:
      ProvisioningArtifactDetails:
        $ref: '#/definitions/ProvisioningArtifactDetails'
        description: Information about the provisioning artifacts.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListProvisioningArtifactsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
  ListRecordHistoryOutput:
    type: object
    properties:
      RecordDetails:
        $ref: '#/definitions/RecordDetails'
        description: 'The records, in reverse chronological order.'
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ListRecordHistoryInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: The access level to use to obtain results. The default is <code>User</code>.
      SearchFilter:
        $ref: '#/definitions/ListRecordHistorySearchFilter'
        description: The search filter to scope the results.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListResourcesForTagOptionOutput:
    type: object
    properties:
      ResourceDetails:
        $ref: '#/definitions/ResourceDetails'
        description: Information about the resources.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListResourcesForTagOptionInput:
    type: object
    required:
      - TagOptionId
    properties:
      TagOptionId:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: <p>The resource type.</p> <ul> <li> <p> <code>Portfolio</code> </p> </li> <li> <p> <code>Product</code> </p> </li> </ul>
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListTagOptionsOutput:
    type: object
    properties:
      TagOptionDetails:
        $ref: '#/definitions/TagOptionDetails'
        description: Information about the TagOptions.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ListTagOptionsInput:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ListTagOptionsFilters'
        description: 'The search filters. If no search filters are specified, the output includes all TagOptions.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  ProvisionProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: Information about the result of provisioning the product.
  ProvisionProductInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
      - ProvisionedProductName
      - ProvisionToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: A user-friendly name for the provisioned product. This value must be unique for the AWS account and cannot be updated after the product is provisioned.
      ProvisioningParameters:
        $ref: '#/definitions/ProvisioningParameters'
        description: Parameters specified by the administrator that are required for provisioning the product.
      Tags:
        $ref: '#/definitions/Tags'
        description: One or more tags.
      NotificationArns:
        $ref: '#/definitions/NotificationArns'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      ProvisionToken:
        $ref: '#/definitions/IdempotencyToken'
        description: An idempotency token that uniquely identifies the provisioning request.
  RejectPortfolioShareOutput:
    type: object
    properties: {}
  RejectPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  ScanProvisionedProductsOutput:
    type: object
    properties:
      ProvisionedProducts:
        $ref: '#/definitions/ProvisionedProductDetails'
        description: Information about the provisioned products.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  ScanProvisionedProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: The access level to use to obtain results. The default is <code>User</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  SearchProductsOutput:
    type: object
    properties:
      ProductViewSummaries:
        $ref: '#/definitions/ProductViewSummaries'
        description: Information about the product views.
      ProductViewAggregations:
        $ref: '#/definitions/ProductViewAggregations'
        description: The product view aggregations.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: 'The search filters. If no search filters are specified, the output includes all products to which the caller has access.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: 'The sort field. If no value is specified, the results are not sorted.'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  SearchProductsAsAdminOutput:
    type: object
    properties:
      ProductViewDetails:
        $ref: '#/definitions/ProductViewDetails'
        description: Information about the product views.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProductsAsAdminInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: 'The search filters. If no search filters are specified, the output includes all products to which the administrator has access.'
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: 'The sort field. If no value is specified, the results are not sorted.'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of items to return with this call.
      ProductSource:
        $ref: '#/definitions/ProductSource'
        description: Access level of the source of the product.
  SearchProvisionedProductsOutput:
    type: object
    properties:
      ProvisionedProducts:
        $ref: '#/definitions/ProvisionedProductAttributes'
        description: Information about the provisioned products.
      TotalResultsCount:
        $ref: '#/definitions/TotalResultsCount'
        description: The number of provisioned products found.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token to use to retrieve the next set of results. If there are no additional results, this value is null.'
  SearchProvisionedProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: The access level to use to obtain results. The default is <code>User</code>.
      Filters:
        $ref: '#/definitions/ProvisionedProductFilters'
        description: '<p>The search filters.</p> <p>When the key is <code>SearchQuery</code>, the searchable fields are <code>arn</code>, <code>createdTime</code>, <code>id</code>, <code>lastRecordId</code>, <code>idempotencyToken</code>, <code>name</code>, <code>physicalId</code>, <code>productId</code>, <code>provisioningArtifact</code>, <code>type</code>, <code>status</code>, <code>tags</code>, <code>userArn</code>, and <code>userArnSession</code>.</p> <p>Example: <code>"SearchQuery":["status:AVAILABLE"]</code> </p>'
      SortBy:
        $ref: '#/definitions/SortField'
        description: 'The sort field. If no value is specified, the results are not sorted. The valid values are <code>arn</code>, <code>id</code>, <code>name</code>, and <code>lastRecordId</code>.'
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: 'The sort order. If no value is specified, the results are not sorted.'
      PageSize:
        $ref: '#/definitions/SearchProvisionedProductsPageSize'
        description: The maximum number of items to return with this call.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: 'The page token for the next set of results. To retrieve the first set of results, use null.'
  TerminateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: Information about the result of this request.
  TerminateProvisionedProductInput:
    type: object
    required:
      - TerminateToken
    properties:
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      TerminateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the provisioned product is terminated, subsequent requests to terminate the same provisioned product always return <b>ResourceNotFound</b>.'
      IgnoreErrors:
        $ref: '#/definitions/IgnoreErrors'
        description: 'If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.'
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
  UpdateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: Information about the constraint.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  UpdateConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The updated description of the constraint.
  UpdatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: Information about the portfolio.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the portfolio.
  UpdatePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The updated description of the portfolio.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The updated name of the portfolio provider.
      AddTags:
        $ref: '#/definitions/AddTags'
        description: The tags to add.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: The tags to remove.
  UpdateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: Information about the product view.
      Tags:
        $ref: '#/definitions/Tags'
        description: Information about the tags associated with the product.
  UpdateProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      Id:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The updated product name.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated owner of the product.
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The updated description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated distributor of the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The updated support description for the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The updated support email for the product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The updated support URL for the product.
      AddTags:
        $ref: '#/definitions/AddTags'
        description: The tags to add to the product.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: The tags to remove from the product.
  UpdateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: Information about the result of the request.
  UpdateProvisionedProductInput:
    type: object
    required:
      - UpdateToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The updated name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.
      ProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioned product.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The new path identifier. This value is optional if the product has a default path, and required if the product has more than one path.'
      ProvisioningParameters:
        $ref: '#/definitions/UpdateProvisioningParameters'
        description: The new parameters.
      UpdateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: The idempotency token that uniquely identifies the provisioning update request.
  UpdateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Information about the provisioning artifact.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: The URL of the CloudFormation template in Amazon S3.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  UpdateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: <p>The language code.</p> <ul> <li> <p> <code>en</code> - English (default)</p> </li> <li> <p> <code>jp</code> - Japanese</p> </li> <li> <p> <code>zh</code> - Chinese</p> </li> </ul>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The updated name of the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The updated description of the provisioning artifact.
      Active:
        $ref: '#/definitions/ProvisioningArtifactActive'
        description: Indicates whether the product version is active.
  UpdateTagOptionOutput:
    type: object
    properties:
      TagOptionDetail:
        $ref: '#/definitions/TagOptionDetail'
        description: Information about the TagOption.
  UpdateTagOptionInput:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The updated value.
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The updated active state.
  AcceptLanguage:
    type: string
  Id:
    type: string
    minLength: 1
    maxLength: 100
  AccessLevelFilterKey:
    type: string
    enum:
      - Account
      - Role
      - User
  AccessLevelFilterValue:
    type: string
  AccessLevelFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/AccessLevelFilterKey'
        description: <p>The access level.</p> <ul> <li> <p> <code>Account</code> - Filter results based on the account.</p> </li> <li> <p> <code>Role</code> - Filter results based on the federated role of the specified user.</p> </li> <li> <p> <code>User</code> - Filter results based on the specified user.</p> </li> </ul>
      Value:
        $ref: '#/definitions/AccessLevelFilterValue'
        description: The user to which the access level applies. The only supported value is <code>Self</code>.
    description: The access level to use to filter results.
  AccountId:
    type: string
    pattern: '^[0-9]{12}$'
  AccountIds:
    type: array
    items:
      $ref: '#/definitions/AccountId'
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The tag key.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value for this key.
    description: Information about a tag. A tag is a key-value pair. Tags are propagated to the resources created when provisioning a product.
  AddTags:
    type: array
    items:
      $ref: '#/definitions/Tag'
    maxItems: 20
  AllowedValue:
    type: string
  AllowedValues:
    type: array
    items:
      $ref: '#/definitions/AllowedValue'
  ApproximateCount:
    type: integer
  PrincipalARN:
    type: string
    minLength: 1
    maxLength: 1000
  PrincipalType:
    type: string
    enum:
      - IAM
  ResourceId:
    type: string
  TagOptionId:
    type: string
    minLength: 1
    maxLength: 100
  AttributeValue:
    type: string
  CausingEntity:
    type: string
  ChangeAction:
    type: string
    enum:
      - ADD
      - MODIFY
      - REMOVE
  CloudWatchDashboardName:
    type: string
  CloudWatchDashboard:
    type: object
    properties:
      Name:
        $ref: '#/definitions/CloudWatchDashboardName'
        description: The name of the CloudWatch dashboard.
    description: Information about a CloudWatch dashboard.
  CloudWatchDashboards:
    type: array
    items:
      $ref: '#/definitions/CloudWatchDashboard'
  ConstraintDescription:
    type: string
    maxLength: 2000
  ConstraintType:
    type: string
    minLength: 1
    maxLength: 1024
  ConstraintDetail:
    type: object
    properties:
      ConstraintId:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The description of the constraint.
      Owner:
        $ref: '#/definitions/AccountId'
        description: The owner of the constraint.
    description: Information about a constraint.
  ConstraintDetails:
    type: array
    items:
      $ref: '#/definitions/ConstraintDetail'
  ConstraintParameters:
    type: string
  ConstraintSummary:
    type: object
    properties:
      Type:
        $ref: '#/definitions/ConstraintType'
        description: <p>The type of constraint.</p> <ul> <li> <p> <code>LAUNCH</code> </p> </li> <li> <p> <code>NOTIFICATION</code> </p> </li> <li> <p> <code>TEMPLATE</code> </p> </li> </ul>
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The description of the constraint.
    description: Summary information about a constraint.
  ConstraintSummaries:
    type: array
    items:
      $ref: '#/definitions/ConstraintSummary'
  CopyOption:
    type: string
    enum:
      - CopyTags
  CopyOptions:
    type: array
    items:
      $ref: '#/definitions/CopyOption'
  ProductArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  ProductViewName:
    type: string
    maxLength: 8191
  SourceProvisioningArtifactProperties:
    type: array
    items:
      $ref: '#/definitions/SourceProvisioningArtifactPropertiesMap'
  IdempotencyToken:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 128
  CopyProductStatus:
    type: string
    enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
  Status:
    type: string
    enum:
      - AVAILABLE
      - CREATING
      - FAILED
  PortfolioDisplayName:
    type: string
    minLength: 1
    maxLength: 100
  PortfolioDescription:
    type: string
    maxLength: 2000
  ProviderName:
    type: string
    minLength: 1
    maxLength: 50
  PortfolioDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN assigned to the portfolio.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The description of the portfolio.
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC time stamp of the creation time.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
    description: Information about a portfolio.
  Tags:
    type: array
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
  ProductViewOwner:
    type: string
    maxLength: 8191
  ProductViewShortDescription:
    type: string
    maxLength: 8191
  SupportDescription:
    type: string
    maxLength: 8191
  SupportEmail:
    type: string
    maxLength: 254
  SupportUrl:
    type: string
    maxLength: 2083
  ProductType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE
    maxLength: 8191
  ProvisioningArtifactProperties:
    type: object
    required:
      - Info
    properties:
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: 'The name of the provisioning artifact (for example, v1 v2beta). No spaces are allowed.'
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: 'The description of the provisioning artifact, including how it differs from the previous provisioning artifact.'
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: '<p>The URL of the CloudFormation template in Amazon S3. Specify the URL in JSON format as follows:</p> <p> <code>"LoadTemplateFromURL": "https://s3.amazonaws.com/cf-templates-ozkq9d3hgiq2-us-east-1/..."</code> </p>'
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
    description: Information about a provisioning artifact (also known as a version) for a product.
  ProductViewDetail:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: Summary information about the product view.
      Status:
        $ref: '#/definitions/Status'
        description: <p>The status of the product.</p> <ul> <li> <p> <code>AVAILABLE</code> - The product is ready for use.</p> </li> <li> <p> <code>CREATING</code> - Product creation has started; the product is not ready for use.</p> </li> <li> <p> <code>FAILED</code> - An action failed.</p> </li> </ul>
      ProductARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the product.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC time stamp of the creation time.
    description: Information about a product view.
  ProvisioningArtifactDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The description of the provisioning artifact.
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: <p>The type of provisioning artifact.</p> <ul> <li> <p> <code>CLOUD_FORMATION_TEMPLATE</code> - AWS CloudFormation template</p> </li> <li> <p> <code>MARKETPLACE_AMI</code> - AWS Marketplace AMI</p> </li> <li> <p> <code>MARKETPLACE_CAR</code> - AWS Marketplace Clusters and AWS Resources</p> </li> </ul>
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC time stamp of the creation time.
      Active:
        $ref: '#/definitions/ProvisioningArtifactActive'
        description: Indicates whether the product version is active.
    description: Information about a provisioning artifact (also known as a version) for a product.
  ProvisionedProductPlanName:
    type: string
  ProvisionedProductPlanType:
    type: string
    enum:
      - CLOUDFORMATION
  NotificationArns:
    type: array
    items:
      $ref: '#/definitions/NotificationArn'
    maxItems: 5
  ProvisionedProductName:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]*'
    minLength: 1
    maxLength: 128
  UpdateProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/UpdateProvisioningParameter'
  ProvisioningArtifactInfo:
    type: array
    minItems: 1
    maxItems: 100
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactInfoKey'
        value:
          $ref: '#/definitions/ProvisioningArtifactInfoValue'
  TagOptionKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagOptionValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  TagOptionDetail:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The TagOption value.
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The TagOption active state.
      Id:
        $ref: '#/definitions/TagOptionId'
        description: The TagOption identifier.
    description: Information about a TagOption.
  CreatedTime:
    type: string
    format: date-time
  CreationTime:
    type: string
    format: date-time
  DefaultValue:
    type: string
  IgnoreErrors:
    type: boolean
  StatusDetail:
    type: string
  TagOptionDetails:
    type: array
    items:
      $ref: '#/definitions/TagOptionDetail'
  ProvisioningArtifactSummaries:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifactSummary'
  ProductViewSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The product view identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The owner of the product. Contact the product administrator for the significance of this value.
      ShortDescription:
        $ref: '#/definitions/ProductViewShortDescription'
        description: Short description of the product.
      Type:
        $ref: '#/definitions/ProductType'
        description: 'The product type. Contact the product administrator for the significance of this value. If this value is <code>MARKETPLACE</code>, the product was created by AWS Marketplace.'
      Distributor:
        $ref: '#/definitions/ProductViewDistributor'
        description: The distributor of the product. Contact the product administrator for the significance of this value.
      HasDefaultPath:
        $ref: '#/definitions/HasDefaultPath'
        description: 'Indicates whether the product has a default path. If the product does not have a default path, call <a>ListLaunchPaths</a> to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is not required, and the output of <a>ProductViewSummary</a> can be used directly with <a>DescribeProvisioningParameters</a>.'
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The email contact information to obtain support for this Product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The description of the support for this Product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The URL information to obtain support for this Product.
    description: Summary information about a product view.
  ProvisioningArtifacts:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifact'
  ProvisionedProductDetail:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The user-friendly name of the provisioned product.
      Arn:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The ARN of the provisioned product.
      Type:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of provisioned product. The supported value is <code>CFN_STACK</code>.
      Id:
        $ref: '#/definitions/ProvisionedProductId'
        description: The identifier of the provisioned product.
      Status:
        $ref: '#/definitions/ProvisionedProductStatus'
        description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred, the provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> </ul>'
      StatusMessage:
        $ref: '#/definitions/ProvisionedProductStatusMessage'
        description: The current status message of the provisioned product.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC time stamp of the creation time.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      LastRecordId:
        $ref: '#/definitions/LastRequestId'
        description: The record identifier of the last request performed on this provisioned product.
    description: Information about a provisioned product.
  PageSize:
    type: integer
    minimum: 0
    maximum: 20
  PageToken:
    type: string
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
  ProvisionedProductPlanDetails:
    type: object
    properties:
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC time stamp of the creation time.
      PathId:
        $ref: '#/definitions/Id'
        description: 'The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <a>ListLaunchPaths</a>.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PlanName:
        $ref: '#/definitions/ProvisionedProductPlanName'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the provisioned product.
      PlanType:
        $ref: '#/definitions/ProvisionedProductPlanType'
        description: The plan type.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Status:
        $ref: '#/definitions/ProvisionedProductPlanStatus'
        description: The status.
      UpdatedTime:
        $ref: '#/definitions/UpdatedTime'
        description: The time when the plan was last updated.
      NotificationArns:
        $ref: '#/definitions/NotificationArns'
        description: Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
      ProvisioningParameters:
        $ref: '#/definitions/UpdateProvisioningParameters'
        description: Parameters specified by the administrator that are required for provisioning the product.
      Tags:
        $ref: '#/definitions/Tags'
        description: One or more tags.
      StatusMessage:
        $ref: '#/definitions/StatusMessage'
        description: The status message.
    description: Information about a plan.
  ResourceChanges:
    type: array
    items:
      $ref: '#/definitions/ResourceChange'
  Verbose:
    type: boolean
  ProvisioningArtifactParameters:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifactParameter'
  UsageInstructions:
    type: array
    items:
      $ref: '#/definitions/UsageInstruction'
  TagOptionSummaries:
    type: array
    items:
      $ref: '#/definitions/TagOptionSummary'
  RecordDetail:
    type: object
    properties:
      RecordId:
        $ref: '#/definitions/Id'
        description: The identifier of the record.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the provisioned product.
      Status:
        $ref: '#/definitions/RecordStatus'
        description: '<p>The status of the provisioned product.</p> <ul> <li> <p> <code>CREATED</code> - The request was created but the operation has not started.</p> </li> <li> <p> <code>IN_PROGRESS</code> - The requested operation is in progress.</p> </li> <li> <p> <code>IN_PROGRESS_IN_ERROR</code> - The provisioned product is under change but the requested operation failed and some remediation is occurring. For example, a rollback.</p> </li> <li> <p> <code>SUCCEEDED</code> - The requested operation has successfully completed.</p> </li> <li> <p> <code>FAILED</code> - The requested operation has unsuccessfully completed. Investigate using the error messages returned.</p> </li> </ul>'
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC time stamp of the creation time.
      UpdatedTime:
        $ref: '#/definitions/UpdatedTime'
        description: The time when the record was last updated.
      ProvisionedProductType:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of provisioned product. The supported value is <code>CFN_STACK</code>.
      RecordType:
        $ref: '#/definitions/RecordType'
        description: <p>The record type.</p> <ul> <li> <p> <code>PROVISION_PRODUCT</code> </p> </li> <li> <p> <code>UPDATE_PROVISIONED_PRODUCT</code> </p> </li> <li> <p> <code>TERMINATE_PROVISIONED_PRODUCT</code> </p> </li> </ul>
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioned product.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      PathId:
        $ref: '#/definitions/Id'
        description: The path identifier.
      RecordErrors:
        $ref: '#/definitions/RecordErrors'
        description: The errors that occurred.
      RecordTags:
        $ref: '#/definitions/RecordTags'
        description: One or more tags.
    description: Information about a request operation.
  RecordOutputs:
    type: array
    items:
      $ref: '#/definitions/RecordOutput'
  Description:
    type: string
  ErrorCode:
    type: string
  ErrorDescription:
    type: string
  EvaluationType:
    type: string
    enum:
      - STATIC
      - DYNAMIC
  HasDefaultPath:
    type: boolean
  InstructionType:
    type: string
  InstructionValue:
    type: string
  LastRequestId:
    type: string
  LaunchPathSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product path.
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: The constraints on the portfolio-product relationship.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags associated with this product path.
      Name:
        $ref: '#/definitions/PortfolioName'
        description: The name of the portfolio to which the user was assigned.
    description: Summary information about a product path for a user.
  LaunchPathSummaries:
    type: array
    items:
      $ref: '#/definitions/LaunchPathSummary'
  PortfolioName:
    type: string
  PortfolioShareType:
    type: string
    enum:
      - IMPORTED
      - AWS_SERVICECATALOG
  PortfolioDetails:
    type: array
    items:
      $ref: '#/definitions/PortfolioDetail'
  Principals:
    type: array
    items:
      $ref: '#/definitions/Principal'
  ProvisionedProductPlans:
    type: array
    items:
      $ref: '#/definitions/ProvisionedProductPlanSummary'
  ProvisioningArtifactDetails:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifactDetail'
  ListRecordHistorySearchFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/SearchFilterKey'
        description: <p>The filter key.</p> <ul> <li> <p> <code>product</code> - Filter results based on the specified product identifier.</p> </li> <li> <p> <code>provisionedproduct</code> - Filter results based on the provisioned product identifier.</p> </li> </ul>
      Value:
        $ref: '#/definitions/SearchFilterValue'
        description: The filter value.
    description: The search filter to use when listing history records.
  RecordDetails:
    type: array
    items:
      $ref: '#/definitions/RecordDetail'
  SearchFilterKey:
    type: string
  SearchFilterValue:
    type: string
  ResourceType:
    type: string
  ResourceDetails:
    type: array
    items:
      $ref: '#/definitions/ResourceDetail'
  TagOptionActive:
    type: boolean
  ListTagOptionsFilters:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOption key.
      Value:
        $ref: '#/definitions/TagOptionValue'
        description: The TagOption value.
      Active:
        $ref: '#/definitions/TagOptionActive'
        description: The active state.
    description: Filters to use when listing TagOptions.
  LogicalResourceId:
    type: string
  NoEcho:
    type: boolean
  NotificationArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  OutputKey:
    type: string
  OutputValue:
    type: string
  ParameterConstraints:
    type: object
    properties:
      AllowedValues:
        $ref: '#/definitions/AllowedValues'
        description: The values that the administrator has allowed for the parameter.
    description: The constraints that the administrator has put on the parameter.
  ParameterKey:
    type: string
    minLength: 1
    maxLength: 1000
  ParameterType:
    type: string
  ParameterValue:
    type: string
    maxLength: 4096
  PhysicalId:
    type: string
  PhysicalResourceId:
    type: string
  PlanResourceType:
    type: string
    minLength: 1
    maxLength: 256
  ResourceARN:
    type: string
    minLength: 1
    maxLength: 150
  Principal:
    type: object
    properties:
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN of the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: The principal type. The supported value is <code>IAM</code>.
    description: Information about a principal.
  ProductSource:
    type: string
    enum:
      - ACCOUNT
  ProductViewAggregationType:
    type: string
  ProductViewAggregationValue:
    type: object
    properties:
      Value:
        $ref: '#/definitions/AttributeValue'
        description: The value of the product view aggregation.
      ApproximateCount:
        $ref: '#/definitions/ApproximateCount'
        description: An approximate count of the products that match the value.
    description: 'A single product view aggregation value/count pair, containing metadata about each product to which the calling user has access.'
  ProductViewAggregationValues:
    type: array
    items:
      $ref: '#/definitions/ProductViewAggregationValue'
  ProductViewAggregations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewAggregationType'
        value:
          $ref: '#/definitions/ProductViewAggregationValues'
  ProductViewDetails:
    type: array
    items:
      $ref: '#/definitions/ProductViewDetail'
  ProductViewDistributor:
    type: string
  ProductViewFilterBy:
    type: string
    enum:
      - FullTextSearch
      - Owner
      - ProductType
      - SourceProductId
  ProductViewFilterValue:
    type: string
  ProductViewFilterValues:
    type: array
    items:
      $ref: '#/definitions/ProductViewFilterValue'
  ProductViewFilters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewFilterBy'
        value:
          $ref: '#/definitions/ProductViewFilterValues'
  ProductViewSortBy:
    type: string
    enum:
      - Title
      - VersionCount
      - CreationDate
  ProductViewSummaries:
    type: array
    items:
      $ref: '#/definitions/ProductViewSummary'
  PropertyName:
    type: string
  ProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/ProvisioningParameter'
  ProvisionedProductNameOrArn:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9._-]{0,127}|arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1224
  ProvisionedProductType:
    type: string
  ProvisionedProductStatus:
    type: string
    enum:
      - AVAILABLE
      - UNDER_CHANGE
      - TAINTED
      - ERROR
      - PLAN_IN_PROGRESS
  ProvisionedProductStatusMessage:
    type: string
  UserArn:
    type: string
  UserArnSession:
    type: string
  ProvisionedProductAttribute:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The user-friendly name of the provisioned product.
      Arn:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The ARN of the provisioned product.
      Type:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of provisioned product. The supported value is <code>CFN_STACK</code>.
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioned product.
      Status:
        $ref: '#/definitions/ProvisionedProductStatus'
        description: '<p>The current status of the provisioned product.</p> <ul> <li> <p> <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p> </li> <li> <p> <code>UNDER_CHANGE</code> - Transitive state, operations performed might not have valid results. Wait for an <code>AVAILABLE</code> status before performing operations.</p> </li> <li> <p> <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p> </li> <li> <p> <code>ERROR</code> - An unexpected error occurred, the provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p> </li> </ul>'
      StatusMessage:
        $ref: '#/definitions/ProvisionedProductStatusMessage'
        description: The current status message of the provisioned product.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC time stamp of the creation time.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.'
      LastRecordId:
        $ref: '#/definitions/Id'
        description: The record identifier of the last request performed on this provisioned product.
      Tags:
        $ref: '#/definitions/Tags'
        description: One or more tags.
      PhysicalId:
        $ref: '#/definitions/PhysicalId'
        description: 'The assigned identifier for the resource, such as an EC2 instance ID or an S3 bucket name.'
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      UserArn:
        $ref: '#/definitions/UserArn'
        description: The Amazon Resource Name (ARN) of the IAM user.
      UserArnSession:
        $ref: '#/definitions/UserArnSession'
        description: The ARN of the IAM user in the session. This ARN might contain a session ID.
    description: Information about a provisioned product.
  ProvisionedProductAttributes:
    type: array
    items:
      $ref: '#/definitions/ProvisionedProductAttribute'
  ProvisionedProductId:
    type: string
  ProvisionedProductDetails:
    type: array
    items:
      $ref: '#/definitions/ProvisionedProductDetail'
  ProvisionedProductViewFilterBy:
    type: string
    enum:
      - SearchQuery
  ProvisionedProductViewFilterValues:
    type: array
    items:
      $ref: '#/definitions/ProvisionedProductViewFilterValue'
  ProvisionedProductFilters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisionedProductViewFilterBy'
        value:
          $ref: '#/definitions/ProvisionedProductViewFilterValues'
  ProvisionedProductPlanStatus:
    type: string
    enum:
      - CREATE_IN_PROGRESS
      - CREATE_SUCCESS
      - CREATE_FAILED
      - EXECUTE_IN_PROGRESS
      - EXECUTE_SUCCESS
      - EXECUTE_FAILED
  UpdatedTime:
    type: string
    format: date-time
  StatusMessage:
    type: string
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
  ProvisionedProductPlanSummary:
    type: object
    properties:
      PlanName:
        $ref: '#/definitions/ProvisionedProductPlanName'
        description: The name of the plan.
      PlanId:
        $ref: '#/definitions/Id'
        description: The plan identifier.
      ProvisionProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisionProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the provisioned product.
      PlanType:
        $ref: '#/definitions/ProvisionedProductPlanType'
        description: The plan type.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
    description: Summary information about a plan.
  ProvisionedProductViewFilterValue:
    type: string
  ProvisioningArtifactName:
    type: string
  ProvisioningArtifactDescription:
    type: string
  ProvisioningArtifactCreatedTime:
    type: string
    format: date-time
  ProvisioningArtifact:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The description of the provisioning artifact.
      CreatedTime:
        $ref: '#/definitions/ProvisioningArtifactCreatedTime'
        description: The UTC time stamp of the creation time.
    description: Information about a provisioning artifact. A provisioning artifact is also known as a product version.
  ProvisioningArtifactActive:
    type: boolean
  ProvisioningArtifactType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
      - MARKETPLACE_AMI
      - MARKETPLACE_CAR
  ProvisioningArtifactInfoKey:
    type: string
  ProvisioningArtifactInfoValue:
    type: string
  ProvisioningArtifactParameter:
    type: object
    properties:
      ParameterKey:
        $ref: '#/definitions/ParameterKey'
        description: The parameter key.
      DefaultValue:
        $ref: '#/definitions/DefaultValue'
        description: The default value.
      ParameterType:
        $ref: '#/definitions/ParameterType'
        description: The parameter type.
      IsNoEcho:
        $ref: '#/definitions/NoEcho'
        description: 'If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.'
      Description:
        $ref: '#/definitions/Description'
        description: The description of the parameter.
      ParameterConstraints:
        $ref: '#/definitions/ParameterConstraints'
        description: Constraints that the administrator has put on a parameter.
    description: Information about a parameter used to provision a product.
  ProvisioningArtifactPropertyName:
    type: string
    enum:
      - Id
  ProvisioningArtifactPropertyValue:
    type: string
  ProvisioningArtifactSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The description of the provisioning artifact.
      CreatedTime:
        $ref: '#/definitions/ProvisioningArtifactCreatedTime'
        description: The UTC time stamp of the creation time.
      ProvisioningArtifactMetadata:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: The metadata for the provisioning artifact. This is used with AWS Marketplace products.
    description: Summary information about a provisioning artifact (also known as a version) for a product.
  ProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: The parameter key.
      Value:
        $ref: '#/definitions/ParameterValue'
        description: The parameter value.
    description: Information about a parameter used to provision a product.
  RecordStatus:
    type: string
    enum:
      - CREATED
      - IN_PROGRESS
      - IN_PROGRESS_IN_ERROR
      - SUCCEEDED
      - FAILED
  RecordType:
    type: string
  RecordErrors:
    type: array
    items:
      $ref: '#/definitions/RecordError'
  RecordTags:
    type: array
    items:
      $ref: '#/definitions/RecordTag'
    maxItems: 50
  RecordError:
    type: object
    properties:
      Code:
        $ref: '#/definitions/ErrorCode'
        description: The numeric value of the error.
      Description:
        $ref: '#/definitions/ErrorDescription'
        description: The description of the error.
    description: The error code and description resulting from an operation.
  RecordOutput:
    type: object
    properties:
      OutputKey:
        $ref: '#/definitions/OutputKey'
        description: The output key.
      OutputValue:
        $ref: '#/definitions/OutputValue'
        description: The output value.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the output.
    description: 'The output for the product created as the result of a request. For example, the output for a CloudFormation-backed product that creates an S3 bucket would include the S3 bucket URL.'
  RecordTagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 128
  RecordTagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 256
  RecordTag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/RecordTagKey'
        description: The key for this tag.
      Value:
        $ref: '#/definitions/RecordTagValue'
        description: The value for this tag.
    description: 'Information about a tag, which is a key-value pair.'
  Replacement:
    type: string
    enum:
      - 'TRUE'
      - 'FALSE'
      - CONDITIONAL
  RequiresRecreation:
    type: string
    enum:
      - NEVER
      - CONDITIONALLY
      - ALWAYS
  ResourceAttribute:
    type: string
    enum:
      - PROPERTIES
      - METADATA
      - CREATIONPOLICY
      - UPDATEPOLICY
      - DELETIONPOLICY
      - TAGS
  Scope:
    type: array
    items:
      $ref: '#/definitions/ResourceAttribute'
  ResourceChangeDetails:
    type: array
    items:
      $ref: '#/definitions/ResourceChangeDetail'
  ResourceChange:
    type: object
    properties:
      Action:
        $ref: '#/definitions/ChangeAction'
        description: The change action.
      LogicalResourceId:
        $ref: '#/definitions/LogicalResourceId'
        description: 'The ID of the resource, as defined in the CloudFormation template.'
      PhysicalResourceId:
        $ref: '#/definitions/PhysicalResourceId'
        description: 'The ID of the resource, if it was already created.'
      ResourceType:
        $ref: '#/definitions/PlanResourceType'
        description: The type of resource.
      Replacement:
        $ref: '#/definitions/Replacement'
        description: 'If the change type is <code>Modify</code>, indicates whether the existing resource is deleted and replaced with a new one.'
      Scope:
        $ref: '#/definitions/Scope'
        description: The change scope.
      Details:
        $ref: '#/definitions/ResourceChangeDetails'
        description: Information about the resource changes.
    description: Information about a resource change that will occur when a plan is executed.
  ResourceTargetDefinition:
    type: object
    properties:
      Attribute:
        $ref: '#/definitions/ResourceAttribute'
        description: The attribute to be changed.
      Name:
        $ref: '#/definitions/PropertyName'
        description: 'If the attribute is <code>Properties</code>, the value is the name of the property. Otherwise, the value is null.'
      RequiresRecreation:
        $ref: '#/definitions/RequiresRecreation'
        description: 'If the attribute is <code>Properties</code>, indicates whether a change to this property causes the resource to be re-created.'
    description: Information about a change to a resource attribute.
  ResourceChangeDetail:
    type: object
    properties:
      Target:
        $ref: '#/definitions/ResourceTargetDefinition'
        description: Information about the resource attribute to be modified.
      Evaluation:
        $ref: '#/definitions/EvaluationType'
        description: 'For static evaluations, the value of the resource attribute will change and the new value is known. For dynamic evaluations, the value might change, and any new value will be determined when the plan is updated.'
      CausingEntity:
        $ref: '#/definitions/CausingEntity'
        description: The ID of the entity that caused the change.
    description: Information about a change to a resource attribute.
  ResourceDetailId:
    type: string
  ResourceDetailARN:
    type: string
  ResourceDetailName:
    type: string
  ResourceDetailDescription:
    type: string
  ResourceDetailCreatedTime:
    type: string
    format: date-time
  ResourceDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/ResourceDetailId'
        description: The identifier of the resource.
      ARN:
        $ref: '#/definitions/ResourceDetailARN'
        description: The ARN of the resource.
      Name:
        $ref: '#/definitions/ResourceDetailName'
        description: The name of the resource.
      Description:
        $ref: '#/definitions/ResourceDetailDescription'
        description: The description of the resource.
      CreatedTime:
        $ref: '#/definitions/ResourceDetailCreatedTime'
        description: The creation time of the resource.
    description: Information about a resource.
  SortOrder:
    type: string
    enum:
      - ASCENDING
      - DESCENDING
  SortField:
    type: string
  SearchProvisionedProductsPageSize:
    type: integer
    minimum: 0
    maximum: 100
  TotalResultsCount:
    type: integer
  SourceProvisioningArtifactPropertiesMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactPropertyName'
        value:
          $ref: '#/definitions/ProvisioningArtifactPropertyValue'
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagOptionSummary:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagOptionKey'
        description: The TagOption key.
      Values:
        $ref: '#/definitions/TagOptionValues'
        description: The TagOption value.
    description: Summary information about a TagOption.
  TagOptionValues:
    type: array
    items:
      $ref: '#/definitions/TagOptionValue'
  UsePreviousValue:
    type: boolean
  UpdateProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: The parameter key.
      Value:
        $ref: '#/definitions/ParameterValue'
        description: The parameter value.
      UsePreviousValue:
        $ref: '#/definitions/UsePreviousValue'
        description: 'If set to true, <code>Value</code> is ignored and the previous parameter value is kept.'
    description: The parameter key-value pair used to update a provisioned product.
  UsageInstruction:
    type: object
    properties:
      Type:
        $ref: '#/definitions/InstructionType'
        description: The usage instruction type for the value.
      Value:
        $ref: '#/definitions/InstructionValue'
        description: The usage instruction value for this type.
    description: Additional information provided by the administrator.
