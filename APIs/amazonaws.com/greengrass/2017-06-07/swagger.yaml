swagger: '2.0'
info:
  version: '2017-06-07'
  x-release: v4
  title: AWS Greengrass
  description: 'AWS Greengrass seamlessly extends AWS onto physical devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. AWS Greengrass ensures your devices can respond quickly to local events and operate with intermittent connectivity. AWS Greengrass minimizes the cost of transmitting data to the cloud by allowing you to author AWS Lambda functions that execute locally.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: greengrass
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/greengrass-2017-06-07.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/greengrass/'
host: greengrass.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/greengrass/groups/{GroupId}/role':
    put:
      operationId: AssociateRoleToGroup
      description: Associates a role with a group. Your AWS Greengrass core will use the role to access AWS cloud services. The role's permissions should allow Greengrass core Lambda functions to perform actions against the cloud.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateRoleToGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateRoleToGroupRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateRoleFromGroup
      description: Disassociates the role from a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateRoleFromGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateRoleFromGroupRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    get:
      operationId: GetAssociatedRole
      description: Retrieves the role associated with a particular group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAssociatedRoleResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAssociatedRoleRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  /greengrass/servicerole:
    put:
      operationId: AssociateServiceRoleToAccount
      description: Associates a role with your account. AWS Greengrass will use the role to access your Lambda functions and AWS IoT resources. This is necessary for deployments to succeed. The role must have at least minimum permissions in the policy ''AWSGreengrassResourceAccessRolePolicy''.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateServiceRoleToAccountResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateServiceRoleToAccountRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DisassociateServiceRoleFromAccount
      description: 'Disassociates the service role from your account. Without a service role, deployments will not work.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateServiceRoleFromAccountResponse'
        '480':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateServiceRoleFromAccountRequest'
    get:
      operationId: GetServiceRoleForAccount
      description: Retrieves the service role that is attached to your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceRoleForAccountResponse'
        '480':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceRoleForAccountRequest'
  /greengrass/definition/cores:
    post:
      operationId: CreateCoreDefinition
      description: Creates a core definition. You may provide the initial version of the core definition now or use ''CreateCoreDefinitionVersion'' at a later time. AWS Greengrass groups must each contain exactly one AWS Greengrass core.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCoreDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCoreDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCoreDefinitions
      description: Retrieves a list of core definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCoreDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCoreDefinitionsRequest'
  '/greengrass/definition/cores/{CoreDefinitionId}/versions':
    post:
      operationId: CreateCoreDefinitionVersion
      description: Creates a version of a core definition that has already been defined. AWS Greengrass groups must each contain exactly one AWS Greengrass core.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCoreDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCoreDefinitionVersionRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCoreDefinitionVersions
      description: Lists the versions of a core definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCoreDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCoreDefinitionVersionsRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/groups/{GroupId}/deployments':
    post:
      operationId: CreateDeployment
      description: Creates a deployment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeploymentResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeploymentRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDeployments
      description: Returns a history of deployments for the group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeploymentsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeploymentsRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  /greengrass/definition/devices:
    post:
      operationId: CreateDeviceDefinition
      description: Creates a device definition. You may provide the initial version of the device definition now or use ''CreateDeviceDefinitionVersion'' at a later time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeviceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeviceDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDeviceDefinitions
      description: Retrieves a list of device definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeviceDefinitionsRequest'
  '/greengrass/definition/devices/{DeviceDefinitionId}/versions':
    post:
      operationId: CreateDeviceDefinitionVersion
      description: Creates a version of a device definition that has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeviceDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeviceDefinitionVersionRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDeviceDefinitionVersions
      description: Lists the versions of a device definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeviceDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeviceDefinitionVersionsRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
  /greengrass/definition/functions:
    post:
      operationId: CreateFunctionDefinition
      description: 'Creates a Lambda function definition which contains a list of Lambda functions and their configurations to be used in a group. You can create an initial version of the definition by providing a list of Lambda functions and their configurations now, or use ''''CreateFunctionDefinitionVersion'''' later.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFunctionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFunctionDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFunctionDefinitions
      description: Retrieves a list of Lambda function definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFunctionDefinitionsRequest'
  '/greengrass/definition/functions/{FunctionDefinitionId}/versions':
    post:
      operationId: CreateFunctionDefinitionVersion
      description: Creates a version of a Lambda function definition that has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFunctionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFunctionDefinitionVersionRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListFunctionDefinitionVersions
      description: Lists the versions of a Lambda function definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFunctionDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFunctionDefinitionVersionsRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
  /greengrass/groups:
    post:
      operationId: CreateGroup
      description: Creates a group. You may provide the initial version of the group or use ''CreateGroupVersion'' at a later time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGroups
      description: Retrieves a list of groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsRequest'
  '/greengrass/groups/{GroupId}/certificateauthorities':
    post:
      operationId: CreateGroupCertificateAuthority
      description: 'Creates a CA for the group. If a CA already exists, it will rotate the existing CA.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupCertificateAuthorityResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupCertificateAuthorityRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGroupCertificateAuthorities
      description: Retrieves the current CAs for a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupCertificateAuthoritiesResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupCertificateAuthoritiesRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  '/greengrass/groups/{GroupId}/versions':
    post:
      operationId: CreateGroupVersion
      description: Creates a version of a group which has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupVersionRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGroupVersions
      description: Lists the versions of a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupVersionsRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  /greengrass/definition/loggers:
    post:
      operationId: CreateLoggerDefinition
      description: Creates a logger definition. You may provide the initial version of the logger definition now or use ''CreateLoggerDefinitionVersion'' at a later time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoggerDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoggerDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLoggerDefinitions
      description: Retrieves a list of logger definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLoggerDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLoggerDefinitionsRequest'
  '/greengrass/definition/loggers/{LoggerDefinitionId}/versions':
    post:
      operationId: CreateLoggerDefinitionVersion
      description: Creates a version of a logger definition that has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoggerDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoggerDefinitionVersionRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListLoggerDefinitionVersions
      description: Lists the versions of a logger definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLoggerDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLoggerDefinitionVersionsRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
  /greengrass/definition/resources:
    post:
      operationId: CreateResourceDefinition
      description: 'Creates a resource definition which contains a list of resources to be used in a group. You can create an initial version of the definition by providing a list of resources now, or use ''''CreateResourceDefinitionVersion'''' later.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListResourceDefinitions
      description: Retrieves a list of resource definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDefinitionsRequest'
  '/greengrass/definition/resources/{ResourceDefinitionId}/versions':
    post:
      operationId: CreateResourceDefinitionVersion
      description: Creates a version of a resource definition that has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceDefinitionVersionRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListResourceDefinitionVersions
      description: Lists the versions of a resource definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDefinitionVersionsRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
  /greengrass/updates:
    post:
      operationId: CreateSoftwareUpdateJob
      description: Creates a software update for a core or group of cores (specified as an IoT thing group.) Use this to update the OTA Agent as well as the Greengrass core software. It makes use of the IoT Jobs feature which provides additional commands to manage a Greengrass core software update job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSoftwareUpdateJobResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSoftwareUpdateJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /greengrass/definition/subscriptions:
    post:
      operationId: CreateSubscriptionDefinition
      description: Creates a subscription definition. You may provide the initial version of the subscription definition now or use ''CreateSubscriptionDefinitionVersion'' at a later time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSubscriptionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSubscriptionDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSubscriptionDefinitions
      description: Retrieves a list of subscription definitions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionsRequest'
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions':
    post:
      operationId: CreateSubscriptionDefinitionVersion
      description: Creates a version of a subscription definition which has already been defined.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSubscriptionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSubscriptionDefinitionVersionRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListSubscriptionDefinitionVersions
      description: Lists the versions of a subscription definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionVersionsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSubscriptionDefinitionVersionsRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/definition/cores/{CoreDefinitionId}':
    delete:
      operationId: DeleteCoreDefinition
      description: Deletes a core definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCoreDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCoreDefinitionRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetCoreDefinition
      description: Retrieves information about a core definition version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCoreDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCoreDefinitionRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateCoreDefinition
      description: Updates a core definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCoreDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCoreDefinitionRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/definition/devices/{DeviceDefinitionId}':
    delete:
      operationId: DeleteDeviceDefinition
      description: Deletes a device definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDeviceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDeviceDefinitionRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetDeviceDefinition
      description: Retrieves information about a device definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeviceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeviceDefinitionRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateDeviceDefinition
      description: Updates a device definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDeviceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDeviceDefinitionRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/definition/functions/{FunctionDefinitionId}':
    delete:
      operationId: DeleteFunctionDefinition
      description: Deletes a Lambda function definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFunctionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFunctionDefinitionRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetFunctionDefinition
      description: 'Retrieves information about a Lambda function definition, including its creation time and latest version.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFunctionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFunctionDefinitionRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateFunctionDefinition
      description: Updates a Lambda function definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFunctionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFunctionDefinitionRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/groups/{GroupId}':
    delete:
      operationId: DeleteGroup
      description: Deletes a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetGroup
      description: Retrieves information about a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateGroup
      description: Updates a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  '/greengrass/definition/loggers/{LoggerDefinitionId}':
    delete:
      operationId: DeleteLoggerDefinition
      description: Deletes a logger definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoggerDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoggerDefinitionRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetLoggerDefinition
      description: Retrieves information about a logger definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoggerDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoggerDefinitionRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateLoggerDefinition
      description: Updates a logger definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLoggerDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLoggerDefinitionRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/definition/resources/{ResourceDefinitionId}':
    delete:
      operationId: DeleteResourceDefinition
      description: Deletes a resource definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceDefinitionRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetResourceDefinition
      description: 'Retrieves information about a resource definition, including its creation time and latest version.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetResourceDefinitionRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateResourceDefinition
      description: Updates a resource definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResourceDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResourceDefinitionRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}':
    delete:
      operationId: DeleteSubscriptionDefinition
      description: Deletes a subscription definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSubscriptionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSubscriptionDefinitionRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetSubscriptionDefinition
      description: Retrieves information about a subscription definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateSubscriptionDefinition
      description: Updates a subscription definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSubscriptionDefinitionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionDefinitionRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
  '/greengrass/things/{ThingName}/connectivityInfo':
    get:
      operationId: GetConnectivityInfo
      description: Retrieves the connectivity information for a core.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectivityInfoResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectivityInfoRequest'
        - name: ThingName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateConnectivityInfo
      description: Updates the connectivity information for the core. Any devices that belong to the group which has this core will receive this information in order to find the location of the core and connect to it.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConnectivityInfoResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConnectivityInfoRequest'
        - name: ThingName
          in: path
          type: string
          required: true
  '/greengrass/definition/cores/{CoreDefinitionId}/versions/{CoreDefinitionVersionId}':
    get:
      operationId: GetCoreDefinitionVersion
      description: Retrieves information about a core definition version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCoreDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCoreDefinitionVersionRequest'
        - name: CoreDefinitionId
          in: path
          type: string
          required: true
        - name: CoreDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/deployments/{DeploymentId}/status':
    get:
      operationId: GetDeploymentStatus
      description: Returns the status of a deployment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeploymentStatusResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeploymentStatusRequest'
        - name: GroupId
          in: path
          type: string
          required: true
        - name: DeploymentId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/devices/{DeviceDefinitionId}/versions/{DeviceDefinitionVersionId}':
    get:
      operationId: GetDeviceDefinitionVersion
      description: Retrieves information about a device definition version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeviceDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeviceDefinitionVersionRequest'
        - name: DeviceDefinitionId
          in: path
          type: string
          required: true
        - name: DeviceDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/functions/{FunctionDefinitionId}/versions/{FunctionDefinitionVersionId}':
    get:
      operationId: GetFunctionDefinitionVersion
      description: 'Retrieves information about a Lambda function definition version, including which Lambda functions are included in the version and their configurations.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetFunctionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetFunctionDefinitionVersionRequest'
        - name: FunctionDefinitionId
          in: path
          type: string
          required: true
        - name: FunctionDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/certificateauthorities/{CertificateAuthorityId}':
    get:
      operationId: GetGroupCertificateAuthority
      description: Retreives the CA associated with a group. Returns the public key of the CA.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupCertificateAuthorityResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupCertificateAuthorityRequest'
        - name: GroupId
          in: path
          type: string
          required: true
        - name: CertificateAuthorityId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/certificateauthorities/configuration/expiry':
    get:
      operationId: GetGroupCertificateConfiguration
      description: Retrieves the current configuration for the CA used by the group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupCertificateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupCertificateConfigurationRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateGroupCertificateConfiguration
      description: Updates the Certificate expiry time for a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupCertificateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupCertificateConfigurationRequest'
        - name: GroupId
          in: path
          type: string
          required: true
  '/greengrass/groups/{GroupId}/versions/{GroupVersionId}':
    get:
      operationId: GetGroupVersion
      description: Retrieves information about a group version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupVersionRequest'
        - name: GroupId
          in: path
          type: string
          required: true
        - name: GroupVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/loggers/{LoggerDefinitionId}/versions/{LoggerDefinitionVersionId}':
    get:
      operationId: GetLoggerDefinitionVersion
      description: Retrieves information about a logger definition version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoggerDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoggerDefinitionVersionRequest'
        - name: LoggerDefinitionId
          in: path
          type: string
          required: true
        - name: LoggerDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/resources/{ResourceDefinitionId}/versions/{ResourceDefinitionVersionId}':
    get:
      operationId: GetResourceDefinitionVersion
      description: 'Retrieves information about a resource definition version, including which resources are included in the version.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetResourceDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetResourceDefinitionVersionRequest'
        - name: ResourceDefinitionId
          in: path
          type: string
          required: true
        - name: ResourceDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/definition/subscriptions/{SubscriptionDefinitionId}/versions/{SubscriptionDefinitionVersionId}':
    get:
      operationId: GetSubscriptionDefinitionVersion
      description: Retrieves information about a subscription definition version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionVersionResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSubscriptionDefinitionVersionRequest'
        - name: SubscriptionDefinitionId
          in: path
          type: string
          required: true
        - name: SubscriptionDefinitionVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/greengrass/groups/{GroupId}/deployments/$reset':
    post:
      operationId: ResetDeployments
      description: Resets a group's deployments.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetDeploymentsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetDeploymentsRequest'
        - name: GroupId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AssociateRoleToGroupResponse:
    type: object
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the role ARN was associated with the group.'
  AssociateRoleToGroupRequest:
    type: object
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of the role you wish to associate with this group.
  BadRequestException:
    type: object
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Details about the error.
      Message:
        $ref: '#/definitions/__string'
        description: A message containing information about the error.
    description: General error information.
  InternalServerErrorException:
    type: object
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Details about the error.
      Message:
        $ref: '#/definitions/__string'
        description: A message containing information about the error.
    description: General error information.
  AssociateServiceRoleToAccountResponse:
    type: object
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: The time when the service role was associated with the account.
  AssociateServiceRoleToAccountRequest:
    type: object
    properties:
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of the service role you wish to associate with your account.
  CreateCoreDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateCoreDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/CoreDefinitionVersion'
        description: Information about the initial version of the core definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the core definition.
    description: Information needed to create a core definition.
  CreateCoreDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateCoreDefinitionVersionRequest:
    type: object
    properties:
      Cores:
        $ref: '#/definitions/__listOfCore'
        description: A list of cores in the core definition version.
  CreateDeploymentResponse:
    type: object
    properties:
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: The ARN of the deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The ID of the deployment.
  CreateDeploymentRequest:
    type: object
    properties:
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The ID of the deployment if you wish to redeploy a previous deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: 'The type of deployment. When used in ''''CreateDeployment'''', only ''''NewDeployment'''' and ''''Redeployment'''' are valid.'
      GroupVersionId:
        $ref: '#/definitions/__string'
        description: The ID of the group version to be deployed.
  CreateDeviceDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateDeviceDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/DeviceDefinitionVersion'
        description: Information about the initial version of the device definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the device definition.
  CreateDeviceDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateDeviceDefinitionVersionRequest:
    type: object
    properties:
      Devices:
        $ref: '#/definitions/__listOfDevice'
        description: A list of devices in the definition version.
  CreateFunctionDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateFunctionDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/FunctionDefinitionVersion'
        description: Information about the initial version of the function definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the function definition.
  CreateFunctionDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateFunctionDefinitionVersionRequest:
    type: object
    properties:
      Functions:
        $ref: '#/definitions/__listOfFunction'
        description: A list of Lambda functions in this function definition version.
    description: Information needed to create a function definition version.
  CreateGroupResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateGroupRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/GroupVersion'
        description: Information about the initial version of the group.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the group.
  CreateGroupCertificateAuthorityResponse:
    type: object
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: The ARN of the group certificate authority.
  CreateGroupCertificateAuthorityRequest:
    type: object
    properties: {}
  CreateGroupVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateGroupVersionRequest:
    type: object
    properties:
      CoreDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the core definition version for this group.
      DeviceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the device definition version for this group.
      FunctionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the function definition version for this group.
      LoggerDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the logger definition version for this group.
      ResourceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The resource definition version ARN for this group.
      SubscriptionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the subscription definition version for this group.
  CreateLoggerDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateLoggerDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/LoggerDefinitionVersion'
        description: Information about the initial version of the logger definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the logger definition.
  CreateLoggerDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateLoggerDefinitionVersionRequest:
    type: object
    properties:
      Loggers:
        $ref: '#/definitions/__listOfLogger'
        description: A list of loggers.
  CreateResourceDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateResourceDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/ResourceDefinitionVersion'
        description: Information about the initial version of the resource definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the resource definition.
  CreateResourceDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateResourceDefinitionVersionRequest:
    type: object
    properties:
      Resources:
        $ref: '#/definitions/__listOfResource'
        description: A list of resources.
  CreateSoftwareUpdateJobResponse:
    type: object
    properties:
      IotJobArn:
        $ref: '#/definitions/__string'
        description: The IoT Job ARN corresponding to this update.
      IotJobId:
        $ref: '#/definitions/__string'
        description: The IoT Job Id corresponding to this update.
  CreateSoftwareUpdateJobRequest:
    type: object
    properties:
      S3UrlSignerRole:
        $ref: '#/definitions/S3UrlSignerRole'
      SoftwareToUpdate:
        $ref: '#/definitions/SoftwareToUpdate'
      UpdateAgentLogLevel:
        $ref: '#/definitions/UpdateAgentLogLevel'
      UpdateTargets:
        $ref: '#/definitions/UpdateTargets'
      UpdateTargetsArchitecture:
        $ref: '#/definitions/UpdateTargetsArchitecture'
      UpdateTargetsOperatingSystem:
        $ref: '#/definitions/UpdateTargetsOperatingSystem'
  CreateSubscriptionDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  CreateSubscriptionDefinitionRequest:
    type: object
    properties:
      InitialVersion:
        $ref: '#/definitions/SubscriptionDefinitionVersion'
        description: Information about the initial version of the subscription definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the subscription definition.
  CreateSubscriptionDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
  CreateSubscriptionDefinitionVersionRequest:
    type: object
    properties:
      Subscriptions:
        $ref: '#/definitions/__listOfSubscription'
        description: A list of subscriptions.
  DeleteCoreDefinitionResponse:
    type: object
    properties: {}
  DeleteCoreDefinitionRequest:
    type: object
    properties: {}
  DeleteDeviceDefinitionResponse:
    type: object
    properties: {}
  DeleteDeviceDefinitionRequest:
    type: object
    properties: {}
  DeleteFunctionDefinitionResponse:
    type: object
    properties: {}
  DeleteFunctionDefinitionRequest:
    type: object
    properties: {}
  DeleteGroupResponse:
    type: object
    properties: {}
  DeleteGroupRequest:
    type: object
    properties: {}
  DeleteLoggerDefinitionResponse:
    type: object
    properties: {}
  DeleteLoggerDefinitionRequest:
    type: object
    properties: {}
  DeleteResourceDefinitionResponse:
    type: object
    properties: {}
  DeleteResourceDefinitionRequest:
    type: object
    properties: {}
  DeleteSubscriptionDefinitionResponse:
    type: object
    properties: {}
  DeleteSubscriptionDefinitionRequest:
    type: object
    properties: {}
  DisassociateRoleFromGroupResponse:
    type: object
    properties:
      DisassociatedAt:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the role was disassociated from the group.'
  DisassociateRoleFromGroupRequest:
    type: object
    properties: {}
  DisassociateServiceRoleFromAccountResponse:
    type: object
    properties:
      DisassociatedAt:
        $ref: '#/definitions/__string'
        description: The time when the service role was disassociated from the account.
  DisassociateServiceRoleFromAccountRequest:
    type: object
    properties: {}
  GetAssociatedRoleResponse:
    type: object
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: The time when the role was associated with the group.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of the role that is associated with the group.
  GetAssociatedRoleRequest:
    type: object
    properties: {}
  GetConnectivityInfoResponse:
    type: object
    properties:
      ConnectivityInfo:
        $ref: '#/definitions/__listOfConnectivityInfo'
        description: Connectivity info list.
      Message:
        $ref: '#/definitions/__string'
        description: A message about the connectivity info request.
  GetConnectivityInfoRequest:
    type: object
    properties: {}
  GetCoreDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetCoreDefinitionRequest:
    type: object
    properties: {}
  GetCoreDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the core definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the core definition version was created.'
      Definition:
        $ref: '#/definitions/CoreDefinitionVersion'
        description: Information about the core definition version.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the core definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the core definition version.
  GetCoreDefinitionVersionRequest:
    type: object
    properties: {}
  GetDeploymentStatusResponse:
    type: object
    properties:
      DeploymentStatus:
        $ref: '#/definitions/__string'
        description: The status of the deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: The type of the deployment.
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Error details
      ErrorMessage:
        $ref: '#/definitions/__string'
        description: Error message
      UpdatedAt:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the deployment status was updated.'
  GetDeploymentStatusRequest:
    type: object
    properties: {}
  GetDeviceDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetDeviceDefinitionRequest:
    type: object
    properties: {}
  GetDeviceDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the device definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the device definition version was created.'
      Definition:
        $ref: '#/definitions/DeviceDefinitionVersion'
        description: Information about the device definition version.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the device definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the device definition version.
  GetDeviceDefinitionVersionRequest:
    type: object
    properties: {}
  GetFunctionDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetFunctionDefinitionRequest:
    type: object
    properties: {}
  GetFunctionDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the function definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the function definition version was created.'
      Definition:
        $ref: '#/definitions/FunctionDefinitionVersion'
        description: Information on the definition.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the function definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the function definition version.
  GetFunctionDefinitionVersionRequest:
    type: object
    properties: {}
  GetGroupResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetGroupRequest:
    type: object
    properties: {}
  GetGroupCertificateAuthorityResponse:
    type: object
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: The ARN of the certificate authority for the group.
      GroupCertificateAuthorityId:
        $ref: '#/definitions/__string'
        description: The ID of the certificate authority for the group.
      PemEncodedCertificate:
        $ref: '#/definitions/__string'
        description: The PEM encoded certificate for the group.
  GetGroupCertificateAuthorityRequest:
    type: object
    properties: {}
  GetGroupCertificateConfigurationResponse:
    type: object
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate authority expires, in milliseconds.'
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate expires, in milliseconds.'
      GroupId:
        $ref: '#/definitions/__string'
        description: The ID of the group certificate configuration.
  GetGroupCertificateConfigurationRequest:
    type: object
    properties: {}
  GetGroupVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the group version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the group version was created.'
      Definition:
        $ref: '#/definitions/GroupVersion'
        description: Information about the group version definition.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the group version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID for the version of the group.
  GetGroupVersionRequest:
    type: object
    properties: {}
  GetLoggerDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetLoggerDefinitionRequest:
    type: object
    properties: {}
  GetLoggerDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the logger definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the logger definition version was created.'
      Definition:
        $ref: '#/definitions/LoggerDefinitionVersion'
        description: Information about the logger definition version.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the logger definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the logger definition version.
  GetLoggerDefinitionVersionRequest:
    type: object
    properties: {}
  GetResourceDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetResourceDefinitionRequest:
    type: object
    properties: {}
  GetResourceDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Arn of the resource definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the resource definition version was created.'
      Definition:
        $ref: '#/definitions/ResourceDefinitionVersion'
        description: Information about the definition.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the resource definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the resource definition version.
  GetResourceDefinitionVersionRequest:
    type: object
    properties: {}
  GetServiceRoleForAccountResponse:
    type: object
    properties:
      AssociatedAt:
        $ref: '#/definitions/__string'
        description: The time when the service role was associated with the account.
      RoleArn:
        $ref: '#/definitions/__string'
        description: The ARN of the role which is associated with the account.
  GetServiceRoleForAccountRequest:
    type: object
    properties: {}
  GetSubscriptionDefinitionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  GetSubscriptionDefinitionRequest:
    type: object
    properties: {}
  GetSubscriptionDefinitionVersionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the subscription definition version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the subscription definition version was created.'
      Definition:
        $ref: '#/definitions/SubscriptionDefinitionVersion'
        description: Information about the subscription definition version.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the subscription definition version.
      Version:
        $ref: '#/definitions/__string'
        description: The version of the subscription definition version.
  GetSubscriptionDefinitionVersionRequest:
    type: object
    properties: {}
  ListCoreDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListCoreDefinitionVersionsRequest:
    type: object
    properties: {}
  ListCoreDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListCoreDefinitionsRequest:
    type: object
    properties: {}
  ListDeploymentsResponse:
    type: object
    properties:
      Deployments:
        $ref: '#/definitions/Deployments'
        description: A list of deployments for the requested groups.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListDeploymentsRequest:
    type: object
    properties: {}
  ListDeviceDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListDeviceDefinitionVersionsRequest:
    type: object
    properties: {}
  ListDeviceDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListDeviceDefinitionsRequest:
    type: object
    properties: {}
  ListFunctionDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListFunctionDefinitionVersionsRequest:
    type: object
    properties: {}
  ListFunctionDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListFunctionDefinitionsRequest:
    type: object
    properties: {}
  ListGroupCertificateAuthoritiesResponse:
    type: object
    properties:
      GroupCertificateAuthorities:
        $ref: '#/definitions/__listOfGroupCertificateAuthorityProperties'
        description: A list of certificate authorities associated with the group.
  ListGroupCertificateAuthoritiesRequest:
    type: object
    properties: {}
  ListGroupVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListGroupVersionsRequest:
    type: object
    properties: {}
  ListGroupsResponse:
    type: object
    properties:
      Groups:
        $ref: '#/definitions/__listOfGroupInformation'
        description: Information about a group.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListGroupsRequest:
    type: object
    properties: {}
  ListLoggerDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListLoggerDefinitionVersionsRequest:
    type: object
    properties: {}
  ListLoggerDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListLoggerDefinitionsRequest:
    type: object
    properties: {}
  ListResourceDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListResourceDefinitionVersionsRequest:
    type: object
    properties: {}
  ListResourceDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListResourceDefinitionsRequest:
    type: object
    properties: {}
  ListSubscriptionDefinitionVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
  ListSubscriptionDefinitionVersionsRequest:
    type: object
    properties: {}
  ListSubscriptionDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
  ListSubscriptionDefinitionsRequest:
    type: object
    properties: {}
  ResetDeploymentsResponse:
    type: object
    properties:
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: The ARN of the deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The ID of the deployment.
  ResetDeploymentsRequest:
    type: object
    properties:
      Force:
        $ref: '#/definitions/__boolean'
        description: 'If true, performs a best-effort only core reset.'
    description: Information needed to reset deployments.
  UpdateConnectivityInfoResponse:
    type: object
    properties:
      Message:
        $ref: '#/definitions/__string'
        description: A message about the connectivity info update request.
      Version:
        $ref: '#/definitions/__string'
        description: The new version of the connectivity info.
  UpdateConnectivityInfoRequest:
    type: object
    properties:
      ConnectivityInfo:
        $ref: '#/definitions/__listOfConnectivityInfo'
        description: A list of connectivity info.
    description: Connectivity information.
  UpdateCoreDefinitionResponse:
    type: object
    properties: {}
  UpdateCoreDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateDeviceDefinitionResponse:
    type: object
    properties: {}
  UpdateDeviceDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateFunctionDefinitionResponse:
    type: object
    properties: {}
  UpdateFunctionDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateGroupResponse:
    type: object
    properties: {}
  UpdateGroupRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateGroupCertificateConfigurationResponse:
    type: object
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate authority expires, in milliseconds.'
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate expires, in milliseconds.'
      GroupId:
        $ref: '#/definitions/__string'
        description: The ID of the group certificate configuration.
  UpdateGroupCertificateConfigurationRequest:
    type: object
    properties:
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate expires, in milliseconds.'
  UpdateLoggerDefinitionResponse:
    type: object
    properties: {}
  UpdateLoggerDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateResourceDefinitionResponse:
    type: object
    properties: {}
  UpdateResourceDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  UpdateSubscriptionDefinitionResponse:
    type: object
    properties: {}
  UpdateSubscriptionDefinitionRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
  __string:
    type: string
  ErrorDetails:
    type: array
    description: A list of error details.
    items:
      $ref: '#/definitions/ErrorDetail'
  __integer:
    type: integer
  ConnectivityInfo:
    type: object
    properties:
      HostAddress:
        $ref: '#/definitions/__string'
        description: The endpoint for the Greengrass core. Can be an IP address or DNS.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the connectivity information.
      Metadata:
        $ref: '#/definitions/__string'
        description: Metadata for this endpoint.
      PortNumber:
        $ref: '#/definitions/__integer'
        description: The port of the Greengrass core. Usually 8883.
    description: Information about a Greengrass core's connectivity.
  __boolean:
    type: boolean
  Core:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/__string'
        description: The ARN of the certificate associated with the core.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the core.
      SyncShadow:
        $ref: '#/definitions/__boolean'
        description: 'If true, the core''s local shadow is automatically synced with the cloud.'
      ThingArn:
        $ref: '#/definitions/__string'
        description: The ARN of the thing which is the core.
    description: Information about a core.
  __listOfCore:
    type: array
    items:
      $ref: '#/definitions/Core'
  CoreDefinitionVersion:
    type: object
    properties:
      Cores:
        $ref: '#/definitions/__listOfCore'
        description: A list of cores in the core definition version.
    description: Information about a core definition version.
  DeploymentType:
    type: string
    enum:
      - NewDeployment
      - Redeployment
      - ResetDeployment
      - ForceResetDeployment
  DeviceDefinitionVersion:
    type: object
    properties:
      Devices:
        $ref: '#/definitions/__listOfDevice'
        description: A list of devices in the definition version.
    description: Information about a device definition version.
  __listOfDevice:
    type: array
    items:
      $ref: '#/definitions/Device'
  FunctionDefinitionVersion:
    type: object
    properties:
      Functions:
        $ref: '#/definitions/__listOfFunction'
        description: A list of Lambda functions in this function definition version.
    description: Information about a function definition version.
  __listOfFunction:
    type: array
    items:
      $ref: '#/definitions/Function'
  GroupVersion:
    type: object
    properties:
      CoreDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the core definition version for this group.
      DeviceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the device definition version for this group.
      FunctionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the function definition version for this group.
      LoggerDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the logger definition version for this group.
      ResourceDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The resource definition version ARN for this group.
      SubscriptionDefinitionVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the subscription definition version for this group.
    description: Information about a group version.
  LoggerDefinitionVersion:
    type: object
    properties:
      Loggers:
        $ref: '#/definitions/__listOfLogger'
        description: A list of loggers.
    description: Information about a logger definition version.
  __listOfLogger:
    type: array
    items:
      $ref: '#/definitions/Logger'
  ResourceDefinitionVersion:
    type: object
    properties:
      Resources:
        $ref: '#/definitions/__listOfResource'
        description: A list of resources.
    description: Information about a resource definition version.
  __listOfResource:
    type: array
    items:
      $ref: '#/definitions/Resource'
  S3UrlSignerRole:
    type: string
    description: The IAM Role that Greengrass will use to create pre-signed URLs pointing towards the update artifact.
  SoftwareToUpdate:
    type: string
    enum:
      - core
      - ota_agent
    description: The piece of software on the Greengrass core that will be updated.
  UpdateAgentLogLevel:
    type: string
    enum:
      - NONE
      - TRACE
      - DEBUG
      - VERBOSE
      - INFO
      - WARN
      - ERROR
      - FATAL
    description: The minimum level of log statements that should be logged by the OTA Agent during an update.
  UpdateTargets:
    type: array
    description: The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.
    items:
      $ref: '#/definitions/__string'
  UpdateTargetsArchitecture:
    type: string
    enum:
      - armv7l
      - x86_64
      - aarch64
    description: The architecture of the cores which are the targets of an update.
  UpdateTargetsOperatingSystem:
    type: string
    enum:
      - ubuntu
      - raspbian
      - amazon_linux
    description: The operating system of the cores which are the targets of an update.
  SubscriptionDefinitionVersion:
    type: object
    properties:
      Subscriptions:
        $ref: '#/definitions/__listOfSubscription'
        description: A list of subscriptions.
    description: Information about a subscription definition version.
  __listOfSubscription:
    type: array
    items:
      $ref: '#/definitions/Subscription'
  DefinitionInformation:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the definition.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the definition.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the definition was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the definition.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the definition.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the definition.
    description: Information about a definition.
  Deployment:
    type: object
    properties:
      CreatedAt:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the deployment was created.'
      DeploymentArn:
        $ref: '#/definitions/__string'
        description: The ARN of the deployment.
      DeploymentId:
        $ref: '#/definitions/__string'
        description: The ID of the deployment.
      DeploymentType:
        $ref: '#/definitions/DeploymentType'
        description: The type of the deployment.
      GroupArn:
        $ref: '#/definitions/__string'
        description: The ARN of the group for this deployment.
    description: Information about a deployment.
  Deployments:
    type: array
    items:
      $ref: '#/definitions/Deployment'
  Device:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/__string'
        description: The ARN of the certificate associated with the device.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the device.
      SyncShadow:
        $ref: '#/definitions/__boolean'
        description: 'If true, the device''s local shadow will be automatically synced with the cloud.'
      ThingArn:
        $ref: '#/definitions/__string'
        description: The thing ARN of the device.
    description: Information about a device.
  Empty:
    type: object
    properties: {}
    description: Empty
  EncodingType:
    type: string
    enum:
      - binary
      - json
  ErrorDetail:
    type: object
    properties:
      DetailedErrorCode:
        $ref: '#/definitions/__string'
        description: A detailed error code.
      DetailedErrorMessage:
        $ref: '#/definitions/__string'
        description: A detailed error message.
    description: Details about the error.
  FunctionConfiguration:
    type: object
    properties:
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: The expected encoding type of the input payload for the function. The default is ''json''.
      Environment:
        $ref: '#/definitions/FunctionConfigurationEnvironment'
        description: The environment configuration of the function.
      ExecArgs:
        $ref: '#/definitions/__string'
        description: The execution arguments.
      Executable:
        $ref: '#/definitions/__string'
        description: The name of the function executable.
      MemorySize:
        $ref: '#/definitions/__integer'
        description: 'The memory size, in KB, which the function requires.'
      Pinned:
        $ref: '#/definitions/__boolean'
        description: True if the function is pinned. Pinned means the function is long-lived and starts when the core starts.
      Timeout:
        $ref: '#/definitions/__integer'
        description: 'The allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned lambdas for each request.'
    description: The configuration of the Lambda function.
  Function:
    type: object
    properties:
      FunctionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the Lambda function.
      FunctionConfiguration:
        $ref: '#/definitions/FunctionConfiguration'
        description: The configuration of the Lambda function.
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the Lambda function.
    description: Information about a Lambda function.
  FunctionConfigurationEnvironment:
    type: object
    properties:
      AccessSysfs:
        $ref: '#/definitions/__boolean'
        description: 'If true, the Lambda function is allowed to access the host''s /sys folder. Use this when the Lambda function needs to read device information from /sys.'
      ResourceAccessPolicies:
        $ref: '#/definitions/__listOfResourceAccessPolicy'
        description: 'A list of the resources, with their permissions, to which the Lambda function will be granted access. A Lambda function can have at most 10 resources.'
      Variables:
        $ref: '#/definitions/__mapOf__string'
        description: Environment variables for the Lambda function's configuration.
    description: The environment configuration of the function.
  __listOfResourceAccessPolicy:
    type: array
    items:
      $ref: '#/definitions/ResourceAccessPolicy'
  __mapOf__string:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/__string'
        value:
          $ref: '#/definitions/__string'
  GeneralError:
    type: object
    properties:
      ErrorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: Details about the error.
      Message:
        $ref: '#/definitions/__string'
        description: A message containing information about the error.
    description: General error information.
  __listOfConnectivityInfo:
    type: array
    items:
      $ref: '#/definitions/ConnectivityInfo'
  GroupCertificateAuthorityProperties:
    type: object
    properties:
      GroupCertificateAuthorityArn:
        $ref: '#/definitions/__string'
        description: The ARN of the certificate authority for the group.
      GroupCertificateAuthorityId:
        $ref: '#/definitions/__string'
        description: The ID of the certificate authority for the group.
    description: Information about a certificate authority for a group.
  GroupCertificateConfiguration:
    type: object
    properties:
      CertificateAuthorityExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate authority expires, in milliseconds.'
      CertificateExpiryInMilliseconds:
        $ref: '#/definitions/__string'
        description: 'The amount of time remaining before the certificate expires, in milliseconds.'
      GroupId:
        $ref: '#/definitions/__string'
        description: The ID of the group certificate configuration.
    description: Information about a group certificate configuration.
  GroupInformation:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the group.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the group was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the group.
      LastUpdatedTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the group was last updated.'
      LatestVersion:
        $ref: '#/definitions/__string'
        description: The latest version of the group.
      LatestVersionArn:
        $ref: '#/definitions/__string'
        description: The ARN of the latest version of the group.
      Name:
        $ref: '#/definitions/__string'
        description: The name of the group.
    description: Information about a group.
  GroupOwnerSetting:
    type: object
    properties:
      AutoAddGroupOwner:
        $ref: '#/definitions/__boolean'
        description: 'If true, GreenGrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.'
      GroupOwner:
        $ref: '#/definitions/__string'
        description: The name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.
    description: Group owner related settings for local resources.
  __listOfVersionInformation:
    type: array
    items:
      $ref: '#/definitions/VersionInformation'
  __listOfDefinitionInformation:
    type: array
    items:
      $ref: '#/definitions/DefinitionInformation'
  ListDefinitionsResponse:
    type: object
    properties:
      Definitions:
        $ref: '#/definitions/__listOfDefinitionInformation'
        description: Information about a definition.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
    description: A list of definitions.
  __listOfGroupCertificateAuthorityProperties:
    type: array
    items:
      $ref: '#/definitions/GroupCertificateAuthorityProperties'
  __listOfGroupInformation:
    type: array
    items:
      $ref: '#/definitions/GroupInformation'
  ListVersionsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token for the next set of results, or ''''null'''' if there are no additional results.'
      Versions:
        $ref: '#/definitions/__listOfVersionInformation'
        description: Information about a version.
    description: A list of versions.
  LocalDeviceResourceData:
    type: object
    properties:
      GroupOwnerSetting:
        $ref: '#/definitions/GroupOwnerSetting'
        description: Group/owner related settings for local resources.
      SourcePath:
        $ref: '#/definitions/__string'
        description: The local absolute path of the device resource. The source path for a device resource can refer only to a character device or block device under ''/dev''.
    description: Attributes that define a local device resource.
  LocalVolumeResourceData:
    type: object
    properties:
      DestinationPath:
        $ref: '#/definitions/__string'
        description: The absolute local path of the resource inside the lambda environment.
      GroupOwnerSetting:
        $ref: '#/definitions/GroupOwnerSetting'
        description: Allows you to configure additional group privileges for the Lambda process. This field is optional.
      SourcePath:
        $ref: '#/definitions/__string'
        description: The local absolute path of the volume resource on the host. The source path for a volume resource type cannot start with ''/sys''.
    description: Attributes that define a local volume resource.
  LoggerComponent:
    type: string
    enum:
      - GreengrassSystem
      - Lambda
  LoggerLevel:
    type: string
    enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
  LoggerType:
    type: string
    enum:
      - FileSystem
      - AWSCloudWatch
  Logger:
    type: object
    properties:
      Component:
        $ref: '#/definitions/LoggerComponent'
        description: The component that will be subject to logging.
      Id:
        $ref: '#/definitions/__string'
        description: The id of the logger.
      Level:
        $ref: '#/definitions/LoggerLevel'
        description: The level of the logs.
      Space:
        $ref: '#/definitions/__integer'
        description: 'The amount of file space, in KB, to use if the local file system is used for logging purposes.'
      Type:
        $ref: '#/definitions/LoggerType'
        description: The type of log output which will be used.
    description: Information about a logger
  Permission:
    type: string
    enum:
      - ro
      - rw
    description: The type of permission a function has to access a resource.
  ResourceDataContainer:
    type: object
    properties:
      LocalDeviceResourceData:
        $ref: '#/definitions/LocalDeviceResourceData'
        description: Attributes that define the local device resource.
      LocalVolumeResourceData:
        $ref: '#/definitions/LocalVolumeResourceData'
        description: Attributes that define the local volume resource.
      S3MachineLearningModelResourceData:
        $ref: '#/definitions/S3MachineLearningModelResourceData'
        description: Attributes that define an S3 machine learning resource.
      SageMakerMachineLearningModelResourceData:
        $ref: '#/definitions/SageMakerMachineLearningModelResourceData'
        description: Attributes that define an SageMaker machine learning resource.
    description: 'A container for resource data. The container takes only one of the following supported resource data types: ''''LocalDeviceResourceData'''', ''''LocalVolumeResourceData'''', ''''SageMakerMachineLearningModelResourceData'''', ''''S3MachineLearningModelResourceData''''.'
  Resource:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: 'The resource ID, used to refer to a resource in the Lambda function configuration. Max length is 128 characters with pattern ''''[a-zA-Z0-9:_-]+''''. This must be unique within a Greengrass group.'
      Name:
        $ref: '#/definitions/__string'
        description: 'The descriptive resource name, which is displayed on the Greengrass console. Max length 128 characters with pattern ''''[a-zA-Z0-9:_-]+''''. This must be unique within a Greengrass group.'
      ResourceDataContainer:
        $ref: '#/definitions/ResourceDataContainer'
        description: A container of data for all resource types.
    description: Information about a resource.
  ResourceAccessPolicy:
    type: object
    properties:
      Permission:
        $ref: '#/definitions/Permission'
        description: The permissions that the Lambda function has to the resource. Can be one of ''rw'' (read/write) or ''ro'' (read-only).
      ResourceId:
        $ref: '#/definitions/__string'
        description: The ID of the resource. (This ID is assigned to the resource when you create the resource definiton.)
    description: A policy used by the function to access a resource.
  S3MachineLearningModelResourceData:
    type: object
    properties:
      DestinationPath:
        $ref: '#/definitions/__string'
        description: The absolute local path of the resource inside the Lambda environment.
      S3Uri:
        $ref: '#/definitions/__string'
        description: The URI of the source model in an S3 bucket. The model package must be in tar.gz or .zip format.
    description: Attributes that define an S3 machine learning resource.
  SageMakerMachineLearningModelResourceData:
    type: object
    properties:
      DestinationPath:
        $ref: '#/definitions/__string'
        description: The absolute local path of the resource inside the Lambda environment.
      SageMakerJobArn:
        $ref: '#/definitions/__string'
        description: The ARN of the SageMaker training job that represents the source model.
    description: Attributes that define an SageMaker machine learning resource.
  Subscription:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: The id of the subscription.
      Source:
        $ref: '#/definitions/__string'
        description: 'The source of the subscription. Can be a thing ARN, a Lambda function ARN, ''cloud'' (which represents the IoT cloud), or ''GGShadowService''.'
      Subject:
        $ref: '#/definitions/__string'
        description: The subject of the message.
      Target:
        $ref: '#/definitions/__string'
        description: 'Where the message is sent to. Can be a thing ARN, a Lambda function ARN, ''cloud'' (which represents the IoT cloud), or ''GGShadowService''.'
    description: Information about a subscription.
  VersionInformation:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: The ARN of the version.
      CreationTimestamp:
        $ref: '#/definitions/__string'
        description: 'The time, in milliseconds since the epoch, when the version was created.'
      Id:
        $ref: '#/definitions/__string'
        description: The ID of the version.
      Version:
        $ref: '#/definitions/__string'
        description: The unique ID of the version.
    description: Information about a version.
  __double:
    type: number
    format: double
  __long:
    type: integer
  __timestamp:
    type: string
    format: date-time
