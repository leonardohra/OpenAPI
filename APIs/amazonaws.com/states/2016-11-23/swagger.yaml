swagger: '2.0'
info:
  version: '2016-11-23'
  x-release: v4
  title: AWS Step Functions
  description: '<fullname>AWS Step Functions</fullname> <p>AWS Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.</p> <p>You can use Step Functions to build applications from individual components, each of which performs a discrete function, or <i>task</i>, allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.</p> <p>Step Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on AWS, your own servers, or any system that has access to AWS. You can access and use Step Functions using the console, the AWS SDKs, or an HTTP API. For more information about Step Functions, see the <i> <a href="http://docs.aws.amazon.com/step-functions/latest/dg/welcome.html">AWS Step Functions Developer Guide</a> </i>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: states
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/states-2016-11-23.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/states/'
host: states.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateActivity
      description: Creates an activity. An activity is a task which you write in any programming language and host on any machine which has access to AWS Step Functions. Activities must poll Step Functions using the <code>GetActivityTask</code> API action and respond using <code>SendTask*</code> API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateActivityOutput'
        '480':
          description: ActivityLimitExceeded
          schema:
            $ref: '#/definitions/ActivityLimitExceeded'
        '481':
          description: InvalidName
          schema:
            $ref: '#/definitions/InvalidName'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateActivityInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateStateMachine':
    post:
      operationId: CreateStateMachine
      description: 'Creates a state machine. A state machine consists of a collection of states that can do work (<code>Task</code> states), determine to which states to transition next (<code>Choice</code> states), stop an execution with an error (<code>Fail</code> states), and so on. State machines are specified using a JSON-based, structured language.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStateMachineOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '481':
          description: InvalidDefinition
          schema:
            $ref: '#/definitions/InvalidDefinition'
        '482':
          description: InvalidName
          schema:
            $ref: '#/definitions/InvalidName'
        '483':
          description: StateMachineAlreadyExists
          schema:
            $ref: '#/definitions/StateMachineAlreadyExists'
        '484':
          description: StateMachineDeleting
          schema:
            $ref: '#/definitions/StateMachineDeleting'
        '485':
          description: StateMachineLimitExceeded
          schema:
            $ref: '#/definitions/StateMachineLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStateMachineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteActivity':
    post:
      operationId: DeleteActivity
      description: Deletes an activity.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteActivityOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteActivityInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteStateMachine':
    post:
      operationId: DeleteStateMachine
      description: '<p>Deletes a state machine. This is an asynchronous operation: It sets the state machine''s status to <code>DELETING</code> and begins the deletion process. Each state machine execution is deleted the next time it makes a state transition.</p> <note> <p>The state machine itself is deleted after all executions are completed or deleted.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStateMachineOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStateMachineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivity':
    post:
      operationId: DescribeActivity
      description: Describes an activity.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeActivityOutput'
        '480':
          description: ActivityDoesNotExist
          schema:
            $ref: '#/definitions/ActivityDoesNotExist'
        '481':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeActivityInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeExecution':
    post:
      operationId: DescribeExecution
      description: Describes an execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          schema:
            $ref: '#/definitions/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeStateMachine':
    post:
      operationId: DescribeStateMachine
      description: Describes a state machine.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStateMachineOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '481':
          description: StateMachineDoesNotExist
          schema:
            $ref: '#/definitions/StateMachineDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStateMachineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeStateMachineForExecution':
    post:
      operationId: DescribeStateMachineForExecution
      description: Describes the state machine associated with a specific execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStateMachineForExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          schema:
            $ref: '#/definitions/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStateMachineForExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetActivityTask':
    post:
      operationId: GetActivityTask
      description: '<p>Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a <code>taskToken</code> with a null string.</p> <important> <p>Workers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetActivityTaskOutput'
        '480':
          description: ActivityDoesNotExist
          schema:
            $ref: '#/definitions/ActivityDoesNotExist'
        '481':
          description: ActivityWorkerLimitExceeded
          schema:
            $ref: '#/definitions/ActivityWorkerLimitExceeded'
        '482':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetActivityTaskInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetExecutionHistory':
    post:
      operationId: GetExecutionHistory
      description: '<p>Returns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the <code>timeStamp</code> of the events. Use the <code>reverseOrder</code> parameter to get the latest events first.</p> <p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetExecutionHistoryOutput'
        '480':
          description: ExecutionDoesNotExist
          schema:
            $ref: '#/definitions/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '482':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetExecutionHistoryInput'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListActivities':
    post:
      operationId: ListActivities
      description: '<p>Lists the existing activities.</p> <p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActivitiesOutput'
        '480':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListActivitiesInput'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListExecutions':
    post:
      operationId: ListExecutions
      description: '<p>Lists the executions of a state machine that meet the filtering criteria.</p> <p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListExecutionsOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '481':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
        '482':
          description: StateMachineDoesNotExist
          schema:
            $ref: '#/definitions/StateMachineDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListExecutionsInput'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListStateMachines':
    post:
      operationId: ListStateMachines
      description: '<p>Lists the existing state machines.</p> <p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStateMachinesOutput'
        '480':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListStateMachinesInput'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendTaskFailure':
    post:
      operationId: SendTaskFailure
      description: Used by workers to report that the task identified by the <code>taskToken</code> failed.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendTaskFailureOutput'
        '480':
          description: TaskDoesNotExist
          schema:
            $ref: '#/definitions/TaskDoesNotExist'
        '481':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
        '482':
          description: TaskTimedOut
          schema:
            $ref: '#/definitions/TaskTimedOut'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendTaskFailureInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendTaskHeartbeat':
    post:
      operationId: SendTaskHeartbeat
      description: '<p>Used by workers to report to the service that the task represented by the specified <code>taskToken</code> is still making progress. This action resets the <code>Heartbeat</code> clock. The <code>Heartbeat</code> threshold is specified in the state machine''s Amazon States Language definition. This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an <code>ActivityTimedOut</code> event.</p> <note> <p>The <code>Timeout</code> of a task, defined in the state machine''s Amazon States Language definition, is its maximum allowed duration, regardless of the number of <a>SendTaskHeartbeat</a> requests received.</p> </note> <note> <p>This operation is only useful for long-lived tasks to report the liveliness of the task.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendTaskHeartbeatOutput'
        '480':
          description: TaskDoesNotExist
          schema:
            $ref: '#/definitions/TaskDoesNotExist'
        '481':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
        '482':
          description: TaskTimedOut
          schema:
            $ref: '#/definitions/TaskTimedOut'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendTaskHeartbeatInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendTaskSuccess':
    post:
      operationId: SendTaskSuccess
      description: Used by workers to report that the task identified by the <code>taskToken</code> completed successfully.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendTaskSuccessOutput'
        '480':
          description: TaskDoesNotExist
          schema:
            $ref: '#/definitions/TaskDoesNotExist'
        '481':
          description: InvalidOutput
          schema:
            $ref: '#/definitions/InvalidOutput'
        '482':
          description: InvalidToken
          schema:
            $ref: '#/definitions/InvalidToken'
        '483':
          description: TaskTimedOut
          schema:
            $ref: '#/definitions/TaskTimedOut'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendTaskSuccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartExecution':
    post:
      operationId: StartExecution
      description: Starts a state machine execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartExecutionOutput'
        '480':
          description: ExecutionLimitExceeded
          schema:
            $ref: '#/definitions/ExecutionLimitExceeded'
        '481':
          description: ExecutionAlreadyExists
          schema:
            $ref: '#/definitions/ExecutionAlreadyExists'
        '482':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '483':
          description: InvalidExecutionInput
          schema:
            $ref: '#/definitions/InvalidExecutionInput'
        '484':
          description: InvalidName
          schema:
            $ref: '#/definitions/InvalidName'
        '485':
          description: StateMachineDoesNotExist
          schema:
            $ref: '#/definitions/StateMachineDoesNotExist'
        '486':
          description: StateMachineDeleting
          schema:
            $ref: '#/definitions/StateMachineDeleting'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopExecution':
    post:
      operationId: StopExecution
      description: Stops an execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopExecutionOutput'
        '480':
          description: ExecutionDoesNotExist
          schema:
            $ref: '#/definitions/ExecutionDoesNotExist'
        '481':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateStateMachine':
    post:
      operationId: UpdateStateMachine
      description: <p>Updates an existing state machine by modifying its <code>definition</code> and/or <code>roleArn</code>. Running executions will continue to use the previous <code>definition</code> and <code>roleArn</code>.</p> <note> <p>All <code>StartExecution</code> calls within a few seconds will use the updated <code>definition</code> and <code>roleArn</code>. Executions started immediately after calling <code>UpdateStateMachine</code> may use the previous state machine <code>definition</code> and <code>roleArn</code>. You must include at least one of <code>definition</code> or <code>roleArn</code> or you will receive a <code>MissingRequiredParameter</code> error.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStateMachineOutput'
        '480':
          description: InvalidArn
          schema:
            $ref: '#/definitions/InvalidArn'
        '481':
          description: InvalidDefinition
          schema:
            $ref: '#/definitions/InvalidDefinition'
        '482':
          description: MissingRequiredParameter
          schema:
            $ref: '#/definitions/MissingRequiredParameter'
        '483':
          description: StateMachineDeleting
          schema:
            $ref: '#/definitions/StateMachineDeleting'
        '484':
          description: StateMachineDoesNotExist
          schema:
            $ref: '#/definitions/StateMachineDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStateMachineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateActivityOutput:
    type: object
    required:
      - activityArn
      - creationDate
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the created activity.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the activity is created.
  CreateActivityInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see <a href="http://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
  ActivityLimitExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The maximum number of activities has been reached. Existing activities must be deleted before a new activity can be created.
  InvalidName:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided name is invalid.
  CreateStateMachineOutput:
    type: object
    required:
      - stateMachineArn
      - creationDate
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the created state machine.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the state machine is created.
  CreateStateMachineInput:
    type: object
    required:
      - name
      - definition
      - roleArn
    properties:
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the state machine. This name must be unique for your AWS account and region for 90 days. For more information, see <a href="http://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      definition:
        $ref: '#/definitions/Definition'
        description: The Amazon States Language definition of the state machine.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
  InvalidArn:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided Amazon Resource Name (ARN) is invalid.
  InvalidDefinition:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided Amazon States Language definition is invalid.
  StateMachineAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: A state machine with the same name but a different definition or role ARN already exists.
  StateMachineDeleting:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified state machine is being deleted.
  StateMachineLimitExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The maximum number of state machines has been reached. Existing state machines must be deleted before a new state machine can be created.
  DeleteActivityOutput:
    type: object
    properties: {}
  DeleteActivityInput:
    type: object
    required:
      - activityArn
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the activity to delete.
  DeleteStateMachineOutput:
    type: object
    properties: {}
  DeleteStateMachineInput:
    type: object
    required:
      - stateMachineArn
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine to delete.
  DescribeActivityOutput:
    type: object
    required:
      - activityArn
      - name
      - creationDate
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the activity.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the activity is created.
  DescribeActivityInput:
    type: object
    required:
      - activityArn
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the activity to describe.
  ActivityDoesNotExist:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified activity does not exist.
  DescribeExecutionOutput:
    type: object
    required:
      - executionArn
      - stateMachineArn
      - status
      - startDate
      - input
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the execution.
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the executed stated machine.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: The current status of the execution.
      startDate:
        $ref: '#/definitions/Timestamp'
        description: The date the execution is started.
      stopDate:
        $ref: '#/definitions/Timestamp'
        description: 'If the execution has already ended, the date the execution stopped.'
      input:
        $ref: '#/definitions/Data'
        description: The string that contains the JSON input data of the execution.
      output:
        $ref: '#/definitions/Data'
        description: '<p>The JSON output data of the execution.</p> <note> <p>This field is set only if the execution succeeds. If the execution fails, this field is null.</p> </note>'
  DescribeExecutionInput:
    type: object
    required:
      - executionArn
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the execution to describe.
  ExecutionDoesNotExist:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified execution does not exist.
  DescribeStateMachineOutput:
    type: object
    required:
      - stateMachineArn
      - name
      - definition
      - roleArn
      - creationDate
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the state machine.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      status:
        $ref: '#/definitions/StateMachineStatus'
        description: The current status of the state machine.
      definition:
        $ref: '#/definitions/Definition'
        description: The Amazon States Language definition of the state machine.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to AWS resources.)
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the state machine is created.
  DescribeStateMachineInput:
    type: object
    required:
      - stateMachineArn
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine to describe.
  StateMachineDoesNotExist:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified state machine does not exist.
  DescribeStateMachineForExecutionOutput:
    type: object
    required:
      - stateMachineArn
      - name
      - definition
      - roleArn
      - updateDate
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine associated with the execution.
      name:
        $ref: '#/definitions/Name'
        description: The name of the state machine associated with the execution.
      definition:
        $ref: '#/definitions/Definition'
        description: The Amazon States Language definition of the state machine.
      roleArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution. '
      updateDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date.'
  DescribeStateMachineForExecutionInput:
    type: object
    required:
      - executionArn
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the execution you want state machine information for.
  GetActivityTaskOutput:
    type: object
    properties:
      taskToken:
        $ref: '#/definitions/TaskToken'
        description: 'A token that identifies the scheduled task. This token must be copied and included in subsequent calls to <a>SendTaskHeartbeat</a>, <a>SendTaskSuccess</a> or <a>SendTaskFailure</a> in order to report the progress or completion of the task.'
      input:
        $ref: '#/definitions/Data'
        description: The string that contains the JSON input data for the task.
  GetActivityTaskInput:
    type: object
    required:
      - activityArn
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using <a>CreateActivity</a>.)
      workerName:
        $ref: '#/definitions/Name'
        description: You can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history.
  ActivityWorkerLimitExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The maximum number of workers concurrently polling for activity tasks has been reached.
  GetExecutionHistoryOutput:
    type: object
    required:
      - events
    properties:
      events:
        $ref: '#/definitions/HistoryEventList'
        description: The list of events that occurred in the execution.
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  GetExecutionHistoryInput:
    type: object
    required:
      - executionArn
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the execution.
      maxResults:
        $ref: '#/definitions/PageSize'
        description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 100. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
      reverseOrder:
        $ref: '#/definitions/ReverseOrder'
        description: Lists events in descending order of their <code>timeStamp</code>.
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  InvalidToken:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided token is invalid.
  ListActivitiesOutput:
    type: object
    required:
      - activities
    properties:
      activities:
        $ref: '#/definitions/ActivityList'
        description: The list of activities.
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  ListActivitiesInput:
    type: object
    properties:
      maxResults:
        $ref: '#/definitions/PageSize'
        description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 100. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  ListExecutionsOutput:
    type: object
    required:
      - executions
    properties:
      executions:
        $ref: '#/definitions/ExecutionList'
        description: The list of matching executions.
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  ListExecutionsInput:
    type: object
    required:
      - stateMachineArn
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine whose executions is listed.
      statusFilter:
        $ref: '#/definitions/ExecutionStatus'
        description: 'If specified, only list the executions whose current execution status matches the given filter.'
      maxResults:
        $ref: '#/definitions/PageSize'
        description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 100. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  ListStateMachinesOutput:
    type: object
    required:
      - stateMachines
    properties:
      stateMachines:
        $ref: '#/definitions/StateMachineList'
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  ListStateMachinesInput:
    type: object
    properties:
      maxResults:
        $ref: '#/definitions/PageSize'
        description: <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 100. A value of 0 uses the default.</p> <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
      nextToken:
        $ref: '#/definitions/PageToken'
        description: '<p>If a <code>nextToken</code> is returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>nextToken</code>. Keep all other arguments unchanged.</p> <p>The configured <code>maxResults</code> determines how many results can be returned in a single call.</p>'
  SendTaskFailureOutput:
    type: object
    properties: {}
  SendTaskFailureInput:
    type: object
    required:
      - taskToken
    properties:
      taskToken:
        $ref: '#/definitions/TaskToken'
        description: 'The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see GetActivityTask::taskToken).'
      error:
        $ref: '#/definitions/Error'
        description: An arbitrary error code that identifies the cause of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
  TaskDoesNotExist:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
  TaskTimedOut:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
  SendTaskHeartbeatOutput:
    type: object
    properties: {}
  SendTaskHeartbeatInput:
    type: object
    required:
      - taskToken
    properties:
      taskToken:
        $ref: '#/definitions/TaskToken'
        description: The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).
  SendTaskSuccessOutput:
    type: object
    properties: {}
  SendTaskSuccessInput:
    type: object
    required:
      - taskToken
      - output
    properties:
      taskToken:
        $ref: '#/definitions/TaskToken'
        description: The token that represents this task. Task tokens are generated by the service when the tasks are assigned to a worker (see <a>GetActivityTaskOutput$taskToken</a>).
      output:
        $ref: '#/definitions/Data'
        description: The JSON output of the task.
  InvalidOutput:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided JSON output data is invalid.
  StartExecutionOutput:
    type: object
    required:
      - executionArn
      - startDate
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the execution.
      startDate:
        $ref: '#/definitions/Timestamp'
        description: The date the execution is started.
  StartExecutionInput:
    type: object
    required:
      - stateMachineArn
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine to execute.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the execution. This name must be unique for your AWS account and region for 90 days. For more information, see <a href="http://docs.aws.amazon.com/step-functions/latest/dg/limits.html#service-limits-state-machine-executions"> Limits Related to State Machine Executions</a> in the <i>AWS Step Functions Developer Guide</i>.</p> <important> <p>An execution can''t use the name of another execution for 90 days.</p> <p>When you make multiple <code>StartExecution</code> calls with the same name, the new execution doesn''t run and the following rules apply:</p> <ul> <li> <p>When the original execution is open and the execution input from the new call is <i>different</i>, the <code>ExecutionAlreadyExists</code> message is returned.</p> </li> <li> <p>When the original execution is open and the execution input from the new call is <i>identical</i>, the <code>Success</code> message is returned.</p> </li> <li> <p>When the original execution is closed, the <code>ExecutionAlreadyExists</code> message is returned regardless of input.</p> </li> </ul> </important> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      input:
        $ref: '#/definitions/Data'
        description: '<p>The string that contains the JSON input data for the execution, for example:</p> <p> <code>"input": "{\"first_name\" : \"test\"}"</code> </p> <note> <p>If you don''t include any JSON input data, you still must include the two braces, for example: <code>"input": "{}"</code> </p> </note>'
  ExecutionLimitExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The maximum number of running executions has been reached. Running executions must end or be stopped before a new execution can be started.
  ExecutionAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: <p>The execution has the same <code>name</code> as another execution (but a different <code>input</code>).</p> <note> <p>Executions with the same <code>name</code> and <code>input</code> are considered idempotent.</p> </note>
  InvalidExecutionInput:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided JSON input data is invalid.
  StopExecutionOutput:
    type: object
    required:
      - stopDate
    properties:
      stopDate:
        $ref: '#/definitions/Timestamp'
        description: The date the execution is stopped.
  StopExecutionInput:
    type: object
    required:
      - executionArn
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the execution to stop.
      error:
        $ref: '#/definitions/Error'
        description: An arbitrary error code that identifies the cause of the termination.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the termination.
  UpdateStateMachineOutput:
    type: object
    required:
      - updateDate
    properties:
      updateDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time the state machine was updated.
  UpdateStateMachineInput:
    type: object
    required:
      - stateMachineArn
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the state machine.
      definition:
        $ref: '#/definitions/Definition'
        description: The Amazon States Language definition of the state machine.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the IAM role of the state machine.
  MissingRequiredParameter:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: Request is missing a required parameter. This error occurs if both <code>definition</code> and <code>roleArn</code> are not specified.
  ErrorMessage:
    type: string
  Error:
    type: string
    minLength: 0
    maxLength: 256
  Cause:
    type: string
    minLength: 0
    maxLength: 32768
  ActivityFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about an activity which failed during an execution.
  ActivityListItem:
    type: object
    required:
      - activityArn
      - name
      - creationDate
    properties:
      activityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the activity.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the activity.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the activity is created.
    description: Contains details about an activity.
  ActivityList:
    type: array
    items:
      $ref: '#/definitions/ActivityListItem'
  Arn:
    type: string
    minLength: 1
    maxLength: 256
  Name:
    type: string
    minLength: 1
    maxLength: 80
  Timestamp:
    type: string
    format: date-time
  ActivityScheduleFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about an activity schedule failure which occurred during an execution.
  Data:
    type: string
    maxLength: 32768
  TimeoutInSeconds:
    type: integer
  ActivityScheduledEventDetails:
    type: object
    required:
      - resource
    properties:
      resource:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the scheduled activity.
      input:
        $ref: '#/definitions/Data'
        description: The JSON data input to the activity task.
      timeoutInSeconds:
        $ref: '#/definitions/TimeoutInSeconds'
        description: The maximum allowed duration of the activity task.
      heartbeatInSeconds:
        $ref: '#/definitions/TimeoutInSeconds'
        description: The maximum allowed duration between two heartbeats for the activity task.
    description: Contains details about an activity scheduled during an execution.
  Identity:
    type: string
    maxLength: 256
  ActivityStartedEventDetails:
    type: object
    properties:
      workerName:
        $ref: '#/definitions/Identity'
        description: The name of the worker that the task is assigned to. These names are provided by the workers when calling <a>GetActivityTask</a>.
    description: Contains details about the start of an activity during an execution.
  ActivitySucceededEventDetails:
    type: object
    properties:
      output:
        $ref: '#/definitions/Data'
        description: The JSON data output by the activity task.
    description: Contains details about an activity which successfully terminated during an execution.
  ActivityTimedOutEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the timeout.
    description: Contains details about an activity timeout which occurred during an execution.
  Definition:
    type: string
    minLength: 1
    maxLength: 1048576
  ExecutionStatus:
    type: string
    enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      - TIMED_OUT
      - ABORTED
  StateMachineStatus:
    type: string
    enum:
      - ACTIVE
      - DELETING
  EventId:
    type: integer
  ExecutionAbortedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about an abort of an execution.
  ExecutionFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about an execution failure event.
  ExecutionListItem:
    type: object
    required:
      - executionArn
      - stateMachineArn
      - name
      - status
      - startDate
    properties:
      executionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the execution.
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the executed state machine.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the execution.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      status:
        $ref: '#/definitions/ExecutionStatus'
        description: The current status of the execution.
      startDate:
        $ref: '#/definitions/Timestamp'
        description: The date the execution started.
      stopDate:
        $ref: '#/definitions/Timestamp'
        description: 'If the execution already ended, the date the execution stopped.'
    description: Contains details about an execution.
  ExecutionList:
    type: array
    items:
      $ref: '#/definitions/ExecutionListItem'
  ExecutionStartedEventDetails:
    type: object
    properties:
      input:
        $ref: '#/definitions/Data'
        description: The JSON data input to the execution.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.
    description: Contains details about the start of the execution.
  ExecutionSucceededEventDetails:
    type: object
    properties:
      output:
        $ref: '#/definitions/Data'
        description: The JSON data output by the execution.
    description: Contains details about the successful termination of the execution.
  ExecutionTimedOutEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the timeout.
    description: Contains details about the execution timeout which occurred during the execution.
  TaskToken:
    type: string
    minLength: 1
    maxLength: 1024
  PageSize:
    type: integer
    minimum: 0
    maximum: 1000
  ReverseOrder:
    type: boolean
  PageToken:
    type: string
    minLength: 1
    maxLength: 1024
  HistoryEventList:
    type: array
    description: Contains details about the events which occurred during an execution.
    items:
      $ref: '#/definitions/HistoryEvent'
  HistoryEventType:
    type: string
    enum:
      - ActivityFailed
      - ActivityScheduleFailed
      - ActivityScheduled
      - ActivityStarted
      - ActivitySucceeded
      - ActivityTimedOut
      - ChoiceStateEntered
      - ChoiceStateExited
      - ExecutionFailed
      - ExecutionStarted
      - ExecutionSucceeded
      - ExecutionAborted
      - ExecutionTimedOut
      - FailStateEntered
      - LambdaFunctionFailed
      - LambdaFunctionScheduleFailed
      - LambdaFunctionScheduled
      - LambdaFunctionStartFailed
      - LambdaFunctionStarted
      - LambdaFunctionSucceeded
      - LambdaFunctionTimedOut
      - SucceedStateEntered
      - SucceedStateExited
      - TaskStateAborted
      - TaskStateEntered
      - TaskStateExited
      - PassStateEntered
      - PassStateExited
      - ParallelStateAborted
      - ParallelStateEntered
      - ParallelStateExited
      - ParallelStateFailed
      - ParallelStateStarted
      - ParallelStateSucceeded
      - WaitStateAborted
      - WaitStateEntered
      - WaitStateExited
  LambdaFunctionFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about a lambda function which failed during an execution.
  LambdaFunctionScheduleFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about a failed lambda function schedule event which occurred during an execution.
  LambdaFunctionScheduledEventDetails:
    type: object
    required:
      - resource
    properties:
      resource:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the scheduled lambda function.
      input:
        $ref: '#/definitions/Data'
        description: The JSON data input to the lambda function.
      timeoutInSeconds:
        $ref: '#/definitions/TimeoutInSeconds'
        description: The maximum allowed duration of the lambda function.
    description: Contains details about a lambda function scheduled during an execution.
  LambdaFunctionStartFailedEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the failure.
    description: Contains details about a lambda function which failed to start during an execution.
  LambdaFunctionSucceededEventDetails:
    type: object
    properties:
      output:
        $ref: '#/definitions/Data'
        description: The JSON data output by the lambda function.
    description: Contains details about a lambda function which successfully terminated during an execution.
  LambdaFunctionTimedOutEventDetails:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
        description: The error code of the failure.
      cause:
        $ref: '#/definitions/Cause'
        description: A more detailed explanation of the cause of the timeout.
    description: Contains details about a lambda function timeout which occurred during an execution.
  StateEnteredEventDetails:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the state.
      input:
        $ref: '#/definitions/Data'
        description: The string that contains the JSON input data for the state.
    description: Contains details about a state entered during an execution.
  StateExitedEventDetails:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the state.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      output:
        $ref: '#/definitions/Data'
        description: The JSON output data of the state.
    description: Contains details about an exit from a state during an execution.
  HistoryEvent:
    type: object
    required:
      - timestamp
      - type
      - id
    properties:
      timestamp:
        $ref: '#/definitions/Timestamp'
        description: The date the event occurred.
      type:
        $ref: '#/definitions/HistoryEventType'
        description: The type of the event.
      id:
        $ref: '#/definitions/EventId'
        description: 'The id of the event. Events are numbered sequentially, starting at one.'
      previousEventId:
        $ref: '#/definitions/EventId'
        description: The id of the previous event.
      activityFailedEventDetails:
        $ref: '#/definitions/ActivityFailedEventDetails'
      activityScheduleFailedEventDetails:
        $ref: '#/definitions/ActivityScheduleFailedEventDetails'
        description: Contains details about an activity schedule event which failed during an execution.
      activityScheduledEventDetails:
        $ref: '#/definitions/ActivityScheduledEventDetails'
      activityStartedEventDetails:
        $ref: '#/definitions/ActivityStartedEventDetails'
      activitySucceededEventDetails:
        $ref: '#/definitions/ActivitySucceededEventDetails'
      activityTimedOutEventDetails:
        $ref: '#/definitions/ActivityTimedOutEventDetails'
      executionFailedEventDetails:
        $ref: '#/definitions/ExecutionFailedEventDetails'
      executionStartedEventDetails:
        $ref: '#/definitions/ExecutionStartedEventDetails'
      executionSucceededEventDetails:
        $ref: '#/definitions/ExecutionSucceededEventDetails'
      executionAbortedEventDetails:
        $ref: '#/definitions/ExecutionAbortedEventDetails'
      executionTimedOutEventDetails:
        $ref: '#/definitions/ExecutionTimedOutEventDetails'
      lambdaFunctionFailedEventDetails:
        $ref: '#/definitions/LambdaFunctionFailedEventDetails'
      lambdaFunctionScheduleFailedEventDetails:
        $ref: '#/definitions/LambdaFunctionScheduleFailedEventDetails'
      lambdaFunctionScheduledEventDetails:
        $ref: '#/definitions/LambdaFunctionScheduledEventDetails'
      lambdaFunctionStartFailedEventDetails:
        $ref: '#/definitions/LambdaFunctionStartFailedEventDetails'
        description: Contains details about a lambda function which failed to start during an execution.
      lambdaFunctionSucceededEventDetails:
        $ref: '#/definitions/LambdaFunctionSucceededEventDetails'
        description: Contains details about a lambda function which terminated successfully during an execution.
      lambdaFunctionTimedOutEventDetails:
        $ref: '#/definitions/LambdaFunctionTimedOutEventDetails'
      stateEnteredEventDetails:
        $ref: '#/definitions/StateEnteredEventDetails'
      stateExitedEventDetails:
        $ref: '#/definitions/StateExitedEventDetails'
    description: Contains details about the events of an execution.
  StateMachineList:
    type: array
    items:
      $ref: '#/definitions/StateMachineListItem'
  StateMachineListItem:
    type: object
    required:
      - stateMachineArn
      - name
      - creationDate
    properties:
      stateMachineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) that identifies the state machine.
      name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the state machine.</p> <p>A name must <i>not</i> contain:</p> <ul> <li> <p>whitespace</p> </li> <li> <p>brackets <code>&lt; &gt; { } [ ]</code> </p> </li> <li> <p>wildcard characters <code>? *</code> </p> </li> <li> <p>special characters <code>" # % \ ^ | ~ ` $ &amp; , ; : /</code> </p> </li> <li> <p>control characters (<code>U+0000-001F</code>, <code>U+007F-009F</code>)</p> </li> </ul>'
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date the state machine is created.
    description: Contains details about the state machine.
