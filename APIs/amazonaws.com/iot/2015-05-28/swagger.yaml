swagger: '2.0'
info:
  version: '2015-05-28'
  x-release: v4
  title: AWS IoT
  description: '<fullname>AWS IoT</fullname> <p>AWS IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.</p> <p>For more information about how AWS IoT works, see the <a href="http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer Guide</a>.</p> <p>For information about how to use the credentials provider for AWS IoT, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html">Authorizing Direct Calls to AWS Services</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iot
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-2015-05-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/iot/'
host: iot.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/accept-certificate-transfer/{certificateId}':
    patch:
      operationId: AcceptCertificateTransfer
      description: '<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcceptCertificateTransferRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/addThingToThingGroup:
    put:
      operationId: AddThingToThingGroup
      description: Adds a thing to a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddThingToThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddThingToThingGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/targets':
    post:
      operationId: AssociateTargetsWithJob
      description: '<p>Associates a group with a continuous job. The following criteria must be met: </p> <ul> <li> <p>The job must have been created with the <code>targetSelection</code> field set to "CONTINUOUS".</p> </li> <li> <p>The job status must currently be "IN_PROGRESS".</p> </li> <li> <p>The total number of targets associated with a job must not exceed 100.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateTargetsWithJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateTargetsWithJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/target-policies/{policyName}':
    put:
      operationId: AttachPolicy
      description: Attaches a policy to the specified target.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DetachPolicy
      description: Detaches a policy from the specified target.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
  '/principal-policies/{policyName}':
    put:
      operationId: AttachPrincipalPolicy
      description: '<p>Attaches the specified policy to the specified principal (certificate or other credential).</p> <p> <b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachPrincipalPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachPrincipalPolicy
      description: '<p>Removes the specified policy from the specified certificate.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>DetachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachPrincipalPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
  '/security-profiles/{securityProfileName}/targets':
    put:
      operationId: AttachSecurityProfile
      description: Associates a Device Defender security profile with a thing group or with this account. Each thing group or account can have up to five security profiles associated with it.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachSecurityProfile
      description: Disassociates a Device Defender security profile from a thing group or from this account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
    get:
      operationId: ListTargetsForSecurityProfile
      description: Lists the targets (thing groups) associated with a given Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsForSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTargetsForSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
  '/things/{thingName}/principals':
    put:
      operationId: AttachThingPrincipal
      description: Attaches the specified principal to the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachThingPrincipalRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachThingPrincipal
      description: Detaches the specified principal from the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachThingPrincipalRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    get:
      operationId: ListThingPrincipals
      description: Lists the principals associated with the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingPrincipalsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingPrincipalsRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
  '/audit/tasks/{taskId}/cancel':
    put:
      operationId: CancelAuditTask
      description: 'Cancels an audit that is in progress. The audit can be either scheduled or on-demand. If the audit is not in progress, an "InvalidRequestException" occurs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelAuditTaskResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelAuditTaskRequest'
        - name: taskId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/cancel-certificate-transfer/{certificateId}':
    patch:
      operationId: CancelCertificateTransfer
      description: '<p>Cancels a pending transfer for the specified certificate.</p> <p> <b>Note</b> Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelCertificateTransferRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/cancel':
    put:
      operationId: CancelJob
      description: Cancels a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}/cancel':
    put:
      operationId: CancelJobExecution
      description: Cancels the execution of a job for a given thing.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelJobExecutionRequest'
        - name: jobId
          in: path
          type: string
          required: true
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /default-authorizer:
    delete:
      operationId: ClearDefaultAuthorizer
      description: Clears the default authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ClearDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClearDefaultAuthorizerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDefaultAuthorizer
      description: Describes the default authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDefaultAuthorizerRequest'
    post:
      operationId: SetDefaultAuthorizer
      description: Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetDefaultAuthorizerRequest'
  '/authorizer/{authorizerName}':
    post:
      operationId: CreateAuthorizer
      description: Creates an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAuthorizerResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAuthorizerRequest'
        - name: authorizerName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAuthorizer
      description: Deletes an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAuthorizerResponse'
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAuthorizerRequest'
        - name: authorizerName
          in: path
          type: string
          required: true
    get:
      operationId: DescribeAuthorizer
      description: Describes an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAuthorizerRequest'
        - name: authorizerName
          in: path
          type: string
          required: true
    put:
      operationId: UpdateAuthorizer
      description: Updates an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAuthorizerRequest'
        - name: authorizerName
          in: path
          type: string
          required: true
  /certificates:
    post:
      operationId: CreateCertificateFromCsr
      description: '<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p> <b>Note:</b> The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. </p> <p> <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p> <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.</p> <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p> <p>On Linux and OS X, the command is:</p> <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.</p> <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:</p> <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}</p> <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path"</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCertificateFromCsrResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCertificateFromCsrRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCertificates
      description: <p>Lists the certificates registered in your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCertificatesRequest'
  '/jobs/{jobId}':
    put:
      operationId: CreateJob
      description: Creates a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteJob
      description: '<p>Deletes a job and its related job executions.</p> <p>Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status is already "DELETION_IN_PROGRESS" will result in an error.</p> <p>Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException will occur.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
    get:
      operationId: DescribeJob
      description: Describes a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
  /keys-and-certificate:
    post:
      operationId: CreateKeysAndCertificate
      description: '<p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p> <b>Note</b> This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateKeysAndCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeysAndCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/otaUpdates/{otaUpdateId}':
    post:
      operationId: CreateOTAUpdate
      description: Creates an AWS IoT OTAUpdate on a target group of things or groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOTAUpdateRequest'
        - name: otaUpdateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteOTAUpdate
      description: Delete an OTA update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteOTAUpdateRequest'
        - name: otaUpdateId
          in: path
          type: string
          required: true
    get:
      operationId: GetOTAUpdate
      description: Gets an OTA update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOTAUpdateRequest'
        - name: otaUpdateId
          in: path
          type: string
          required: true
  '/policies/{policyName}':
    post:
      operationId: CreatePolicy
      description: <p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: MalformedPolicyException
          schema:
            $ref: '#/definitions/MalformedPolicyException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeletePolicy
      description: '<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p> <p>To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.</p> <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
    get:
      operationId: GetPolicy
      description: Gets information about the specified policy with the policy document of the default version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
  '/policies/{policyName}/version':
    post:
      operationId: CreatePolicyVersion
      description: '<p>Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p> <p>Optionally, you can set the new version as the policy''s default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: MalformedPolicyException
          schema:
            $ref: '#/definitions/MalformedPolicyException'
        '482':
          description: VersionsLimitExceededException
          schema:
            $ref: '#/definitions/VersionsLimitExceededException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolicyVersionRequest'
        - name: policyName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPolicyVersions
      description: Lists the versions of the specified policy and identifies the default version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyVersionsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPolicyVersionsRequest'
        - name: policyName
          in: path
          type: string
          required: true
  '/role-aliases/{roleAlias}':
    post:
      operationId: CreateRoleAlias
      description: Creates a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRoleAliasResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateRoleAliasRequest'
        - name: roleAlias
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteRoleAlias
      description: Deletes a role alias
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRoleAliasResponse'
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRoleAliasRequest'
        - name: roleAlias
          in: path
          type: string
          required: true
    get:
      operationId: DescribeRoleAlias
      description: Describes a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRoleAliasResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRoleAliasRequest'
        - name: roleAlias
          in: path
          type: string
          required: true
    put:
      operationId: UpdateRoleAlias
      description: Updates a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRoleAliasResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRoleAliasRequest'
        - name: roleAlias
          in: path
          type: string
          required: true
  '/audit/scheduledaudits/{scheduledAuditName}':
    post:
      operationId: CreateScheduledAudit
      description: Creates a scheduled audit that is run at a specified time interval.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateScheduledAuditRequest'
        - name: scheduledAuditName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteScheduledAudit
      description: Deletes a scheduled audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteScheduledAuditRequest'
        - name: scheduledAuditName
          in: path
          type: string
          required: true
    get:
      operationId: DescribeScheduledAudit
      description: Gets information about a scheduled audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeScheduledAuditRequest'
        - name: scheduledAuditName
          in: path
          type: string
          required: true
    patch:
      operationId: UpdateScheduledAudit
      description: 'Updates a scheduled audit, including what checks are performed and how often the audit takes place.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateScheduledAuditRequest'
        - name: scheduledAuditName
          in: path
          type: string
          required: true
  '/security-profiles/{securityProfileName}':
    post:
      operationId: CreateSecurityProfile
      description: Creates a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSecurityProfile
      description: Deletes a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
    get:
      operationId: DescribeSecurityProfile
      description: Gets information about a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
    patch:
      operationId: UpdateSecurityProfile
      description: Updates a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSecurityProfileRequest'
        - name: securityProfileName
          in: path
          type: string
          required: true
        - name: securityProfileName
          in: query
          type: string
  '/streams/{streamId}':
    post:
      operationId: CreateStream
      description: 'Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream. The total size of a file associated with the stream cannot exceed more than 2 MB. The stream will be created with version 0. If a stream is created with the same streamID as a stream that existed and was deleted within last 90 days, we will resurrect that old stream by incrementing the version by 1.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamRequest'
        - name: streamId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteStream
      description: Deletes a stream.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStreamRequest'
        - name: streamId
          in: path
          type: string
          required: true
    get:
      operationId: DescribeStream
      description: Gets information about a stream.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStreamRequest'
        - name: streamId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateStream
      description: Updates an existing stream. The stream version will be incremented by one.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStreamRequest'
        - name: streamId
          in: path
          type: string
          required: true
  '/things/{thingName}':
    post:
      operationId: CreateThing
      description: '<p>Creates a thing record in the registry.</p> <note> <p>This is a control plane operation. See <a href="http://docs.aws.amazon.com/iot/latest/developerguide/authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThing
      description: Deletes the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    get:
      operationId: DescribeThing
      description: Gets information about the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    patch:
      operationId: UpdateThing
      description: Updates the data for a thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
  '/thing-groups/{thingGroupName}':
    post:
      operationId: CreateThingGroup
      description: '<p>Create a thing group.</p> <note> <p>This is a control plane operation. See <a href="http://docs.aws.amazon.com/iot/latest/developerguide/authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateThingGroupRequest'
        - name: thingGroupName
          in: path
          type: string
          required: true
        - name: thingGroupName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingGroup
      description: Deletes a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteThingGroupRequest'
        - name: thingGroupName
          in: path
          type: string
          required: true
        - name: thingGroupName
          in: query
          type: string
    get:
      operationId: DescribeThingGroup
      description: Describe a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeThingGroupRequest'
        - name: thingGroupName
          in: path
          type: string
          required: true
        - name: thingGroupName
          in: query
          type: string
    patch:
      operationId: UpdateThingGroup
      description: Update a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateThingGroupRequest'
        - name: thingGroupName
          in: path
          type: string
          required: true
        - name: thingGroupName
          in: query
          type: string
  '/thing-types/{thingTypeName}':
    post:
      operationId: CreateThingType
      description: Creates a new thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingTypeResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateThingTypeRequest'
        - name: thingTypeName
          in: path
          type: string
          required: true
        - name: thingTypeName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingType
      description: 'Deletes the specified thing type . You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and finally use <a>DeleteThingType</a> to delete the thing type.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteThingTypeRequest'
        - name: thingTypeName
          in: path
          type: string
          required: true
        - name: thingTypeName
          in: query
          type: string
    get:
      operationId: DescribeThingType
      description: Gets information about the specified thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeThingTypeRequest'
        - name: thingTypeName
          in: path
          type: string
          required: true
        - name: thingTypeName
          in: query
          type: string
  '/rules/{ruleName}':
    post:
      operationId: CreateTopicRule
      description: Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          schema:
            $ref: '#/definitions/SqlParseException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTopicRule
      description: Deletes the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
    get:
      operationId: GetTopicRule
      description: Gets information about the rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTopicRuleResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
    patch:
      operationId: ReplaceTopicRule
      description: Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          schema:
            $ref: '#/definitions/SqlParseException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReplaceTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
  /audit/configuration:
    delete:
      operationId: DeleteAccountAuditConfiguration
      description: 'Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAccountAuditConfigurationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAccountAuditConfiguration
      description: Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountAuditConfigurationResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAccountAuditConfigurationRequest'
    patch:
      operationId: UpdateAccountAuditConfiguration
      description: Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAccountAuditConfigurationRequest'
  '/cacertificate/{caCertificateId}':
    delete:
      operationId: DeleteCACertificate
      description: Deletes a registered CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCACertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCACertificateRequest'
        - name: caCertificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCACertificate
      description: Describes a registered CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCACertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCACertificateRequest'
        - name: caCertificateId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateCACertificate
      description: Updates a registered CA certificate.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCACertificateRequest'
        - name: caCertificateId
          in: path
          type: string
          required: true
  '/certificates/{certificateId}':
    delete:
      operationId: DeleteCertificate
      description: '<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it or if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCertificateRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCertificate
      description: Gets information about the specified certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCertificateRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    put:
      operationId: UpdateCertificate
      description: '<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected devices, but these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCertificateRequest'
        - name: certificateId
          in: path
          type: string
          required: true
  '/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}':
    delete:
      operationId: DeleteJobExecution
      description: Deletes a job execution.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteJobExecutionRequest'
        - name: jobId
          in: path
          type: string
          required: true
        - name: thingName
          in: path
          type: string
          required: true
        - name: executionNumber
          in: path
          type: string
          required: true
        - name: executionNumber
          in: query
          type: string
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/policies/{policyName}/version/{policyVersionId}':
    delete:
      operationId: DeletePolicyVersion
      description: 'Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use ListPolicyVersions.'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePolicyVersionRequest'
        - name: policyName
          in: path
          type: string
          required: true
        - name: policyVersionId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPolicyVersion
      description: Gets information about the specified policy version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyVersionRequest'
        - name: policyName
          in: path
          type: string
          required: true
        - name: policyVersionId
          in: path
          type: string
          required: true
    patch:
      operationId: SetDefaultPolicyVersion
      description: 'Sets the specified version of the specified policy as the policy''s default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetDefaultPolicyVersionRequest'
        - name: policyName
          in: path
          type: string
          required: true
        - name: policyVersionId
          in: path
          type: string
          required: true
  /registrationcode:
    delete:
      operationId: DeleteRegistrationCode
      description: Deletes a CA certificate registration code.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRegistrationCodeRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRegistrationCode
      description: Gets a registration code used to register a CA certificate with AWS IoT.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRegistrationCodeRequest'
  /v2LoggingLevel:
    delete:
      operationId: DeleteV2LoggingLevel
      description: Deletes a logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteV2LoggingLevelRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListV2LoggingLevels
      description: Lists logging levels.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListV2LoggingLevelsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListV2LoggingLevelsRequest'
    post:
      operationId: SetV2LoggingLevel
      description: Sets the logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetV2LoggingLevelRequest'
  '/thing-types/{thingTypeName}/deprecate':
    post:
      operationId: DeprecateThingType
      description: Deprecates a thing type. You can not associate new things with deprecated thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeprecateThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeprecateThingTypeRequest'
        - name: thingTypeName
          in: path
          type: string
          required: true
        - name: thingTypeName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/tasks/{taskId}':
    get:
      operationId: DescribeAuditTask
      description: Gets information about a Device Defender audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuditTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAuditTaskRequest'
        - name: taskId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /endpoint:
    get:
      operationId: DescribeEndpoint
      description: Returns a unique endpoint specific to the AWS account making the call.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /event-configurations:
    get:
      operationId: DescribeEventConfigurations
      description: Describes event configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventConfigurationsResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventConfigurationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateEventConfigurations
      description: Updates the event configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEventConfigurationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEventConfigurationsRequest'
  '/indices/{indexName}':
    get:
      operationId: DescribeIndex
      description: Describes a search index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIndexResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeIndexRequest'
        - name: indexName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}':
    get:
      operationId: DescribeJobExecution
      description: Describes a job execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobExecutionRequest'
        - name: jobId
          in: path
          type: string
          required: true
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}':
    get:
      operationId: DescribeThingRegistrationTask
      description: Describes a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeThingRegistrationTaskRequest'
        - name: taskId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/disable':
    post:
      operationId: DisableTopicRule
      description: Disables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/enable':
    post:
      operationId: EnableTopicRule
      description: Enables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableTopicRuleRequest'
        - name: ruleName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /effective-policies:
    post:
      operationId: GetEffectivePolicies
      description: Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEffectivePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetEffectivePoliciesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indexing/config:
    get:
      operationId: GetIndexingConfiguration
      description: Gets the search configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetIndexingConfigurationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateIndexingConfiguration
      description: Updates the search configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateIndexingConfigurationRequest'
  '/jobs/{jobId}/job-document':
    get:
      operationId: GetJobDocument
      description: Gets a job document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobDocumentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetJobDocumentRequest'
        - name: jobId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /loggingOptions:
    get:
      operationId: GetLoggingOptions
      description: '<p>Gets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoggingOptionsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoggingOptionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetLoggingOptions
      description: '<p>Sets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetLoggingOptionsRequest'
  /v2LoggingOptions:
    get:
      operationId: GetV2LoggingOptions
      description: Gets the fine grained logging options.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetV2LoggingOptionsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetV2LoggingOptionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetV2LoggingOptions
      description: Sets the logging options for the V2 logging service.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetV2LoggingOptionsRequest'
  /active-violations:
    get:
      operationId: ListActiveViolations
      description: Lists the active violations for a given Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActiveViolationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListActiveViolationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/attached-policies/{target}':
    post:
      operationId: ListAttachedPolicies
      description: Lists the policies attached to the specified thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedPoliciesRequest'
        - name: target
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/findings:
    post:
      operationId: ListAuditFindings
      description: Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 180 days.)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditFindingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAuditFindingsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/tasks:
    get:
      operationId: ListAuditTasks
      description: Lists the Device Defender audits that have been performed during a given time period.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAuditTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartOnDemandAuditTask
      description: Starts an on-demand Device Defender audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartOnDemandAuditTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartOnDemandAuditTaskRequest'
  /authorizers/:
    get:
      operationId: ListAuthorizers
      description: Lists the authorizers registered in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuthorizersResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAuthorizersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cacertificates:
    get:
      operationId: ListCACertificates
      description: <p>Lists the CA certificates registered for your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCACertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCACertificatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/certificates-by-ca/{caCertificateId}':
    get:
      operationId: ListCertificatesByCA
      description: List the device certificates signed by the specified CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesByCAResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCertificatesByCARequest'
        - name: caCertificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices:
    get:
      operationId: ListIndices
      description: Lists the search indices.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIndicesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListIndicesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/things':
    get:
      operationId: ListJobExecutionsForJob
      description: Lists the job executions for a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobExecutionsForJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListJobExecutionsForJobRequest'
        - name: jobId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs':
    get:
      operationId: ListJobExecutionsForThing
      description: Lists the job executions for the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobExecutionsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListJobExecutionsForThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /jobs:
    get:
      operationId: ListJobs
      description: Lists jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListJobsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /otaUpdates:
    get:
      operationId: ListOTAUpdates
      description: Lists OTA updates.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOTAUpdatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOTAUpdatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /certificates-out-going:
    get:
      operationId: ListOutgoingCertificates
      description: Lists certificates that are being transferred but not yet accepted.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOutgoingCertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOutgoingCertificatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /policies:
    get:
      operationId: ListPolicies
      description: Lists your policies.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPoliciesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPoliciesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /policy-principals:
    get:
      operationId: ListPolicyPrincipals
      description: '<p>Lists the principals associated with the specified policy.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyPrincipalsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPolicyPrincipalsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /principal-policies:
    get:
      operationId: ListPrincipalPolicies
      description: '<p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito Identity format</a>.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalPoliciesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /principals/things:
    get:
      operationId: ListPrincipalThings
      description: Lists the things associated with the specified principal.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalThingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalThingsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /role-aliases:
    get:
      operationId: ListRoleAliases
      description: Lists the role aliases registered in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRoleAliasesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRoleAliasesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/scheduledaudits:
    get:
      operationId: ListScheduledAudits
      description: Lists all of your scheduled audits.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListScheduledAuditsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListScheduledAuditsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /security-profiles:
    get:
      operationId: ListSecurityProfiles
      description: Lists the Device Defender security profiles you have created. You can use filters to list only those security profiles associated with a thing group or only those associated with your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSecurityProfilesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSecurityProfilesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /security-profiles-for-target:
    get:
      operationId: ListSecurityProfilesForTarget
      description: Lists the Device Defender security profiles attached to a target (thing group).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSecurityProfilesForTargetResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSecurityProfilesForTargetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /streams:
    get:
      operationId: ListStreams
      description: Lists all of the streams in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListStreamsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/policy-targets/{policyName}':
    post:
      operationId: ListTargetsForPolicy
      description: List targets for the specified policy.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsForPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTargetsForPolicyRequest'
        - name: policyName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups:
    get:
      operationId: ListThingGroups
      description: List the thing groups in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingGroupsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingGroupsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/thing-groups':
    get:
      operationId: ListThingGroupsForThing
      description: List the thing groups to which the specified thing belongs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingGroupsForThingRequest'
        - name: thingName
          in: path
          type: string
          required: true
        - name: thingName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/reports':
    get:
      operationId: ListThingRegistrationTaskReports
      description: Information about the thing registration tasks.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingRegistrationTaskReportsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingRegistrationTaskReportsRequest'
        - name: taskId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-registration-tasks:
    get:
      operationId: ListThingRegistrationTasks
      description: List bulk thing provisioning tasks.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingRegistrationTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingRegistrationTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartThingRegistrationTask
      description: Creates a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartThingRegistrationTaskRequest'
  /thing-types:
    get:
      operationId: ListThingTypes
      description: Lists the existing thing types.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingTypesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingTypesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /things:
    get:
      operationId: ListThings
      description: 'Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling <code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute <b>Color</b> with the value <b>Red</b>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterThing
      description: Provisions a thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterThingResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
        '486':
          description: ResourceRegistrationFailureException
          schema:
            $ref: '#/definitions/ResourceRegistrationFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterThingRequest'
  '/thing-groups/{thingGroupName}/things':
    get:
      operationId: ListThingsInThingGroup
      description: Lists the things in the specified group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingsInThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListThingsInThingGroupRequest'
        - name: thingGroupName
          in: path
          type: string
          required: true
        - name: thingGroupName
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /rules:
    get:
      operationId: ListTopicRules
      description: Lists the rules for the specific topic.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTopicRulesResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTopicRulesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /violation-events:
    get:
      operationId: ListViolationEvents
      description: 'Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior or thing (device).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListViolationEventsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListViolationEventsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cacertificate:
    post:
      operationId: RegisterCACertificate
      description: 'Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterCACertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: RegistrationCodeValidationException
          schema:
            $ref: '#/definitions/RegistrationCodeValidationException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterCACertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /certificate/register:
    post:
      operationId: RegisterCertificate
      description: 'Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterCertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '483':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '484':
          description: CertificateConflictException
          schema:
            $ref: '#/definitions/CertificateConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/reject-certificate-transfer/{certificateId}':
    patch:
      operationId: RejectCertificateTransfer
      description: '<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source''s account in the INACTIVE state.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RejectCertificateTransferRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/removeThingFromThingGroup:
    put:
      operationId: RemoveThingFromThingGroup
      description: Remove the specified thing from the specified group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveThingFromThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveThingFromThingGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices/search:
    post:
      operationId: SearchIndex
      description: The query search index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchIndexResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '487':
          description: IndexNotReadyException
          schema:
            $ref: '#/definitions/IndexNotReadyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchIndexRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/cancel':
    put:
      operationId: StopThingRegistrationTask
      description: Cancels a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopThingRegistrationTaskRequest'
        - name: taskId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /test-authorization:
    post:
      operationId: TestAuthorization
      description: Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestAuthorizationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestAuthorizationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/authorizer/{authorizerName}/test':
    post:
      operationId: TestInvokeAuthorizer
      description: Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestInvokeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: InvalidResponseException
          schema:
            $ref: '#/definitions/InvalidResponseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestInvokeAuthorizerRequest'
        - name: authorizerName
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/transfer-certificate/{certificateId}':
    patch:
      operationId: TransferCertificate
      description: <p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.</p> <p>The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransferCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '483':
          description: TransferConflictException
          schema:
            $ref: '#/definitions/TransferConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TransferCertificateRequest'
        - name: certificateId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/updateThingGroupsForThing:
    put:
      operationId: UpdateThingGroupsForThing
      description: Updates the groups to which the thing belongs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateThingGroupsForThingRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /security-profile-behaviors/validate:
    post:
      operationId: ValidateSecurityProfileBehaviors
      description: Validates a Device Defender security profile behaviors specification.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidateSecurityProfileBehaviorsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ValidateSecurityProfileBehaviorsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptCertificateTransferRequest:
    type: object
    properties: {}
    description: The input for the AcceptCertificateTransfer operation.
  ResourceNotFoundException: {}
  TransferAlreadyCompletedException: {}
  InvalidRequestException: {}
  ThrottlingException: {}
  UnauthorizedException: {}
  ServiceUnavailableException: {}
  InternalFailureException: {}
  AddThingToThingGroupResponse:
    type: object
    properties: {}
  AddThingToThingGroupRequest:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the group to which you are adding a thing.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The ARN of the group to which you are adding a thing.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to add to a group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to add to a group.
  AssociateTargetsWithJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: An ARN identifying the job.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
  AssociateTargetsWithJobRequest:
    type: object
    required:
      - targets
    properties:
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of thing group ARNs that define the targets of the job.
      comment:
        $ref: '#/definitions/Comment'
        description: An optional comment string describing why the job was associated with the targets.
  LimitExceededException: {}
  AttachPolicyRequest:
    type: object
    required:
      - target
    properties:
      target:
        $ref: '#/definitions/PolicyTarget'
        description: The identity to which the policy is attached.
  AttachPrincipalPolicyRequest:
    type: object
    properties: {}
    description: The input for the AttachPrincipalPolicy operation.
  AttachSecurityProfileResponse:
    type: object
    properties: {}
  AttachSecurityProfileRequest:
    type: object
    properties: {}
  VersionConflictException: {}
  AttachThingPrincipalResponse:
    type: object
    properties: {}
    description: The output from the AttachThingPrincipal operation.
  AttachThingPrincipalRequest:
    type: object
    properties: {}
    description: The input for the AttachThingPrincipal operation.
  CancelAuditTaskResponse:
    type: object
    properties: {}
  CancelAuditTaskRequest:
    type: object
    properties: {}
  CancelCertificateTransferRequest:
    type: object
    properties: {}
    description: The input for the CancelCertificateTransfer operation.
  CancelJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
  CancelJobRequest:
    type: object
    properties:
      comment:
        $ref: '#/definitions/Comment'
        description: An optional comment string describing why the job was canceled.
  CancelJobExecutionRequest:
    type: object
    properties:
      expectedVersion:
        $ref: '#/definitions/ExpectedVersion'
        description: '(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
      statusDetails:
        $ref: '#/definitions/DetailsMap'
        description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.'
  InvalidStateTransitionException: {}
  ClearDefaultAuthorizerResponse:
    type: object
    properties: {}
  ClearDefaultAuthorizerRequest:
    type: object
    properties: {}
  CreateAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer's name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  CreateAuthorizerRequest:
    type: object
    required:
      - authorizerFunctionArn
      - tokenKeyName
      - tokenSigningPublicKeys
    properties:
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The ARN of the authorizer's Lambda function.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: The name of the token key used to extract the token from the HTTP headers.
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to verify the digital signature returned by your custom authentication service.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the create authorizer request.
  ResourceAlreadyExistsException: {}
  CreateCertificateFromCsrResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate. Certificate management operations only take a certificateId.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
    description: The output from the CreateCertificateFromCsr operation.
  CreateCertificateFromCsrRequest:
    type: object
    required:
      - certificateSigningRequest
    properties:
      certificateSigningRequest:
        $ref: '#/definitions/CertificateSigningRequest'
        description: The certificate signing request (CSR).
    description: The input for the CreateCertificateFromCsr operation.
  CreateJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job.
      description:
        $ref: '#/definitions/JobDescription'
        description: The job description.
  CreateJobRequest:
    type: object
    required:
      - targets
    properties:
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of things and thing groups to which the job should be sent.
      documentSource:
        $ref: '#/definitions/JobDocumentSource'
        description: An S3 link to the job document.
      document:
        $ref: '#/definitions/JobDocument'
        description: The job document.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
      presignedUrlConfig:
        $ref: '#/definitions/PresignedUrlConfig'
        description: Configuration information for pre-signed S3 URLs.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
      jobExecutionsRolloutConfig:
        $ref: '#/definitions/JobExecutionsRolloutConfig'
        description: Allows you to create a staged rollout of the job.
  CreateKeysAndCertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: 'The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).'
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      keyPair:
        $ref: '#/definitions/KeyPair'
        description: The generated key pair.
    description: The output of the CreateKeysAndCertificate operation.
  CreateKeysAndCertificateRequest:
    type: object
    properties: {}
    description: The input for the CreateKeysAndCertificate operation.
  CreateOTAUpdateResponse:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      awsIotJobId:
        $ref: '#/definitions/AwsIotJobId'
        description: The AWS IoT job ID associated with the OTA update.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      awsIotJobArn:
        $ref: '#/definitions/AwsIotJobArn'
        description: The AWS IoT job ARN associated with the OTA update.
      otaUpdateStatus:
        $ref: '#/definitions/OTAUpdateStatus'
        description: The OTA update status.
  CreateOTAUpdateRequest:
    type: object
    required:
      - targets
      - files
      - roleArn
    properties:
      description:
        $ref: '#/definitions/OTAUpdateDescription'
        description: The description of the OTA update.
      targets:
        $ref: '#/definitions/Targets'
        description: The targeted devices to receive OTA updates.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.'
      awsJobExecutionsRolloutConfig:
        $ref: '#/definitions/AwsJobExecutionsRolloutConfig'
        description: Configuration for the rollout of OTA updates.
      files:
        $ref: '#/definitions/OTAUpdateFiles'
        description: The files to be streamed by the OTA update.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role that allows access to the AWS IoT Jobs service.
      additionalParameters:
        $ref: '#/definitions/AdditionalParameterMap'
        description: A list of additional OTA update parameters which are name-value pairs.
  CreatePolicyResponse:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
    description: The output from the CreatePolicy operation.
  CreatePolicyRequest:
    type: object
    required:
      - policyDocument
    properties:
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: 'The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.'
    description: The input for the CreatePolicy operation.
  MalformedPolicyException: {}
  CreatePolicyVersionResponse:
    type: object
    properties:
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
    description: The output of the CreatePolicyVersion operation.
  CreatePolicyVersionRequest:
    type: object
    required:
      - policyDocument
    properties:
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: 'The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.'
    description: The input for the CreatePolicyVersion operation.
  VersionsLimitExceededException: {}
  CreateRoleAliasResponse:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The role alias ARN.
  CreateRoleAliasRequest:
    type: object
    required:
      - roleArn
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: How long (in seconds) the credentials will be valid.
  CreateScheduledAuditResponse:
    type: object
    properties:
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  CreateScheduledAuditRequest:
    type: object
    required:
      - frequency
      - targetCheckNames
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)
  CreateSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name you gave to the security profile.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
  CreateSecurityProfileRequest:
    type: object
    required:
      - behaviors
    properties:
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.
  CreateStreamResponse:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The version of the stream.
  CreateStreamRequest:
    type: object
    required:
      - files
      - roleArn
    properties:
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files to stream.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role that allows the IoT service principal assumes to access your S3 files.
  CreateThingResponse:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the new thing.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the new thing.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The thing ID.
    description: The output of the CreateThing operation.
  CreateThingRequest:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type associated with the new thing.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: '<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
    description: The input for the CreateThing operation.
  CreateThingGroupResponse:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The thing group name.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The thing group ARN.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
  CreateThingGroupRequest:
    type: object
    properties:
      parentGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the parent thing group.
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
  CreateThingTypeResponse:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The Amazon Resource Name (ARN) of the thing type.
      thingTypeId:
        $ref: '#/definitions/ThingTypeId'
        description: The thing type ID.
    description: The output of the CreateThingType operation.
  CreateThingTypeRequest:
    type: object
    properties:
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: 'The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.'
    description: The input for the CreateThingType operation.
  CreateTopicRuleRequest:
    type: object
    required:
      - topicRulePayload
    properties:
      topicRulePayload:
        $ref: '#/definitions/TopicRulePayload'
        description: The rule payload.
    description: The input for the CreateTopicRule operation.
  SqlParseException: {}
  InternalException: {}
  DeleteAccountAuditConfigurationResponse:
    type: object
    properties: {}
  DeleteAccountAuditConfigurationRequest:
    type: object
    properties: {}
  DeleteAuthorizerResponse:
    type: object
    properties: {}
  DeleteAuthorizerRequest:
    type: object
    properties: {}
  DeleteConflictException: {}
  DeleteCACertificateResponse:
    type: object
    properties: {}
    description: The output for the DeleteCACertificate operation.
  DeleteCACertificateRequest:
    type: object
    properties: {}
    description: Input for the DeleteCACertificate operation.
  CertificateStateException: {}
  DeleteCertificateRequest:
    type: object
    properties: {}
    description: The input for the DeleteCertificate operation.
  DeleteJobRequest:
    type: object
    properties: {}
  DeleteJobExecutionRequest:
    type: object
    properties: {}
  DeleteOTAUpdateResponse:
    type: object
    properties: {}
  DeleteOTAUpdateRequest:
    type: object
    properties: {}
  DeletePolicyRequest:
    type: object
    properties: {}
    description: The input for the DeletePolicy operation.
  DeletePolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the DeletePolicyVersion operation.
  DeleteRegistrationCodeResponse:
    type: object
    properties: {}
    description: The output for the DeleteRegistrationCode operation.
  DeleteRegistrationCodeRequest:
    type: object
    properties: {}
    description: The input for the DeleteRegistrationCode operation.
  DeleteRoleAliasResponse:
    type: object
    properties: {}
  DeleteRoleAliasRequest:
    type: object
    properties: {}
  DeleteScheduledAuditResponse:
    type: object
    properties: {}
  DeleteScheduledAuditRequest:
    type: object
    properties: {}
  DeleteSecurityProfileResponse:
    type: object
    properties: {}
  DeleteSecurityProfileRequest:
    type: object
    properties: {}
  DeleteStreamResponse:
    type: object
    properties: {}
  DeleteStreamRequest:
    type: object
    properties: {}
  DeleteThingResponse:
    type: object
    properties: {}
    description: The output of the DeleteThing operation.
  DeleteThingRequest:
    type: object
    properties: {}
    description: The input for the DeleteThing operation.
  DeleteThingGroupResponse:
    type: object
    properties: {}
  DeleteThingGroupRequest:
    type: object
    properties: {}
  DeleteThingTypeResponse:
    type: object
    properties: {}
    description: The output for the DeleteThingType operation.
  DeleteThingTypeRequest:
    type: object
    properties: {}
    description: The input for the DeleteThingType operation.
  DeleteTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the DeleteTopicRule operation.
  DeleteV2LoggingLevelRequest:
    type: object
    properties: {}
  DeprecateThingTypeResponse:
    type: object
    properties: {}
    description: The output for the DeprecateThingType operation.
  DeprecateThingTypeRequest:
    type: object
    properties:
      undoDeprecate:
        $ref: '#/definitions/UndoDeprecate'
        description: 'Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.'
    description: The input for the DeprecateThingType operation.
  DescribeAccountAuditConfigurationResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as necessary when performing an audit.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code> this parameter is required.</p>'
      auditNotificationTargetConfigurations:
        $ref: '#/definitions/AuditNotificationTargetConfigurations'
        description: Information about the targets to which audit notifications are sent for this account.
      auditCheckConfigurations:
        $ref: '#/definitions/AuditCheckConfigurations'
        description: Which audit checks are enabled and disabled for this account.
  DescribeAccountAuditConfigurationRequest:
    type: object
    properties: {}
  DescribeAuditTaskResponse:
    type: object
    properties:
      taskStatus:
        $ref: '#/definitions/AuditTaskStatus'
        description: 'The status of the audit: one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
      taskType:
        $ref: '#/definitions/AuditTaskType'
        description: 'The type of audit: "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".'
      taskStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the audit started.
      taskStatistics:
        $ref: '#/definitions/TaskStatistics'
        description: Statistical information about the audit.
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit (only if the audit was a scheduled audit).
      auditDetails:
        $ref: '#/definitions/AuditDetails'
        description: Detailed information about each check performed during this audit.
  DescribeAuditTaskRequest:
    type: object
    properties: {}
  DescribeAuthorizerResponse:
    type: object
    properties:
      authorizerDescription:
        $ref: '#/definitions/AuthorizerDescription'
        description: The authorizer description.
  DescribeAuthorizerRequest:
    type: object
    properties: {}
  DescribeCACertificateResponse:
    type: object
    properties:
      certificateDescription:
        $ref: '#/definitions/CACertificateDescription'
        description: The CA certificate description.
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
    description: The output from the DescribeCACertificate operation.
  DescribeCACertificateRequest:
    type: object
    properties: {}
    description: The input for the DescribeCACertificate operation.
  DescribeCertificateResponse:
    type: object
    properties:
      certificateDescription:
        $ref: '#/definitions/CertificateDescription'
        description: The description of the certificate.
    description: The output of the DescribeCertificate operation.
  DescribeCertificateRequest:
    type: object
    properties: {}
    description: The input for the DescribeCertificate operation.
  DescribeDefaultAuthorizerResponse:
    type: object
    properties:
      authorizerDescription:
        $ref: '#/definitions/AuthorizerDescription'
        description: The default authorizer's description.
  DescribeDefaultAuthorizerRequest:
    type: object
    properties: {}
  DescribeEndpointResponse:
    type: object
    properties:
      endpointAddress:
        $ref: '#/definitions/EndpointAddress'
        description: 'The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.'
    description: The output from the DescribeEndpoint operation.
  DescribeEndpointRequest:
    type: object
    properties: {}
    description: The input for the DescribeEndpoint operation.
  DescribeEventConfigurationsResponse:
    type: object
    properties:
      eventConfigurations:
        $ref: '#/definitions/EventConfigurations'
        description: The event configurations.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The creation date of the event configuration.
      lastModifiedDate:
        $ref: '#/definitions/LastModifiedDate'
        description: The date the event configurations were last modified.
  DescribeEventConfigurationsRequest:
    type: object
    properties: {}
  DescribeIndexResponse:
    type: object
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The index name.
      indexStatus:
        $ref: '#/definitions/IndexStatus'
        description: The index status.
      schema:
        $ref: '#/definitions/IndexSchema'
        description: '<p>Contains a value that specifies the type of indexing performed. Valid values are:</p> <ol> <li> <p>REGISTRY – Your thing index will contain only registry data.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</p> </li> </ol>'
  DescribeIndexRequest:
    type: object
    properties: {}
  DescribeJobResponse:
    type: object
    properties:
      documentSource:
        $ref: '#/definitions/JobDocumentSource'
        description: An S3 link to the job document.
      job:
        $ref: '#/definitions/Job'
        description: Information about the job.
  DescribeJobRequest:
    type: object
    properties: {}
  DescribeJobExecutionResponse:
    type: object
    properties:
      execution:
        $ref: '#/definitions/JobExecution'
        description: Information about the job execution.
  DescribeJobExecutionRequest:
    type: object
    properties: {}
  DescribeRoleAliasResponse:
    type: object
    properties:
      roleAliasDescription:
        $ref: '#/definitions/RoleAliasDescription'
        description: The role alias description.
  DescribeRoleAliasRequest:
    type: object
    properties: {}
  DescribeScheduledAuditResponse:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. One of "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Will be "1" through "31" or "LAST". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. One of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: Which checks are performed during the scheduled audit. (Note that checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit.
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  DescribeScheduledAuditRequest:
    type: object
    properties: {}
  DescribeSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile (associated with the security profile when it was created or updated).
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
      version:
        $ref: '#/definitions/Version'
        description: The version of the security profile. A new version is generated whenever the security profile is updated.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was created.
      lastModifiedDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was last modified.
  DescribeSecurityProfileRequest:
    type: object
    properties: {}
  DescribeStreamResponse:
    type: object
    properties:
      streamInfo:
        $ref: '#/definitions/StreamInfo'
        description: Information about the stream.
  DescribeStreamRequest:
    type: object
    properties: {}
  DescribeThingResponse:
    type: object
    properties:
      defaultClientId:
        $ref: '#/definitions/ClientId'
        description: The default client ID.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The ID of the thing to describe.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to describe.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The thing type name.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The thing attributes.
      version:
        $ref: '#/definitions/Version'
        description: '<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>'
    description: The output from the DescribeThing operation.
  DescribeThingRequest:
    type: object
    properties: {}
    description: The input for the DescribeThing operation.
  DescribeThingGroupResponse:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the thing group.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The thing group ARN.
      version:
        $ref: '#/definitions/Version'
        description: The version of the thing group.
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
      thingGroupMetadata:
        $ref: '#/definitions/ThingGroupMetadata'
        description: Thing group metadata.
  DescribeThingGroupRequest:
    type: object
    properties: {}
  DescribeThingRegistrationTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/TaskId'
        description: The task ID.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The task creation date.
      lastModifiedDate:
        $ref: '#/definitions/LastModifiedDate'
        description: The date when the task was last modified.
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The task's template.
      inputFileBucket:
        $ref: '#/definitions/RegistryS3BucketName'
        description: The S3 bucket that contains the input file.
      inputFileKey:
        $ref: '#/definitions/RegistryS3KeyName'
        description: The input file key.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN that grants access to the input file bucket.
      status:
        $ref: '#/definitions/Status'
        description: The status of the bulk thing provisioning task.
      message:
        $ref: '#/definitions/ErrorMessage'
        description: The message.
      successCount:
        $ref: '#/definitions/Count'
        description: The number of things successfully provisioned.
      failureCount:
        $ref: '#/definitions/Count'
        description: The number of things that failed to be provisioned.
      percentageProgress:
        $ref: '#/definitions/Percentage'
        description: The progress of the bulk provisioning task expressed as a percentage.
  DescribeThingRegistrationTaskRequest:
    type: object
    properties: {}
  DescribeThingTypeResponse:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeId:
        $ref: '#/definitions/ThingTypeId'
        description: The thing type ID.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The thing type ARN.
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: 'The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.'
      thingTypeMetadata:
        $ref: '#/definitions/ThingTypeMetadata'
        description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
    description: The output for the DescribeThingType operation.
  DescribeThingTypeRequest:
    type: object
    properties: {}
    description: The input for the DescribeThingType operation.
  DetachPolicyRequest:
    type: object
    required:
      - target
    properties:
      target:
        $ref: '#/definitions/PolicyTarget'
        description: The target from which the policy will be detached.
  DetachPrincipalPolicyRequest:
    type: object
    properties: {}
    description: The input for the DetachPrincipalPolicy operation.
  DetachSecurityProfileResponse:
    type: object
    properties: {}
  DetachSecurityProfileRequest:
    type: object
    properties: {}
  DetachThingPrincipalResponse:
    type: object
    properties: {}
    description: The output from the DetachThingPrincipal operation.
  DetachThingPrincipalRequest:
    type: object
    properties: {}
    description: The input for the DetachThingPrincipal operation.
  DisableTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the DisableTopicRuleRequest operation.
  EnableTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the EnableTopicRuleRequest operation.
  GetEffectivePoliciesResponse:
    type: object
    properties:
      effectivePolicies:
        $ref: '#/definitions/EffectivePolicies'
        description: The effective policies.
  GetEffectivePoliciesRequest:
    type: object
    properties:
      principal:
        $ref: '#/definitions/Principal'
        description: The principal.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The Cognito identity pool ID.
  GetIndexingConfigurationResponse:
    type: object
    properties:
      thingIndexingConfiguration:
        $ref: '#/definitions/ThingIndexingConfiguration'
        description: Thing indexing configuration.
      thingGroupIndexingConfiguration:
        $ref: '#/definitions/ThingGroupIndexingConfiguration'
        description: The index configuration.
  GetIndexingConfigurationRequest:
    type: object
    properties: {}
  GetJobDocumentResponse:
    type: object
    properties:
      document:
        $ref: '#/definitions/JobDocument'
        description: The job document content.
  GetJobDocumentRequest:
    type: object
    properties: {}
  GetLoggingOptionsResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The logging level.
    description: The output from the GetLoggingOptions operation.
  GetLoggingOptionsRequest:
    type: object
    properties: {}
    description: The input for the GetLoggingOptions operation.
  GetOTAUpdateResponse:
    type: object
    properties:
      otaUpdateInfo:
        $ref: '#/definitions/OTAUpdateInfo'
        description: The OTA update info.
  GetOTAUpdateRequest:
    type: object
    properties: {}
  GetPolicyResponse:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      defaultVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The default policy version ID.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was last modified.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the policy.
    description: The output from the GetPolicy operation.
  GetPolicyRequest:
    type: object
    properties: {}
    description: The input for the GetPolicy operation.
  GetPolicyVersionResponse:
    type: object
    properties:
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the policy version was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the policy version was last modified.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the policy version.
    description: The output from the GetPolicyVersion operation.
  GetPolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the GetPolicyVersion operation.
  GetRegistrationCodeResponse:
    type: object
    properties:
      registrationCode:
        $ref: '#/definitions/RegistrationCode'
        description: The CA certificate registration code.
    description: The output from the GetRegistrationCode operation.
  GetRegistrationCodeRequest:
    type: object
    properties: {}
    description: The input to the GetRegistrationCode operation.
  GetTopicRuleResponse:
    type: object
    properties:
      ruleArn:
        $ref: '#/definitions/RuleArn'
        description: The rule ARN.
      rule:
        $ref: '#/definitions/TopicRule'
        description: The rule.
    description: The output from the GetTopicRule operation.
  GetTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the GetTopicRule operation.
  GetV2LoggingOptionsResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role ARN AWS IoT uses to write to your CloudWatch logs.
      defaultLogLevel:
        $ref: '#/definitions/LogLevel'
        description: The default log level.
      disableAllLogs:
        $ref: '#/definitions/DisableAllLogs'
        description: Disables all logs.
  GetV2LoggingOptionsRequest:
    type: object
    properties: {}
  NotConfiguredException: {}
  ListActiveViolationsResponse:
    type: object
    properties:
      activeViolations:
        $ref: '#/definitions/ActiveViolations'
        description: The list of active violations.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListActiveViolationsRequest:
    type: object
    properties: {}
  ListAttachedPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The token to retrieve the next set of results, or ``null`` if there are no more results.'
  ListAttachedPoliciesRequest:
    type: object
    properties: {}
  ListAuditFindingsResponse:
    type: object
    properties:
      findings:
        $ref: '#/definitions/AuditFindings'
        description: The findings (results) of the audit.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListAuditFindingsRequest:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: 'A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.'
      checkName:
        $ref: '#/definitions/AuditCheckName'
        description: A filter to limit results to the findings for the specified audit check.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information identifying the non-compliant resource.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return at one time. The default is 25.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of results.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: 'A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
      endTime:
        $ref: '#/definitions/Timestamp'
        description: 'A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
  ListAuditTasksResponse:
    type: object
    properties:
      tasks:
        $ref: '#/definitions/AuditTaskMetadataList'
        description: The audits that were performed during the specified time period.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListAuditTasksRequest:
    type: object
    properties: {}
  ListAuthorizersResponse:
    type: object
    properties:
      authorizers:
        $ref: '#/definitions/Authorizers'
        description: The authorizers.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListAuthorizersRequest:
    type: object
    properties: {}
  ListCACertificatesResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/CACertificates'
        description: The CA certificates registered in your AWS account.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: The current position within the list of CA certificates.
    description: The output from the ListCACertificates operation.
  ListCACertificatesRequest:
    type: object
    properties: {}
    description: Input for the ListCACertificates operation.
  ListCertificatesResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/Certificates'
        description: The descriptions of the certificates.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output of the ListCertificates operation.
  ListCertificatesRequest:
    type: object
    properties: {}
    description: The input for the ListCertificates operation.
  ListCertificatesByCAResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/Certificates'
        description: The device certificates signed by the specified CA certificate.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output of the ListCertificatesByCA operation.
  ListCertificatesByCARequest:
    type: object
    properties: {}
    description: The input to the ListCertificatesByCA operation.
  ListIndicesResponse:
    type: object
    properties:
      indexNames:
        $ref: '#/definitions/IndexNamesList'
        description: The index names.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListIndicesRequest:
    type: object
    properties: {}
  ListJobExecutionsForJobResponse:
    type: object
    properties:
      executionSummaries:
        $ref: '#/definitions/JobExecutionSummaryForJobList'
        description: A list of job execution summaries.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListJobExecutionsForJobRequest:
    type: object
    properties: {}
  ListJobExecutionsForThingResponse:
    type: object
    properties:
      executionSummaries:
        $ref: '#/definitions/JobExecutionSummaryForThingList'
        description: A list of job execution summaries.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListJobExecutionsForThingRequest:
    type: object
    properties: {}
  ListJobsResponse:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/JobSummaryList'
        description: A list of jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListJobsRequest:
    type: object
    properties: {}
  ListOTAUpdatesResponse:
    type: object
    properties:
      otaUpdates:
        $ref: '#/definitions/OTAUpdatesSummary'
        description: A list of OTA update jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to use to get the next set of results.
  ListOTAUpdatesRequest:
    type: object
    properties: {}
  ListOutgoingCertificatesResponse:
    type: object
    properties:
      outgoingCertificates:
        $ref: '#/definitions/OutgoingCertificates'
        description: The certificates that are being transferred but not yet accepted.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results.
    description: The output from the ListOutgoingCertificates operation.
  ListOutgoingCertificatesRequest:
    type: object
    properties: {}
    description: The input to the ListOutgoingCertificates operation.
  ListPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The descriptions of the policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPolicies operation.
  ListPoliciesRequest:
    type: object
    properties: {}
    description: The input for the ListPolicies operation.
  ListPolicyPrincipalsResponse:
    type: object
    properties:
      principals:
        $ref: '#/definitions/Principals'
        description: The descriptions of the principals.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPolicyPrincipals operation.
  ListPolicyPrincipalsRequest:
    type: object
    properties: {}
    description: The input for the ListPolicyPrincipals operation.
  ListPolicyVersionsResponse:
    type: object
    properties:
      policyVersions:
        $ref: '#/definitions/PolicyVersions'
        description: The policy versions.
    description: The output from the ListPolicyVersions operation.
  ListPolicyVersionsRequest:
    type: object
    properties: {}
    description: The input for the ListPolicyVersions operation.
  ListPrincipalPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPrincipalPolicies operation.
  ListPrincipalPoliciesRequest:
    type: object
    properties: {}
    description: The input for the ListPrincipalPolicies operation.
  ListPrincipalThingsResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingNameList'
        description: The things.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
    description: The output from the ListPrincipalThings operation.
  ListPrincipalThingsRequest:
    type: object
    properties: {}
    description: The input for the ListPrincipalThings operation.
  ListRoleAliasesResponse:
    type: object
    properties:
      roleAliases:
        $ref: '#/definitions/RoleAliases'
        description: The role aliases.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListRoleAliasesRequest:
    type: object
    properties: {}
  ListScheduledAuditsResponse:
    type: object
    properties:
      scheduledAudits:
        $ref: '#/definitions/ScheduledAuditMetadataList'
        description: The list of scheduled audits.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListScheduledAuditsRequest:
    type: object
    properties: {}
  ListSecurityProfilesResponse:
    type: object
    properties:
      securityProfileIdentifiers:
        $ref: '#/definitions/SecurityProfileIdentifiers'
        description: A list of security profile identifiers (names and ARNs).
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListSecurityProfilesRequest:
    type: object
    properties: {}
  ListSecurityProfilesForTargetResponse:
    type: object
    properties:
      securityProfileTargetMappings:
        $ref: '#/definitions/SecurityProfileTargetMappings'
        description: A list of security profiles and their associated targets.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListSecurityProfilesForTargetRequest:
    type: object
    properties: {}
  ListStreamsResponse:
    type: object
    properties:
      streams:
        $ref: '#/definitions/StreamsSummary'
        description: A list of streams.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to get the next set of results.
  ListStreamsRequest:
    type: object
    properties: {}
  ListTargetsForPolicyResponse:
    type: object
    properties:
      targets:
        $ref: '#/definitions/PolicyTargets'
        description: The policy targets.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListTargetsForPolicyRequest:
    type: object
    properties: {}
  ListTargetsForSecurityProfileResponse:
    type: object
    properties:
      securityProfileTargets:
        $ref: '#/definitions/SecurityProfileTargets'
        description: The thing groups to which the security profile is attached.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListTargetsForSecurityProfileRequest:
    type: object
    properties: {}
  ListThingGroupsResponse:
    type: object
    properties:
      thingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The thing groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingGroupsRequest:
    type: object
    properties: {}
  ListThingGroupsForThingResponse:
    type: object
    properties:
      thingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The thing groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingGroupsForThingRequest:
    type: object
    properties: {}
  ListThingPrincipalsResponse:
    type: object
    properties:
      principals:
        $ref: '#/definitions/Principals'
        description: The principals associated with the thing.
    description: The output from the ListThingPrincipals operation.
  ListThingPrincipalsRequest:
    type: object
    properties: {}
    description: The input for the ListThingPrincipal operation.
  ListThingRegistrationTaskReportsResponse:
    type: object
    properties:
      resourceLinks:
        $ref: '#/definitions/S3FileUrlList'
        description: Links to the task resources.
      reportType:
        $ref: '#/definitions/ReportType'
        description: The type of task report.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingRegistrationTaskReportsRequest:
    type: object
    properties: {}
  ListThingRegistrationTasksResponse:
    type: object
    properties:
      taskIds:
        $ref: '#/definitions/TaskIdList'
        description: A list of bulk thing provisioning task IDs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingRegistrationTasksRequest:
    type: object
    properties: {}
  ListThingTypesResponse:
    type: object
    properties:
      thingTypes:
        $ref: '#/definitions/ThingTypeList'
        description: The thing types.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    description: The output for the ListThingTypes operation.
  ListThingTypesRequest:
    type: object
    properties: {}
    description: The input for the ListThingTypes operation.
  ListThingsResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingAttributeList'
        description: The things.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
    description: The output from the ListThings operation.
  ListThingsRequest:
    type: object
    properties: {}
    description: The input for the ListThings operation.
  ListThingsInThingGroupResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingNameList'
        description: The things in the specified thing group.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingsInThingGroupRequest:
    type: object
    properties: {}
  ListTopicRulesResponse:
    type: object
    properties:
      rules:
        $ref: '#/definitions/TopicRuleList'
        description: The rules.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to retrieve the next value.
    description: The output from the ListTopicRules operation.
  ListTopicRulesRequest:
    type: object
    properties: {}
    description: The input for the ListTopicRules operation.
  ListV2LoggingLevelsResponse:
    type: object
    properties:
      logTargetConfigurations:
        $ref: '#/definitions/LogTargetConfigurations'
        description: The logging configuration for a target.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListV2LoggingLevelsRequest:
    type: object
    properties: {}
  ListViolationEventsResponse:
    type: object
    properties:
      violationEvents:
        $ref: '#/definitions/ViolationEvents'
        description: 'The security profile violation alerts issued for this account during the given time frame, potentially filtered by security profile, behavior violated, or thing (device) violating.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListViolationEventsRequest:
    type: object
    properties: {}
  RegisterCACertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The CA certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The CA certificate identifier.
    description: The output from the RegisterCACertificateResponse operation.
  RegisterCACertificateRequest:
    type: object
    required:
      - caCertificate
      - verificationCertificate
    properties:
      caCertificate:
        $ref: '#/definitions/CertificatePem'
        description: The CA certificate.
      verificationCertificate:
        $ref: '#/definitions/CertificatePem'
        description: The private key verification certificate.
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
    description: The input to the RegisterCACertificate operation.
  RegistrationCodeValidationException: {}
  CertificateValidationException: {}
  RegisterCertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate identifier.
    description: The output from the RegisterCertificate operation.
  RegisterCertificateRequest:
    type: object
    required:
      - certificatePem
    properties:
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      caCertificatePem:
        $ref: '#/definitions/CertificatePem'
        description: The CA certificate used to sign the device certificate being registered.
      status:
        $ref: '#/definitions/CertificateStatus'
        description: The status of the register certificate request.
    description: The input to the RegisterCertificate operation.
  CertificateConflictException: {}
  RegisterThingResponse:
    type: object
    properties:
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: .
      resourceArns:
        $ref: '#/definitions/ResourceArns'
        description: ARNs for the generated resources.
  RegisterThingRequest:
    type: object
    required:
      - templateBody
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: 'The provisioning template. See <a href="http://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
      parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters for provisioning a thing. See <a href="http://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
  ConflictingResourceUpdateException: {}
  ResourceRegistrationFailureException: {}
  RejectCertificateTransferRequest:
    type: object
    properties:
      rejectReason:
        $ref: '#/definitions/Message'
        description: The reason the certificate transfer was rejected.
    description: The input for the RejectCertificateTransfer operation.
  RemoveThingFromThingGroupResponse:
    type: object
    properties: {}
  RemoveThingFromThingGroupRequest:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The group name.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The group ARN.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to remove from the group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to remove from the group.
  ReplaceTopicRuleRequest:
    type: object
    required:
      - topicRulePayload
    properties:
      topicRulePayload:
        $ref: '#/definitions/TopicRulePayload'
        description: The rule payload.
    description: The input for the ReplaceTopicRule operation.
  SearchIndexResponse:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
      things:
        $ref: '#/definitions/ThingDocumentList'
        description: The things that match the search query.
      thingGroups:
        $ref: '#/definitions/ThingGroupDocumentList'
        description: The thing groups that match the search query.
  SearchIndexRequest:
    type: object
    required:
      - queryString
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The search index name.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The search query string.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
      maxResults:
        $ref: '#/definitions/QueryMaxResults'
        description: The maximum number of results to return at one time.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The query version.
  InvalidQueryException: {}
  IndexNotReadyException: {}
  SetDefaultAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  SetDefaultAuthorizerRequest:
    type: object
    required:
      - authorizerName
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
  SetDefaultPolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the SetDefaultPolicyVersion operation.
  SetLoggingOptionsRequest:
    type: object
    required:
      - loggingOptionsPayload
    properties:
      loggingOptionsPayload:
        $ref: '#/definitions/LoggingOptionsPayload'
        description: The logging options payload.
    description: The input for the SetLoggingOptions operation.
  SetV2LoggingLevelRequest:
    type: object
    required:
      - logTarget
      - logLevel
    properties:
      logTarget:
        $ref: '#/definitions/LogTarget'
        description: The log target.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The log level.
  SetV2LoggingOptionsRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the role that allows IoT to write to Cloudwatch logs.
      defaultLogLevel:
        $ref: '#/definitions/LogLevel'
        description: The default logging level.
      disableAllLogs:
        $ref: '#/definitions/DisableAllLogs'
        description: If true all logs are disabled. The default is false.
  StartOnDemandAuditTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of the on-demand audit you started.
  StartOnDemandAuditTaskRequest:
    type: object
    required:
      - targetCheckNames
    properties:
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.
  StartThingRegistrationTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/TaskId'
        description: The bulk thing provisioning task ID.
  StartThingRegistrationTaskRequest:
    type: object
    required:
      - templateBody
      - inputFileBucket
      - inputFileKey
      - roleArn
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The provisioning template.
      inputFileBucket:
        $ref: '#/definitions/RegistryS3BucketName'
        description: The S3 bucket that contains the input file.
      inputFileKey:
        $ref: '#/definitions/RegistryS3KeyName'
        description: The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role ARN that grants permission the input file.
  StopThingRegistrationTaskResponse:
    type: object
    properties: {}
  StopThingRegistrationTaskRequest:
    type: object
    properties: {}
  TestAuthorizationResponse:
    type: object
    properties:
      authResults:
        $ref: '#/definitions/AuthResults'
        description: The authentication results.
  TestAuthorizationRequest:
    type: object
    required:
      - authInfos
    properties:
      principal:
        $ref: '#/definitions/Principal'
        description: The principal.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The Cognito identity pool ID.
      authInfos:
        $ref: '#/definitions/AuthInfos'
        description: A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
      policyNamesToAdd:
        $ref: '#/definitions/PolicyNames'
        description: 'When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.'
      policyNamesToSkip:
        $ref: '#/definitions/PolicyNames'
        description: 'When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.'
  TestInvokeAuthorizerResponse:
    type: object
    properties:
      isAuthenticated:
        $ref: '#/definitions/IsAuthenticated'
        description: 'True if the token is authenticated, otherwise false.'
      principalId:
        $ref: '#/definitions/PrincipalId'
        description: The principal ID.
      policyDocuments:
        $ref: '#/definitions/PolicyDocuments'
        description: IAM policy documents.
      refreshAfterInSeconds:
        $ref: '#/definitions/Seconds'
        description: The number of seconds after which the temporary credentials are refreshed.
      disconnectAfterInSeconds:
        $ref: '#/definitions/Seconds'
        description: The number of seconds after which the connection is terminated.
  TestInvokeAuthorizerRequest:
    type: object
    required:
      - token
      - tokenSignature
    properties:
      token:
        $ref: '#/definitions/Token'
        description: The token returned by your custom authentication service.
      tokenSignature:
        $ref: '#/definitions/TokenSignature'
        description: The signature made with the token and your custom authentication service's private key.
  InvalidResponseException: {}
  TransferCertificateResponse:
    type: object
    properties:
      transferredCertificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
    description: The output from the TransferCertificate operation.
  TransferCertificateRequest:
    type: object
    properties:
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
    description: The input for the TransferCertificate operation.
  TransferConflictException: {}
  UpdateAccountAuditConfigurationResponse:
    type: object
    properties: {}
  UpdateAccountAuditConfigurationRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as necessary when performing an audit.'
      auditNotificationTargetConfigurations:
        $ref: '#/definitions/AuditNotificationTargetConfigurations'
        description: Information about the targets to which audit notifications are sent.
      auditCheckConfigurations:
        $ref: '#/definitions/AuditCheckConfigurations'
        description: '<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are currently enabled.</p> <p>Note that some data collection may begin immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it is used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code> this parameter is required and must specify at least one enabled check.</p>'
  UpdateAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  UpdateAuthorizerRequest:
    type: object
    properties:
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The ARN of the authorizer's Lambda function.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: 'The key used to extract the token from the HTTP headers. '
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to verify the token signature.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the update authorizer request.
  UpdateCACertificateRequest:
    type: object
    properties:
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
      removeAutoRegistration:
        $ref: '#/definitions/RemoveAutoRegistration'
        description: 'If true, remove auto registration.'
    description: The input to the UpdateCACertificate operation.
  UpdateCertificateRequest:
    type: object
    properties: {}
    description: The input for the UpdateCertificate operation.
  UpdateEventConfigurationsResponse:
    type: object
    properties: {}
  UpdateEventConfigurationsRequest:
    type: object
    properties:
      eventConfigurations:
        $ref: '#/definitions/EventConfigurations'
        description: The new event configuration values.
  UpdateIndexingConfigurationResponse:
    type: object
    properties: {}
  UpdateIndexingConfigurationRequest:
    type: object
    properties:
      thingIndexingConfiguration:
        $ref: '#/definitions/ThingIndexingConfiguration'
        description: Thing indexing configuration.
      thingGroupIndexingConfiguration:
        $ref: '#/definitions/ThingGroupIndexingConfiguration'
        description: Thing group indexing configuration.
  UpdateRoleAliasResponse:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The role alias ARN.
  UpdateRoleAliasRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: The number of seconds the credential will be valid.
  UpdateScheduledAuditResponse:
    type: object
    properties:
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  UpdateScheduledAuditRequest:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The actual start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)
  UpdateSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile that was updated.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile that was updated.
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: The description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
      version:
        $ref: '#/definitions/Version'
        description: The updated version of the security profile.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was created.
      lastModifiedDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was last modified.
  UpdateSecurityProfileRequest:
    type: object
    properties:
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
  UpdateStreamResponse:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
  UpdateStreamRequest:
    type: object
    properties:
      description:
        $ref: '#/definitions/StreamDescription'
        description: The description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files associated with the stream.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role that allows the IoT service principal assumes to access your S3 files.
  UpdateThingResponse:
    type: object
    properties: {}
    description: The output from the UpdateThing operation.
  UpdateThingRequest:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: '<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\"attributes\":{\"name1\":\"value2\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>'
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.'
      removeThingType:
        $ref: '#/definitions/RemoveThingType'
        description: 'Remove a thing type association. If <b>true</b>, the association is removed.'
    description: The input for the UpdateThing operation.
  UpdateThingGroupResponse:
    type: object
    properties:
      version:
        $ref: '#/definitions/Version'
        description: The version of the updated thing group.
  UpdateThingGroupRequest:
    type: object
    required:
      - thingGroupProperties
    properties:
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: 'The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.'
  UpdateThingGroupsForThingResponse:
    type: object
    properties: {}
  UpdateThingGroupsForThingRequest:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The thing whose group memberships will be updated.
      thingGroupsToAdd:
        $ref: '#/definitions/ThingGroupList'
        description: The groups to which the thing will be added.
      thingGroupsToRemove:
        $ref: '#/definitions/ThingGroupList'
        description: The groups from which the thing will be removed.
  ValidateSecurityProfileBehaviorsResponse:
    type: object
    properties:
      valid:
        $ref: '#/definitions/Valid'
        description: True if the behaviors were valid.
      validationErrors:
        $ref: '#/definitions/ValidationErrors'
        description: The list of any errors found in the behaviors.
  ValidateSecurityProfileBehaviorsRequest:
    type: object
    required:
      - behaviors
    properties:
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
  CertificateId:
    type: string
    pattern: '(0x)?[a-fA-F0-9]+'
    minLength: 64
    maxLength: 64
  SetAsActive:
    type: boolean
  DynamoDBAction:
    type: object
    required:
      - tableName
      - roleArn
      - hashKeyField
      - hashKeyValue
    properties:
      tableName:
        $ref: '#/definitions/TableName'
        description: The name of the DynamoDB table.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the DynamoDB table.
      operation:
        $ref: '#/definitions/DynamoOperation'
        description: 'The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.'
      hashKeyField:
        $ref: '#/definitions/HashKeyField'
        description: The hash key name.
      hashKeyValue:
        $ref: '#/definitions/HashKeyValue'
        description: The hash key value.
      hashKeyType:
        $ref: '#/definitions/DynamoKeyType'
        description: The hash key type. Valid values are "STRING" or "NUMBER"
      rangeKeyField:
        $ref: '#/definitions/RangeKeyField'
        description: The range key name.
      rangeKeyValue:
        $ref: '#/definitions/RangeKeyValue'
        description: The range key value.
      rangeKeyType:
        $ref: '#/definitions/DynamoKeyType'
        description: The range key type. Valid values are "STRING" or "NUMBER"
      payloadField:
        $ref: '#/definitions/PayloadField'
        description: The action payload. This name can be customized.
    description: '<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>"hashKeyValue": "${topic(3)}"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>"rangeKeyValue": "${timestamp()}"</code> </p>'
  DynamoDBv2Action:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the DynamoDB table.
      putItem:
        $ref: '#/definitions/PutItemInput'
        description: '<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>'
    description: <p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>
  LambdaAction:
    type: object
    required:
      - functionArn
    properties:
      functionArn:
        $ref: '#/definitions/FunctionArn'
        description: The ARN of the Lambda function.
    description: Describes an action to invoke a Lambda function.
  SnsAction:
    type: object
    required:
      - targetArn
      - roleArn
    properties:
      targetArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the SNS topic.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      messageFormat:
        $ref: '#/definitions/MessageFormat'
        description: '(Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href="http://docs.aws.amazon.com/sns/latest/dg/json-formats.html">http://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.'
    description: Describes an action to publish to an Amazon SNS topic.
  SqsAction:
    type: object
    required:
      - roleArn
      - queueUrl
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      queueUrl:
        $ref: '#/definitions/QueueUrl'
        description: The URL of the Amazon SQS queue.
      useBase64:
        $ref: '#/definitions/UseBase64'
        description: Specifies whether to use Base64 encoding.
    description: Describes an action to publish data to an Amazon SQS queue.
  KinesisAction:
    type: object
    required:
      - roleArn
      - streamName
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the Amazon Kinesis stream.
      streamName:
        $ref: '#/definitions/StreamName'
        description: The name of the Amazon Kinesis stream.
      partitionKey:
        $ref: '#/definitions/PartitionKey'
        description: The partition key.
    description: Describes an action to write data to an Amazon Kinesis stream.
  RepublishAction:
    type: object
    required:
      - roleArn
      - topic
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      topic:
        $ref: '#/definitions/TopicPattern'
        description: The name of the MQTT topic.
    description: Describes an action to republish to another topic.
  S3Action:
    type: object
    required:
      - roleArn
      - bucketName
      - key
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      bucketName:
        $ref: '#/definitions/BucketName'
        description: The Amazon S3 bucket.
      key:
        $ref: '#/definitions/Key'
        description: The object key.
      cannedAcl:
        $ref: '#/definitions/CannedAccessControlList'
        description: 'The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3 canned ACLs</a>.'
    description: Describes an action to write data to an Amazon S3 bucket.
  FirehoseAction:
    type: object
    required:
      - roleArn
      - deliveryStreamName
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that grants access to the Amazon Kinesis Firehose stream.
      deliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The delivery stream name.
      separator:
        $ref: '#/definitions/FirehoseSeparator'
        description: 'A character separator that will be used to separate records written to the Firehose stream. Valid values are: ''\n'' (newline), ''\t'' (tab), ''\r\n'' (Windows newline), '','' (comma).'
    description: Describes an action that writes data to an Amazon Kinesis Firehose stream.
  CloudwatchMetricAction:
    type: object
    required:
      - roleArn
      - metricNamespace
      - metricName
      - metricValue
      - metricUnit
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that allows access to the CloudWatch metric.
      metricNamespace:
        $ref: '#/definitions/String'
        description: The CloudWatch metric namespace name.
      metricName:
        $ref: '#/definitions/String'
        description: The CloudWatch metric name.
      metricValue:
        $ref: '#/definitions/String'
        description: The CloudWatch metric value.
      metricUnit:
        $ref: '#/definitions/String'
        description: 'The <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric unit</a> supported by CloudWatch.'
      metricTimestamp:
        $ref: '#/definitions/String'
        description: 'An optional <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix timestamp</a>.'
    description: Describes an action that captures a CloudWatch metric.
  CloudwatchAlarmAction:
    type: object
    required:
      - roleArn
      - alarmName
      - stateReason
      - stateValue
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that allows access to the CloudWatch alarm.
      alarmName:
        $ref: '#/definitions/AlarmName'
        description: The CloudWatch alarm name.
      stateReason:
        $ref: '#/definitions/StateReason'
        description: The reason for the alarm change.
      stateValue:
        $ref: '#/definitions/StateValue'
        description: 'The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.'
    description: Describes an action that updates a CloudWatch alarm.
  ElasticsearchAction:
    type: object
    required:
      - roleArn
      - endpoint
      - index
      - type
      - id
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role ARN that has access to Elasticsearch.
      endpoint:
        $ref: '#/definitions/ElasticsearchEndpoint'
        description: The endpoint of your Elasticsearch domain.
      index:
        $ref: '#/definitions/ElasticsearchIndex'
        description: The Elasticsearch index where you want to store your data.
      type:
        $ref: '#/definitions/ElasticsearchType'
        description: The type of document you are storing.
      id:
        $ref: '#/definitions/ElasticsearchId'
        description: The unique identifier for the document you are storing.
    description: Describes an action that writes data to an Amazon Elasticsearch Service domain.
  SalesforceAction:
    type: object
    required:
      - token
      - url
    properties:
      token:
        $ref: '#/definitions/SalesforceToken'
        description: The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
      url:
        $ref: '#/definitions/SalesforceEndpoint'
        description: The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
    description: Describes an action to write a message to a Salesforce IoT Cloud Input Stream.
  IotAnalyticsAction:
    type: object
    properties:
      channelArn:
        $ref: '#/definitions/AwsArn'
        description: (deprecated) The ARN of the IoT Analytics channel to which message data will be sent.
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the IoT Analytics channel to which message data will be sent.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).'
    description: Sends messge data to an AWS IoT Analytics channel.
  StepFunctionsAction:
    type: object
    required:
      - stateMachineName
      - roleArn
    properties:
      executionNamePrefix:
        $ref: '#/definitions/ExecutionNamePrefix'
        description: (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
      stateMachineName:
        $ref: '#/definitions/StateMachineName'
        description: The name of the Step Functions state machine whose execution will be started.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").'
    description: Starts execution of a Step Functions state machine.
  Action:
    type: object
    properties:
      dynamoDB:
        $ref: '#/definitions/DynamoDBAction'
        description: Write to a DynamoDB table.
      dynamoDBv2:
        $ref: '#/definitions/DynamoDBv2Action'
        description: Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
      lambda:
        $ref: '#/definitions/LambdaAction'
        description: Invoke a Lambda function.
      sns:
        $ref: '#/definitions/SnsAction'
        description: Publish to an Amazon SNS topic.
      sqs:
        $ref: '#/definitions/SqsAction'
        description: Publish to an Amazon SQS queue.
      kinesis:
        $ref: '#/definitions/KinesisAction'
        description: Write data to an Amazon Kinesis stream.
      republish:
        $ref: '#/definitions/RepublishAction'
        description: Publish to another MQTT topic.
      s3:
        $ref: '#/definitions/S3Action'
        description: Write to an Amazon S3 bucket.
      firehose:
        $ref: '#/definitions/FirehoseAction'
        description: Write to an Amazon Kinesis Firehose stream.
      cloudwatchMetric:
        $ref: '#/definitions/CloudwatchMetricAction'
        description: Capture a CloudWatch metric.
      cloudwatchAlarm:
        $ref: '#/definitions/CloudwatchAlarmAction'
        description: Change the state of a CloudWatch alarm.
      elasticsearch:
        $ref: '#/definitions/ElasticsearchAction'
        description: Write data to an Amazon Elasticsearch Service domain.
      salesforce:
        $ref: '#/definitions/SalesforceAction'
        description: Send a message to a Salesforce IoT Cloud Input Stream.
      iotAnalytics:
        $ref: '#/definitions/IotAnalyticsAction'
        description: Sends message data to an AWS IoT Analytics channel.
      stepFunctions:
        $ref: '#/definitions/StepFunctionsAction'
        description: Starts execution of a Step Functions state machine.
    description: Describes the actions associated with a rule.
  ActionList:
    type: array
    items:
      $ref: '#/definitions/Action'
    minItems: 0
    maxItems: 10
  ActionType:
    type: string
    enum:
      - PUBLISH
      - SUBSCRIBE
      - RECEIVE
      - CONNECT
  ViolationId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 128
  ThingName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  SecurityProfileName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  Behavior:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/BehaviorName'
        description: The name you have given to the behavior.
      metric:
        $ref: '#/definitions/BehaviorMetric'
        description: What is measured by the behavior.
      criteria:
        $ref: '#/definitions/BehaviorCriteria'
        description: The criteria that determine if a device is behaving normally in regard to the <code>metric</code>.
    description: A Device Defender security profile behavior.
  MetricValue:
    type: object
    properties:
      count:
        $ref: '#/definitions/UnsignedLong'
        description: 'If the <code>comparisonOperator</code> calls for a numeric value, use this to specify that numeric value to be compared with the <code>metric</code>.'
      cidrs:
        $ref: '#/definitions/Cidrs'
        description: 'If the <code>comparisonOperator</code> calls for a set of CIDRs, use this to specify that set to be compared with the <code>metric</code>.'
      ports:
        $ref: '#/definitions/Ports'
        description: 'If the <code>comparisonOperator</code> calls for a set of ports, use this to specify that set to be compared with the <code>metric</code>.'
    description: The value to be compared with the <code>metric</code>.
  Timestamp:
    type: string
    format: date-time
  ActiveViolation:
    type: object
    properties:
      violationId:
        $ref: '#/definitions/ViolationId'
        description: The ID of the active violation.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing responsible for the active violation.
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The security profile whose behavior is in violation.
      behavior:
        $ref: '#/definitions/Behavior'
        description: The behavior which is being violated.
      lastViolationValue:
        $ref: '#/definitions/MetricValue'
        description: The value of the metric (the measurement) which caused the most recent violation.
      lastViolationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the most recent violation occurred.
      violationStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the violation started.
    description: Information about an active Device Defender security profile behavior violation.
  ActiveViolations:
    type: array
    items:
      $ref: '#/definitions/ActiveViolation'
  ThingGroupName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  ThingGroupArn:
    type: string
  ThingArn:
    type: string
  AttributeKey:
    type: string
  Value:
    type: string
  AdditionalParameterMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeKey'
        value:
          $ref: '#/definitions/Value'
  AlarmName:
    type: string
  AlertTargetArn:
    type: string
  RoleArn:
    type: string
    minLength: 20
    maxLength: 2048
  AlertTarget:
    type: object
    required:
      - alertTargetArn
      - roleArn
    properties:
      alertTargetArn:
        $ref: '#/definitions/AlertTargetArn'
        description: The ARN of the notification target to which alerts are sent.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that grants permission to send alerts to the notification target.
    description: A structure containing the alert target ARN and the role ARN.
  AlertTargetType:
    type: string
    enum:
      - SNS
    description: 'The type of alert target: one of "SNS".'
  AlertTargets:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AlertTargetType'
        value:
          $ref: '#/definitions/AlertTarget'
  AllowAutoRegistration:
    type: boolean
  Policies:
    type: array
    items:
      $ref: '#/definitions/Policy'
  Allowed:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: A list of policies that allowed the authentication.
    description: Contains information that allowed the authorization.
  AscendingOrder:
    type: boolean
  JobTargets:
    type: array
    items:
      $ref: '#/definitions/TargetArn'
    minItems: 1
  JobId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 64
  Comment:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  JobArn:
    type: string
  JobDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  PolicyName:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  PolicyTarget:
    type: string
  Principal:
    type: string
  SecurityProfileTargetArn:
    type: string
  AttributeName:
    type: string
    pattern: '[a-zA-Z0-9_.,@/:#-]+'
    maxLength: 128
  Attributes:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  Flag:
    type: boolean
  AttributePayload:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
        description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
      merge:
        $ref: '#/definitions/Flag'
        description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code>.</p> </note>'
    description: The attribute payload.
  AttributeValue:
    type: string
    pattern: '[a-zA-Z0-9_.,@/:#-]*'
    maxLength: 800
  AttributesMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeKey'
        value:
          $ref: '#/definitions/Value'
  Enabled:
    type: boolean
  AuditCheckConfiguration:
    type: object
    properties:
      enabled:
        $ref: '#/definitions/Enabled'
        description: True if this audit check is enabled for this account.
    description: Which audit checks are enabled and disabled for this account.
  AuditCheckName:
    type: string
    description: An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)
  AuditCheckConfigurations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AuditCheckName'
        value:
          $ref: '#/definitions/AuditCheckConfiguration'
  AuditCheckRunStatus:
    type: string
    enum:
      - IN_PROGRESS
      - WAITING_FOR_DATA_COLLECTION
      - CANCELED
      - COMPLETED_COMPLIANT
      - COMPLETED_NON_COMPLIANT
      - FAILED
  CheckCompliant:
    type: boolean
  TotalResourcesCount:
    type: integer
  NonCompliantResourcesCount:
    type: integer
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
    maxLength: 2048
  AuditCheckDetails:
    type: object
    properties:
      checkRunStatus:
        $ref: '#/definitions/AuditCheckRunStatus'
        description: 'The completion status of this check, one of "IN_PROGRESS", "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".'
      checkCompliant:
        $ref: '#/definitions/CheckCompliant'
        description: True if the check completed and found all resources compliant.
      totalResourcesCount:
        $ref: '#/definitions/TotalResourcesCount'
        description: The number of resources on which the check was performed.
      nonCompliantResourcesCount:
        $ref: '#/definitions/NonCompliantResourcesCount'
        description: The number of resources that the check found non-compliant.
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The code of any error encountered when performing this check during this audit. One of "INSUFFICIENT_PERMISSIONS", or "AUDIT_CHECK_DISABLED".'
      message:
        $ref: '#/definitions/ErrorMessage'
        description: The message associated with any error encountered when performing this check during this audit.
    description: Information about the audit check.
  AuditDetails:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AuditCheckName'
        value:
          $ref: '#/definitions/AuditCheckDetails'
  AuditTaskId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 40
  AuditFindingSeverity:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
  NonCompliantResource:
    type: object
    properties:
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of the non-compliant resource.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information identifying the non-compliant resource.
      additionalInfo:
        $ref: '#/definitions/StringMap'
        description: Additional information about the non-compliant resource.
    description: Information about the resource that was non-compliant with the audit check.
  RelatedResources:
    type: array
    items:
      $ref: '#/definitions/RelatedResource'
  ReasonForNonCompliance:
    type: string
  ReasonForNonComplianceCode:
    type: string
  AuditFinding:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of the audit that generated this result (finding)
      checkName:
        $ref: '#/definitions/AuditCheckName'
        description: The audit check that generated this result.
      taskStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the audit started.
      findingTime:
        $ref: '#/definitions/Timestamp'
        description: The time the result (finding) was discovered.
      severity:
        $ref: '#/definitions/AuditFindingSeverity'
        description: The severity of the result (finding).
      nonCompliantResource:
        $ref: '#/definitions/NonCompliantResource'
        description: The resource that was found to be non-compliant with the audit check.
      relatedResources:
        $ref: '#/definitions/RelatedResources'
        description: The list of related resources.
      reasonForNonCompliance:
        $ref: '#/definitions/ReasonForNonCompliance'
        description: The reason the resource was non-compliant.
      reasonForNonComplianceCode:
        $ref: '#/definitions/ReasonForNonComplianceCode'
        description: A code which indicates the reason that the resource was non-compliant.
    description: The findings (results) of the audit.
  AuditFindings:
    type: array
    items:
      $ref: '#/definitions/AuditFinding'
  AuditFrequency:
    type: string
    enum:
      - DAILY
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
  TargetArn:
    type: string
  AuditNotificationTarget:
    type: object
    properties:
      targetArn:
        $ref: '#/definitions/TargetArn'
        description: The ARN of the target (SNS topic) to which audit notifications are sent.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that grants permission to send notifications to the target.
      enabled:
        $ref: '#/definitions/Enabled'
        description: True if notifications to the target are enabled.
    description: Information about the targets to which audit notifications are sent.
  AuditNotificationType:
    type: string
    enum:
      - SNS
  AuditNotificationTargetConfigurations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AuditNotificationType'
        value:
          $ref: '#/definitions/AuditNotificationTarget'
  AuditTaskStatus:
    type: string
    enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
  AuditTaskType:
    type: string
    enum:
      - ON_DEMAND_AUDIT_TASK
      - SCHEDULED_AUDIT_TASK
  AuditTaskMetadata:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of this audit.
      taskStatus:
        $ref: '#/definitions/AuditTaskStatus'
        description: 'The status of this audit: one of "IN_PROGRESS", "COMPLETED", "FAILED" or "CANCELED".'
      taskType:
        $ref: '#/definitions/AuditTaskType'
        description: 'The type of this audit: one of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".'
    description: The audits that were performed.
  AuditTaskMetadataList:
    type: array
    items:
      $ref: '#/definitions/AuditTaskMetadata'
  AuthDecision:
    type: string
    enum:
      - ALLOWED
      - EXPLICIT_DENY
      - IMPLICIT_DENY
  Resources:
    type: array
    items:
      $ref: '#/definitions/Resource'
  AuthInfo:
    type: object
    properties:
      actionType:
        $ref: '#/definitions/ActionType'
        description: The type of action for which the principal is being authorized.
      resources:
        $ref: '#/definitions/Resources'
        description: The resources for which the principal is being authorized to perform the specified action.
    description: A collection of authorization information.
  AuthInfos:
    type: array
    items:
      $ref: '#/definitions/AuthInfo'
    minItems: 1
    maxItems: 10
  Denied:
    type: object
    properties:
      implicitDeny:
        $ref: '#/definitions/ImplicitDeny'
        description: Information that implicitly denies the authorization. When a policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
      explicitDeny:
        $ref: '#/definitions/ExplicitDeny'
        description: 'Information that explicitly denies the authorization. '
    description: Contains information that denied the authorization.
  MissingContextValues:
    type: array
    items:
      $ref: '#/definitions/MissingContextValue'
  AuthResult:
    type: object
    properties:
      authInfo:
        $ref: '#/definitions/AuthInfo'
        description: Authorization information.
      allowed:
        $ref: '#/definitions/Allowed'
        description: The policies and statements that allowed the specified action.
      denied:
        $ref: '#/definitions/Denied'
        description: The policies and statements that denied the specified action.
      authDecision:
        $ref: '#/definitions/AuthDecision'
        description: The final authorization decision of this scenario. Multiple statements are taken into account when determining the authorization decision. An explicit deny statement can override multiple allow statements.
      missingContextValues:
        $ref: '#/definitions/MissingContextValues'
        description: Contains any missing context values found while evaluating policy.
    description: The authorizer result.
  AuthResults:
    type: array
    items:
      $ref: '#/definitions/AuthResult'
  AuthorizerArn:
    type: string
  AuthorizerName:
    type: string
    pattern: '[\w=,@-]+'
    minLength: 1
    maxLength: 128
  AuthorizerFunctionArn:
    type: string
  TokenKeyName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  PublicKeyMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/KeyName'
        value:
          $ref: '#/definitions/KeyValue'
  AuthorizerStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  DateType:
    type: string
    format: date-time
  AuthorizerDescription:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The authorizer's Lambda function ARN.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: The key used to extract the token from the HTTP headers.
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to validate the token signature returned by your custom authentication service.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the authorizer.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the authorizer was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the authorizer was last updated.
    description: The authorizer description.
  AuthorizerSummary:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
    description: The authorizer summary.
  Authorizers:
    type: array
    items:
      $ref: '#/definitions/AuthorizerSummary'
  AutoRegistrationStatus:
    type: string
    enum:
      - ENABLE
      - DISABLE
  AwsAccountId:
    type: string
    pattern: '[0-9]+'
    minLength: 12
    maxLength: 12
  AwsArn:
    type: string
  AwsIotJobArn:
    type: string
  AwsIotJobId:
    type: string
  AwsIotSqlVersion:
    type: string
  MaximumPerMinute:
    type: integer
    minimum: 1
    maximum: 1000
  AwsJobExecutionsRolloutConfig:
    type: object
    properties:
      maximumPerMinute:
        $ref: '#/definitions/MaximumPerMinute'
        description: The maximum number of OTA update job executions started per minute.
    description: Configuration for the rollout of OTA updates.
  BehaviorName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  BehaviorMetric:
    type: string
  BehaviorCriteria:
    type: object
    properties:
      comparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: The operator that relates the thing measured (<code>metric</code>) to the criteria (<code>value</code>).
      value:
        $ref: '#/definitions/MetricValue'
        description: The value to be compared with the <code>metric</code>.
      durationSeconds:
        $ref: '#/definitions/DurationSeconds'
        description: 'Use this to specify the period of time over which the behavior is evaluated, for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>).'
    description: The criteria by which the behavior is determined to be normal.
  ComparisonOperator:
    type: string
    enum:
      - less-than
      - less-than-equals
      - greater-than
      - greater-than-equals
      - in-cidr-set
      - not-in-cidr-set
      - in-port-set
      - not-in-port-set
  DurationSeconds:
    type: integer
  Behaviors:
    type: array
    items:
      $ref: '#/definitions/Behavior'
    maxItems: 100
  Boolean:
    type: boolean
  BucketName:
    type: string
  CertificateArn:
    type: string
  CACertificateStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  CACertificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the CA certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the CA certificate.
      status:
        $ref: '#/definitions/CACertificateStatus'
        description: <p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was created.
    description: A CA certificate.
  CertificatePem:
    type: string
    description: The PEM of a certificate.
    minLength: 1
    maxLength: 65536
  CustomerVersion:
    type: integer
    minimum: 1
  GenerationId:
    type: string
  CertificateValidity:
    type: object
    properties:
      notBefore:
        $ref: '#/definitions/DateType'
        description: The certificate is not valid before this date.
      notAfter:
        $ref: '#/definitions/DateType'
        description: The certificate is not valid after this date.
    description: When the certificate is valid.
  CACertificateDescription:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The CA certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The CA certificate ID.
      status:
        $ref: '#/definitions/CACertificateStatus'
        description: The status of a CA certificate.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The CA certificate data, in PEM format.'
      ownedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The owner of the CA certificate.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was created.
      autoRegistrationStatus:
        $ref: '#/definitions/AutoRegistrationStatus'
        description: Whether the CA certificate configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE"
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was last modified.
      customerVersion:
        $ref: '#/definitions/CustomerVersion'
        description: The customer version of the CA certificate.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the CA certificate.
      validity:
        $ref: '#/definitions/CertificateValidity'
        description: When the CA certificate is valid.
    description: Describes a CA certificate.
  CACertificates:
    type: array
    items:
      $ref: '#/definitions/CACertificate'
  ForceFlag:
    type: boolean
  ExpectedVersion:
    type: integer
  DetailsMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/DetailsKey'
        value:
          $ref: '#/definitions/DetailsValue'
  CanceledChecksCount:
    type: integer
  CanceledThings:
    type: integer
  CannedAccessControlList:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - aws-exec-read
      - authenticated-read
      - bucket-owner-read
      - bucket-owner-full-control
      - log-delivery-write
  CertificateStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
      - REVOKED
      - PENDING_TRANSFER
      - REGISTER_INACTIVE
      - PENDING_ACTIVATION
  Certificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
      status:
        $ref: '#/definitions/CertificateStatus'
        description: <p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was created.
    description: Information about a certificate.
  TransferData:
    type: object
    properties:
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
      rejectReason:
        $ref: '#/definitions/Message'
        description: The reason why the transfer was rejected.
      transferDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer took place.
      acceptDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was accepted.
      rejectDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was rejected.
    description: Data used to transfer a certificate to an AWS account.
  CertificateDescription:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate.
      caCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate ID of the CA certificate used to sign this certificate.
      status:
        $ref: '#/definitions/CertificateStatus'
        description: The status of the certificate.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      ownedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The ID of the AWS account that owns the certificate.
      previousOwnedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The ID of the AWS account of the previous owner of the certificate.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was last modified.
      customerVersion:
        $ref: '#/definitions/CustomerVersion'
        description: The customer version of the certificate.
      transferData:
        $ref: '#/definitions/TransferData'
        description: The transfer data.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the certificate.
      validity:
        $ref: '#/definitions/CertificateValidity'
        description: When the certificate is valid.
    description: Describes a certificate.
  CertificateName:
    type: string
  CertificatePathOnDevice:
    type: string
  CertificateSigningRequest:
    type: string
    minLength: 1
  Certificates:
    type: array
    items:
      $ref: '#/definitions/Certificate'
  ChannelName:
    type: string
  Cidr:
    type: string
    pattern: '[a-fA-F0-9:\.\/]+'
    minLength: 2
    maxLength: 43
  Cidrs:
    type: array
    items:
      $ref: '#/definitions/Cidr'
  ClientId:
    type: string
  StateReason:
    type: string
  StateValue:
    type: string
  String:
    type: string
  Code:
    type: string
  SigningJobId:
    type: string
  StartSigningJobParameter:
    type: object
    properties:
      signingProfileParameter:
        $ref: '#/definitions/SigningProfileParameter'
        description: Describes the code-signing profile.
      signingProfileName:
        $ref: '#/definitions/SigningProfileName'
        description: The code-signing profile name.
      destination:
        $ref: '#/definitions/Destination'
        description: The location to write the code-signed file.
    description: Information required to start a signing job.
  CustomCodeSigning:
    type: object
    properties:
      signature:
        $ref: '#/definitions/CodeSigningSignature'
        description: The signature for the file.
      certificateChain:
        $ref: '#/definitions/CodeSigningCertificateChain'
        description: The certificate chain.
      hashAlgorithm:
        $ref: '#/definitions/HashAlgorithm'
        description: The hash algorithm used to code sign the file.
      signatureAlgorithm:
        $ref: '#/definitions/SignatureAlgorithm'
        description: The signature algorithm used to code sign the file.
    description: Describes a custom method used to code sign a file.
  CodeSigning:
    type: object
    properties:
      awsSignerJobId:
        $ref: '#/definitions/SigningJobId'
        description: The ID of the AWSSignerJob which was created to sign the file.
      startSigningJobParameter:
        $ref: '#/definitions/StartSigningJobParameter'
        description: Describes the code-signing job.
      customCodeSigning:
        $ref: '#/definitions/CustomCodeSigning'
        description: A custom method for code signing a file.
    description: Describes the method to use when code signing a file.
  InlineDocument:
    type: string
  CodeSigningCertificateChain:
    type: object
    properties:
      certificateName:
        $ref: '#/definitions/CertificateName'
        description: The name of the certificate.
      inlineDocument:
        $ref: '#/definitions/InlineDocument'
        description: A base64 encoded binary representation of the code signing certificate chain.
    description: Describes the certificate chain being used when code signing a file.
  Signature:
    type: string
  CodeSigningSignature:
    type: object
    properties:
      inlineDocument:
        $ref: '#/definitions/Signature'
        description: A base64 encoded binary representation of the code signing signature.
    description: Describes the signature for a file.
  CognitoIdentityPoolId:
    type: string
  CompliantChecksCount:
    type: integer
  Configuration:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/Enabled'
        description: True to enable the configuration.
    description: Configuration.
  Count:
    type: integer
  JobDocumentSource:
    type: string
    minLength: 1
    maxLength: 1350
  JobDocument:
    type: string
    maxLength: 32768
  PresignedUrlConfig:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
      expiresInSec:
        $ref: '#/definitions/ExpiresInSec'
        description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
    description: Configuration for pre-signed S3 URLs.
  TargetSelection:
    type: string
    enum:
      - CONTINUOUS
      - SNAPSHOT
  JobExecutionsRolloutConfig:
    type: object
    properties:
      maximumPerMinute:
        $ref: '#/definitions/MaxJobExecutionsPerMin'
        description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
    description: Allows you to create a staged rollout of a job.
  KeyPair:
    type: object
    properties:
      PublicKey:
        $ref: '#/definitions/PublicKey'
        description: The public key.
      PrivateKey:
        $ref: '#/definitions/PrivateKey'
        description: The private key.
    description: Describes a key pair.
  OTAUpdateId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  OTAUpdateDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  Targets:
    type: array
    items:
      $ref: '#/definitions/Target'
    minItems: 1
  OTAUpdateFiles:
    type: array
    items:
      $ref: '#/definitions/OTAUpdateFile'
    minItems: 1
    maxItems: 50
  OTAUpdateArn:
    type: string
  OTAUpdateStatus:
    type: string
    enum:
      - CREATE_PENDING
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
  PolicyDocument:
    type: string
  PolicyArn:
    type: string
  PolicyVersionId:
    type: string
    pattern: '[0-9]+'
  SetAsDefault:
    type: boolean
  IsDefaultVersion:
    type: boolean
  RoleAlias:
    type: string
    pattern: '[\w=,@-]+'
    minLength: 1
    maxLength: 128
  CredentialDurationSeconds:
    type: integer
    minimum: 900
    maximum: 3600
  RoleAliasArn:
    type: string
  DayOfMonth:
    type: string
    pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
  DayOfWeek:
    type: string
    enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
  TargetAuditCheckNames:
    type: array
    items:
      $ref: '#/definitions/AuditCheckName'
  ScheduledAuditName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  ScheduledAuditArn:
    type: string
  SecurityProfileDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 1000
  SecurityProfileArn:
    type: string
  StreamId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  StreamDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  StreamFiles:
    type: array
    items:
      $ref: '#/definitions/StreamFile'
    minItems: 1
    maxItems: 50
  StreamArn:
    type: string
  StreamVersion:
    type: integer
    minimum: 0
    maximum: 65535
  ThingGroupProperties:
    type: object
    properties:
      thingGroupDescription:
        $ref: '#/definitions/ThingGroupDescription'
        description: The thing group description.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: The thing group attributes in JSON format.
    description: Thing group properties.
  ThingGroupId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 128
  ThingTypeName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  ThingId:
    type: string
  ThingTypeProperties:
    type: object
    properties:
      thingTypeDescription:
        $ref: '#/definitions/ThingTypeDescription'
        description: The description of the thing type.
      searchableAttributes:
        $ref: '#/definitions/SearchableAttributes'
        description: A list of searchable thing attribute names.
    description: 'The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.'
  ThingTypeArn:
    type: string
  ThingTypeId:
    type: string
  RuleName:
    type: string
    pattern: '^[a-zA-Z0-9_]+$'
    minLength: 1
    maxLength: 128
  TopicRulePayload:
    type: object
    required:
      - sql
      - actions
    properties:
      sql:
        $ref: '#/definitions/SQL'
        description: 'The SQL statement used to query the topic. For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
      description:
        $ref: '#/definitions/Description'
        description: The description of the rule.
      actions:
        $ref: '#/definitions/ActionList'
        description: The actions associated with the rule.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
      awsIotSqlVersion:
        $ref: '#/definitions/AwsIotSqlVersion'
        description: The version of the SQL rules engine to use when evaluating the rule.
      errorAction:
        $ref: '#/definitions/Action'
        description: The action to take when an error occurs.
    description: Describes a rule.
  CreatedAtDate:
    type: string
    format: date-time
  CreationDate:
    type: string
    format: date-time
  HashAlgorithm:
    type: string
  SignatureAlgorithm:
    type: string
  DeleteScheduledAudits:
    type: boolean
  ForceDelete:
    type: boolean
  ExecutionNumber:
    type: integer
  DeleteStream:
    type: boolean
  ForceDeleteAWSJob:
    type: boolean
  OptionalVersion:
    type: integer
  LogTargetType:
    type: string
    enum:
      - DEFAULT
      - THING_GROUP
  LogTargetName:
    type: string
  DeliveryStreamName:
    type: string
  ImplicitDeny:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: 'Policies that don''t contain a matching allow or deny statement for the specified action on the specified resource. '
    description: Information that implicitly denies authorization. When policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
  ExplicitDeny:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies that denied the authorization.
    description: Information that explicitly denies authorization.
  UndoDeprecate:
    type: boolean
  DeprecationDate:
    type: string
    format: date-time
  TaskStatistics:
    type: object
    properties:
      totalChecks:
        $ref: '#/definitions/TotalChecksCount'
        description: The number of checks in this audit.
      inProgressChecks:
        $ref: '#/definitions/InProgressChecksCount'
        description: The number of checks in progress.
      waitingForDataCollectionChecks:
        $ref: '#/definitions/WaitingForDataCollectionChecksCount'
        description: The number of checks waiting for data collection.
      compliantChecks:
        $ref: '#/definitions/CompliantChecksCount'
        description: The number of checks that found compliant resources.
      nonCompliantChecks:
        $ref: '#/definitions/NonCompliantChecksCount'
        description: The number of checks that found non-compliant resources.
      failedChecks:
        $ref: '#/definitions/FailedChecksCount'
        description: 'The number of checks '
      canceledChecks:
        $ref: '#/definitions/CanceledChecksCount'
        description: The number of checks that did not run because the audit was canceled.
    description: Statistics for the checks performed during the audit.
  RegistrationConfig:
    type: object
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The template body.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role.
    description: The registration configuration.
  EndpointType:
    type: string
  EndpointAddress:
    type: string
  EventConfigurations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/EventType'
        value:
          $ref: '#/definitions/Configuration'
  LastModifiedDate:
    type: string
    format: date-time
  IndexName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  IndexStatus:
    type: string
    enum:
      - ACTIVE
      - BUILDING
      - REBUILDING
  IndexSchema:
    type: string
  JobExecution:
    type: object
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to the job when it was created.
      status:
        $ref: '#/definitions/JobExecutionStatus'
        description: 'The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCESS, CANCELED, or REJECTED).'
      forceCanceled:
        $ref: '#/definitions/Forced'
        description: Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> parameter set to <code>true</code>.
      statusDetails:
        $ref: '#/definitions/JobExecutionStatusDetails'
        description: A collection of name/value pairs that describe the status of the job execution.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing on which the job execution is running.
      queuedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution was queued.'
      startedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution started.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution was last updated.'
      executionNumber:
        $ref: '#/definitions/ExecutionNumber'
        description: 'A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information. '
      versionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.
    description: The job execution object represents the execution of a job on a particular device.
  Job:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: 'An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".'
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. '
      status:
        $ref: '#/definitions/JobStatus'
        description: 'The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, or <code>COMPLETED</code>. '
      forceCanceled:
        $ref: '#/definitions/Forced'
        description: Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to <code>true</code>.
      comment:
        $ref: '#/definitions/Comment'
        description: 'If the job was updated, describes the reason for the update.'
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of IoT things and thing groups to which the job should be sent.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
      presignedUrlConfig:
        $ref: '#/definitions/PresignedUrlConfig'
        description: Configuration for pre-signed S3 URLs.
      jobExecutionsRolloutConfig:
        $ref: '#/definitions/JobExecutionsRolloutConfig'
        description: Allows you to create a staged rollout of a job.
      createdAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job was created.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job was last updated.'
      completedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job was completed.'
      jobProcessDetails:
        $ref: '#/definitions/JobProcessDetails'
        description: Details about the job process.
    description: The <code>Job</code> object contains details about a job.
  RoleAliasDescription:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The ARN of the role alias.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      owner:
        $ref: '#/definitions/AwsAccountId'
        description: The role alias owner.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: The number of seconds for which the credential is valid.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the role alias was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the role alias was last modified.
    description: Role alias description.
  Version:
    type: integer
  StreamInfo:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
      description:
        $ref: '#/definitions/StreamDescription'
        description: The description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files to stream.
      createdAt:
        $ref: '#/definitions/DateType'
        description: The date when the stream was created.
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: The date when the stream was last updated.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role AWS IoT assumes to access your S3 files.
    description: Information about a stream.
  ThingGroupMetadata:
    type: object
    properties:
      parentGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The parent thing group name.
      rootToParentThingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The root parent thing group.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The UNIX timestamp of when the thing group was created.
    description: Thing group metadata.
  TaskId:
    type: string
    maxLength: 40
  TemplateBody:
    type: string
  RegistryS3BucketName:
    type: string
    pattern: '[a-zA-Z0-9._-]+'
    minLength: 3
    maxLength: 256
  RegistryS3KeyName:
    type: string
    pattern: '[a-zA-Z0-9!_.*''()-\/]+'
    minLength: 1
    maxLength: 1024
  Status:
    type: string
    enum:
      - InProgress
      - Completed
      - Failed
      - Cancelled
      - Cancelling
  Percentage:
    type: integer
    minimum: 0
    maximum: 100
  ThingTypeMetadata:
    type: object
    properties:
      deprecationDate:
        $ref: '#/definitions/DeprecationDate'
        description: The date and time when the thing type was deprecated.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The date and time when the thing type was created.
    description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.'
  Description:
    type: string
  S3Destination:
    type: object
    properties:
      bucket:
        $ref: '#/definitions/S3Bucket'
        description: The S3 bucket that contains the updated firmware.
      prefix:
        $ref: '#/definitions/Prefix'
        description: The S3 prefix.
    description: Describes the location of updated firmware in S3.
  Destination:
    type: object
    properties:
      s3Destination:
        $ref: '#/definitions/S3Destination'
        description: Describes the location in S3 of the updated firmware.
    description: Describes the location of the updated firmware.
  DetailsKey:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  DetailsValue:
    type: string
    pattern: '[^\p\{C\}]*\+'
    minLength: 1
    maxLength: 1024
  DisableAllLogs:
    type: boolean
  TableName:
    type: string
  DynamoOperation:
    type: string
  HashKeyField:
    type: string
  HashKeyValue:
    type: string
  DynamoKeyType:
    type: string
    enum:
      - STRING
      - NUMBER
  RangeKeyField:
    type: string
  RangeKeyValue:
    type: string
  PayloadField:
    type: string
  PutItemInput:
    type: object
    required:
      - tableName
    properties:
      tableName:
        $ref: '#/definitions/TableName'
        description: The table where the message data will be written
    description: The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.
  EffectivePolicy:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The IAM policy document.
    description: The policy that has the effect on the authorization results.
  EffectivePolicies:
    type: array
    items:
      $ref: '#/definitions/EffectivePolicy'
  ElasticsearchEndpoint:
    type: string
    pattern: 'https?://.*'
  ElasticsearchIndex:
    type: string
  ElasticsearchType:
    type: string
  ElasticsearchId:
    type: string
  OTAUpdateErrorMessage:
    type: string
  ErrorInfo:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
        description: The error code.
      message:
        $ref: '#/definitions/OTAUpdateErrorMessage'
        description: The error message.
    description: Error information.
  EventType:
    type: string
    enum:
      - THING
      - THING_GROUP
      - THING_TYPE
      - THING_GROUP_MEMBERSHIP
      - THING_GROUP_HIERARCHY
      - THING_TYPE_ASSOCIATION
      - JOB
      - JOB_EXECUTION
      - POLICY
      - CERTIFICATE
      - CA_CERTIFICATE
  ExecutionNamePrefix:
    type: string
  ExpiresInSec:
    type: integer
    minimum: 60
    maximum: 3600
  FailedChecksCount:
    type: integer
  FailedThings:
    type: integer
  FileId:
    type: integer
    minimum: 0
    maximum: 255
  Stream:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      fileId:
        $ref: '#/definitions/FileId'
        description: The ID of a file associated with a stream.
    description: Describes a group of files that can be streamed.
  S3Location:
    type: object
    properties:
      bucket:
        $ref: '#/definitions/S3Bucket'
        description: The S3 bucket.
      key:
        $ref: '#/definitions/S3Key'
        description: The S3 key.
      version:
        $ref: '#/definitions/S3Version'
        description: The S3 bucket version.
    description: The S3 location.
  FileLocation:
    type: object
    properties:
      stream:
        $ref: '#/definitions/Stream'
        description: The stream that contains the OTA update.
      s3Location:
        $ref: '#/definitions/S3Location'
        description: The location of the updated firmware in S3.
    description: The location of the OTA update.
  FileName:
    type: string
  FirehoseSeparator:
    type: string
    pattern: '([\n\t])|(\r\n)|(,)'
  Forced:
    type: boolean
  FunctionArn:
    type: string
  GEMaxResults:
    type: integer
    minimum: 1
    maximum: 10000
  ThingIndexingConfiguration:
    type: object
    required:
      - thingIndexingMode
    properties:
      thingIndexingMode:
        $ref: '#/definitions/ThingIndexingMode'
        description: '<p>Thing indexing mode. Valid values are: </p> <ul> <li> <p>REGISTRY – Your thing index will contain only registry data.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index will contain registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>'
    description: Thing indexing configuration.
  ThingGroupIndexingConfiguration:
    type: object
    required:
      - thingGroupIndexingMode
    properties:
      thingGroupIndexingMode:
        $ref: '#/definitions/ThingGroupIndexingMode'
        description: Thing group indexing mode.
    description: Thing group indexing configuration.
  LogLevel:
    type: string
    enum:
      - DEBUG
      - INFO
      - ERROR
      - WARN
      - DISABLED
  OTAUpdateInfo:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was last updated.
      description:
        $ref: '#/definitions/OTAUpdateDescription'
        description: A description of the OTA update.
      targets:
        $ref: '#/definitions/Targets'
        description: The targets of the OTA update.
      awsJobExecutionsRolloutConfig:
        $ref: '#/definitions/AwsJobExecutionsRolloutConfig'
        description: Configuration for the rollout of OTA updates.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when the thing is added to a target group, even after the OTA update was completed by all things originally in the group. '
      otaUpdateFiles:
        $ref: '#/definitions/OTAUpdateFiles'
        description: A list of files associated with the OTA update.
      otaUpdateStatus:
        $ref: '#/definitions/OTAUpdateStatus'
        description: The status of the OTA update.
      awsIotJobId:
        $ref: '#/definitions/AwsIotJobId'
        description: The AWS IoT job ID associated with the OTA update.
      awsIotJobArn:
        $ref: '#/definitions/AwsIotJobArn'
        description: The AWS IoT job ARN associated with the OTA update.
      errorInfo:
        $ref: '#/definitions/ErrorInfo'
        description: Error information associated with the OTA update.
      additionalParameters:
        $ref: '#/definitions/AdditionalParameterMap'
        description: A collection of name/value pairs
    description: Information about an OTA update.
  RegistrationCode:
    type: string
    pattern: '(0x)?[a-fA-F0-9]+'
    minLength: 64
    maxLength: 64
  RuleArn:
    type: string
  TopicRule:
    type: object
    properties:
      ruleName:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      sql:
        $ref: '#/definitions/SQL'
        description: 'The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.'
      description:
        $ref: '#/definitions/Description'
        description: The description of the rule.
      createdAt:
        $ref: '#/definitions/CreatedAtDate'
        description: The date and time the rule was created.
      actions:
        $ref: '#/definitions/ActionList'
        description: The actions associated with the rule.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
      awsIotSqlVersion:
        $ref: '#/definitions/AwsIotSqlVersion'
        description: The version of the SQL rules engine to use when evaluating the rule.
      errorAction:
        $ref: '#/definitions/Action'
        description: The action to perform when an error occurs.
    description: Describes a rule.
  GroupNameAndArn:
    type: object
    properties:
      groupName:
        $ref: '#/definitions/ThingGroupName'
        description: The group name.
      groupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The group ARN.
    description: The name and ARN of a group.
  InProgressChecksCount:
    type: integer
  InProgressThings:
    type: integer
  IndexNamesList:
    type: array
    items:
      $ref: '#/definitions/IndexName'
  IsAuthenticated:
    type: boolean
  IsDisabled:
    type: boolean
  JobStatus:
    type: string
    enum:
      - IN_PROGRESS
      - CANCELED
      - COMPLETED
      - DELETION_IN_PROGRESS
  JobProcessDetails:
    type: object
    properties:
      processingTargets:
        $ref: '#/definitions/ProcessingTargetNameList'
        description: The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.
      numberOfCanceledThings:
        $ref: '#/definitions/CanceledThings'
        description: The number of things that cancelled the job.
      numberOfSucceededThings:
        $ref: '#/definitions/SucceededThings'
        description: The number of things which successfully completed the job.
      numberOfFailedThings:
        $ref: '#/definitions/FailedThings'
        description: The number of things that failed executing the job.
      numberOfRejectedThings:
        $ref: '#/definitions/RejectedThings'
        description: The number of things that rejected the job.
      numberOfQueuedThings:
        $ref: '#/definitions/QueuedThings'
        description: The number of things that are awaiting execution of the job.
      numberOfInProgressThings:
        $ref: '#/definitions/InProgressThings'
        description: The number of things currently executing the job.
      numberOfRemovedThings:
        $ref: '#/definitions/RemovedThings'
        description: The number of things that are no longer scheduled to execute the job because they have been deleted or have been removed from the group that was a target of the job.
    description: The job process details.
  JobExecutionStatus:
    type: string
    enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - REJECTED
      - REMOVED
      - CANCELED
  JobExecutionStatusDetails:
    type: object
    properties:
      detailsMap:
        $ref: '#/definitions/DetailsMap'
        description: The job execution status.
    description: Details of the job execution status.
  VersionNumber:
    type: integer
  JobExecutionSummary:
    type: object
    properties:
      status:
        $ref: '#/definitions/JobExecutionStatus'
        description: The status of the job execution.
      queuedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution was queued.'
      startedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution started.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job execution was last updated.'
      executionNumber:
        $ref: '#/definitions/ExecutionNumber'
        description: A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.
    description: The job execution summary.
  JobExecutionSummaryForJob:
    type: object
    properties:
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing on which the job execution is running.
      jobExecutionSummary:
        $ref: '#/definitions/JobExecutionSummary'
        description: Contains a subset of information about a job execution.
    description: Contains a summary of information about job executions for a specific job.
  JobExecutionSummaryForJobList:
    type: array
    items:
      $ref: '#/definitions/JobExecutionSummaryForJob'
  JobExecutionSummaryForThing:
    type: object
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      jobExecutionSummary:
        $ref: '#/definitions/JobExecutionSummary'
        description: Contains a subset of information about a job execution.
    description: The job execution summary for a thing.
  JobExecutionSummaryForThingList:
    type: array
    items:
      $ref: '#/definitions/JobExecutionSummaryForThing'
  MaxJobExecutionsPerMin:
    type: integer
    minimum: 1
    maximum: 1000
  ProcessingTargetNameList:
    type: array
    items:
      $ref: '#/definitions/ProcessingTargetName'
  SucceededThings:
    type: integer
  RejectedThings:
    type: integer
  QueuedThings:
    type: integer
  RemovedThings:
    type: integer
  JobSummary:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The ID of the thing group.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
      status:
        $ref: '#/definitions/JobStatus'
        description: The job summary status.
      createdAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job was created.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job was last updated.'
      completedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in milliseconds since the epoch, when the job completed.'
    description: The job summary.
  JobSummaryList:
    type: array
    items:
      $ref: '#/definitions/JobSummary'
  JsonDocument:
    type: string
  Key:
    type: string
  KeyName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  PublicKey:
    type: string
    minLength: 1
  PrivateKey:
    type: string
    minLength: 1
    format: password
  KeyValue:
    type: string
    maxLength: 5120
  StreamName:
    type: string
  PartitionKey:
    type: string
  LaserMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  NextToken:
    type: string
  MaxResults:
    type: integer
    minimum: 1
    maximum: 250
  Recursive:
    type: boolean
  Marker:
    type: string
    pattern: '[A-Za-z0-9+/]+={0,2}'
  PageSize:
    type: integer
    minimum: 1
    maximum: 250
  ResourceIdentifier:
    type: object
    properties:
      deviceCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate attached to the resource.
      caCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the CA certificate used to authorize the certificate.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The ID of the Cognito Identity Pool.
      clientId:
        $ref: '#/definitions/ClientId'
        description: The client ID.
      policyVersionIdentifier:
        $ref: '#/definitions/PolicyVersionIdentifier'
        description: The version of the policy associated with the resource.
      account:
        $ref: '#/definitions/AwsAccountId'
        description: The account with which the resource is associated.
    description: Information identifying the non-compliant resource.
  QueryMaxResults:
    type: integer
    minimum: 1
    maximum: 500
  OTAUpdatesSummary:
    type: array
    items:
      $ref: '#/definitions/OTAUpdateSummary'
  OutgoingCertificates:
    type: array
    items:
      $ref: '#/definitions/OutgoingCertificate'
  Principals:
    type: array
    items:
      $ref: '#/definitions/PrincipalArn'
  PolicyVersions:
    type: array
    items:
      $ref: '#/definitions/PolicyVersion'
  RegistryMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  ThingNameList:
    type: array
    items:
      $ref: '#/definitions/ThingName'
  RoleAliases:
    type: array
    items:
      $ref: '#/definitions/RoleAlias'
  ScheduledAuditMetadataList:
    type: array
    items:
      $ref: '#/definitions/ScheduledAuditMetadata'
  SecurityProfileTargetMappings:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileTargetMapping'
  SecurityProfileIdentifiers:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileIdentifier'
  StreamsSummary:
    type: array
    items:
      $ref: '#/definitions/StreamSummary'
  PolicyTargets:
    type: array
    items:
      $ref: '#/definitions/PolicyTarget'
  SecurityProfileTargets:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileTarget'
  ThingGroupNameAndArnList:
    type: array
    items:
      $ref: '#/definitions/GroupNameAndArn'
  RecursiveWithoutDefault:
    type: boolean
  ReportType:
    type: string
    enum:
      - ERRORS
      - RESULTS
  S3FileUrlList:
    type: array
    items:
      $ref: '#/definitions/S3FileUrl'
  TaskIdList:
    type: array
    items:
      $ref: '#/definitions/TaskId'
  ThingTypeList:
    type: array
    items:
      $ref: '#/definitions/ThingTypeDefinition'
  ThingAttributeList:
    type: array
    items:
      $ref: '#/definitions/ThingAttribute'
  Topic:
    type: string
  TopicRuleList:
    type: array
    items:
      $ref: '#/definitions/TopicRuleListItem'
  SkyfallMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  LogTargetConfigurations:
    type: array
    items:
      $ref: '#/definitions/LogTargetConfiguration'
  ViolationEvents:
    type: array
    items:
      $ref: '#/definitions/ViolationEvent'
  LogTarget:
    type: object
    required:
      - targetType
    properties:
      targetType:
        $ref: '#/definitions/LogTargetType'
        description: The target type.
      targetName:
        $ref: '#/definitions/LogTargetName'
        description: The target name.
    description: A log target.
  LogTargetConfiguration:
    type: object
    properties:
      logTarget:
        $ref: '#/definitions/LogTarget'
        description: A log target
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The logging level.
    description: The target configuration.
  LoggingOptionsPayload:
    type: object
    required:
      - roleArn
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The log level.
    description: Describes the logging options payload.
  Message:
    type: string
    maxLength: 128
  MessageFormat:
    type: string
    enum:
      - RAW
      - JSON
  UnsignedLong:
    type: integer
    minimum: 0
  Ports:
    type: array
    items:
      $ref: '#/definitions/Port'
  MissingContextValue:
    type: string
  NonCompliantChecksCount:
    type: integer
  ResourceType:
    type: string
    enum:
      - DEVICE_CERTIFICATE
      - CA_CERTIFICATE
      - IOT_POLICY
      - COGNITO_IDENTITY_POOL
      - CLIENT_ID
      - ACCOUNT_SETTINGS
  StringMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  OTAUpdateFileVersion:
    type: string
  OTAUpdateFile:
    type: object
    properties:
      fileName:
        $ref: '#/definitions/FileName'
        description: The name of the file.
      fileVersion:
        $ref: '#/definitions/OTAUpdateFileVersion'
        description: The file version.
      fileLocation:
        $ref: '#/definitions/FileLocation'
        description: The location of the updated firmware.
      codeSigning:
        $ref: '#/definitions/CodeSigning'
        description: The code signing method of the file.
      attributes:
        $ref: '#/definitions/AttributesMap'
        description: A list of name/attribute pairs.
    description: Describes a file to be associated with an OTA update.
  OTAUpdateSummary:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was created.
    description: An OTA update summary.
  OutgoingCertificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate ID.
      transferredTo:
        $ref: '#/definitions/AwsAccountId'
        description: The AWS account to which the transfer was made.
      transferDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was initiated.
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The certificate creation date.
    description: A certificate that has been transferred but not yet accepted.
  Parameter:
    type: string
  Parameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/Parameter'
        value:
          $ref: '#/definitions/Value'
  Platform:
    type: string
  Policy:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
    description: Describes an AWS IoT policy.
  PolicyDocuments:
    type: array
    items:
      $ref: '#/definitions/PolicyDocument'
  PolicyNames:
    type: array
    items:
      $ref: '#/definitions/PolicyName'
  PolicyVersion:
    type: object
    properties:
      versionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
      createDate:
        $ref: '#/definitions/DateType'
        description: The date and time the policy was created.
    description: Describes a policy version.
  PolicyVersionIdentifier:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The ID of the version of the policy associated with the resource.
    description: Information about the version of the policy associated with the resource.
  Port:
    type: integer
    minimum: 0
    maximum: 65535
  Prefix:
    type: string
  PrincipalArn:
    type: string
  PrincipalId:
    type: string
    pattern: '[a-zA-Z0-9]+'
    minLength: 1
    maxLength: 128
  ProcessingTargetName:
    type: string
  QueryString:
    type: string
    minLength: 1
  QueryVersion:
    type: string
  QueueUrl:
    type: string
  SetAsActiveFlag:
    type: boolean
  ResourceArns:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ResourceLogicalId'
        value:
          $ref: '#/definitions/ResourceArn'
  RelatedResource:
    type: object
    properties:
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of resource.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information identifying the resource.
      additionalInfo:
        $ref: '#/definitions/StringMap'
        description: Additional information about the resource.
    description: Information about a related resource.
  RemoveAutoRegistration:
    type: boolean
  RemoveThingType:
    type: boolean
  TopicPattern:
    type: string
  Resource:
    type: string
  ResourceArn:
    type: string
  ResourceLogicalId:
    type: string
  S3Bucket:
    type: string
    minLength: 1
  S3FileUrl:
    type: string
    maxLength: 65535
  S3Key:
    type: string
    minLength: 1
  S3Version:
    type: string
  SQL:
    type: string
  SalesforceToken:
    type: string
    minLength: 40
  SalesforceEndpoint:
    type: string
    pattern: 'https://ingestion-[a-zA-Z0-9]{1,12}\.[a-zA-Z0-9]+\.((sfdc-matrix\.net)|(sfdcnow\.com))/streams/\w{1,20}/\w{1,20}/event'
    maxLength: 2000
  ScheduledAuditMetadata:
    type: object
    properties:
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit.
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: How often the scheduled audit takes place.
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit is run (if the <code>frequency</code> is "MONTHLY"). If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: The day of the week on which the scheduled audit is run (if the <code>frequency</code> is "WEEKLY" or "BIWEEKLY").
    description: Information about the scheduled audit.
  ThingDocumentList:
    type: array
    items:
      $ref: '#/definitions/ThingDocument'
  ThingGroupDocumentList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupDocument'
  SearchableAttributes:
    type: array
    items:
      $ref: '#/definitions/AttributeName'
  Seconds:
    type: integer
  SecurityProfileIdentifier:
    type: object
    required:
      - name
      - arn
    properties:
      name:
        $ref: '#/definitions/SecurityProfileName'
        description: The name you have given to the security profile.
      arn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
    description: Identifying information for a Device Defender security profile.
  SecurityProfileTarget:
    type: object
    required:
      - arn
    properties:
      arn:
        $ref: '#/definitions/SecurityProfileTargetArn'
        description: The ARN of the security profile.
    description: A target to which an alert is sent when a security profile behavior is violated.
  SecurityProfileTargetMapping:
    type: object
    properties:
      securityProfileIdentifier:
        $ref: '#/definitions/SecurityProfileIdentifier'
        description: Information that identifies the security profile.
      target:
        $ref: '#/definitions/SecurityProfileTarget'
        description: Information about the target (thing group) associated with the security profile.
    description: Information about a security profile and the target associated with it.
  SigningProfileName:
    type: string
  SigningProfileParameter:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: Certificate ARN.
      platform:
        $ref: '#/definitions/Platform'
        description: The hardware platform of your device.
      certificatePathOnDevice:
        $ref: '#/definitions/CertificatePathOnDevice'
        description: The location of the code-signing certificate on your device.
    description: Describes the code-signing profile.
  UseBase64:
    type: boolean
  StateMachineName:
    type: string
  StreamFile:
    type: object
    properties:
      fileId:
        $ref: '#/definitions/FileId'
        description: The file ID.
      s3Location:
        $ref: '#/definitions/S3Location'
        description: The location of the file in S3.
    description: Represents a file to stream.
  StreamSummary:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
    description: A summary of a stream.
  Target:
    type: string
  TotalChecksCount:
    type: integer
  WaitingForDataCollectionChecksCount:
    type: integer
  Token:
    type: string
    minLength: 1
    maxLength: 6144
  TokenSignature:
    type: string
    pattern: '[A-Za-z0-9+/]+={0,2}'
    minLength: 1
    maxLength: 2560
  ThingAttribute:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: 'The name of the thing type, if the thing has been associated with a type.'
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The thing ARN.
      attributes:
        $ref: '#/definitions/Attributes'
        description: A list of thing attributes which are name-value pairs.
      version:
        $ref: '#/definitions/Version'
        description: The version of the thing record in the registry.
    description: 'The properties of the thing, including thing name, thing type name, and a list of thing attributes.'
  ThingGroupNameList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupName'
  ThingDocument:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The thing name.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The thing ID.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The thing type name.
      thingGroupNames:
        $ref: '#/definitions/ThingGroupNameList'
        description: Thing group names.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The attributes.
      shadow:
        $ref: '#/definitions/JsonDocument'
        description: The shadow.
    description: The thing search index document.
  ThingGroupDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 2028
  ThingGroupDocument:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The thing group name.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
      thingGroupDescription:
        $ref: '#/definitions/ThingGroupDescription'
        description: The thing group description.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The thing group attributes.
      parentGroupNames:
        $ref: '#/definitions/ThingGroupNameList'
        description: Parent group names.
    description: The thing group search index document.
  ThingGroupIndexingMode:
    type: string
    enum:
      - 'OFF'
      - 'ON'
  ThingGroupList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupName'
  ThingIndexingMode:
    type: string
    enum:
      - 'OFF'
      - REGISTRY
      - REGISTRY_AND_SHADOW
  ThingTypeDefinition:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The thing type ARN.
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: The ThingTypeProperties for the thing type.
      thingTypeMetadata:
        $ref: '#/definitions/ThingTypeMetadata'
        description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
    description: 'The definition of the thing type, including thing type name and description.'
  ThingTypeDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 2028
  TopicRuleListItem:
    type: object
    properties:
      ruleArn:
        $ref: '#/definitions/RuleArn'
        description: The rule ARN.
      ruleName:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      topicPattern:
        $ref: '#/definitions/TopicPattern'
        description: The pattern for the topic names that apply.
      createdAt:
        $ref: '#/definitions/CreatedAtDate'
        description: The date and time the rule was created.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
    description: Describes a rule.
  Valid:
    type: boolean
  ValidationErrors:
    type: array
    items:
      $ref: '#/definitions/ValidationError'
  ValidationError:
    type: object
    properties:
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The description of an error found in the behaviors.
    description: Information about an error found in a behavior specification.
  ViolationEventType:
    type: string
    enum:
      - in-alarm
      - alarm-cleared
      - alarm-invalidated
  ViolationEvent:
    type: object
    properties:
      violationId:
        $ref: '#/definitions/ViolationId'
        description: The ID of the violation event.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing responsible for the violation event.
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile whose behavior was violated.
      behavior:
        $ref: '#/definitions/Behavior'
        description: The behavior which was violated.
      metricValue:
        $ref: '#/definitions/MetricValue'
        description: The value of the metric (the measurement).
      violationEventType:
        $ref: '#/definitions/ViolationEventType'
        description: The type of violation event.
      violationEventTime:
        $ref: '#/definitions/Timestamp'
        description: The time the violation event occurred.
    description: Information about a Device Defender security profile behavior violation.
