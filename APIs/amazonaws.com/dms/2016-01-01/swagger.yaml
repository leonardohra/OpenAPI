swagger: '2.0'
info:
  version: '2016-01-01'
  x-release: v4
  title: AWS Database Migration Service
  description: '<fullname>AWS Database Migration Service</fullname> <p>AWS Database Migration Service (AWS DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.</p> <p>For more information about AWS DMS, see the AWS DMS user guide at <a href="http://docs.aws.amazon.com/dms/latest/userguide/Welcome.html"> What Is AWS Database Migration Service? </a> </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dms
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dms-2016-01-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/dms/'
host: dms.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToResource
      description: 'Adds metadata tags to an AWS DMS resource, including replication instance, endpoint, security group, and migration task. These tags can also be used with cost allocation reporting to track cost associated with DMS resources, or used in a Condition statement in an IAM policy for DMS.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateEndpoint':
    post:
      operationId: CreateEndpoint
      description: Creates an endpoint using the provided settings.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEndpointResponse'
        '480':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
        '481':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '482':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '483':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '484':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '485':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEndpointMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateEventSubscription':
    post:
      operationId: CreateEventSubscription
      description: '<p> Creates an AWS DMS event notification subscription. </p> <p>You can specify the type of source (<code>SourceType</code>) you want to be notified of, provide a list of AWS DMS source IDs (<code>SourceIds</code>) that triggers the events, and provide a list of event categories (<code>EventCategories</code>) for events you want to be notified of. If you specify both the <code>SourceType</code> and <code>SourceIds</code>, such as <code>SourceType = replication-instance</code> and <code>SourceIdentifier = my-replinstance</code>, you will be notified of all the replication instance events for the specified source. If you specify a <code>SourceType</code> but don''t specify a <code>SourceIdentifier</code>, you receive notice of the events for that source type for all your AWS DMS sources. If you don''t specify either <code>SourceType</code> nor <code>SourceIdentifier</code>, you will be notified of events generated from all AWS DMS sources belonging to your customer account.</p> <p>For more information about AWS DMS events, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a> in the AWS Database MIgration Service User Guide.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResponse'
        '480':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '481':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateReplicationInstance':
    post:
      operationId: CreateReplicationInstance
      description: Creates the replication instance using the specified parameters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateReplicationInstanceResponse'
        '480':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
        '481':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '482':
          description: InsufficientResourceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientResourceCapacityFault'
        '483':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '484':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '485':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '486':
          description: ReplicationSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs'
        '487':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReplicationInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateReplicationSubnetGroup':
    post:
      operationId: CreateReplicationSubnetGroup
      description: Creates a replication subnet group given a list of the subnet IDs in a VPC.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateReplicationSubnetGroupResponse'
        '480':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
        '481':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '482':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '483':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '484':
          description: ReplicationSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs'
        '485':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReplicationSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateReplicationTask':
    post:
      operationId: CreateReplicationTask
      description: Creates a replication task using the specified parameters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateReplicationTaskResponse'
        '480':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '482':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '483':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '484':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
        '485':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReplicationTaskMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteCertificate':
    post:
      operationId: DeleteCertificate
      description: 'Deletes the specified certificate. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCertificateResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCertificateMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteEndpoint':
    post:
      operationId: DeleteEndpoint
      description: <p>Deletes the specified endpoint.</p> <note> <p>All tasks associated with the endpoint must be deleted before you can delete the endpoint.</p> </note> <p/>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEndpointResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEndpointMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteEventSubscription':
    post:
      operationId: DeleteEventSubscription
      description: ' Deletes an AWS DMS event subscription. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteReplicationInstance':
    post:
      operationId: DeleteReplicationInstance
      description: <p>Deletes the specified replication instance.</p> <note> <p>You must delete any migration tasks that are associated with the replication instance before you can delete it.</p> </note> <p/>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReplicationInstanceResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteReplicationInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteReplicationSubnetGroup':
    post:
      operationId: DeleteReplicationSubnetGroup
      description: Deletes a subnet group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReplicationSubnetGroupResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteReplicationSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteReplicationTask':
    post:
      operationId: DeleteReplicationTask
      description: Deletes the specified replication task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReplicationTaskResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteReplicationTaskMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAccountAttributes':
    post:
      operationId: DescribeAccountAttributes
      description: '<p>Lists all of the AWS DMS attributes for a customer account. The attributes include AWS DMS quotas for the account, such as the number of replication instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota''s maximum value.</p> <p>This command does not take any parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountAttributesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAccountAttributesMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCertificates':
    post:
      operationId: DescribeCertificates
      description: Provides a description of the certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCertificatesResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCertificatesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeConnections':
    post:
      operationId: DescribeConnections
      description: Describes the status of the connections that have been made between the replication instance and an endpoint. Connections are created when you test an endpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConnectionsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConnectionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEndpointTypes':
    post:
      operationId: DescribeEndpointTypes
      description: Returns information about the type of endpoints available.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointTypesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointTypesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEndpoints':
    post:
      operationId: DescribeEndpoints
      description: Returns information about the endpoints for your account in the current region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEndpointsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventCategories':
    post:
      operationId: DescribeEventCategories
      description: 'Lists categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a> in the AWS Database Migration Service User Guide. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventCategoriesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventCategoriesMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventSubscriptions':
    post:
      operationId: DescribeEventSubscriptions
      description: '<p>Lists all the event subscriptions for a customer account. The description of a subscription includes <code>SubscriptionName</code>, <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>, <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>. </p> <p>If you specify <code>SubscriptionName</code>, this action lists the description for that subscription.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventSubscriptionsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventSubscriptionsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: ' Lists events for a given source identifier and source type. You can also specify a start and end time. For more information on AWS DMS events, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications </a>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrderableReplicationInstances':
    post:
      operationId: DescribeOrderableReplicationInstances
      description: Returns information about the replication instance types that can be created in the specified region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrderableReplicationInstancesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrderableReplicationInstancesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRefreshSchemasStatus':
    post:
      operationId: DescribeRefreshSchemasStatus
      description: Returns the status of the RefreshSchemas operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRefreshSchemasStatusResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRefreshSchemasStatusMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReplicationInstanceTaskLogs':
    post:
      operationId: DescribeReplicationInstanceTaskLogs
      description: Returns information about the task logs for the specified task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReplicationInstanceTaskLogsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReplicationInstanceTaskLogsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReplicationInstances':
    post:
      operationId: DescribeReplicationInstances
      description: Returns information about replication instances for your account in the current region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReplicationInstancesResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReplicationInstancesMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReplicationSubnetGroups':
    post:
      operationId: DescribeReplicationSubnetGroups
      description: Returns information about the replication subnet groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReplicationSubnetGroupsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReplicationSubnetGroupsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReplicationTaskAssessmentResults':
    post:
      operationId: DescribeReplicationTaskAssessmentResults
      description: Returns the task assessment results from Amazon S3. This action always returns the latest results.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReplicationTaskAssessmentResultsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReplicationTaskAssessmentResultsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeReplicationTasks':
    post:
      operationId: DescribeReplicationTasks
      description: Returns information about replication tasks for your account in the current region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeReplicationTasksResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeReplicationTasksMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSchemas':
    post:
      operationId: DescribeSchemas
      description: <p>Returns information about the schema for the specified endpoint.</p> <p/>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSchemasResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSchemasMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTableStatistics':
    post:
      operationId: DescribeTableStatistics
      description: '<p>Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted.</p> <p>Note that the "last updated" column the DMS console only indicates the time that AWS DMS last updated the table statistics record for a table. It does not indicate the time of the last update to the table.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTableStatisticsResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTableStatisticsMessage'
        - name: MaxRecords
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ImportCertificate':
    post:
      operationId: ImportCertificate
      description: Uploads the specified certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportCertificateResponse'
        '480':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '481':
          description: InvalidCertificateFault
          schema:
            $ref: '#/definitions/InvalidCertificateFault'
        '482':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportCertificateMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists all tags for an AWS DMS resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyEndpoint':
    post:
      operationId: ModifyEndpoint
      description: Modifies the specified endpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEndpointResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '482':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '483':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
        '484':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyEndpointMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyEventSubscription':
    post:
      operationId: ModifyEventSubscription
      description: 'Modifies an existing AWS DMS event notification subscription. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResponse'
        '480':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyReplicationInstance':
    post:
      operationId: ModifyReplicationInstance
      description: <p>Modifies the replication instance to apply new settings. You can change one or more parameters by specifying these parameters and the new values in the request.</p> <p>Some settings are applied during the maintenance window.</p> <p/>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyReplicationInstanceResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '482':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '483':
          description: InsufficientResourceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientResourceCapacityFault'
        '484':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '485':
          description: UpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/UpgradeDependencyFailureFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyReplicationInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyReplicationSubnetGroup':
    post:
      operationId: ModifyReplicationSubnetGroup
      description: Modifies the settings for the specified replication subnet group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyReplicationSubnetGroupResponse'
        '480':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '482':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
        '483':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '484':
          description: ReplicationSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/ReplicationSubnetGroupDoesNotCoverEnoughAZs'
        '485':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyReplicationSubnetGroupMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyReplicationTask':
    post:
      operationId: ModifyReplicationTask
      description: '<p>Modifies the specified replication task.</p> <p>You can''t modify the task endpoints. The task must be stopped before you can modify it. </p> <p>For more information about AWS DMS tasks, see the AWS DMS user guide at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html"> Working with Migration Tasks </a> </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyReplicationTaskResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '482':
          description: ResourceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsFault'
        '483':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyReplicationTaskMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RebootReplicationInstance':
    post:
      operationId: RebootReplicationInstance
      description: 'Reboots a replication instance. Rebooting results in a momentary outage, until the replication instance becomes available again.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootReplicationInstanceResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebootReplicationInstanceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RefreshSchemas':
    post:
      operationId: RefreshSchemas
      description: Populates the schema for the specified endpoint. This is an asynchronous operation and can take several minutes. You can check the status of this operation by calling the DescribeRefreshSchemasStatus operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RefreshSchemasResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '482':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
        '483':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RefreshSchemasMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ReloadTables':
    post:
      operationId: ReloadTables
      description: 'Reloads the target database table with the source data. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReloadTablesResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReloadTablesMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes metadata tags from a DMS resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartReplicationTask':
    post:
      operationId: StartReplicationTask
      description: '<p>Starts the replication task.</p> <p>For more information about AWS DMS tasks, see the AWS DMS user guide at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.html"> Working with Migration Tasks </a> </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartReplicationTaskResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '482':
          description: AccessDeniedFault
          schema:
            $ref: '#/definitions/AccessDeniedFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartReplicationTaskMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartReplicationTaskAssessment':
    post:
      operationId: StartReplicationTaskAssessment
      description: ' Starts the replication task assessment for unsupported data types in the source database. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartReplicationTaskAssessmentResponse'
        '480':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '481':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartReplicationTaskAssessmentMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopReplicationTask':
    post:
      operationId: StopReplicationTask
      description: <p>Stops the replication task.</p> <p/>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopReplicationTaskResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopReplicationTaskMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TestConnection':
    post:
      operationId: TestConnection
      description: Tests the connection between the replication instance and the endpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestConnectionResponse'
        '480':
          description: ResourceNotFoundFault
          schema:
            $ref: '#/definitions/ResourceNotFoundFault'
        '481':
          description: InvalidResourceStateFault
          schema:
            $ref: '#/definitions/InvalidResourceStateFault'
        '482':
          description: KMSKeyNotAccessibleFault
          schema:
            $ref: '#/definitions/KMSKeyNotAccessibleFault'
        '483':
          description: ResourceQuotaExceededFault
          schema:
            $ref: '#/definitions/ResourceQuotaExceededFault'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestConnectionMessage'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddTagsToResourceResponse:
    type: object
    example: {}
    properties: {}
    description: <p/>
  AddTagsToResourceMessage:
    type: object
    required:
      - ResourceArn
      - Tags
    example:
      ResourceArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
      Tags:
        - Key: Acount
          Value: '1633456'
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task.'
      Tags:
        $ref: '#/definitions/TagList'
        description: The tag to be assigned to the DMS resource.
    description: <p/>
  ResourceNotFoundFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The resource could not be found.
  CreateEndpointResponse:
    type: object
    example:
      Endpoint:
        EndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM'
        EndpointIdentifier: test-endpoint-1
        EndpointType: source
        EngineName: mysql
        KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
        Port: 3306
        ServerName: mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com
        Status: active
        Username: username
    properties:
      Endpoint:
        $ref: '#/definitions/Endpoint'
        description: The endpoint that was created.
    description: <p/>
  CreateEndpointMessage:
    type: object
    required:
      - EndpointIdentifier
      - EndpointType
      - EngineName
    example:
      CertificateArn: ''
      DatabaseName: testdb
      EndpointIdentifier: test-endpoint-1
      EndpointType: source
      EngineName: mysql
      ExtraConnectionAttributes: ''
      KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
      Password: pasword
      Port: 3306
      ServerName: mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com
      SslMode: require
      Tags:
        - Key: Acount
          Value: '143327655'
      Username: username
    properties:
      EndpointIdentifier:
        $ref: '#/definitions/String'
        description: 'The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.'
      EndpointType:
        $ref: '#/definitions/ReplicationEndpointTypeValue'
        description: The type of endpoint.
      EngineName:
        $ref: '#/definitions/String'
        description: 'The type of engine for the endpoint. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, dynamodb, mongodb, and sqlserver.'
      Username:
        $ref: '#/definitions/String'
        description: The user name to be used to login to the endpoint database.
      Password:
        $ref: '#/definitions/SecretString'
        description: The password to be used to login to the endpoint database.
      ServerName:
        $ref: '#/definitions/String'
        description: The name of the server where the endpoint database resides.
      Port:
        $ref: '#/definitions/IntegerOptional'
        description: The port used by the endpoint database.
      DatabaseName:
        $ref: '#/definitions/String'
        description: The name of the endpoint database.
      ExtraConnectionAttributes:
        $ref: '#/definitions/String'
        description: Additional attributes associated with the connection.
      KmsKeyId:
        $ref: '#/definitions/String'
        description: 'The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
      Tags:
        $ref: '#/definitions/TagList'
        description: Tags to be added to the endpoint.
      CertificateArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) for the certificate.
      SslMode:
        $ref: '#/definitions/DmsSslModeValue'
        description: '<p>The SSL mode to use for the SSL connection.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>'
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) for the service access role you want to use to create the endpoint. '
      ExternalTableDefinition:
        $ref: '#/definitions/String'
        description: 'The external table definition. '
      DynamoDbSettings:
        $ref: '#/definitions/DynamoDbSettings'
        description: 'Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>. '
      S3Settings:
        $ref: '#/definitions/S3Settings'
        description: 'Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. '
      DmsTransferSettings:
        $ref: '#/definitions/DmsTransferSettings'
        description: '<p> The settings in JSON format for the DMS Transfer type source endpoint. </p> <p>Attributes include:</p> <ul> <li> <p>serviceAccessRoleArn - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>bucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax: ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</p> <p>JSON syntax:</p> <p> { "ServiceAccessRoleArn": "string", "BucketName": "string", "CompressionType": "none"|"gzip" } </p>'
      MongoDbSettings:
        $ref: '#/definitions/MongoDbSettings'
        description: 'Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html"> Using MongoDB as a Target for AWS Database Migration Service</a>. '
    description: <p/>
  KMSKeyNotAccessibleFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: AWS DMS cannot access the KMS key.
  ResourceAlreadyExistsFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The resource you are attempting to create already exists.
  ResourceQuotaExceededFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The quota for this resource quota has been exceeded.
  InvalidResourceStateFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The resource is in a state that prevents it from being used for database migration.
  AccessDeniedFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: AWS DMS was denied access to the endpoint.
  CreateEventSubscriptionResponse:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
        description: The event subscription that was created.
    description: <p/>
  CreateEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SnsTopicArn
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
        description: '<p>The name of the AWS DMS event notification subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>'
      SnsTopicArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. '
      SourceType:
        $ref: '#/definitions/String'
        description: '<p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value is not specified, all events are returned. </p> <p>Valid values: replication-instance | migration-task</p>'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
        description: ' A list of event categories for a source type that you want to subscribe to. You can see a list of the categories for a given source type by calling the <b>DescribeEventCategories</b> action or in the topic <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html"> Working with Events and Notifications</a> in the AWS Database Migration Service User Guide. '
      SourceIds:
        $ref: '#/definitions/SourceIdsList'
        description: ' The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. '
      Enabled:
        $ref: '#/definitions/BooleanOptional'
        description: ' A Boolean value; set to <b>true</b> to activate the subscription, or set to <b>false</b> to create the subscription but not activate it. '
      Tags:
        $ref: '#/definitions/TagList'
        description: A tag to be attached to the event subscription.
    description: <p/>
  SNSInvalidTopicFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The SNS topic is invalid.
  SNSNoAuthorizationFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: You are not authorized for the SNS subscription.
  CreateReplicationInstanceResponse:
    type: object
    example:
      ReplicationInstance:
        AllocatedStorage: 5
        AutoMinorVersionUpgrade: true
        EngineVersion: 1.5.0
        KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
        PendingModifiedValues: {}
        PreferredMaintenanceWindow: 'sun:06:00-sun:14:00'
        PubliclyAccessible: true
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationInstanceClass: dms.t2.micro
        ReplicationInstanceIdentifier: test-rep-1
        ReplicationInstanceStatus: creating
        ReplicationSubnetGroup:
          ReplicationSubnetGroupDescription: default
          ReplicationSubnetGroupIdentifier: default
          SubnetGroupStatus: Complete
          Subnets:
            - SubnetAvailabilityZone:
                Name: us-east-1d
              SubnetIdentifier: subnet-f6dd91af
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1b
              SubnetIdentifier: subnet-3605751d
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1c
              SubnetIdentifier: subnet-c2daefb5
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1e
              SubnetIdentifier: subnet-85e90cb8
              SubnetStatus: Active
          VpcId: vpc-6741a603
    properties:
      ReplicationInstance:
        $ref: '#/definitions/ReplicationInstance'
        description: The replication instance that was created.
    description: <p/>
  CreateReplicationInstanceMessage:
    type: object
    required:
      - ReplicationInstanceIdentifier
      - ReplicationInstanceClass
    example:
      AllocatedStorage: 123
      AutoMinorVersionUpgrade: true
      AvailabilityZone: ''
      EngineVersion: ''
      KmsKeyId: ''
      MultiAZ: true
      PreferredMaintenanceWindow: ''
      PubliclyAccessible: true
      ReplicationInstanceClass: ''
      ReplicationInstanceIdentifier: ''
      ReplicationSubnetGroupIdentifier: ''
      Tags:
        - Key: string
          Value: string
      VpcSecurityGroupIds: []
    properties:
      ReplicationInstanceIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>'
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
        description: The amount of storage (in gigabytes) to be initially allocated for the replication instance.
      ReplicationInstanceClass:
        $ref: '#/definitions/String'
        description: '<p>The compute and memory capacity of the replication instance as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
        description: ' Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. '
      AvailabilityZone:
        $ref: '#/definitions/String'
        description: '<p>The EC2 Availability Zone that the replication instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint''s region.</p> <p> Example: <code>us-east-1d</code> </p>'
      ReplicationSubnetGroupIdentifier:
        $ref: '#/definitions/String'
        description: A subnet group to associate with the replication instance.
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
        description: '<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
        description: ' Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. '
      EngineVersion:
        $ref: '#/definitions/String'
        description: The engine version number of the replication instance.
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
        description: '<p>Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.</p> <p>Default: <code>true</code> </p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: Tags to be associated with the replication instance.
      KmsKeyId:
        $ref: '#/definitions/String'
        description: 'The KMS key identifier that will be used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
        description: ' Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. '
    description: <p/>
  InsufficientResourceCapacityFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: There are not enough resources allocated to the database migration.
  StorageQuotaExceededFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The storage quota has been exceeded.
  ReplicationSubnetGroupDoesNotCoverEnoughAZs:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The replication subnet group does not cover enough Availability Zones (AZs). Edit the replication subnet group and add more AZs.
  InvalidSubnet:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The subnet provided is invalid.
  CreateReplicationSubnetGroupResponse:
    type: object
    example:
      ReplicationSubnetGroup: {}
    properties:
      ReplicationSubnetGroup:
        $ref: '#/definitions/ReplicationSubnetGroup'
        description: The replication subnet group that was created.
    description: <p/>
  CreateReplicationSubnetGroupMessage:
    type: object
    required:
      - ReplicationSubnetGroupIdentifier
      - ReplicationSubnetGroupDescription
      - SubnetIds
    example:
      ReplicationSubnetGroupDescription: US West subnet group
      ReplicationSubnetGroupIdentifier: us-west-2ab-vpc-215ds366
      SubnetIds:
        - subnet-e145356n
        - subnet-58f79200
      Tags:
        - Key: Acount
          Value: '145235'
    properties:
      ReplicationSubnetGroupIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be "default".</p> <p>Example: <code>mySubnetgroup</code> </p>'
      ReplicationSubnetGroupDescription:
        $ref: '#/definitions/String'
        description: The description for the subnet group.
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
        description: The EC2 subnet IDs for the subnet group.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tag to be assigned to the subnet group.
    description: <p/>
  CreateReplicationTaskResponse:
    type: object
    example:
      ReplicationTask:
        MigrationType: full-load
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM'
        ReplicationTaskCreationDate: '2016-12-14T18:25:43Z'
        ReplicationTaskIdentifier: task1
        ReplicationTaskSettings: '{"TargetMetadata":{"TargetSchema":"","SupportLobs":true,"FullLobMode":true,"LobChunkSize":64,"LimitedSizeLobMode":false,"LobMaxSize":0},"FullLoadSettings":{"FullLoadEnabled":true,"ApplyChangesEnabled":false,"TargetTablePrepMode":"DROP_AND_CREATE","CreatePkAfterFullLoad":false,"StopTaskCachedChangesApplied":false,"StopTaskCachedChangesNotApplied":false,"ResumeEnabled":false,"ResumeMinTableSize":100000,"ResumeOnlyClusteredPKTables":true,"MaxFullLoadSubTasks":8,"TransactionConsistencyTimeout":600,"CommitRate":10000},"Logging":{"EnableLogging":false}}'
        SourceEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
        Status: creating
        TableMappings: 'file://mappingfile.json'
        TargetEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: The replication task that was created.
    description: <p/>
  CreateReplicationTaskMessage:
    type: object
    required:
      - ReplicationTaskIdentifier
      - SourceEndpointArn
      - TargetEndpointArn
      - ReplicationInstanceArn
      - MigrationType
      - TableMappings
    example:
      CdcStartTime: '2016-12-14T18:25:43Z'
      MigrationType: full-load
      ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
      ReplicationTaskIdentifier: task1
      ReplicationTaskSettings: ''
      SourceEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
      TableMappings: 'file://mappingfile.json'
      Tags:
        - Key: Acount
          Value: '24352226'
      TargetEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTaskIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
      SourceEndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      TargetEndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      MigrationType:
        $ref: '#/definitions/MigrationTypeValue'
        description: The migration type.
      TableMappings:
        $ref: '#/definitions/String'
        description: '<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with "file://". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>'
      ReplicationTaskSettings:
        $ref: '#/definitions/String'
        description: 'Settings for the task, such as target metadata settings. For a complete list of task settings, see <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html">Task Settings for AWS Database Migration Service Tasks</a>.'
      CdcStartTime:
        $ref: '#/definitions/TStamp'
        description: '<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>'
      CdcStartPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position "checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>'
      CdcStopPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: Tags to be added to the replication instance.
    description: <p/>
  DeleteCertificateResponse:
    type: object
    example:
      Certificate: {}
    properties:
      Certificate:
        $ref: '#/definitions/Certificate'
        description: The Secure Sockets Layer (SSL) certificate.
  DeleteCertificateMessage:
    type: object
    required:
      - CertificateArn
    example:
      CertificateArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUSM457DE6XFJCJQ'
    properties:
      CertificateArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the deleted certificate.
  DeleteEndpointResponse:
    type: object
    example:
      Endpoint:
        EndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM'
        EndpointIdentifier: test-endpoint-1
        EndpointType: source
        EngineName: mysql
        KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
        Port: 3306
        ServerName: mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com
        Status: active
        Username: username
    properties:
      Endpoint:
        $ref: '#/definitions/Endpoint'
        description: The endpoint that was deleted.
    description: <p/>
  DeleteEndpointMessage:
    type: object
    required:
      - EndpointArn
    example:
      EndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM'
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    description: <p/>
  DeleteEventSubscriptionResponse:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
        description: The event subscription that was deleted.
    description: <p/>
  DeleteEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
        description: The name of the DMS event notification subscription to be deleted.
    description: <p/>
  DeleteReplicationInstanceResponse:
    type: object
    example:
      ReplicationInstance:
        AllocatedStorage: 5
        AutoMinorVersionUpgrade: true
        EngineVersion: 1.5.0
        KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
        PendingModifiedValues: {}
        PreferredMaintenanceWindow: 'sun:06:00-sun:14:00'
        PubliclyAccessible: true
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationInstanceClass: dms.t2.micro
        ReplicationInstanceIdentifier: test-rep-1
        ReplicationInstanceStatus: creating
        ReplicationSubnetGroup:
          ReplicationSubnetGroupDescription: default
          ReplicationSubnetGroupIdentifier: default
          SubnetGroupStatus: Complete
          Subnets:
            - SubnetAvailabilityZone:
                Name: us-east-1d
              SubnetIdentifier: subnet-f6dd91af
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1b
              SubnetIdentifier: subnet-3605751d
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1c
              SubnetIdentifier: subnet-c2daefb5
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1e
              SubnetIdentifier: subnet-85e90cb8
              SubnetStatus: Active
          VpcId: vpc-6741a603
    properties:
      ReplicationInstance:
        $ref: '#/definitions/ReplicationInstance'
        description: The replication instance that was deleted.
    description: <p/>
  DeleteReplicationInstanceMessage:
    type: object
    required:
      - ReplicationInstanceArn
    example:
      ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance to be deleted.
    description: <p/>
  DeleteReplicationSubnetGroupResponse:
    type: object
    example: {}
    properties: {}
    description: <p/>
  DeleteReplicationSubnetGroupMessage:
    type: object
    required:
      - ReplicationSubnetGroupIdentifier
    example:
      ReplicationSubnetGroupIdentifier: us-west-2ab-vpc-215ds366
    properties:
      ReplicationSubnetGroupIdentifier:
        $ref: '#/definitions/String'
        description: The subnet group name of the replication instance.
    description: <p/>
  DeleteReplicationTaskResponse:
    type: object
    example:
      ReplicationTask:
        MigrationType: full-load
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM'
        ReplicationTaskCreationDate: '2016-12-14T18:25:43Z'
        ReplicationTaskIdentifier: task1
        ReplicationTaskSettings: '{"TargetMetadata":{"TargetSchema":"","SupportLobs":true,"FullLobMode":true,"LobChunkSize":64,"LimitedSizeLobMode":false,"LobMaxSize":0},"FullLoadSettings":{"FullLoadEnabled":true,"ApplyChangesEnabled":false,"TargetTablePrepMode":"DROP_AND_CREATE","CreatePkAfterFullLoad":false,"StopTaskCachedChangesApplied":false,"StopTaskCachedChangesNotApplied":false,"ResumeEnabled":false,"ResumeMinTableSize":100000,"ResumeOnlyClusteredPKTables":true,"MaxFullLoadSubTasks":8,"TransactionConsistencyTimeout":600,"CommitRate":10000},"Logging":{"EnableLogging":false}}'
        SourceEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
        Status: creating
        TableMappings: 'file://mappingfile.json'
        TargetEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: The deleted replication task.
    description: <p/>
  DeleteReplicationTaskMessage:
    type: object
    required:
      - ReplicationTaskArn
    example:
      ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task to be deleted.
    description: <p/>
  DescribeAccountAttributesResponse:
    type: object
    example:
      AccountQuotas:
        - AccountQuotaName: ReplicationInstances
          Max: 20
          Used: 0
        - AccountQuotaName: AllocatedStorage
          Max: 20
          Used: 0
        - AccountQuotaName: Endpoints
          Max: 20
          Used: 0
    properties:
      AccountQuotas:
        $ref: '#/definitions/AccountQuotaList'
        description: Account quota information.
    description: <p/>
  DescribeAccountAttributesMessage:
    type: object
    example: {}
    properties: {}
    description: <p/>
  DescribeCertificatesResponse:
    type: object
    example:
      Certificates: []
      Marker: ''
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: The pagination token.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The Secure Sockets Layer (SSL) certificates associated with the replication instance.
  DescribeCertificatesMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: Filters applied to the certificate described in the form of key-value pairs.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
  DescribeConnectionsResponse:
    type: object
    example:
      Connections:
        - EndpointArn: 'arn:aws:dms:us-east-arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
          EndpointIdentifier: testsrc1
          ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
          ReplicationInstanceIdentifier: test
          Status: successful
      Marker: ''
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      Connections:
        $ref: '#/definitions/ConnectionList'
        description: A description of the connections.
    description: <p/>
  DescribeConnectionsMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeEndpointTypesResponse:
    type: object
    example:
      Marker: ''
      SupportedEndpointTypes: []
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      SupportedEndpointTypes:
        $ref: '#/definitions/SupportedEndpointTypeList'
        description: The type of endpoints that are supported.
    description: <p/>
  DescribeEndpointTypesMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter names: engine-name | endpoint-type</p>'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeEndpointsResponse:
    type: object
    example:
      Endpoints: []
      Marker: ''
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      Endpoints:
        $ref: '#/definitions/EndpointList'
        description: Endpoint description.
    description: <p/>
  DescribeEndpointsMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeEventCategoriesResponse:
    type: object
    properties:
      EventCategoryGroupList:
        $ref: '#/definitions/EventCategoryGroupList'
        description: A list of event categories.
    description: <p/>
  DescribeEventCategoriesMessage:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/String'
        description: '<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | migration-task</p>'
      Filters:
        $ref: '#/definitions/FilterList'
        description: Filters applied to the action.
    description: <p/>
  DescribeEventSubscriptionsResponse:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      EventSubscriptionsList:
        $ref: '#/definitions/EventSubscriptionsList'
        description: A list of event subscriptions.
    description: <p/>
  DescribeEventSubscriptionsMessage:
    type: object
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
        description: The name of the AWS DMS event subscription to be described.
      Filters:
        $ref: '#/definitions/FilterList'
        description: Filters applied to the action.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeEventsResponse:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      Events:
        $ref: '#/definitions/EventList'
        description: The events described.
    description: <p/>
  DescribeEventsMessage:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
        description: ' The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It cannot end with a hyphen or contain two consecutive hyphens. '
      SourceType:
        $ref: '#/definitions/SourceType'
        description: '<p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | migration-task</p>'
      StartTime:
        $ref: '#/definitions/TStamp'
        description: The start time for the events to be listed.
      EndTime:
        $ref: '#/definitions/TStamp'
        description: The end time for the events to be listed.
      Duration:
        $ref: '#/definitions/IntegerOptional'
        description: The duration of the events to be listed.
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
        description: A list of event categories for a source type that you want to subscribe to.
      Filters:
        $ref: '#/definitions/FilterList'
        description: Filters applied to the action.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeOrderableReplicationInstancesResponse:
    type: object
    example:
      Marker: ''
      OrderableReplicationInstances: []
    properties:
      OrderableReplicationInstances:
        $ref: '#/definitions/OrderableReplicationInstanceList'
        description: The order-able replication instances available.
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeOrderableReplicationInstancesMessage:
    type: object
    example:
      Marker: ''
      MaxRecords: 123
    properties:
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeRefreshSchemasStatusResponse:
    type: object
    example:
      RefreshSchemasStatus: {}
    properties:
      RefreshSchemasStatus:
        $ref: '#/definitions/RefreshSchemasStatus'
        description: The status of the schema.
    description: <p/>
  DescribeRefreshSchemasStatusMessage:
    type: object
    required:
      - EndpointArn
    example:
      EndpointArn: ''
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    description: <p/>
  DescribeReplicationInstanceTaskLogsResponse:
    type: object
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      ReplicationInstanceTaskLogs:
        $ref: '#/definitions/ReplicationInstanceTaskLogsList'
        description: 'An array of replication task log metadata. Each member of the array contains the replication task name, ARN, and task log size (in bytes). '
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
  DescribeReplicationInstanceTaskLogsMessage:
    type: object
    required:
      - ReplicationInstanceArn
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.'
  DescribeReplicationInstancesResponse:
    type: object
    example:
      Marker: ''
      ReplicationInstances: []
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      ReplicationInstances:
        $ref: '#/definitions/ReplicationInstanceList'
        description: The replication instances described.
    description: <p/>
  DescribeReplicationInstancesMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeReplicationSubnetGroupsResponse:
    type: object
    example:
      Marker: ''
      ReplicationSubnetGroups: []
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      ReplicationSubnetGroups:
        $ref: '#/definitions/ReplicationSubnetGroups'
        description: A description of the replication subnet groups.
    description: <p/>
  DescribeReplicationSubnetGroupsMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: Filters applied to the describe action.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeReplicationTaskAssessmentResultsResponse:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      BucketName:
        $ref: '#/definitions/String'
        description: '- The Amazon S3 bucket where the task assessment report is located. '
      ReplicationTaskAssessmentResults:
        $ref: '#/definitions/ReplicationTaskAssessmentResultList'
        description: ' The task assessment report. '
    description: <p/>
  DescribeReplicationTaskAssessmentResultsMessage:
    type: object
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: '- The Amazon Resource Name (ARN) string that uniquely identifies the task. When this input parameter is specified the API will return only one result and ignore the values of the max-records and marker parameters. '
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeReplicationTasksResponse:
    type: object
    example:
      Marker: ''
      ReplicationTasks: []
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      ReplicationTasks:
        $ref: '#/definitions/ReplicationTaskList'
        description: A description of the replication tasks.
    description: <p/>
  DescribeReplicationTasksMessage:
    type: object
    example:
      Filters:
        - Name: string
          Values:
            - string
            - string
      Marker: ''
      MaxRecords: 123
    properties:
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeSchemasResponse:
    type: object
    example:
      Marker: ''
      Schemas: []
    properties:
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      Schemas:
        $ref: '#/definitions/SchemaList'
        description: The described schema.
    description: <p/>
  DescribeSchemasMessage:
    type: object
    required:
      - EndpointArn
    example:
      EndpointArn: ''
      Marker: ''
      MaxRecords: 123
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeTableStatisticsResponse:
    type: object
    example:
      Marker: ''
      ReplicationTaskArn: ''
      TableStatistics: []
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task.
      TableStatistics:
        $ref: '#/definitions/TableStatisticsList'
        description: The table statistics.
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
    description: <p/>
  DescribeTableStatisticsMessage:
    type: object
    required:
      - ReplicationTaskArn
    example:
      Marker: ''
      MaxRecords: 123
      ReplicationTaskArn: ''
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task.
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
        description: '<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 500.</p>'
      Marker:
        $ref: '#/definitions/String'
        description: ' An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. '
      Filters:
        $ref: '#/definitions/FilterList'
        description: '<p>Filters applied to the describe table statistics action.</p> <p>Valid filter names: schema-name | table-name | table-state</p> <p>A combination of filters creates an AND condition where each record matches all specified filters.</p>'
    description: <p/>
  ImportCertificateResponse:
    type: object
    example:
      Certificate: {}
    properties:
      Certificate:
        $ref: '#/definitions/Certificate'
        description: The certificate to be uploaded.
  ImportCertificateMessage:
    type: object
    required:
      - CertificateIdentifier
    example:
      CertificateIdentifier: ''
      CertificatePem: ''
    properties:
      CertificateIdentifier:
        $ref: '#/definitions/String'
        description: The customer-assigned name of the certificate. Valid characters are A-z and 0-9.
      CertificatePem:
        $ref: '#/definitions/String'
        description: The contents of the .pem X.509 certificate file for the certificate.
      CertificateWallet:
        $ref: '#/definitions/CertificateWallet'
        description: The location of the imported Oracle Wallet certificate for use with SSL.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags associated with the certificate.
  InvalidCertificateFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
    description: The certificate was not valid.
  ListTagsForResourceResponse:
    type: object
    example:
      TagList: []
    properties:
      TagList:
        $ref: '#/definitions/TagList'
        description: A list of tags for the resource.
    description: <p/>
  ListTagsForResourceMessage:
    type: object
    required:
      - ResourceArn
    example:
      ResourceArn: ''
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource.
    description: <p/>
  ModifyEndpointResponse:
    type: object
    example:
      Endpoint: {}
    properties:
      Endpoint:
        $ref: '#/definitions/Endpoint'
        description: The modified endpoint.
    description: <p/>
  ModifyEndpointMessage:
    type: object
    required:
      - EndpointArn
    example:
      CertificateArn: ''
      DatabaseName: ''
      EndpointArn: ''
      EndpointIdentifier: ''
      EndpointType: source
      EngineName: ''
      ExtraConnectionAttributes: ''
      Password: ''
      Port: 123
      ServerName: ''
      SslMode: require
      Username: ''
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      EndpointIdentifier:
        $ref: '#/definitions/String'
        description: 'The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.'
      EndpointType:
        $ref: '#/definitions/ReplicationEndpointTypeValue'
        description: The type of endpoint.
      EngineName:
        $ref: '#/definitions/String'
        description: 'The type of engine for the endpoint. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.'
      Username:
        $ref: '#/definitions/String'
        description: The user name to be used to login to the endpoint database.
      Password:
        $ref: '#/definitions/SecretString'
        description: The password to be used to login to the endpoint database.
      ServerName:
        $ref: '#/definitions/String'
        description: The name of the server where the endpoint database resides.
      Port:
        $ref: '#/definitions/IntegerOptional'
        description: The port used by the endpoint database.
      DatabaseName:
        $ref: '#/definitions/String'
        description: The name of the endpoint database.
      ExtraConnectionAttributes:
        $ref: '#/definitions/String'
        description: 'Additional attributes associated with the connection. To reset this parameter, pass the empty string ("") as an argument.'
      CertificateArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the certificate used for SSL connection.
      SslMode:
        $ref: '#/definitions/DmsSslModeValue'
        description: '<p>The SSL mode to be used.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>'
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) for the service access role you want to use to modify the endpoint. '
      ExternalTableDefinition:
        $ref: '#/definitions/String'
        description: The external table definition.
      DynamoDbSettings:
        $ref: '#/definitions/DynamoDbSettings'
        description: 'Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>. '
      S3Settings:
        $ref: '#/definitions/S3Settings'
        description: 'Settings in JSON format for the target S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. '
      DmsTransferSettings:
        $ref: '#/definitions/DmsTransferSettings'
        description: '<p> The settings in JSON format for the DMS Transfer type source endpoint. </p> <p>Attributes include:</p> <ul> <li> <p>serviceAccessRoleArn - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>BucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax: ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</p> <p>JSON syntax:</p> <p> { "ServiceAccessRoleArn": "string", "BucketName": "string", "CompressionType": "none"|"gzip" } </p>'
      MongoDbSettings:
        $ref: '#/definitions/MongoDbSettings'
        description: 'Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href="http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. '
    description: <p/>
  ModifyEventSubscriptionResponse:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
        description: The modified event subscription.
    description: <p/>
  ModifyEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
        description: The name of the AWS DMS event notification subscription to be modified.
      SnsTopicArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.'
      SourceType:
        $ref: '#/definitions/String'
        description: '<p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | migration-task</p>'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
        description: ' A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories. '
      Enabled:
        $ref: '#/definitions/BooleanOptional'
        description: ' A Boolean value; set to <b>true</b> to activate the subscription. '
    description: <p/>
  ModifyReplicationInstanceResponse:
    type: object
    example:
      ReplicationInstance:
        AllocatedStorage: 5
        AutoMinorVersionUpgrade: true
        EngineVersion: 1.5.0
        KmsKeyId: 'arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd'
        PendingModifiedValues: {}
        PreferredMaintenanceWindow: 'sun:06:00-sun:14:00'
        PubliclyAccessible: true
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationInstanceClass: dms.t2.micro
        ReplicationInstanceIdentifier: test-rep-1
        ReplicationInstanceStatus: available
        ReplicationSubnetGroup:
          ReplicationSubnetGroupDescription: default
          ReplicationSubnetGroupIdentifier: default
          SubnetGroupStatus: Complete
          Subnets:
            - SubnetAvailabilityZone:
                Name: us-east-1d
              SubnetIdentifier: subnet-f6dd91af
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1b
              SubnetIdentifier: subnet-3605751d
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1c
              SubnetIdentifier: subnet-c2daefb5
              SubnetStatus: Active
            - SubnetAvailabilityZone:
                Name: us-east-1e
              SubnetIdentifier: subnet-85e90cb8
              SubnetStatus: Active
          VpcId: vpc-6741a603
    properties:
      ReplicationInstance:
        $ref: '#/definitions/ReplicationInstance'
        description: The modified replication instance.
    description: <p/>
  ModifyReplicationInstanceMessage:
    type: object
    required:
      - ReplicationInstanceArn
    example:
      AllocatedStorage: 123
      AllowMajorVersionUpgrade: true
      ApplyImmediately: true
      AutoMinorVersionUpgrade: true
      EngineVersion: 1.5.0
      MultiAZ: true
      PreferredMaintenanceWindow: 'sun:06:00-sun:14:00'
      ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
      ReplicationInstanceClass: dms.t2.micro
      ReplicationInstanceIdentifier: test-rep-1
      VpcSecurityGroupIds: []
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
        description: The amount of storage (in gigabytes) to be allocated for the replication instance.
      ApplyImmediately:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the changes should be applied immediately or during the next maintenance window.
      ReplicationInstanceClass:
        $ref: '#/definitions/String'
        description: '<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
        description: ' Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. '
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
        description: '<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
        description: ' Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. '
      EngineVersion:
        $ref: '#/definitions/String'
        description: The engine version number of the replication instance.
      AllowMajorVersionUpgrade:
        $ref: '#/definitions/Boolean'
        description: '<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance''s current version.</p>'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
        description: ' Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version. '
      ReplicationInstanceIdentifier:
        $ref: '#/definitions/String'
        description: The replication instance identifier. This parameter is stored as a lowercase string.
    description: <p/>
  UpgradeDependencyFailureFault:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: An upgrade dependency is preventing the database migration.
  ModifyReplicationSubnetGroupResponse:
    type: object
    example:
      ReplicationSubnetGroup: {}
    properties:
      ReplicationSubnetGroup:
        $ref: '#/definitions/ReplicationSubnetGroup'
        description: The modified replication subnet group.
    description: <p/>
  ModifyReplicationSubnetGroupMessage:
    type: object
    required:
      - ReplicationSubnetGroupIdentifier
      - SubnetIds
    example:
      ReplicationSubnetGroupDescription: ''
      ReplicationSubnetGroupIdentifier: ''
      SubnetIds: []
    properties:
      ReplicationSubnetGroupIdentifier:
        $ref: '#/definitions/String'
        description: The name of the replication instance subnet group.
      ReplicationSubnetGroupDescription:
        $ref: '#/definitions/String'
        description: The description of the replication instance subnet group.
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
        description: A list of subnet IDs.
    description: <p/>
  SubnetAlreadyInUse:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: <p/>
    description: The specified subnet is already in use.
  ModifyReplicationTaskResponse:
    type: object
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: The replication task that was modified.
    description: <p/>
  ModifyReplicationTaskMessage:
    type: object
    required:
      - ReplicationTaskArn
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task.
      ReplicationTaskIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
      MigrationType:
        $ref: '#/definitions/MigrationTypeValue'
        description: '<p>The migration type.</p> <p>Valid values: full-load | cdc | full-load-and-cdc</p>'
      TableMappings:
        $ref: '#/definitions/String'
        description: '<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with "file://". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>'
      ReplicationTaskSettings:
        $ref: '#/definitions/String'
        description: 'JSON file that contains settings for the task, such as target metadata settings.'
      CdcStartTime:
        $ref: '#/definitions/TStamp'
        description: '<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>'
      CdcStartPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position "checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>'
      CdcStopPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>'
    description: <p/>
  RebootReplicationInstanceResponse:
    type: object
    properties:
      ReplicationInstance:
        $ref: '#/definitions/ReplicationInstance'
        description: 'The replication instance that is being rebooted. '
  RebootReplicationInstanceMessage:
    type: object
    required:
      - ReplicationInstanceArn
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      ForceFailover:
        $ref: '#/definitions/BooleanOptional'
        description: 'If this parameter is <code>true</code>, the reboot is conducted through a Multi-AZ failover. (If the instance isn''t configured for Multi-AZ, then you can''t specify <code>true</code>.)'
  RefreshSchemasResponse:
    type: object
    example:
      RefreshSchemasStatus: {}
    properties:
      RefreshSchemasStatus:
        $ref: '#/definitions/RefreshSchemasStatus'
        description: The status of the refreshed schema.
    description: <p/>
  RefreshSchemasMessage:
    type: object
    required:
      - EndpointArn
      - ReplicationInstanceArn
    example:
      EndpointArn: ''
      ReplicationInstanceArn: ''
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
    description: <p/>
  ReloadTablesResponse:
    type: object
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the replication task. '
  ReloadTablesMessage:
    type: object
    required:
      - ReplicationTaskArn
      - TablesToReload
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the replication task. '
      TablesToReload:
        $ref: '#/definitions/TableListToReload'
        description: 'The name and schema of the table to be reloaded. '
      ReloadOption:
        $ref: '#/definitions/ReloadOptionValue'
        description: '<p>Options for reload. Specify <code>data-reload</code> to reload the data and re-validate it if validation is enabled. Specify <code>validate-only</code> to re-validate the table. This option applies only when validation is enabled for the task. </p> <p>Valid values: data-reload, validate-only</p> <p>Default value is data-reload.</p>'
  RemoveTagsFromResourceResponse:
    type: object
    example: {}
    properties: {}
    description: <p/>
  RemoveTagsFromResourceMessage:
    type: object
    required:
      - ResourceArn
      - TagKeys
    example:
      ResourceArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
      TagKeys: []
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: '&gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from.'
      TagKeys:
        $ref: '#/definitions/KeyList'
        description: The tag key (name) of the tag to be removed.
    description: <p/>
  StartReplicationTaskResponse:
    type: object
    example:
      ReplicationTask:
        MigrationType: full-load
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM'
        ReplicationTaskCreationDate: '2016-12-14T18:25:43Z'
        ReplicationTaskIdentifier: task1
        ReplicationTaskSettings: '{"TargetMetadata":{"TargetSchema":"","SupportLobs":true,"FullLobMode":true,"LobChunkSize":64,"LimitedSizeLobMode":false,"LobMaxSize":0},"FullLoadSettings":{"FullLoadEnabled":true,"ApplyChangesEnabled":false,"TargetTablePrepMode":"DROP_AND_CREATE","CreatePkAfterFullLoad":false,"StopTaskCachedChangesApplied":false,"StopTaskCachedChangesNotApplied":false,"ResumeEnabled":false,"ResumeMinTableSize":100000,"ResumeOnlyClusteredPKTables":true,"MaxFullLoadSubTasks":8,"TransactionConsistencyTimeout":600,"CommitRate":10000},"Logging":{"EnableLogging":false}}'
        SourceEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
        Status: creating
        TableMappings: 'file://mappingfile.json'
        TargetEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: The replication task started.
    description: <p/>
  StartReplicationTaskMessage:
    type: object
    required:
      - ReplicationTaskArn
      - StartReplicationTaskType
    example:
      CdcStartTime: '2016-12-14T13:33:20Z'
      ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
      StartReplicationTaskType: start-replication
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task to be started.
      StartReplicationTaskType:
        $ref: '#/definitions/StartReplicationTaskTypeValue'
        description: The type of replication task.
      CdcStartTime:
        $ref: '#/definitions/TStamp'
        description: '<p>Indicates the start time for a change data capture (CDC) operation. Use either CdcStartTime or CdcStartPosition to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p>Timestamp Example: --cdc-start-time “2018-03-08T12:12:12”</p>'
      CdcStartPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position "checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>'
      CdcStopPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>'
    description: <p/>
  StartReplicationTaskAssessmentResponse:
    type: object
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: ' The assessed replication task. '
    description: <p/>
  StartReplicationTaskAssessmentMessage:
    type: object
    required:
      - ReplicationTaskArn
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) of the replication task. '
    description: <p/>
  StopReplicationTaskResponse:
    type: object
    example:
      ReplicationTask:
        MigrationType: full-load
        ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
        ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM'
        ReplicationTaskCreationDate: '2016-12-14T18:25:43Z'
        ReplicationTaskIdentifier: task1
        ReplicationTaskSettings: '{"TargetMetadata":{"TargetSchema":"","SupportLobs":true,"FullLobMode":true,"LobChunkSize":64,"LimitedSizeLobMode":false,"LobMaxSize":0},"FullLoadSettings":{"FullLoadEnabled":true,"ApplyChangesEnabled":false,"TargetTablePrepMode":"DROP_AND_CREATE","CreatePkAfterFullLoad":false,"StopTaskCachedChangesApplied":false,"StopTaskCachedChangesNotApplied":false,"ResumeEnabled":false,"ResumeMinTableSize":100000,"ResumeOnlyClusteredPKTables":true,"MaxFullLoadSubTasks":8,"TransactionConsistencyTimeout":600,"CommitRate":10000},"Logging":{"EnableLogging":false}}'
        SourceEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE'
        Status: creating
        TableMappings: 'file://mappingfile.json'
        TargetEndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTask:
        $ref: '#/definitions/ReplicationTask'
        description: The replication task stopped.
    description: <p/>
  StopReplicationTaskMessage:
    type: object
    required:
      - ReplicationTaskArn
    example:
      ReplicationTaskArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E'
    properties:
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name(ARN) of the replication task to be stopped.
    description: <p/>
  TestConnectionResponse:
    type: object
    example:
      Connection: {}
    properties:
      Connection:
        $ref: '#/definitions/Connection'
        description: The connection tested.
    description: <p/>
  TestConnectionMessage:
    type: object
    required:
      - ReplicationInstanceArn
      - EndpointArn
    example:
      EndpointArn: 'arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM'
      ReplicationInstanceArn: 'arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ'
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
    description: <p/>
  ExceptionMessage:
    type: string
  String:
    type: string
  Long:
    type: integer
  AccountQuota:
    type: object
    properties:
      AccountQuotaName:
        $ref: '#/definitions/String'
        description: The name of the AWS DMS quota for this AWS account.
      Used:
        $ref: '#/definitions/Long'
        description: The amount currently used toward the quota maximum.
      Max:
        $ref: '#/definitions/Long'
        description: The maximum allowed value for the quota.
    description: 'Describes a quota for an AWS account, for example, the number of replication instances allowed.'
  AccountQuotaList:
    type: array
    items:
      $ref: '#/definitions/AccountQuota'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  AuthMechanismValue:
    type: string
    enum:
      - default
      - mongodb_cr
      - scram_sha_1
  AuthTypeValue:
    type: string
    enum:
      - 'no'
      - password
  AvailabilityZone:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the availability zone.
    description: <p/>
  Boolean:
    type: boolean
  BooleanOptional:
    type: boolean
  TStamp:
    type: string
    format: date-time
  CertificateWallet:
    type: string
  IntegerOptional:
    type: integer
  Certificate:
    type: object
    properties:
      CertificateIdentifier:
        $ref: '#/definitions/String'
        description: The customer-assigned name of the certificate. Valid characters are A-z and 0-9.
      CertificateCreationDate:
        $ref: '#/definitions/TStamp'
        description: The date that the certificate was created.
      CertificatePem:
        $ref: '#/definitions/String'
        description: The contents of the .pem X.509 certificate file for the certificate.
      CertificateWallet:
        $ref: '#/definitions/CertificateWallet'
        description: The location of the imported Oracle Wallet certificate for use with SSL.
      CertificateArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) for the certificate.
      CertificateOwner:
        $ref: '#/definitions/String'
        description: The owner of the certificate.
      ValidFromDate:
        $ref: '#/definitions/TStamp'
        description: The beginning date that the certificate is valid.
      ValidToDate:
        $ref: '#/definitions/TStamp'
        description: The final date that the certificate is valid.
      SigningAlgorithm:
        $ref: '#/definitions/String'
        description: The signing algorithm for the certificate.
      KeyLength:
        $ref: '#/definitions/IntegerOptional'
        description: The key length of the cryptographic algorithm being used.
    description: The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.
  CertificateList:
    type: array
    items:
      $ref: '#/definitions/Certificate'
  CompressionTypeValue:
    type: string
    enum:
      - none
      - gzip
  Connection:
    type: object
    properties:
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      Status:
        $ref: '#/definitions/String'
        description: The connection status.
      LastFailureMessage:
        $ref: '#/definitions/String'
        description: The error message when the connection last failed.
      EndpointIdentifier:
        $ref: '#/definitions/String'
        description: 'The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.'
      ReplicationInstanceIdentifier:
        $ref: '#/definitions/String'
        description: The replication instance identifier. This parameter is stored as a lowercase string.
    description: <p/>
  ConnectionList:
    type: array
    items:
      $ref: '#/definitions/Connection'
  ReplicationEndpointTypeValue:
    type: string
    enum:
      - source
      - target
  SecretString:
    type: string
    format: password
  DmsSslModeValue:
    type: string
    enum:
      - none
      - require
      - verify-ca
      - verify-full
  DynamoDbSettings:
    type: object
    required:
      - ServiceAccessRoleArn
    properties:
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) used by the service access IAM role. '
    description: <p/>
  S3Settings:
    type: object
    properties:
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: ' The Amazon Resource Name (ARN) used by the service access IAM role. '
      ExternalTableDefinition:
        $ref: '#/definitions/String'
        description: ' The external table definition. '
      CsvRowDelimiter:
        $ref: '#/definitions/String'
        description: ' The delimiter used to separate rows in the source files. The default is a carriage return (\n). '
      CsvDelimiter:
        $ref: '#/definitions/String'
        description: ' The delimiter used to separate columns in the source files. The default is a comma. '
      BucketFolder:
        $ref: '#/definitions/String'
        description: ' An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. '
      BucketName:
        $ref: '#/definitions/String'
        description: ' The name of the S3 bucket. '
      CompressionType:
        $ref: '#/definitions/CompressionTypeValue'
        description: ' An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. '
    description: <p/>
  DmsTransferSettings:
    type: object
    properties:
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: ' The IAM role that has permission to access the Amazon S3 bucket. '
      BucketName:
        $ref: '#/definitions/String'
        description: ' The name of the S3 bucket to use. '
    description: ' The settings in JSON format for the DMS Transfer type source endpoint. '
  MongoDbSettings:
    type: object
    properties:
      Username:
        $ref: '#/definitions/String'
        description: 'The user name you use to access the MongoDB source endpoint. '
      Password:
        $ref: '#/definitions/SecretString'
        description: ' The password for the user account you use to access the MongoDB source endpoint. '
      ServerName:
        $ref: '#/definitions/String'
        description: ' The name of the server on the MongoDB source endpoint. '
      Port:
        $ref: '#/definitions/IntegerOptional'
        description: ' The port value for the MongoDB source endpoint. '
      DatabaseName:
        $ref: '#/definitions/String'
        description: ' The database name on the MongoDB source endpoint. '
      AuthType:
        $ref: '#/definitions/AuthTypeValue'
        description: '<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>'
      AuthMechanism:
        $ref: '#/definitions/AuthMechanismValue'
        description: '<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>'
      NestingLevel:
        $ref: '#/definitions/NestingLevelValue'
        description: '<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>'
      ExtractDocId:
        $ref: '#/definitions/String'
        description: <p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>
      DocsToInvestigate:
        $ref: '#/definitions/String'
        description: <p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>
      AuthSource:
        $ref: '#/definitions/String'
        description: <p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>
      KmsKeyId:
        $ref: '#/definitions/String'
        description: ' The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. '
    description: <p/>
  Endpoint:
    type: object
    properties:
      EndpointIdentifier:
        $ref: '#/definitions/String'
        description: 'The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens.'
      EndpointType:
        $ref: '#/definitions/ReplicationEndpointTypeValue'
        description: The type of endpoint.
      EngineName:
        $ref: '#/definitions/String'
        description: 'The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.'
      EngineDisplayName:
        $ref: '#/definitions/String'
        description: 'The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is "aurora," this value would be "Amazon Aurora MySQL."'
      Username:
        $ref: '#/definitions/String'
        description: The user name used to connect to the endpoint.
      ServerName:
        $ref: '#/definitions/String'
        description: The name of the server at the endpoint.
      Port:
        $ref: '#/definitions/IntegerOptional'
        description: The port value used to access the endpoint.
      DatabaseName:
        $ref: '#/definitions/String'
        description: The name of the database at the endpoint.
      ExtraConnectionAttributes:
        $ref: '#/definitions/String'
        description: Additional connection attributes used to connect to the endpoint.
      Status:
        $ref: '#/definitions/String'
        description: The status of the endpoint.
      KmsKeyId:
        $ref: '#/definitions/String'
        description: 'The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      CertificateArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) used for SSL connection to the endpoint.
      SslMode:
        $ref: '#/definitions/DmsSslModeValue'
        description: '<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>'
      ServiceAccessRoleArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) used by the service access IAM role.
      ExternalTableDefinition:
        $ref: '#/definitions/String'
        description: The external table definition.
      ExternalId:
        $ref: '#/definitions/String'
        description: ' Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. '
      DynamoDbSettings:
        $ref: '#/definitions/DynamoDbSettings'
        description: 'The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure.'
      S3Settings:
        $ref: '#/definitions/S3Settings'
        description: 'The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure.'
      DmsTransferSettings:
        $ref: '#/definitions/DmsTransferSettings'
        description: '<p> The settings in JSON format for the DMS Transfer type source endpoint. </p> <p>Attributes include:</p> <ul> <li> <p>serviceAccessRoleArn - The IAM role that has permission to access the Amazon S3 bucket.</p> </li> <li> <p>bucketName - The name of the S3 bucket to use.</p> </li> <li> <p>compressionType - An optional parameter to use GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed.</p> </li> </ul> <p>Shorthand syntax: ServiceAccessRoleArn=string ,BucketName=string,CompressionType=string</p> <p>JSON syntax:</p> <p> { "ServiceAccessRoleArn": "string", "BucketName": "string", "CompressionType": "none"|"gzip" } </p>'
      MongoDbSettings:
        $ref: '#/definitions/MongoDbSettings'
        description: 'The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure.'
    description: <p/>
  EventCategoriesList:
    type: array
    items:
      $ref: '#/definitions/String'
  SourceIdsList:
    type: array
    items:
      $ref: '#/definitions/String'
  EventSubscription:
    type: object
    properties:
      CustomerAwsId:
        $ref: '#/definitions/String'
        description: The AWS customer account associated with the AWS DMS event notification subscription.
      CustSubscriptionId:
        $ref: '#/definitions/String'
        description: The AWS DMS event notification subscription Id.
      SnsTopicArn:
        $ref: '#/definitions/String'
        description: The topic ARN of the AWS DMS event notification subscription.
      Status:
        $ref: '#/definitions/String'
        description: '<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status "no-permission" indicates that AWS DMS no longer has permission to post to the SNS topic. The status "topic-not-exist" indicates that the topic was deleted after the subscription was created.</p>'
      SubscriptionCreationTime:
        $ref: '#/definitions/String'
        description: The time the RDS event notification subscription was created.
      SourceType:
        $ref: '#/definitions/String'
        description: '<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>'
      SourceIdsList:
        $ref: '#/definitions/SourceIdsList'
        description: A list of source Ids for the event subscription.
      EventCategoriesList:
        $ref: '#/definitions/EventCategoriesList'
        description: A lists of event categories.
      Enabled:
        $ref: '#/definitions/Boolean'
        description: Boolean value that indicates if the event subscription is enabled.
    description: <p/>
  VpcSecurityGroupIdList:
    type: array
    items:
      $ref: '#/definitions/String'
  ReplicationInstance:
    type: object
    properties:
      ReplicationInstanceIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>'
      ReplicationInstanceClass:
        $ref: '#/definitions/String'
        description: '<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      ReplicationInstanceStatus:
        $ref: '#/definitions/String'
        description: The status of the replication instance.
      AllocatedStorage:
        $ref: '#/definitions/Integer'
        description: The amount of storage (in gigabytes) that is allocated for the replication instance.
      InstanceCreateTime:
        $ref: '#/definitions/TStamp'
        description: The time the replication instance was created.
      VpcSecurityGroups:
        $ref: '#/definitions/VpcSecurityGroupMembershipList'
        description: The VPC security group for the instance.
      AvailabilityZone:
        $ref: '#/definitions/String'
        description: The Availability Zone for the instance.
      ReplicationSubnetGroup:
        $ref: '#/definitions/ReplicationSubnetGroup'
        description: The subnet group for the replication instance.
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
        description: The maintenance window times for the replication instance.
      PendingModifiedValues:
        $ref: '#/definitions/ReplicationPendingModifiedValues'
        description: The pending modification values.
      MultiAZ:
        $ref: '#/definitions/Boolean'
        description: ' Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. '
      EngineVersion:
        $ref: '#/definitions/String'
        description: The engine version number of the replication instance.
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/Boolean'
        description: Boolean value indicating if minor version upgrades will be automatically applied to the instance.
      KmsKeyId:
        $ref: '#/definitions/String'
        description: 'The KMS key identifier that is used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.'
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      ReplicationInstancePublicIpAddress:
        $ref: '#/definitions/String'
        description: The public IP address of the replication instance.
      ReplicationInstancePrivateIpAddress:
        $ref: '#/definitions/String'
        description: The private IP address of the replication instance.
      ReplicationInstancePublicIpAddresses:
        $ref: '#/definitions/ReplicationInstancePublicIpAddressList'
        description: The public IP address of the replication instance.
      ReplicationInstancePrivateIpAddresses:
        $ref: '#/definitions/ReplicationInstancePrivateIpAddressList'
        description: The private IP address of the replication instance.
      PubliclyAccessible:
        $ref: '#/definitions/Boolean'
        description: ' Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. '
      SecondaryAvailabilityZone:
        $ref: '#/definitions/String'
        description: The availability zone of the standby replication instance in a Multi-AZ deployment.
      FreeUntil:
        $ref: '#/definitions/TStamp'
        description: ' The expiration date of the free replication instance that is part of the Free DMS program. '
    description: <p/>
  SubnetIdentifierList:
    type: array
    items:
      $ref: '#/definitions/String'
  ReplicationSubnetGroup:
    type: object
    properties:
      ReplicationSubnetGroupIdentifier:
        $ref: '#/definitions/String'
        description: The identifier of the replication instance subnet group.
      ReplicationSubnetGroupDescription:
        $ref: '#/definitions/String'
        description: The description of the replication subnet group.
      VpcId:
        $ref: '#/definitions/String'
        description: The ID of the VPC.
      SubnetGroupStatus:
        $ref: '#/definitions/String'
        description: The status of the subnet group.
      Subnets:
        $ref: '#/definitions/SubnetList'
        description: The subnets that are in the subnet group.
    description: <p/>
  MigrationTypeValue:
    type: string
    enum:
      - full-load
      - cdc
      - full-load-and-cdc
  ReplicationTask:
    type: object
    properties:
      ReplicationTaskIdentifier:
        $ref: '#/definitions/String'
        description: '<p>The user-assigned replication task identifier or name.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>'
      SourceEndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      TargetEndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      MigrationType:
        $ref: '#/definitions/MigrationTypeValue'
        description: The type of migration.
      TableMappings:
        $ref: '#/definitions/String'
        description: Table mappings specified in the task.
      ReplicationTaskSettings:
        $ref: '#/definitions/String'
        description: The settings for the replication task.
      Status:
        $ref: '#/definitions/String'
        description: The status of the replication task.
      LastFailureMessage:
        $ref: '#/definitions/String'
        description: The last error (failure) message generated for the replication instance.
      StopReason:
        $ref: '#/definitions/String'
        description: The reason the replication task was stopped.
      ReplicationTaskCreationDate:
        $ref: '#/definitions/TStamp'
        description: The date the replication task was created.
      ReplicationTaskStartDate:
        $ref: '#/definitions/TStamp'
        description: The date the replication task is scheduled to start.
      CdcStartPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.</p> <p> The value can be in date, checkpoint, or LSN/SCN format.</p> <p>Date Example: --cdc-start-position “2018-03-08T12:12:12”</p> <p>Checkpoint Example: --cdc-start-position "checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93"</p> <p>LSN Example: --cdc-start-position “mysql-bin-changelog.000024:373”</p>'
      CdcStopPosition:
        $ref: '#/definitions/String'
        description: '<p>Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.</p> <p>Server time example: --cdc-stop-position “server_time:3018-02-09T12:12:12”</p> <p>Commit time example: --cdc-stop-position “commit_time: 3018-02-09T12:12:12 “</p>'
      RecoveryCheckpoint:
        $ref: '#/definitions/String'
        description: Indicates the last checkpoint that occurred during a change data capture (CDC) operation. You can provide this value to the <code>CdcStartPosition</code> parameter to start a CDC operation that begins at that checkpoint.
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task.
      ReplicationTaskStats:
        $ref: '#/definitions/ReplicationTaskStats'
        description: 'The statistics for the task, including elapsed time, tables loaded, and table errors.'
    description: <p/>
  FilterList:
    type: array
    items:
      $ref: '#/definitions/Filter'
  SupportedEndpointTypeList:
    type: array
    items:
      $ref: '#/definitions/SupportedEndpointType'
  EndpointList:
    type: array
    items:
      $ref: '#/definitions/Endpoint'
  EventCategoryGroupList:
    type: array
    items:
      $ref: '#/definitions/EventCategoryGroup'
  EventSubscriptionsList:
    type: array
    items:
      $ref: '#/definitions/EventSubscription'
  SourceType:
    type: string
    enum:
      - replication-instance
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
  OrderableReplicationInstanceList:
    type: array
    items:
      $ref: '#/definitions/OrderableReplicationInstance'
  RefreshSchemasStatus:
    type: object
    properties:
      EndpointArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.
      ReplicationInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication instance.
      Status:
        $ref: '#/definitions/RefreshSchemasStatusTypeValue'
        description: The status of the schema.
      LastRefreshDate:
        $ref: '#/definitions/TStamp'
        description: The date the schema was last refreshed.
      LastFailureMessage:
        $ref: '#/definitions/String'
        description: The last failure message for the schema.
    description: <p/>
  ReplicationInstanceTaskLogsList:
    type: array
    items:
      $ref: '#/definitions/ReplicationInstanceTaskLog'
  ReplicationInstanceList:
    type: array
    items:
      $ref: '#/definitions/ReplicationInstance'
  ReplicationSubnetGroups:
    type: array
    items:
      $ref: '#/definitions/ReplicationSubnetGroup'
  ReplicationTaskAssessmentResultList:
    type: array
    items:
      $ref: '#/definitions/ReplicationTaskAssessmentResult'
  ReplicationTaskList:
    type: array
    items:
      $ref: '#/definitions/ReplicationTask'
  SchemaList:
    type: array
    items:
      $ref: '#/definitions/String'
  TableStatisticsList:
    type: array
    items:
      $ref: '#/definitions/TableStatistics'
  Event:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
        description: '<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>'
      SourceType:
        $ref: '#/definitions/SourceType'
        description: '<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>'
      Message:
        $ref: '#/definitions/String'
        description: The event message.
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
        description: The event categories available for the specified source type.
      Date:
        $ref: '#/definitions/TStamp'
        description: The date of the event.
    description: <p/>
  EventCategoryGroup:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/String'
        description: '<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
        description: ' A list of event categories for a <code>SourceType</code> that you want to subscribe to. '
    description: <p/>
  FilterValueList:
    type: array
    items:
      $ref: '#/definitions/String'
  Filter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/FilterValueList'
        description: The filter value.
    description: <p/>
  Integer:
    type: integer
  KeyList:
    type: array
    items:
      $ref: '#/definitions/String'
  NestingLevelValue:
    type: string
    enum:
      - none
      - one
  OrderableReplicationInstance:
    type: object
    properties:
      EngineVersion:
        $ref: '#/definitions/String'
        description: The version of the replication engine.
      ReplicationInstanceClass:
        $ref: '#/definitions/String'
        description: '<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      StorageType:
        $ref: '#/definitions/String'
        description: The type of storage used by the replication instance.
      MinAllocatedStorage:
        $ref: '#/definitions/Integer'
        description: The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.
      MaxAllocatedStorage:
        $ref: '#/definitions/Integer'
        description: The minimum amount of storage (in gigabytes) that can be allocated for the replication instance.
      DefaultAllocatedStorage:
        $ref: '#/definitions/Integer'
        description: The default amount of storage (in gigabytes) that is allocated for the replication instance.
      IncludedAllocatedStorage:
        $ref: '#/definitions/Integer'
        description: The amount of storage (in gigabytes) that is allocated for the replication instance.
    description: <p/>
  RefreshSchemasStatusTypeValue:
    type: string
    enum:
      - successful
      - failed
      - refreshing
  ReloadOptionValue:
    type: string
    enum:
      - data-reload
      - validate-only
  TableListToReload:
    type: array
    items:
      $ref: '#/definitions/TableToReload'
  VpcSecurityGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/VpcSecurityGroupMembership'
  ReplicationPendingModifiedValues:
    type: object
    properties:
      ReplicationInstanceClass:
        $ref: '#/definitions/String'
        description: '<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>'
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
        description: The amount of storage (in gigabytes) that is allocated for the replication instance.
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
        description: ' Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. '
      EngineVersion:
        $ref: '#/definitions/String'
        description: The engine version number of the replication instance.
    description: <p/>
  ReplicationInstancePublicIpAddressList:
    type: array
    items:
      $ref: '#/definitions/String'
  ReplicationInstancePrivateIpAddressList:
    type: array
    items:
      $ref: '#/definitions/String'
  ReplicationInstanceTaskLog:
    type: object
    properties:
      ReplicationTaskName:
        $ref: '#/definitions/String'
        description: The name of the replication task.
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the replication task.
      ReplicationInstanceTaskLogSize:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of the replication task log.'
    description: Contains metadata for a replication instance task log.
  SubnetList:
    type: array
    items:
      $ref: '#/definitions/Subnet'
  ReplicationTaskStats:
    type: object
    properties:
      FullLoadProgressPercent:
        $ref: '#/definitions/Integer'
        description: The percent complete for the full load migration task.
      ElapsedTimeMillis:
        $ref: '#/definitions/Long'
        description: 'The elapsed time of the task, in milliseconds.'
      TablesLoaded:
        $ref: '#/definitions/Integer'
        description: The number of tables loaded for this task.
      TablesLoading:
        $ref: '#/definitions/Integer'
        description: The number of tables currently loading for this task.
      TablesQueued:
        $ref: '#/definitions/Integer'
        description: The number of tables queued for this task.
      TablesErrored:
        $ref: '#/definitions/Integer'
        description: The number of errors that have occurred during this task.
    description: <p/>
  ReplicationTaskAssessmentResult:
    type: object
    properties:
      ReplicationTaskIdentifier:
        $ref: '#/definitions/String'
        description: ' The replication task identifier of the task on which the task assessment was run. '
      ReplicationTaskArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the replication task. '
      ReplicationTaskLastAssessmentDate:
        $ref: '#/definitions/TStamp'
        description: 'The date the task assessment was completed. '
      AssessmentStatus:
        $ref: '#/definitions/String'
        description: ' The status of the task assessment. '
      AssessmentResultsFile:
        $ref: '#/definitions/String'
        description: ' The file containing the results of the task assessment. '
      AssessmentResults:
        $ref: '#/definitions/String'
        description: ' The task assessment results in JSON format. '
      S3ObjectUrl:
        $ref: '#/definitions/String'
        description: ' The URL of the S3 object containing the task assessment results. '
    description: ' The task assessment report in JSON format. '
  StartReplicationTaskTypeValue:
    type: string
    enum:
      - start-replication
      - resume-processing
      - reload-target
  Subnet:
    type: object
    properties:
      SubnetIdentifier:
        $ref: '#/definitions/String'
        description: The subnet identifier.
      SubnetAvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
        description: The Availability Zone of the subnet.
      SubnetStatus:
        $ref: '#/definitions/String'
        description: The status of the subnet.
    description: <p/>
  SupportedEndpointType:
    type: object
    properties:
      EngineName:
        $ref: '#/definitions/String'
        description: 'The database engine name. Valid values, depending on the EndPointType, include mysql, oracle, postgres, mariadb, aurora, aurora-postgresql, redshift, s3, db2, azuredb, sybase, sybase, dynamodb, mongodb, and sqlserver.'
      SupportsCDC:
        $ref: '#/definitions/Boolean'
        description: Indicates if Change Data Capture (CDC) is supported.
      EndpointType:
        $ref: '#/definitions/ReplicationEndpointTypeValue'
        description: The type of endpoint.
      EngineDisplayName:
        $ref: '#/definitions/String'
        description: 'The expanded name for the engine name. For example, if the <code>EngineName</code> parameter is "aurora," this value would be "Amazon Aurora MySQL."'
    description: <p/>
  TableToReload:
    type: object
    properties:
      SchemaName:
        $ref: '#/definitions/String'
        description: The schema name of the table to be reloaded.
      TableName:
        $ref: '#/definitions/String'
        description: The table name of the table to be reloaded.
    description: <p/>
  TableStatistics:
    type: object
    properties:
      SchemaName:
        $ref: '#/definitions/String'
        description: The schema name.
      TableName:
        $ref: '#/definitions/String'
        description: The name of the table.
      Inserts:
        $ref: '#/definitions/Long'
        description: The number of insert actions performed on a table.
      Deletes:
        $ref: '#/definitions/Long'
        description: The number of delete actions performed on a table.
      Updates:
        $ref: '#/definitions/Long'
        description: The number of update actions performed on a table.
      Ddls:
        $ref: '#/definitions/Long'
        description: The Data Definition Language (DDL) used to build and modify the structure of your tables.
      FullLoadRows:
        $ref: '#/definitions/Long'
        description: The number of rows added during the Full Load operation.
      FullLoadCondtnlChkFailedRows:
        $ref: '#/definitions/Long'
        description: The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations).
      FullLoadErrorRows:
        $ref: '#/definitions/Long'
        description: The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations).
      LastUpdateTime:
        $ref: '#/definitions/TStamp'
        description: The last time the table was updated.
      TableState:
        $ref: '#/definitions/String'
        description: '<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>'
      ValidationPendingRecords:
        $ref: '#/definitions/Long'
        description: The number of records that have yet to be validated.
      ValidationFailedRecords:
        $ref: '#/definitions/Long'
        description: The number of records that failed validation.
      ValidationSuspendedRecords:
        $ref: '#/definitions/Long'
        description: The number of records that could not be validated.
      ValidationState:
        $ref: '#/definitions/String'
        description: '<p>The validation state of the table.</p> <p>The parameter can have the following values</p> <ul> <li> <p>Not enabled—Validation is not enabled for the table in the migration task.</p> </li> <li> <p>Pending records—Some records in the table are waiting for validation.</p> </li> <li> <p>Mismatched records—Some records in the table do not match between the source and target.</p> </li> <li> <p>Suspended records—Some records in the table could not be validated.</p> </li> <li> <p>No primary key—The table could not be validated because it had no primary key.</p> </li> <li> <p>Table error—The table was not validated because it was in an error state and some data was not migrated.</p> </li> <li> <p>Validated—All rows in the table were validated. If the table is updated, the status can change from Validated.</p> </li> <li> <p>Error—The table could not be validated because of an unexpected error.</p> </li> </ul>'
      ValidationStateDetails:
        $ref: '#/definitions/String'
        description: Additional details about the state of validation.
    description: <p/>
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/String'
        description: 'A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with "aws:" or "dms:". The string can only contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
      Value:
        $ref: '#/definitions/String'
        description: 'A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with "aws:" or "dms:". The string can only contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
    description: <p/>
  VpcSecurityGroupMembership:
    type: object
    properties:
      VpcSecurityGroupId:
        $ref: '#/definitions/String'
        description: The VPC security group Id.
      Status:
        $ref: '#/definitions/String'
        description: The status of the VPC security group.
    description: <p/>
