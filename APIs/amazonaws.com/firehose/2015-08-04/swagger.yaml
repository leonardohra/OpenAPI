swagger: '2.0'
info:
  version: '2015-08-04'
  x-release: v4
  title: Amazon Kinesis Firehose
  description: '<fullname>Amazon Kinesis Data Firehose API Reference</fullname> <p>Amazon Kinesis Data Firehose is a fully managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch Service (Amazon ES), Amazon Redshift, and Splunk.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: firehose
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/firehose-2015-08-04.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/firehose/'
host: firehose.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateDeliveryStream
      description: '<p>Creates a Kinesis Data Firehose delivery stream.</p> <p>By default, you can create up to 50 delivery streams per AWS Region.</p> <p>This is an asynchronous operation that immediately returns. The initial status of the delivery stream is <code>CREATING</code>. After the delivery stream is created, its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to a delivery stream that is not in the <code>ACTIVE</code> state cause an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>A Kinesis Data Firehose delivery stream can be configured to receive records directly from providers using <a>PutRecord</a> or <a>PutRecordBatch</a>, or it can be configured to use an existing Kinesis stream as its source. To specify a Kinesis data stream as input, set the <code>DeliveryStreamType</code> parameter to <code>KinesisStreamAsSource</code>, and provide the Kinesis stream Amazon Resource Name (ARN) and role ARN in the <code>KinesisStreamSourceConfiguration</code> parameter.</p> <p>A delivery stream is configured with a single destination: Amazon S3, Amazon ES, Amazon Redshift, or Splunk. You must specify only one of the following destination configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>, <b>ElasticsearchDestinationConfiguration</b>, <b>RedshiftDestinationConfiguration</b>, or <b>SplunkDestinationConfiguration</b>.</p> <p>When you specify <b>S3DestinationConfiguration</b>, you can also provide the following optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>. By default, if no <b>BufferingHints</b> value is provided, Kinesis Data Firehose buffers data up to 5 MB or for 5 minutes, whichever condition is satisfied first. <b>BufferingHints</b> is a hint, so there are some cases where the service cannot adhere to these conditions strictly. For example, record boundaries might be such that the size is a little over or under the configured buffering size. By default, no encryption is performed. We strongly recommend that you enable encryption to ensure secure data storage in Amazon S3.</p> <p>A few notes about Amazon Redshift as a destination:</p> <ul> <li> <p>An Amazon Redshift destination requires an S3 bucket as intermediate location. Kinesis Data Firehose first delivers data to Amazon S3 and then uses <code>COPY</code> syntax to load data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b> parameter.</p> </li> <li> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn''t support these compression formats.</p> </li> <li> <p>We strongly recommend that you use the user name and password you provide exclusively with Kinesis Data Firehose, and that the permissions for the account are restricted for Amazon Redshift <code>INSERT</code> permissions.</p> </li> </ul> <p>Kinesis Data Firehose assumes the IAM role that is configured as part of the destination. The role should allow the Kinesis Data Firehose principal to assume the role, and the role should have permissions that allow the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant Kinesis Data Firehose Access to an Amazon S3 Destination</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDeliveryStreamOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDeliveryStream':
    post:
      operationId: DeleteDeliveryStream
      description: '<p>Deletes a delivery stream and its data.</p> <p>You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code> state, and not in the <code>CREATING</code> state. While the deletion request is in process, the delivery stream is in the <code>DELETING</code> state.</p> <p>To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>While the delivery stream is <code>DELETING</code> state, the service might continue to accept the records, but it doesn''t make any guarantees with respect to delivering the data. Therefore, as a best practice, you should first stop any applications that are sending records before deleting a delivery stream.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDeliveryStreamOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDeliveryStream':
    post:
      operationId: DescribeDeliveryStream
      description: 'Describes the specified delivery stream and gets the status. For example, after your delivery stream is created, call <code>DescribeDeliveryStream</code> to see whether the delivery stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDeliveryStreams':
    post:
      operationId: ListDeliveryStreams
      description: '<p>Lists your delivery streams.</p> <p>The number of delivery streams might be too large to return using a single call to <code>ListDeliveryStreams</code>. You can limit the number of delivery streams returned, using the <b>Limit</b> parameter. To determine whether there are more delivery streams to list, check the value of <code>HasMoreDeliveryStreams</code> in the output. If there are more delivery streams to list, you can request them by specifying the name of the last delivery stream returned in the call in the <code>ExclusiveStartDeliveryStreamName</code> parameter of a subsequent call.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDeliveryStreamsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDeliveryStreamsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForDeliveryStream':
    post:
      operationId: ListTagsForDeliveryStream
      description: 'Lists the tags for the specified delivery stream. This operation has a limit of five transactions per second per account. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutRecord':
    post:
      operationId: PutRecord
      description: '<p>Writes a single data record into an Amazon Kinesis Data Firehose delivery stream. To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Data Firehose Limits</a>. </p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data. For example, it can be a segment from a log file, geographic location data, website clickstream data, and so on.</p> <p>Kinesis Data Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application to parse individual data items when reading the data from the destination.</p> <p>The <code>PutRecord</code> operation returns a <code>RecordId</code>, which is a unique string assigned to each record. Producer applications can use this ID for purposes such as auditability and investigation.</p> <p>If the <code>PutRecord</code> operation throws a <code>ServiceUnavailableException</code>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream. </p> <p>Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they are added to a delivery stream as it tries to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRecordInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutRecordBatch':
    post:
      operationId: PutRecordBatch
      description: '<p>Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records. To write single data records into a delivery stream, use <a>PutRecord</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. If you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Data Firehose Limits</a>.</p> <p>Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB for the entire request. These limits cannot be changed.</p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data. For example, it could be a segment from a log file, geographic location data, website clickstream data, and so on.</p> <p>Kinesis Data Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application to parse individual data items when reading the data from the destination.</p> <p>The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>, and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b> array provides additional information about the processed record. It directly correlates with a record in the request array using the same ordering, from the top to the bottom. The response array always includes the same number of records as the request array. <b>RequestResponses</b> includes both successfully and unsuccessfully processed records. Kinesis Data Firehose tries to process all records in each <a>PutRecordBatch</a> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully processed record includes a <b>RecordId</b> value, which is unique for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b> reflects the type of error, and is one of the following values: <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b> provides more detailed information about the error.</p> <p>If there is an internal server error or a timeout, the write might have completed or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request, resending only those records that might have failed processing. This minimizes the possible duplicate records and also reduces the total bytes sent (and corresponding charges). We recommend that you handle any duplicates at the destination.</p> <p>If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream.</p> <p>Data records sent to Kinesis Data Firehose are stored for 24 hours from the time they are added to a delivery stream as it attempts to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRecordBatchOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRecordBatchInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TagDeliveryStream':
    post:
      operationId: TagDeliveryStream
      description: '<p>Adds or updates tags for the specified delivery stream. A tag is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p> <p> Each delivery stream can have up to 50 tags. </p> <p> This operation has a limit of five transactions per second per account. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UntagDeliveryStream':
    post:
      operationId: UntagDeliveryStream
      description: '<p>Removes tags from the specified delivery stream. Removed tags are deleted, and you can''t recover them after this operation successfully completes.</p> <p>If you specify a tag that doesn''t exist, the operation ignores it.</p> <p>This operation has a limit of five transactions per second per account. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagDeliveryStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDestination':
    post:
      operationId: UpdateDestination
      description: '<p>Updates the specified destination of the specified delivery stream.</p> <p>Use this operation to change the destination type (for example, to replace the Amazon S3 destination with Amazon Redshift) or change the parameters associated with a destination (for example, to change the bucket name of the Amazon S3 destination). The update might not occur immediately. The target delivery stream remains active while the configurations are updated, so data writes to the delivery stream can continue during this process. The updated configurations are usually effective within a few minutes.</p> <p>Switching between Amazon ES and other services is not supported. For an Amazon ES destination, you can only update to another Amazon ES destination.</p> <p>If the destination type is the same, Kinesis Data Firehose merges the configuration parameters specified with the destination configuration that already exists on the delivery stream. If any of the parameters are not specified in the call, the existing values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not specified, then the existing <code>EncryptionConfiguration</code> is maintained on the destination.</p> <p>If the destination type is not the same, for example, changing the destination from Amazon S3 to Amazon Redshift, Kinesis Data Firehose does not merge any parameters. In this case, all parameters must be specified.</p> <p>Kinesis Data Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting merges. This is a required field, and the service updates the configuration only if the existing configuration has a version ID that matches. After the update is applied successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>. Use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in the next call.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDestinationOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDestinationInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateDeliveryStreamOutput:
    type: object
    properties:
      DeliveryStreamARN:
        $ref: '#/definitions/DeliveryStreamARN'
        description: The ARN of the delivery stream.
  CreateDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: 'The name of the delivery stream. This name must be unique per AWS account in the same AWS Region. If the delivery streams are in different accounts or different Regions, you can have multiple delivery streams with the same name.'
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This parameter can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream as a source.</p> </li> </ul>'
      KinesisStreamSourceConfiguration:
        $ref: '#/definitions/KinesisStreamSourceConfiguration'
        description: 'When a Kinesis data stream is used as the source for the delivery stream, a <a>KinesisStreamSourceConfiguration</a> containing the Kinesis data stream Amazon Resource Name (ARN) and the role ARN for the source stream.'
      S3DestinationConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: '[Deprecated] The destination in Amazon S3. You can specify only one destination.'
      ExtendedS3DestinationConfiguration:
        $ref: '#/definitions/ExtendedS3DestinationConfiguration'
        description: The destination in Amazon S3. You can specify only one destination.
      RedshiftDestinationConfiguration:
        $ref: '#/definitions/RedshiftDestinationConfiguration'
        description: The destination in Amazon Redshift. You can specify only one destination.
      ElasticsearchDestinationConfiguration:
        $ref: '#/definitions/ElasticsearchDestinationConfiguration'
        description: The destination in Amazon ES. You can specify only one destination.
      SplunkDestinationConfiguration:
        $ref: '#/definitions/SplunkDestinationConfiguration'
        description: The destination in Splunk. You can specify only one destination.
  InvalidArgumentException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: The specified input parameter has a value that is not valid.
  LimitExceededException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: You have already reached the limit for a requested resource.
  ResourceInUseException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: The resource is already in use and not available for this operation.
  DeleteDeliveryStreamOutput:
    type: object
    properties: {}
  DeleteDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
  ResourceNotFoundException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: The specified resource could not be found.
  DescribeDeliveryStreamOutput:
    type: object
    required:
      - DeliveryStreamDescription
    properties:
      DeliveryStreamDescription:
        $ref: '#/definitions/DeliveryStreamDescription'
        description: Information about the delivery stream.
  DescribeDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      Limit:
        $ref: '#/definitions/DescribeDeliveryStreamInputLimit'
        description: The limit on the number of destinations to return. You can have one destination per delivery stream.
      ExclusiveStartDestinationId:
        $ref: '#/definitions/DestinationId'
        description: The ID of the destination to start returning the destination information. Kinesis Data Firehose supports one destination per delivery stream.
  ListDeliveryStreamsOutput:
    type: object
    required:
      - DeliveryStreamNames
      - HasMoreDeliveryStreams
    properties:
      DeliveryStreamNames:
        $ref: '#/definitions/DeliveryStreamNameList'
        description: The names of the delivery streams.
      HasMoreDeliveryStreams:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether there are more delivery streams available to list.
  ListDeliveryStreamsInput:
    type: object
    properties:
      Limit:
        $ref: '#/definitions/ListDeliveryStreamsInputLimit'
        description: The maximum number of delivery streams to list. The default value is 10.
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream as a source.</p> </li> </ul> <p>This parameter is optional. If this parameter is omitted, delivery streams of all types are returned.</p>'
      ExclusiveStartDeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream to start the list with.
  ListTagsForDeliveryStreamOutput:
    type: object
    required:
      - Tags
      - HasMoreTags
    properties:
      Tags:
        $ref: '#/definitions/ListTagsForDeliveryStreamOutputTagList'
        description: 'A list of tags associated with <code>DeliveryStreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.'
      HasMoreTags:
        $ref: '#/definitions/BooleanObject'
        description: 'If this is <code>true</code> in the response, more tags are available. To list the remaining tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned and call <code>ListTagsForDeliveryStream</code> again.'
  ListTagsForDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream whose tags you want to list.
      ExclusiveStartTagKey:
        $ref: '#/definitions/TagKey'
        description: 'The key to use as the starting point for the list of tags. If you set this parameter, <code>ListTagsForDeliveryStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.'
      Limit:
        $ref: '#/definitions/ListTagsForDeliveryStreamInputLimit'
        description: 'The number of tags to return. If this number is less than the total number of tags associated with the delivery stream, <code>HasMoreTags</code> is set to <code>true</code> in the response. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response. '
  PutRecordOutput:
    type: object
    required:
      - RecordId
    properties:
      RecordId:
        $ref: '#/definitions/PutResponseRecordId'
        description: The ID of the record.
  PutRecordInput:
    type: object
    required:
      - DeliveryStreamName
      - Record
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      Record:
        $ref: '#/definitions/Record'
        description: The record.
  ServiceUnavailableException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: 'The service is unavailable. Back off and retry the operation. If you continue to see the exception, throughput limits for the delivery stream may have been exceeded. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Data Firehose Limits</a>.'
  PutRecordBatchOutput:
    type: object
    required:
      - FailedPutCount
      - RequestResponses
    properties:
      FailedPutCount:
        $ref: '#/definitions/NonNegativeIntegerObject'
        description: The number of records that might have failed processing.
      RequestResponses:
        $ref: '#/definitions/PutRecordBatchResponseEntryList'
        description: 'The results array. For each record, the index of the response element is the same as the index used in the request array.'
  PutRecordBatchInput:
    type: object
    required:
      - DeliveryStreamName
      - Records
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      Records:
        $ref: '#/definitions/PutRecordBatchRequestEntryList'
        description: One or more records.
  TagDeliveryStreamOutput:
    type: object
    properties: {}
  TagDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
      - Tags
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream to which you want to add the tags.
      Tags:
        $ref: '#/definitions/TagDeliveryStreamInputTagList'
        description: A set of key-value pairs to use to create the tags.
  UntagDeliveryStreamOutput:
    type: object
    properties: {}
  UntagDeliveryStreamInput:
    type: object
    required:
      - DeliveryStreamName
      - TagKeys
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: A list of tag keys. Each corresponding tag is removed from the delivery stream.
  UpdateDestinationOutput:
    type: object
    properties: {}
  UpdateDestinationInput:
    type: object
    required:
      - DeliveryStreamName
      - CurrentDeliveryStreamVersionId
      - DestinationId
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      CurrentDeliveryStreamVersionId:
        $ref: '#/definitions/DeliveryStreamVersionId'
        description: 'Obtain this value from the <b>VersionId</b> result of <a>DeliveryStreamDescription</a>. This value is required, and helps the service perform conditional operations. For example, if there is an interleaving update and this value is null, then the update destination fails. After the update is successful, the <code>VersionId</code> value is updated. The service then performs a merge of the old configuration with the new configuration.'
      DestinationId:
        $ref: '#/definitions/DestinationId'
        description: The ID of the destination.
      S3DestinationUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: '[Deprecated] Describes an update for a destination in Amazon S3.'
      ExtendedS3DestinationUpdate:
        $ref: '#/definitions/ExtendedS3DestinationUpdate'
        description: Describes an update for a destination in Amazon S3.
      RedshiftDestinationUpdate:
        $ref: '#/definitions/RedshiftDestinationUpdate'
        description: Describes an update for a destination in Amazon Redshift.
      ElasticsearchDestinationUpdate:
        $ref: '#/definitions/ElasticsearchDestinationUpdate'
        description: Describes an update for a destination in Amazon ES.
      SplunkDestinationUpdate:
        $ref: '#/definitions/SplunkDestinationUpdate'
        description: Describes an update for a destination in Splunk.
  ConcurrentModificationException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: A message that provides information about the error.
    description: Another modification has already happened. Fetch <b>VersionId</b> again and use it to update the destination.
  AWSKMSKeyARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  BlockSizeBytes:
    type: integer
    minimum: 67108864
  BooleanObject:
    type: boolean
  BucketARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 2048
  SizeInMBs:
    type: integer
    minimum: 1
    maximum: 128
  IntervalInSeconds:
    type: integer
    minimum: 60
    maximum: 900
  BufferingHints:
    type: object
    properties:
      SizeInMBs:
        $ref: '#/definitions/SizeInMBs'
        description: '<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>'
      IntervalInSeconds:
        $ref: '#/definitions/IntervalInSeconds'
        description: 'Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.'
    description: 'Describes hints for the buffering to perform before delivering data to the destination. These options are treated as hints, and therefore Kinesis Data Firehose might choose to use different values when it is optimal.'
  LogGroupName:
    type: string
  LogStreamName:
    type: string
  CloudWatchLoggingOptions:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables CloudWatch logging.
      LogGroupName:
        $ref: '#/definitions/LogGroupName'
        description: The CloudWatch group name for logging. This value is required if CloudWatch logging is enabled.
      LogStreamName:
        $ref: '#/definitions/LogStreamName'
        description: The CloudWatch log stream name for logging. This value is required if CloudWatch logging is enabled.
    description: Describes the Amazon CloudWatch logging options for your delivery stream.
  ClusterJDBCURL:
    type: string
    pattern: 'jdbc:(redshift|postgresql)://((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+redshift\.amazonaws\.com:\d{1,5}/[a-zA-Z0-9_$]+'
    minLength: 1
  NonEmptyStringWithoutWhitespace:
    type: string
    pattern: ^\S+$
  NonEmptyString:
    type: string
    pattern: ^(?!\s*$).+
  ColumnToJsonKeyMappings:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        value:
          $ref: '#/definitions/NonEmptyString'
  CompressionFormat:
    type: string
    enum:
      - UNCOMPRESSED
      - GZIP
      - ZIP
      - Snappy
  ErrorMessage:
    type: string
  DataTableName:
    type: string
    minLength: 1
  DataTableColumns:
    type: string
  CopyOptions:
    type: string
  CopyCommand:
    type: object
    required:
      - DataTableName
    properties:
      DataTableName:
        $ref: '#/definitions/DataTableName'
        description: The name of the target table. The table must already exist in the database.
      DataTableColumns:
        $ref: '#/definitions/DataTableColumns'
        description: A comma-separated list of column names.
      CopyOptions:
        $ref: '#/definitions/CopyOptions'
        description: '<p>Optional parameters to use with the Amazon Redshift <code>COPY</code> command. For more information, see the "Optional Parameters" section of <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html">Amazon Redshift COPY command</a>. Some possible examples that would apply to Kinesis Data Firehose are as follows:</p> <p> <code>delimiter ''\t'' lzop;</code> - fields are delimited with "\t" (TAB character) and compressed using lzop.</p> <p> <code>delimiter ''|''</code> - fields are delimited with "|" (this is the default delimiter).</p> <p> <code>delimiter ''|'' escape</code> - the delimiter should be escaped.</p> <p> <code>fixedwidth ''venueid:3,venuename:25,venuecity:12,venuestate:2,venueseats:6''</code> - fields are fixed width in the source, with each width specified after every column in the table.</p> <p> <code>JSON ''s3://mybucket/jsonpaths.txt''</code> - data is in JSON format, and the path specified is the format of the data.</p> <p>For more examples, see <a href="http://docs.aws.amazon.com/redshift/latest/dg/r_COPY_command_examples.html">Amazon Redshift COPY command examples</a>.</p>'
    description: Describes a <code>COPY</code> command for Amazon Redshift.
  DeliveryStreamName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 64
  DeliveryStreamType:
    type: string
    enum:
      - DirectPut
      - KinesisStreamAsSource
  KinesisStreamSourceConfiguration:
    type: object
    required:
      - KinesisStreamARN
      - RoleARN
    properties:
      KinesisStreamARN:
        $ref: '#/definitions/KinesisStreamARN'
        description: 'The ARN of the source Kinesis data stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon Kinesis Data Streams ARN Format</a>.'
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The ARN of the role that provides access to the source Kinesis data stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM) ARN Format</a>.'
    description: The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream.
  S3DestinationConfiguration:
    type: object
    required:
      - RoleARN
      - BucketARN
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <code>BufferingHints</code> object default values are used.'
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: '<p>The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified for Amazon Redshift destinations because they are not supported by the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket.</p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
    description: Describes the configuration of a destination in Amazon S3.
  ExtendedS3DestinationConfiguration:
    type: object
    required:
      - RoleARN
      - BucketARN
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is UNCOMPRESSED.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for backup in Amazon S3.
      DataFormatConversionConfiguration:
        $ref: '#/definitions/DataFormatConversionConfiguration'
        description: 'The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.'
    description: Describes the configuration of a destination in Amazon S3.
  RedshiftDestinationConfiguration:
    type: object
    required:
      - RoleARN
      - ClusterJDBCURL
      - CopyCommand
      - Username
      - Password
      - S3Configuration
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
      Password:
        $ref: '#/definitions/Password'
        description: The user password.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      S3Configuration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: <p>The configuration for the intermediate Amazon S3 location from which Amazon Redshift obtains data. Restrictions are described in the topic for <a>CreateDeliveryStream</a>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression formats.</p>
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupConfiguration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for backup in Amazon S3.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
    description: Describes the configuration of a destination in Amazon Redshift.
  ElasticsearchDestinationConfiguration:
    type: object
    required:
      - RoleARN
      - DomainARN
      - IndexName
      - TypeName
      - S3Configuration
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant Kinesis Data Firehose Access to an Amazon S3 Destination</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: "The ARN of the Amazon ES domain. The IAM role must have permissions for\_<code>DescribeElasticsearchDomain</code>, <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code>\_after assuming the role specified in <b>RoleARN</b>. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>."
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: 'The Elasticsearch type name. For Elasticsearch 6.x, there can be only one type per index. If you try to specify a new type for an existing index that already has another type, Kinesis Data Firehose returns an error during run time.'
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: "The Elasticsearch index rotation period. Index rotation appends a time stamp to the <code>IndexName</code> to facilitate the expiration of old data. For more information, see <a href=\"http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation\">Index Rotation for the Amazon ES Destination</a>. The default value is\_<code>OneDay</code>."
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: 'The buffering options. If no value is specified, the default values for <code>ElasticsearchBufferingHints</code> are used.'
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon ES. The default value is 300 (5 minutes).
      S3BackupMode:
        $ref: '#/definitions/ElasticsearchS3BackupMode'
        description: 'Defines how documents should be delivered to Amazon S3. When it is set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with <code>elasticsearch-failed/</code> appended to the key prefix. When set to <code>AllDocuments</code>, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents with <code>elasticsearch-failed/</code> appended to the prefix. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-s3-backup">Amazon S3 Backup for the Amazon ES Destination</a>. Default value is <code>FailedDocumentsOnly</code>.'
      S3Configuration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for the backup Amazon S3 location.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes the configuration of a destination in Amazon ES.
  SplunkDestinationConfiguration:
    type: object
    required:
      - HECEndpoint
      - HECEndpointType
      - HECToken
      - S3Configuration
    properties:
      HECEndpoint:
        $ref: '#/definitions/HECEndpoint'
        description: The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your data.
      HECEndpointType:
        $ref: '#/definitions/HECEndpointType'
        description: This type can be either "Raw" or "Event."
      HECToken:
        $ref: '#/definitions/HECToken'
        description: This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
      HECAcknowledgmentTimeoutInSeconds:
        $ref: '#/definitions/HECAcknowledgmentTimeoutInSeconds'
        description: 'The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Kinesis Data Firehose either tries to send the data again or considers it an error, based on your retry settings.'
      RetryOptions:
        $ref: '#/definitions/SplunkRetryOptions'
        description: 'The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk, or if it doesn''t receive an acknowledgment of receipt from Splunk.'
      S3BackupMode:
        $ref: '#/definitions/SplunkS3BackupMode'
        description: 'Defines how documents should be delivered to Amazon S3. When set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to <code>AllDocuments</code>, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. Default value is <code>FailedDocumentsOnly</code>. '
      S3Configuration:
        $ref: '#/definitions/S3DestinationConfiguration'
        description: The configuration for the backup Amazon S3 location.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes the configuration of a destination in Splunk.
  DeliveryStreamARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  Data:
    type: string
    minLength: 0
    maxLength: 1024000
  SchemaConfiguration:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
      CatalogId:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: 'The ID of the AWS Glue Data Catalog. If you don''t supply this, the AWS account ID is used by default.'
      DatabaseName:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: Specifies the name of the AWS Glue database that contains the schema for the output data.
      TableName:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: Specifies the AWS Glue table that contains the column information that constitutes your data schema.
      Region:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: 'If you don''t specify an AWS Region, the default is the current Region.'
      VersionId:
        $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
        description: 'Specifies the table version for the output data schema. If you don''t specify this version ID, or if you set it to <code>LATEST</code>, Kinesis Data Firehose uses the most recent version. This means that any updates to the table are automatically picked up.'
    description: Specifies the schema to which you want Kinesis Data Firehose to configure your data before it writes it to Amazon S3.
  InputFormatConfiguration:
    type: object
    properties:
      Deserializer:
        $ref: '#/definitions/Deserializer'
        description: 'Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request.'
    description: Specifies the deserializer you want to use to convert the format of the input data.
  OutputFormatConfiguration:
    type: object
    properties:
      Serializer:
        $ref: '#/definitions/Serializer'
        description: 'Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request.'
    description: Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data before it writes it to Amazon S3.
  DataFormatConversionConfiguration:
    type: object
    properties:
      SchemaConfiguration:
        $ref: '#/definitions/SchemaConfiguration'
        description: Specifies the AWS Glue Data Catalog table that contains the column information.
      InputFormatConfiguration:
        $ref: '#/definitions/InputFormatConfiguration'
        description: Specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON.
      OutputFormatConfiguration:
        $ref: '#/definitions/OutputFormatConfiguration'
        description: Specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format.
      Enabled:
        $ref: '#/definitions/BooleanObject'
        description: Defaults to <code>true</code>. Set it to <code>false</code> if you want to disable format conversion while preserving the configuration details.
    description: 'Specifies that you want Kinesis Data Firehose to convert data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. Kinesis Data Firehose uses the serializer and deserializer that you specify, in addition to the column information from the AWS Glue table, to deserialize your input data from JSON and then serialize it to the Parquet or ORC format. For more information, see <a href="https://docs.aws.amazon.com/firehose/latest/dev/record-format-conversion.html">Kinesis Data Firehose Record Format Conversion</a>.'
  DeliveryStartTimestamp:
    type: string
    format: date-time
  DeliveryStreamStatus:
    type: string
    enum:
      - CREATING
      - DELETING
      - ACTIVE
  DeliveryStreamVersionId:
    type: string
    pattern: '[0-9]+'
    minLength: 1
    maxLength: 50
  Timestamp:
    type: string
    format: date-time
  SourceDescription:
    type: object
    properties:
      KinesisStreamSourceDescription:
        $ref: '#/definitions/KinesisStreamSourceDescription'
        description: The <a>KinesisStreamSourceDescription</a> value for the source Kinesis data stream.
    description: Details about a Kinesis data stream used as the source for a Kinesis Data Firehose delivery stream.
  DestinationDescriptionList:
    type: array
    items:
      $ref: '#/definitions/DestinationDescription'
  DeliveryStreamDescription:
    type: object
    required:
      - DeliveryStreamName
      - DeliveryStreamARN
      - DeliveryStreamStatus
      - DeliveryStreamType
      - VersionId
      - Destinations
      - HasMoreDestinations
    properties:
      DeliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The name of the delivery stream.
      DeliveryStreamARN:
        $ref: '#/definitions/DeliveryStreamARN'
        description: 'The Amazon Resource Name (ARN) of the delivery stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      DeliveryStreamStatus:
        $ref: '#/definitions/DeliveryStreamStatus'
        description: The status of the delivery stream.
      DeliveryStreamType:
        $ref: '#/definitions/DeliveryStreamType'
        description: '<p>The delivery stream type. This can be one of the following values:</p> <ul> <li> <p> <code>DirectPut</code>: Provider applications access the delivery stream directly.</p> </li> <li> <p> <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data stream as a source.</p> </li> </ul>'
      VersionId:
        $ref: '#/definitions/DeliveryStreamVersionId'
        description: 'Each time the destination is updated for a delivery stream, the version ID is changed, and the current version ID is required when updating the destination. This is so that the service knows it is applying the changes to the correct version of the delivery stream.'
      CreateTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the delivery stream was created.
      LastUpdateTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the delivery stream was last updated.
      Source:
        $ref: '#/definitions/SourceDescription'
        description: 'If the <code>DeliveryStreamType</code> parameter is <code>KinesisStreamAsSource</code>, a <a>SourceDescription</a> object describing the source Kinesis data stream.'
      Destinations:
        $ref: '#/definitions/DestinationDescriptionList'
        description: The destinations.
      HasMoreDestinations:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether there are more destinations available to list.
    description: Contains information about a delivery stream.
  DeliveryStreamNameList:
    type: array
    items:
      $ref: '#/definitions/DeliveryStreamName'
  DescribeDeliveryStreamInputLimit:
    type: integer
    minimum: 1
    maximum: 10000
  DestinationId:
    type: string
    minLength: 1
    maxLength: 100
  OpenXJsonSerDe:
    type: object
    properties:
      ConvertDotsInJsonKeysToUnderscores:
        $ref: '#/definitions/BooleanObject'
        description: '<p>When set to <code>true</code>, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option.</p> <p>The default is <code>false</code>.</p>'
      CaseInsensitive:
        $ref: '#/definitions/BooleanObject'
        description: 'When set to <code>true</code>, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.'
      ColumnToJsonKeyMappings:
        $ref: '#/definitions/ColumnToJsonKeyMappings'
        description: 'Maps column names to JSON keys that aren''t identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, <code>timestamp</code> is a Hive keyword. If you have a JSON key named <code>timestamp</code>, set this parameter to <code>{"ts": "timestamp"}</code> to map this key to a column named <code>ts</code>.'
    description: 'The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.'
  HiveJsonSerDe:
    type: object
    properties:
      TimestampFormats:
        $ref: '#/definitions/ListOfNonEmptyStrings'
        description: 'Indicates how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime''s DateTimeFormat format strings. For more information, see <a href="https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html">Class DateTimeFormat</a>. You can also use the special value <code>millis</code> to parse time stamps in epoch milliseconds. If you don''t specify a format, Kinesis Data Firehose uses <code>java.sql.Timestamp::valueOf</code> by default.'
    description: 'The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.'
  Deserializer:
    type: object
    properties:
      OpenXJsonSerDe:
        $ref: '#/definitions/OpenXJsonSerDe'
        description: 'The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.'
      HiveJsonSerDe:
        $ref: '#/definitions/HiveJsonSerDe'
        description: 'The native Hive / HCatalog JsonSerDe. Used by Kinesis Data Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.'
    description: 'The deserializer you want Kinesis Data Firehose to use for converting the input data from JSON. Kinesis Data Firehose then serializes the data to its final format using the <a>Serializer</a>. Kinesis Data Firehose supports two types of deserializers: the <a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-JSON">Apache Hive JSON SerDe</a> and the <a href="https://github.com/rcongiu/Hive-JSON-Serde">OpenX JSON SerDe</a>.'
  S3DestinationDescription:
    type: object
    required:
      - RoleARN
      - BucketARN
      - BufferingHints
      - CompressionFormat
      - EncryptionConfiguration
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <code>BufferingHints</code> object default values are used.'
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes a destination in Amazon S3.
  ExtendedS3DestinationDescription:
    type: object
    required:
      - RoleARN
      - BucketARN
      - BufferingHints
      - CompressionFormat
      - EncryptionConfiguration
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The configuration for backup in Amazon S3.
      DataFormatConversionConfiguration:
        $ref: '#/definitions/DataFormatConversionConfiguration'
        description: 'The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.'
    description: Describes a destination in Amazon S3.
  RedshiftDestinationDescription:
    type: object
    required:
      - RoleARN
      - ClusterJDBCURL
      - CopyCommand
      - Username
      - S3DestinationDescription
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The Amazon S3 destination.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The configuration for backup in Amazon S3.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes a destination in Amazon Redshift.
  ElasticsearchDestinationDescription:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: 'The ARN of the Amazon ES domain. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: The Elasticsearch type name.
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: The Elasticsearch index rotation period
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: The buffering options.
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The Amazon ES retry options.
      S3BackupMode:
        $ref: '#/definitions/ElasticsearchS3BackupMode'
        description: The Amazon S3 backup mode.
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The Amazon S3 destination.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options.
    description: The destination description in Amazon ES.
  SplunkDestinationDescription:
    type: object
    properties:
      HECEndpoint:
        $ref: '#/definitions/HECEndpoint'
        description: The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your data.
      HECEndpointType:
        $ref: '#/definitions/HECEndpointType'
        description: This type can be either "Raw" or "Event."
      HECToken:
        $ref: '#/definitions/HECToken'
        description: A GUID you obtain from your Splunk cluster when you create a new HEC endpoint.
      HECAcknowledgmentTimeoutInSeconds:
        $ref: '#/definitions/HECAcknowledgmentTimeoutInSeconds'
        description: 'The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Kinesis Data Firehose either tries to send the data again or considers it an error, based on your retry settings.'
      RetryOptions:
        $ref: '#/definitions/SplunkRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk or if it doesn't receive an acknowledgment of receipt from Splunk.
      S3BackupMode:
        $ref: '#/definitions/SplunkS3BackupMode'
        description: 'Defines how documents should be delivered to Amazon S3. When set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to <code>AllDocuments</code>, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. Default value is <code>FailedDocumentsOnly</code>. '
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: The Amazon S3 destination.&gt;
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes a destination in Splunk.
  DestinationDescription:
    type: object
    required:
      - DestinationId
    properties:
      DestinationId:
        $ref: '#/definitions/DestinationId'
        description: The ID of the destination.
      S3DestinationDescription:
        $ref: '#/definitions/S3DestinationDescription'
        description: '[Deprecated] The destination in Amazon S3.'
      ExtendedS3DestinationDescription:
        $ref: '#/definitions/ExtendedS3DestinationDescription'
        description: The destination in Amazon S3.
      RedshiftDestinationDescription:
        $ref: '#/definitions/RedshiftDestinationDescription'
        description: The destination in Amazon Redshift.
      ElasticsearchDestinationDescription:
        $ref: '#/definitions/ElasticsearchDestinationDescription'
        description: The destination in Amazon ES.
      SplunkDestinationDescription:
        $ref: '#/definitions/SplunkDestinationDescription'
        description: The destination in Splunk.
    description: Describes the destination for a delivery stream.
  ElasticsearchBufferingIntervalInSeconds:
    type: integer
    minimum: 60
    maximum: 900
  ElasticsearchBufferingSizeInMBs:
    type: integer
    minimum: 1
    maximum: 100
  ElasticsearchBufferingHints:
    type: object
    properties:
      IntervalInSeconds:
        $ref: '#/definitions/ElasticsearchBufferingIntervalInSeconds'
        description: 'Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).'
      SizeInMBs:
        $ref: '#/definitions/ElasticsearchBufferingSizeInMBs'
        description: '<p>Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.</p> <p>We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.</p>'
    description: Describes the buffering to perform before delivering data to the Amazon ES destination.
  RoleARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  ElasticsearchDomainARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  ElasticsearchIndexName:
    type: string
    minLength: 1
    maxLength: 80
  ElasticsearchTypeName:
    type: string
    minLength: 1
    maxLength: 100
  ElasticsearchIndexRotationPeriod:
    type: string
    enum:
      - NoRotation
      - OneHour
      - OneDay
      - OneWeek
      - OneMonth
  ElasticsearchRetryOptions:
    type: object
    properties:
      DurationInSeconds:
        $ref: '#/definitions/ElasticsearchRetryDurationInSeconds'
        description: 'After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.'
    description: Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon ES.
  ElasticsearchS3BackupMode:
    type: string
    enum:
      - FailedDocumentsOnly
      - AllDocuments
  ProcessingConfiguration:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables data processing.
      Processors:
        $ref: '#/definitions/ProcessorList'
        description: The data processors.
    description: Describes a data processing configuration.
  S3DestinationUpdate:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: 'The buffering option. If no value is specified, <code>BufferingHints</code> object default values are used.'
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: '<p>The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified for Amazon Redshift destinations because they are not supported by the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket.</p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
    description: Describes an update for a destination in Amazon S3.
  ElasticsearchDestinationUpdate:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Grant Kinesis Data Firehose Access to an Amazon S3 Destination</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      DomainARN:
        $ref: '#/definitions/ElasticsearchDomainARN'
        description: "The ARN of the Amazon ES domain. The IAM role must have permissions for\_<code>DescribeElasticsearchDomain</code>, <code>DescribeElasticsearchDomains</code>, and <code>DescribeElasticsearchDomainConfig</code>\_after assuming the IAM role specified in <b>RoleARN</b>. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>."
      IndexName:
        $ref: '#/definitions/ElasticsearchIndexName'
        description: The Elasticsearch index name.
      TypeName:
        $ref: '#/definitions/ElasticsearchTypeName'
        description: 'The Elasticsearch type name. For Elasticsearch 6.x, there can be only one type per index. If you try to specify a new type for an existing index that already has another type, Kinesis Data Firehose returns an error during runtime.'
      IndexRotationPeriod:
        $ref: '#/definitions/ElasticsearchIndexRotationPeriod'
        description: "The Elasticsearch index rotation period. Index rotation appends a time stamp to <code>IndexName</code> to facilitate the expiration of old data. For more information, see <a href=\"http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation\">Index Rotation for the Amazon ES Destination</a>. Default value is\_<code>OneDay</code>."
      BufferingHints:
        $ref: '#/definitions/ElasticsearchBufferingHints'
        description: 'The buffering options. If no value is specified, <b>ElasticsearchBufferingHints</b> object default values are used. '
      RetryOptions:
        $ref: '#/definitions/ElasticsearchRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon ES. The default value is 300 (5 minutes).
      S3Update:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The CloudWatch logging options for your delivery stream.
    description: Describes an update for a destination in Amazon ES.
  ElasticsearchRetryDurationInSeconds:
    type: integer
    minimum: 0
    maximum: 7200
  NoEncryptionConfig:
    type: string
    enum:
      - NoEncryption
  KMSEncryptionConfig:
    type: object
    required:
      - AWSKMSKeyARN
    properties:
      AWSKMSKeyARN:
        $ref: '#/definitions/AWSKMSKeyARN'
        description: 'The Amazon Resource Name (ARN) of the encryption key. Must belong to the same AWS Region as the destination Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
    description: Describes an encryption key for a destination in Amazon S3.
  EncryptionConfiguration:
    type: object
    properties:
      NoEncryptionConfig:
        $ref: '#/definitions/NoEncryptionConfig'
        description: Specifically override existing encryption information to ensure that no encryption is used.
      KMSEncryptionConfig:
        $ref: '#/definitions/KMSEncryptionConfig'
        description: The encryption key.
    description: Describes the encryption for a destination in Amazon S3.
  ErrorCode:
    type: string
  Prefix:
    type: string
  S3BackupMode:
    type: string
    enum:
      - Disabled
      - Enabled
  ExtendedS3DestinationUpdate:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      BucketARN:
        $ref: '#/definitions/BucketARN'
        description: 'The ARN of the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered Amazon S3 files. You can specify an extra prefix to be added in front of the time format prefix. If the prefix ends with a slash, it appears as a folder in the S3 bucket. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#s3-object-name">Amazon S3 Object Name Format</a> in the <i>Amazon Kinesis Data Firehose Developer Guide</i>.'
      BufferingHints:
        $ref: '#/definitions/BufferingHints'
        description: The buffering option.
      CompressionFormat:
        $ref: '#/definitions/CompressionFormat'
        description: 'The compression format. If no value is specified, the default is <code>UNCOMPRESSED</code>. '
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: 'The encryption configuration. If no value is specified, the default is no encryption.'
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/S3BackupMode'
        description: Enables or disables Amazon S3 backup mode.
      S3BackupUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination for backup.
      DataFormatConversionConfiguration:
        $ref: '#/definitions/DataFormatConversionConfiguration'
        description: 'The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.'
    description: Describes an update for a destination in Amazon S3.
  HECAcknowledgmentTimeoutInSeconds:
    type: integer
    minimum: 180
    maximum: 600
  HECEndpoint:
    type: string
  HECEndpointType:
    type: string
    enum:
      - Raw
      - Event
  HECToken:
    type: string
  ListOfNonEmptyStrings:
    type: array
    items:
      $ref: '#/definitions/NonEmptyString'
  KinesisStreamARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  KinesisStreamSourceDescription:
    type: object
    properties:
      KinesisStreamARN:
        $ref: '#/definitions/KinesisStreamARN'
        description: 'The Amazon Resource Name (ARN) of the source Kinesis data stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon Kinesis Data Streams ARN Format</a>.'
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The ARN of the role used by the source Kinesis data stream. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM) ARN Format</a>.'
      DeliveryStartTimestamp:
        $ref: '#/definitions/DeliveryStartTimestamp'
        description: Kinesis Data Firehose starts retrieving records from the Kinesis data stream starting with this time stamp.
    description: Details about a Kinesis data stream used as the source for a Kinesis Data Firehose delivery stream.
  ListDeliveryStreamsInputLimit:
    type: integer
    minimum: 1
    maximum: 10000
  ListOfNonEmptyStringsWithoutWhitespace:
    type: array
    items:
      $ref: '#/definitions/NonEmptyStringWithoutWhitespace'
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  ListTagsForDeliveryStreamInputLimit:
    type: integer
    minimum: 1
    maximum: 50
  ListTagsForDeliveryStreamOutputTagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 0
    maxItems: 50
  Tag:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: 'A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @'
      Value:
        $ref: '#/definitions/TagValue'
        description: 'An optional string, which you can use to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @'
    description: 'Metadata that you can assign to a delivery stream, consisting of a key-value pair.'
  NonNegativeIntegerObject:
    type: integer
    minimum: 0
  OrcCompression:
    type: string
    enum:
      - NONE
      - ZLIB
      - SNAPPY
  OrcFormatVersion:
    type: string
    enum:
      - V0_11
      - V0_12
  OrcRowIndexStride:
    type: integer
    minimum: 1000
  OrcStripeSizeBytes:
    type: integer
    minimum: 8388608
  Proportion:
    type: number
    format: double
    minimum: 0
    maximum: 1
  OrcSerDe:
    type: object
    properties:
      StripeSizeBytes:
        $ref: '#/definitions/OrcStripeSizeBytes'
        description: The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
      BlockSizeBytes:
        $ref: '#/definitions/BlockSizeBytes'
        description: The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
      RowIndexStride:
        $ref: '#/definitions/OrcRowIndexStride'
        description: 'The number of rows between index entries. The default is 10,000 and the minimum is 1,000.'
      EnablePadding:
        $ref: '#/definitions/BooleanObject'
        description: Set this to <code>true</code> to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is <code>false</code>.
      PaddingTolerance:
        $ref: '#/definitions/Proportion'
        description: '<p>A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.</p> <p>For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.</p> <p>Kinesis Data Firehose ignores this parameter when <a>OrcSerDe$EnablePadding</a> is <code>false</code>.</p>'
      Compression:
        $ref: '#/definitions/OrcCompression'
        description: The compression code to use over data blocks. The default is <code>SNAPPY</code>.
      BloomFilterColumns:
        $ref: '#/definitions/ListOfNonEmptyStringsWithoutWhitespace'
        description: The column names for which you want Kinesis Data Firehose to create bloom filters. The default is <code>null</code>.
      BloomFilterFalsePositiveProbability:
        $ref: '#/definitions/Proportion'
        description: 'The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.'
      DictionaryKeyThreshold:
        $ref: '#/definitions/Proportion'
        description: 'Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.'
      FormatVersion:
        $ref: '#/definitions/OrcFormatVersion'
        description: The version of the file to write. The possible values are <code>V0_11</code> and <code>V0_12</code>. The default is <code>V0_12</code>.
    description: 'A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see <a href="https://orc.apache.org/docs/">Apache ORC</a>.'
  Serializer:
    type: object
    properties:
      ParquetSerDe:
        $ref: '#/definitions/ParquetSerDe'
        description: 'A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see <a href="https://parquet.apache.org/documentation/latest/">Apache Parquet</a>.'
      OrcSerDe:
        $ref: '#/definitions/OrcSerDe'
        description: 'A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see <a href="https://orc.apache.org/docs/">Apache ORC</a>.'
    description: 'The serializer that you want Kinesis Data Firehose to use to convert data to the target format before writing it to Amazon S3. Kinesis Data Firehose supports two types of serializers: the <a href="https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/orc/OrcSerde.html">ORC SerDe</a> and the <a href="https://hive.apache.org/javadocs/r1.2.2/api/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.html">Parquet SerDe</a>.'
  ParquetCompression:
    type: string
    enum:
      - UNCOMPRESSED
      - GZIP
      - SNAPPY
  ParquetPageSizeBytes:
    type: integer
    minimum: 65536
  ParquetWriterVersion:
    type: string
    enum:
      - V1
      - V2
  ParquetSerDe:
    type: object
    properties:
      BlockSizeBytes:
        $ref: '#/definitions/BlockSizeBytes'
        description: The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
      PageSizeBytes:
        $ref: '#/definitions/ParquetPageSizeBytes'
        description: The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
      Compression:
        $ref: '#/definitions/ParquetCompression'
        description: 'The compression code to use over data blocks. The possible values are <code>UNCOMPRESSED</code>, <code>SNAPPY</code>, and <code>GZIP</code>, with the default being <code>SNAPPY</code>. Use <code>SNAPPY</code> for higher decompression speed. Use <code>GZIP</code> if the compression ration is more important than speed.'
      EnableDictionaryCompression:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether to enable dictionary compression.
      MaxPaddingBytes:
        $ref: '#/definitions/NonNegativeIntegerObject'
        description: The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
      WriterVersion:
        $ref: '#/definitions/ParquetWriterVersion'
        description: Indicates the version of row format to output. The possible values are <code>V1</code> and <code>V2</code>. The default is <code>V1</code>.
    description: 'A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see <a href="https://parquet.apache.org/documentation/latest/">Apache Parquet</a>.'
  Password:
    type: string
    minLength: 6
    format: password
  ProcessorList:
    type: array
    items:
      $ref: '#/definitions/Processor'
  ProcessorType:
    type: string
    enum:
      - Lambda
  ProcessorParameterList:
    type: array
    items:
      $ref: '#/definitions/ProcessorParameter'
  Processor:
    type: object
    required:
      - Type
    properties:
      Type:
        $ref: '#/definitions/ProcessorType'
        description: The type of processor.
      Parameters:
        $ref: '#/definitions/ProcessorParameterList'
        description: The processor parameters.
    description: Describes a data processor.
  ProcessorParameterName:
    type: string
    enum:
      - LambdaArn
      - NumberOfRetries
      - RoleArn
      - BufferSizeInMBs
      - BufferIntervalInSeconds
  ProcessorParameterValue:
    type: string
    minLength: 1
    maxLength: 512
  ProcessorParameter:
    type: object
    required:
      - ParameterName
      - ParameterValue
    properties:
      ParameterName:
        $ref: '#/definitions/ProcessorParameterName'
        description: The name of the parameter.
      ParameterValue:
        $ref: '#/definitions/ProcessorParameterValue'
        description: The parameter value.
    description: Describes the processor parameter.
  PutRecordBatchRequestEntryList:
    type: array
    items:
      $ref: '#/definitions/Record'
    minItems: 1
    maxItems: 500
  PutRecordBatchResponseEntryList:
    type: array
    items:
      $ref: '#/definitions/PutRecordBatchResponseEntry'
    minItems: 1
    maxItems: 500
  Record:
    type: object
    required:
      - Data
    properties:
      Data:
        $ref: '#/definitions/Data'
        description: 'The data blob, which is base64-encoded when the blob is serialized. The maximum size of the data blob, before base64-encoding, is 1,000 KB.'
    description: The unit of data in a delivery stream.
  PutResponseRecordId:
    type: string
    minLength: 1
  PutRecordBatchResponseEntry:
    type: object
    properties:
      RecordId:
        $ref: '#/definitions/PutResponseRecordId'
        description: The ID of the record.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The error code for an individual record result.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message for an individual record result.
    description: 'Contains the result for an individual record from a <a>PutRecordBatch</a> request. If the record is successfully added to your delivery stream, it receives a record ID. If the record fails to be added to your delivery stream, the result includes an error code and an error message.'
  Username:
    type: string
    minLength: 1
    format: password
  RedshiftRetryOptions:
    type: object
    properties:
      DurationInSeconds:
        $ref: '#/definitions/RedshiftRetryDurationInSeconds'
        description: 'The length of time during which Kinesis Data Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Kinesis Data Firehose does not retry if the value of <code>DurationInSeconds</code> is 0 (zero) or if the first delivery attempt takes longer than the current value.'
    description: Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift.
  RedshiftS3BackupMode:
    type: string
    enum:
      - Disabled
      - Enabled
  RedshiftDestinationUpdate:
    type: object
    properties:
      RoleARN:
        $ref: '#/definitions/RoleARN'
        description: 'The Amazon Resource Name (ARN) of the AWS credentials. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.'
      ClusterJDBCURL:
        $ref: '#/definitions/ClusterJDBCURL'
        description: The database connection string.
      CopyCommand:
        $ref: '#/definitions/CopyCommand'
        description: The <code>COPY</code> command.
      Username:
        $ref: '#/definitions/Username'
        description: The name of the user.
      Password:
        $ref: '#/definitions/Password'
        description: The user password.
      RetryOptions:
        $ref: '#/definitions/RedshiftRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
      S3Update:
        $ref: '#/definitions/S3DestinationUpdate'
        description: <p>The Amazon S3 destination.</p> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <code>RedshiftDestinationUpdate.S3Update</code> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these compression formats.</p>
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      S3BackupMode:
        $ref: '#/definitions/RedshiftS3BackupMode'
        description: The Amazon S3 backup mode.
      S3BackupUpdate:
        $ref: '#/definitions/S3DestinationUpdate'
        description: The Amazon S3 destination for backup.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes an update for a destination in Amazon Redshift.
  RedshiftRetryDurationInSeconds:
    type: integer
    minimum: 0
    maximum: 7200
  SplunkRetryOptions:
    type: object
    properties:
      DurationInSeconds:
        $ref: '#/definitions/SplunkRetryDurationInSeconds'
        description: The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from Splunk after each attempt.
    description: 'Configures retry behavior in case Kinesis Data Firehose is unable to deliver documents to Splunk, or if it doesn''t receive an acknowledgment from Splunk.'
  SplunkS3BackupMode:
    type: string
    enum:
      - FailedEventsOnly
      - AllEvents
  SplunkDestinationUpdate:
    type: object
    properties:
      HECEndpoint:
        $ref: '#/definitions/HECEndpoint'
        description: The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your data.
      HECEndpointType:
        $ref: '#/definitions/HECEndpointType'
        description: This type can be either "Raw" or "Event."
      HECToken:
        $ref: '#/definitions/HECToken'
        description: A GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
      HECAcknowledgmentTimeoutInSeconds:
        $ref: '#/definitions/HECAcknowledgmentTimeoutInSeconds'
        description: 'The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from Splunk after it sends data. At the end of the timeout period, Kinesis Data Firehose either tries to send the data again or considers it an error, based on your retry settings.'
      RetryOptions:
        $ref: '#/definitions/SplunkRetryOptions'
        description: The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk or if it doesn't receive an acknowledgment of receipt from Splunk.
      S3BackupMode:
        $ref: '#/definitions/SplunkS3BackupMode'
        description: 'Defines how documents should be delivered to Amazon S3. When set to <code>FailedDocumentsOnly</code>, Kinesis Data Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to <code>AllDocuments</code>, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. Default value is <code>FailedDocumentsOnly</code>. '
      S3Update:
        $ref: '#/definitions/S3DestinationUpdate'
        description: Your update to the configuration of the backup Amazon S3 location.
      ProcessingConfiguration:
        $ref: '#/definitions/ProcessingConfiguration'
        description: The data processing configuration.
      CloudWatchLoggingOptions:
        $ref: '#/definitions/CloudWatchLoggingOptions'
        description: The Amazon CloudWatch logging options for your delivery stream.
    description: Describes an update for a destination in Splunk.
  SplunkRetryDurationInSeconds:
    type: integer
    minimum: 0
    maximum: 7200
  TagValue:
    type: string
    minLength: 0
    maxLength: 256
  TagDeliveryStreamInputTagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 50
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
