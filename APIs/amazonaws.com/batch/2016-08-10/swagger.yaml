swagger: '2.0'
info:
  version: '2016-08-10'
  x-release: v4
  title: AWS Batch
  description: '<p>AWS Batch enables you to run batch computing workloads on the AWS Cloud. Batch computing is a common way for developers, scientists, and engineers to access large amounts of compute resources, and AWS Batch removes the undifferentiated heavy lifting of configuring and managing the required infrastructure. AWS Batch will be familiar to users of traditional batch computing software. This service can efficiently provision resources in response to jobs submitted in order to eliminate capacity constraints, reduce compute costs, and deliver results quickly.</p> <p>As a fully managed service, AWS Batch enables developers, scientists, and engineers to run batch computing workloads of any scale. AWS Batch automatically provisions compute resources and optimizes the workload distribution based on the quantity and scale of the workloads. With AWS Batch, there is no need to install or manage batch computing software, which allows you to focus on analyzing results and solving problems. AWS Batch reduces operational complexities, saves time, and reduces costs, which makes it easy for developers, scientists, and engineers to run their batch jobs in the AWS Cloud.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: batch
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/batch-2016-08-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/batch/'
host: batch.amazonaws.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /v1/canceljob:
    post:
      operationId: CancelJob
      description: 'Cancels a job in an AWS Batch job queue. Jobs that are in the <code>SUBMITTED</code>, <code>PENDING</code>, or <code>RUNNABLE</code> state are cancelled. Jobs that have progressed to <code>STARTING</code> or <code>RUNNING</code> are not cancelled (but the API operation still succeeds, even if no job is cancelled); these jobs must be terminated with the <a>TerminateJob</a> operation.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelJobResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/createcomputeenvironment:
    post:
      operationId: CreateComputeEnvironment
      description: '<p>Creates an AWS Batch compute environment. You can create <code>MANAGED</code> or <code>UNMANAGED</code> compute environments.</p> <p>In a managed compute environment, AWS Batch manages the compute resources within the environment, based on the compute resources that you specify. Instances launched into a managed compute environment use a recent, approved version of the Amazon ECS-optimized AMI. You can choose to use Amazon EC2 On-Demand Instances in your managed compute environment, or you can use Amazon EC2 Spot Instances that only launch when the Spot bid price is below a specified percentage of the On-Demand price.</p> <p>In an unmanaged compute environment, you can manage your own compute resources. This provides more compute resource configuration options, such as using a custom AMI, but you must ensure that your AMI meets the Amazon ECS container instance AMI specification. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/container_instance_AMIs.html">Container Instance AMIs</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. After you have created your unmanaged compute environment, you can use the <a>DescribeComputeEnvironments</a> operation to find the Amazon ECS cluster that is associated with it and then manually launch your container instances into that Amazon ECS cluster. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_container_instance.html">Launching an Amazon ECS Container Instance</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateComputeEnvironmentResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateComputeEnvironmentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/createjobqueue:
    post:
      operationId: CreateJobQueue
      description: '<p>Creates an AWS Batch job queue. When you create a job queue, you associate one or more compute environments to the queue and assign an order of preference for the compute environments.</p> <p>You also set a priority to the job queue that determines the order in which the AWS Batch scheduler places jobs onto its associated compute environments. For example, if a compute environment is associated with more than one job queue, the job queue with a higher priority is given preference for scheduling jobs to that compute environment.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateJobQueueResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateJobQueueRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/deletecomputeenvironment:
    post:
      operationId: DeleteComputeEnvironment
      description: '<p>Deletes an AWS Batch compute environment.</p> <p>Before you can delete a compute environment, you must set its state to <code>DISABLED</code> with the <a>UpdateComputeEnvironment</a> API operation and disassociate it from any job queues with the <a>UpdateJobQueue</a> API operation.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteComputeEnvironmentResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteComputeEnvironmentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/deletejobqueue:
    post:
      operationId: DeleteJobQueue
      description: <p>Deletes the specified job queue. You must first disable submissions for a queue with the <a>UpdateJobQueue</a> operation. All jobs in the queue are terminated when you delete a job queue.</p> <p>It is not necessary to disassociate compute environments from a queue before submitting a <code>DeleteJobQueue</code> request. </p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteJobQueueResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteJobQueueRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/deregisterjobdefinition:
    post:
      operationId: DeregisterJobDefinition
      description: Deregisters an AWS Batch job definition.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterJobDefinitionResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterJobDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/describecomputeenvironments:
    post:
      operationId: DescribeComputeEnvironments
      description: '<p>Describes one or more of your compute environments.</p> <p>If you are using an unmanaged compute environment, you can use the <code>DescribeComputeEnvironment</code> operation to determine the <code>ecsClusterArn</code> that you should launch your Amazon ECS container instances into.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeComputeEnvironmentsResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeComputeEnvironmentsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/describejobdefinitions:
    post:
      operationId: DescribeJobDefinitions
      description: Describes a list of job definitions. You can specify a <code>status</code> (such as <code>ACTIVE</code>) to only return job definitions that match that status.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobDefinitionsResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobDefinitionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/describejobqueues:
    post:
      operationId: DescribeJobQueues
      description: Describes one or more of your job queues.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobQueuesResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobQueuesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/describejobs:
    post:
      operationId: DescribeJobs
      description: Describes a list of AWS Batch jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobsResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeJobsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/listjobs:
    post:
      operationId: ListJobs
      description: 'Returns a list of task jobs for a specified job queue. You can filter the results by job status with the <code>jobStatus</code> parameter. If you do not specify a status, only <code>RUNNING</code> jobs are returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListJobsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/registerjobdefinition:
    post:
      operationId: RegisterJobDefinition
      description: 'Registers an AWS Batch job definition. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterJobDefinitionResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterJobDefinitionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/submitjob:
    post:
      operationId: SubmitJob
      description: 'Submits an AWS Batch job from a job definition. Parameters specified during <a>SubmitJob</a> override parameters defined in the job definition. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SubmitJobResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmitJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/terminatejob:
    post:
      operationId: TerminateJob
      description: 'Terminates a job in a job queue. Jobs that are in the <code>STARTING</code> or <code>RUNNING</code> state are terminated, which causes them to transition to <code>FAILED</code>. Jobs that have not progressed to the <code>STARTING</code> state are cancelled.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateJobResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/updatecomputeenvironment:
    post:
      operationId: UpdateComputeEnvironment
      description: Updates an AWS Batch compute environment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateComputeEnvironmentResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateComputeEnvironmentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v1/updatejobqueue:
    post:
      operationId: UpdateJobQueue
      description: Updates a job queue.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateJobQueueResponse'
        '480':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '481':
          description: ServerException
          schema:
            $ref: '#/definitions/ServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateJobQueueRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CancelJobResponse:
    type: object
    example: {}
    properties: {}
  CancelJobRequest:
    type: object
    required:
      - jobId
      - reason
    example:
      jobId: 1d828f65-7a4d-42e8-996d-3b900ed59dc4
      reason: Cancelling job.
    properties:
      jobId:
        $ref: '#/definitions/String'
        description: The AWS Batch job ID of the job to cancel.
      reason:
        $ref: '#/definitions/String'
        description: 'A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the AWS Batch activity logs. '
  ClientException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: 'These errors are usually caused by a client action, such as using an action or resource on behalf of a user that doesn''t have permissions to use the action or resource, or specifying an identifier that is not valid. '
  ServerException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: These errors are usually caused by a server issue.
  CreateComputeEnvironmentResponse:
    type: object
    example:
      computeEnvironmentArn: 'arn:aws:batch:us-east-1:012345678910:compute-environment/M4Spot'
      computeEnvironmentName: M4Spot
    properties:
      computeEnvironmentName:
        $ref: '#/definitions/String'
        description: The name of the compute environment.
      computeEnvironmentArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the compute environment. '
  CreateComputeEnvironmentRequest:
    type: object
    required:
      - computeEnvironmentName
      - type
      - serviceRole
    example:
      type: MANAGED
      computeEnvironmentName: M4Spot
      computeResources:
        type: SPOT
        bidPercentage: 20
        desiredvCpus: 4
        ec2KeyPair: id_rsa
        instanceRole: ecsInstanceRole
        instanceTypes:
          - m4
        maxvCpus: 128
        minvCpus: 0
        securityGroupIds:
          - sg-cf5093b2
        spotIamFleetRole: 'arn:aws:iam::012345678910:role/aws-ec2-spot-fleet-role'
        subnets:
          - subnet-220c0e0a
          - subnet-1a95556d
          - subnet-978f6dce
        tags:
          Name: Batch Instance - M4Spot
      serviceRole: 'arn:aws:iam::012345678910:role/AWSBatchServiceRole'
      state: ENABLED
    properties:
      computeEnvironmentName:
        $ref: '#/definitions/String'
        description: 'The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.'
      type:
        $ref: '#/definitions/CEType'
        description: 'The type of the compute environment. '
      state:
        $ref: '#/definitions/CEState'
        description: 'The state of the compute environment. If the state is <code>ENABLED</code>, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.'
      computeResources:
        $ref: '#/definitions/ComputeResource'
        description: Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments.
      serviceRole:
        $ref: '#/definitions/String'
        description: '<p>The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.</p> <p>If your specified role has a path other than <code>/</code>, then you must either specify the full role ARN (this is recommended) or prefix the role name with the path.</p> <note> <p>Depending on how you created your AWS Batch service role, its ARN may contain the <code>service-role</code> path prefix. When you only specify the name of the service role, AWS Batch assumes that your ARN does not use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>'
  CreateJobQueueResponse:
    type: object
    required:
      - jobQueueName
      - jobQueueArn
    example:
      jobQueueArn: 'arn:aws:batch:us-east-1:012345678910:job-queue/HighPriority'
      jobQueueName: HighPriority
    properties:
      jobQueueName:
        $ref: '#/definitions/String'
        description: The name of the job queue.
      jobQueueArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the job queue.
  CreateJobQueueRequest:
    type: object
    required:
      - jobQueueName
      - priority
      - computeEnvironmentOrder
    example:
      computeEnvironmentOrder:
        - computeEnvironment: C4OnDemand
          order: 1
        - computeEnvironment: M4Spot
          order: 2
      jobQueueName: HighPriority
      priority: 10
      state: ENABLED
    properties:
      jobQueueName:
        $ref: '#/definitions/String'
        description: The name of the job queue.
      state:
        $ref: '#/definitions/JQState'
        description: 'The state of the job queue. If the job queue state is <code>ENABLED</code>, it is able to accept jobs.'
      priority:
        $ref: '#/definitions/Integer'
        description: 'The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with same compute environment. Priority is determined in descending order, for example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>.'
      computeEnvironmentOrder:
        $ref: '#/definitions/ComputeEnvironmentOrders'
        description: The set of compute environments mapped to a job queue and their order relative to each other. The job scheduler uses this parameter to determine which compute environment should execute a given job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. You can associate up to three compute environments with a job queue.
  DeleteComputeEnvironmentResponse:
    type: object
    example: {}
    properties: {}
  DeleteComputeEnvironmentRequest:
    type: object
    required:
      - computeEnvironment
    example:
      computeEnvironment: P2OnDemand
    properties:
      computeEnvironment:
        $ref: '#/definitions/String'
        description: 'The name or Amazon Resource Name (ARN) of the compute environment to delete. '
  DeleteJobQueueResponse:
    type: object
    example: {}
    properties: {}
  DeleteJobQueueRequest:
    type: object
    required:
      - jobQueue
    example:
      jobQueue: GPGPU
    properties:
      jobQueue:
        $ref: '#/definitions/String'
        description: 'The short name or full Amazon Resource Name (ARN) of the queue to delete. '
  DeregisterJobDefinitionResponse:
    type: object
    example: {}
    properties: {}
  DeregisterJobDefinitionRequest:
    type: object
    required:
      - jobDefinition
    example:
      jobDefinition: sleep10
    properties:
      jobDefinition:
        $ref: '#/definitions/String'
        description: 'The name and revision (<code>name:revision</code>) or full Amazon Resource Name (ARN) of the job definition to deregister. '
  DescribeComputeEnvironmentsResponse:
    type: object
    example:
      computeEnvironments:
        - type: MANAGED
          computeEnvironmentArn: 'arn:aws:batch:us-east-1:012345678910:compute-environment/P2OnDemand'
          computeEnvironmentName: P2OnDemand
          computeResources:
            type: EC2
            desiredvCpus: 48
            ec2KeyPair: id_rsa
            instanceRole: ecsInstanceRole
            instanceTypes:
              - p2
            maxvCpus: 128
            minvCpus: 0
            securityGroupIds:
              - sg-cf5093b2
            subnets:
              - subnet-220c0e0a
              - subnet-1a95556d
              - subnet-978f6dce
            tags:
              Name: Batch Instance - P2OnDemand
          ecsClusterArn: 'arn:aws:ecs:us-east-1:012345678910:cluster/P2OnDemand_Batch_2c06f29d-d1fe-3a49-879d-42394c86effc'
          serviceRole: 'arn:aws:iam::012345678910:role/AWSBatchServiceRole'
          state: ENABLED
          status: VALID
          statusReason: ComputeEnvironment Healthy
    properties:
      computeEnvironments:
        $ref: '#/definitions/ComputeEnvironmentDetailList'
        description: The list of compute environments.
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>DescribeComputeEnvironments</code> request. When the results of a <code>DescribeJobDefinitions</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  DescribeComputeEnvironmentsRequest:
    type: object
    example:
      computeEnvironments:
        - P2OnDemand
    properties:
      computeEnvironments:
        $ref: '#/definitions/StringList'
        description: 'A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries. '
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of cluster results returned by <code>DescribeComputeEnvironments</code> in paginated output. When this parameter is used, <code>DescribeComputeEnvironments</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeComputeEnvironments</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeComputeEnvironments</code> returns up to 100 results and a <code>nextToken</code> value if applicable.'
      nextToken:
        $ref: '#/definitions/String'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeComputeEnvironments</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
  DescribeJobDefinitionsResponse:
    type: object
    example:
      jobDefinitions:
        - type: container
          containerProperties:
            command:
              - sleep
              - '60'
            environment: []
            image: busybox
            memory: 128
            mountPoints: []
            ulimits: []
            vcpus: 1
            volumes: []
          jobDefinitionArn: 'arn:aws:batch:us-east-1:012345678910:job-definition/sleep60:1'
          jobDefinitionName: sleep60
          revision: 1
          status: ACTIVE
    properties:
      jobDefinitions:
        $ref: '#/definitions/JobDefinitionList'
        description: 'The list of job definitions. '
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>DescribeJobDefinitions</code> request. When the results of a <code>DescribeJobDefinitions</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  DescribeJobDefinitionsRequest:
    type: object
    example:
      status: ACTIVE
    properties:
      jobDefinitions:
        $ref: '#/definitions/StringList'
        description: A space-separated list of up to 100 job definition names or full Amazon Resource Name (ARN) entries.
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of results returned by <code>DescribeJobDefinitions</code> in paginated output. When this parameter is used, <code>DescribeJobDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeJobDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.'
      jobDefinitionName:
        $ref: '#/definitions/String'
        description: The name of the job definition to describe.
      status:
        $ref: '#/definitions/String'
        description: The status with which to filter job definitions.
      nextToken:
        $ref: '#/definitions/String'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobDefinitions</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
  DescribeJobQueuesResponse:
    type: object
    example:
      jobQueues:
        - computeEnvironmentOrder:
            - computeEnvironment: 'arn:aws:batch:us-east-1:012345678910:compute-environment/C4OnDemand'
              order: 1
          jobQueueArn: 'arn:aws:batch:us-east-1:012345678910:job-queue/HighPriority'
          jobQueueName: HighPriority
          priority: 1
          state: ENABLED
          status: VALID
          statusReason: JobQueue Healthy
    properties:
      jobQueues:
        $ref: '#/definitions/JobQueueDetailList'
        description: 'The list of job queues. '
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>DescribeJobQueues</code> request. When the results of a <code>DescribeJobQueues</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  DescribeJobQueuesRequest:
    type: object
    example:
      jobQueues:
        - HighPriority
    properties:
      jobQueues:
        $ref: '#/definitions/StringList'
        description: A list of up to 100 queue names or full queue Amazon Resource Name (ARN) entries.
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of results returned by <code>DescribeJobQueues</code> in paginated output. When this parameter is used, <code>DescribeJobQueues</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeJobQueues</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeJobQueues</code> returns up to 100 results and a <code>nextToken</code> value if applicable.'
      nextToken:
        $ref: '#/definitions/String'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeJobQueues</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
  DescribeJobsResponse:
    type: object
    example:
      jobs:
        - container:
            command:
              - sleep
              - '60'
            containerInstanceArn: 'arn:aws:ecs:us-east-1:012345678910:container-instance/5406d7cd-58bd-4b8f-9936-48d7c6b1526c'
            environment: []
            exitCode: 0
            image: busybox
            memory: 128
            mountPoints: []
            ulimits: []
            vcpus: 1
            volumes: []
          createdAt: 1480460782010
          dependsOn: []
          jobDefinition: sleep60
          jobId: 24fa2d7a-64c4-49d2-8b47-f8da4fbde8e9
          jobName: example
          jobQueue: 'arn:aws:batch:us-east-1:012345678910:job-queue/HighPriority'
          parameters: {}
          startedAt: 1480460816500
          status: SUCCEEDED
          stoppedAt: 1480460880699
    properties:
      jobs:
        $ref: '#/definitions/JobDetailList'
        description: 'The list of jobs. '
  DescribeJobsRequest:
    type: object
    required:
      - jobs
    example:
      jobs:
        - 24fa2d7a-64c4-49d2-8b47-f8da4fbde8e9
    properties:
      jobs:
        $ref: '#/definitions/StringList'
        description: A space-separated list of up to 100 job IDs.
  ListJobsResponse:
    type: object
    required:
      - jobSummaryList
    example:
      jobSummaryList:
        - jobId: 68f0c163-fbd4-44e6-9fd1-25b14a434786
          jobName: example
    properties:
      jobSummaryList:
        $ref: '#/definitions/JobSummaryList'
        description: A list of job summaries that match the request.
      nextToken:
        $ref: '#/definitions/String'
        description: 'The <code>nextToken</code> value to include in a future <code>ListJobs</code> request. When the results of a <code>ListJobs</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.'
  ListJobsRequest:
    type: object
    example:
      jobQueue: HighPriority
      jobStatus: SUBMITTED
    properties:
      jobQueue:
        $ref: '#/definitions/String'
        description: The name or full Amazon Resource Name (ARN) of the job queue with which to list jobs.
      arrayJobId:
        $ref: '#/definitions/String'
        description: The job ID for an array job. Specifying an array job ID with this parameter lists all child jobs from within the specified array.
      jobStatus:
        $ref: '#/definitions/JobStatus'
        description: 'The job status with which to filter jobs in the specified queue. If you do not specify a status, only <code>RUNNING</code> jobs are returned.'
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of results returned by <code>ListJobs</code> in paginated output. When this parameter is used, <code>ListJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable.'
      nextToken:
        $ref: '#/definitions/String'
        description: <p>The <code>nextToken</code> value returned from a previous paginated <code>ListJobs</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>
  RegisterJobDefinitionResponse:
    type: object
    required:
      - jobDefinitionName
      - jobDefinitionArn
      - revision
    example:
      jobDefinitionArn: 'arn:aws:batch:us-east-1:012345678910:job-definition/sleep10:1'
      jobDefinitionName: sleep10
      revision: 1
    properties:
      jobDefinitionName:
        $ref: '#/definitions/String'
        description: The name of the job definition.
      jobDefinitionArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the job definition. '
      revision:
        $ref: '#/definitions/Integer'
        description: The revision of the job definition.
  RegisterJobDefinitionRequest:
    type: object
    required:
      - jobDefinitionName
      - type
    example:
      type: container
      containerProperties:
        command:
          - sleep
          - '10'
        image: busybox
        memory: 128
        vcpus: 1
      jobDefinitionName: sleep10
    properties:
      jobDefinitionName:
        $ref: '#/definitions/String'
        description: 'The name of the job definition to register. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.'
      type:
        $ref: '#/definitions/JobDefinitionType'
        description: The type of job definition.
      parameters:
        $ref: '#/definitions/ParametersMap'
        description: Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.
      containerProperties:
        $ref: '#/definitions/ContainerProperties'
        description: An object with various properties specific for container-based jobs. This parameter is required if the <code>type</code> parameter is <code>container</code>.
      retryStrategy:
        $ref: '#/definitions/RetryStrategy'
        description: 'The retry strategy to use for failed jobs that are submitted with this job definition. Any retry strategy that is specified during a <a>SubmitJob</a> operation overrides the retry strategy defined here. If a job is terminated due to a timeout, it is not retried. '
      timeout:
        $ref: '#/definitions/JobTimeout'
        description: 'The timeout configuration for jobs that are submitted with this job definition, after which AWS Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it is not retried. The minimum value for the timeout is 60 seconds. Any timeout configuration that is specified during a <a>SubmitJob</a> operation overrides the timeout configuration defined here. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html">Job Timeouts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.'
  SubmitJobResponse:
    type: object
    required:
      - jobName
      - jobId
    example:
      jobId: 876da822-4198-45f2-a252-6cea32512ea8
      jobName: example
    properties:
      jobName:
        $ref: '#/definitions/String'
        description: 'The name of the job. '
      jobId:
        $ref: '#/definitions/String'
        description: The unique identifier for the job.
  SubmitJobRequest:
    type: object
    required:
      - jobName
      - jobQueue
      - jobDefinition
    example:
      jobDefinition: sleep60
      jobName: example
      jobQueue: HighPriority
    properties:
      jobName:
        $ref: '#/definitions/String'
        description: 'The name of the job. The first character must be alphanumeric, and up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. '
      jobQueue:
        $ref: '#/definitions/String'
        description: 'The job queue into which the job is submitted. You can specify either the name or the Amazon Resource Name (ARN) of the queue. '
      arrayProperties:
        $ref: '#/definitions/ArrayProperties'
        description: 'The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. For more information, see <a href="http://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html">Array Jobs</a> in the <i>AWS Batch User Guide</i>.'
      dependsOn:
        $ref: '#/definitions/JobDependencyList'
        description: 'A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a <code>SEQUENTIAL</code> type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an <code>N_TO_N</code> type dependency with a job ID for array jobs so that each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin.'
      jobDefinition:
        $ref: '#/definitions/String'
        description: 'The job definition used by this job. This value can be either a <code>name:revision</code> or the Amazon Resource Name (ARN) for the job definition.'
      parameters:
        $ref: '#/definitions/ParametersMap'
        description: Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.
      containerOverrides:
        $ref: '#/definitions/ContainerOverrides'
        description: A list of container overrides in JSON format that specify the name of a container in the specified job definition and the overrides it should receive. You can override the default command for a container (that is specified in the job definition or the Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the job definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.
      retryStrategy:
        $ref: '#/definitions/RetryStrategy'
        description: 'The retry strategy to use for failed jobs from this <a>SubmitJob</a> operation. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition.'
      timeout:
        $ref: '#/definitions/JobTimeout'
        description: 'The timeout configuration for this <a>SubmitJob</a> operation. You can specify a timeout duration after which AWS Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it is not retried. The minimum value for the timeout is 60 seconds. This configuration overrides any timeout configuration specified in the job definition. For array jobs, child jobs have the same timeout configuration as the parent job. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html">Job Timeouts</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.'
  TerminateJobResponse:
    type: object
    example: {}
    properties: {}
  TerminateJobRequest:
    type: object
    required:
      - jobId
      - reason
    example:
      jobId: 61e743ed-35e4-48da-b2de-5c8333821c84
      reason: Terminating job.
    properties:
      jobId:
        $ref: '#/definitions/String'
        description: The AWS Batch job ID of the job to terminate.
      reason:
        $ref: '#/definitions/String'
        description: 'A message to attach to the job that explains the reason for canceling it. This message is returned by future <a>DescribeJobs</a> operations on the job. This message is also recorded in the AWS Batch activity logs. '
  UpdateComputeEnvironmentResponse:
    type: object
    example:
      computeEnvironmentArn: 'arn:aws:batch:us-east-1:012345678910:compute-environment/P2OnDemand'
      computeEnvironmentName: P2OnDemand
    properties:
      computeEnvironmentName:
        $ref: '#/definitions/String'
        description: The name of compute environment.
      computeEnvironmentArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the compute environment. '
  UpdateComputeEnvironmentRequest:
    type: object
    required:
      - computeEnvironment
    example:
      computeEnvironment: P2OnDemand
      state: DISABLED
    properties:
      computeEnvironment:
        $ref: '#/definitions/String'
        description: The name or full Amazon Resource Name (ARN) of the compute environment to update.
      state:
        $ref: '#/definitions/CEState'
        description: The state of the compute environment. Compute environments in the <code>ENABLED</code> state can accept jobs from a queue and scale in or out automatically based on the workload demand of its associated queues.
      computeResources:
        $ref: '#/definitions/ComputeResourceUpdate'
        description: Details of the compute resources managed by the compute environment. Required for a managed compute environment.
      serviceRole:
        $ref: '#/definitions/String'
        description: '<p>The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.</p> <p>If your specified role has a path other than <code>/</code>, then you must either specify the full role ARN (this is recommended) or prefix the role name with the path.</p> <note> <p>Depending on how you created your AWS Batch service role, its ARN may contain the <code>service-role</code> path prefix. When you only specify the name of the service role, AWS Batch assumes that your ARN does not use the <code>service-role</code> path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.</p> </note>'
  UpdateJobQueueResponse:
    type: object
    example:
      jobQueueArn: 'arn:aws:batch:us-east-1:012345678910:job-queue/GPGPU'
      jobQueueName: GPGPU
    properties:
      jobQueueName:
        $ref: '#/definitions/String'
        description: The name of the job queue.
      jobQueueArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the job queue.
  UpdateJobQueueRequest:
    type: object
    required:
      - jobQueue
    example:
      jobQueue: GPGPU
      state: DISABLED
    properties:
      jobQueue:
        $ref: '#/definitions/String'
        description: The name or the Amazon Resource Name (ARN) of the job queue.
      state:
        $ref: '#/definitions/JQState'
        description: Describes the queue's ability to accept new jobs.
      priority:
        $ref: '#/definitions/Integer'
        description: 'The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with same compute environment. Priority is determined in descending order, for example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>.'
      computeEnvironmentOrder:
        $ref: '#/definitions/ComputeEnvironmentOrders'
        description: 'Details the set of compute environments mapped to a job queue and their order relative to each other. This is one of the parameters used by the job scheduler to determine which compute environment should execute a given job. '
  ArrayJobDependency:
    type: string
    enum:
      - N_TO_N
      - SEQUENTIAL
  String:
    type: string
  Integer:
    type: integer
  ArrayJobStatusSummary:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/Integer'
  ArrayProperties:
    type: object
    properties:
      size:
        $ref: '#/definitions/Integer'
        description: The size of the array job.
    description: An object representing an AWS Batch array job.
  ArrayPropertiesDetail:
    type: object
    properties:
      statusSummary:
        $ref: '#/definitions/ArrayJobStatusSummary'
        description: A summary of the number of array job children in each available job status. This parameter is returned for parent array jobs.
      size:
        $ref: '#/definitions/Integer'
        description: The size of the array job. This parameter is returned for parent array jobs.
      index:
        $ref: '#/definitions/Integer'
        description: The job index within the array that is associated with this job. This parameter is returned for array job children.
    description: An object representing the array properties of a job.
  ArrayPropertiesSummary:
    type: object
    properties:
      size:
        $ref: '#/definitions/Integer'
        description: The size of the array job. This parameter is returned for parent array jobs.
      index:
        $ref: '#/definitions/Integer'
        description: The job index within the array that is associated with this job. This parameter is returned for children of array jobs.
    description: An object representing the array properties of a job.
  AttemptContainerDetail:
    type: object
    properties:
      containerInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the Amazon ECS container instance that hosts the job attempt.
      taskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the Amazon ECS task that is associated with the job attempt. Each container attempt receives a task ARN when they reach the <code>STARTING</code> status.
      exitCode:
        $ref: '#/definitions/Integer'
        description: The exit code for the job attempt. A non-zero exit code is considered a failure.
      reason:
        $ref: '#/definitions/String'
        description: A short (255 max characters) human-readable string to provide additional details about a running or stopped container.
      logStreamName:
        $ref: '#/definitions/String'
        description: The name of the CloudWatch Logs log stream associated with the container. The log group for AWS Batch jobs is <code>/aws/batch/job</code>. Each container attempt receives a log stream name when they reach the <code>RUNNING</code> status.
    description: An object representing the details of a container that is part of a job attempt.
  Long:
    type: integer
  AttemptDetail:
    type: object
    properties:
      container:
        $ref: '#/definitions/AttemptContainerDetail'
        description: Details about the container in this job attempt.
      startedAt:
        $ref: '#/definitions/Long'
        description: The Unix time stamp (in seconds and milliseconds) for when the attempt was started (when the attempt transitioned from the <code>STARTING</code> state to the <code>RUNNING</code> state).
      stoppedAt:
        $ref: '#/definitions/Long'
        description: 'The Unix time stamp (in seconds and milliseconds) for when the attempt was stopped (when the attempt transitioned from the <code>RUNNING</code> state to a terminal state, such as <code>SUCCEEDED</code> or <code>FAILED</code>).'
      statusReason:
        $ref: '#/definitions/String'
        description: 'A short, human-readable string to provide additional details about the current status of the job attempt.'
    description: An object representing a job attempt.
  AttemptDetails:
    type: array
    items:
      $ref: '#/definitions/AttemptDetail'
  Boolean:
    type: boolean
  CEState:
    type: string
    enum:
      - ENABLED
      - DISABLED
  CEStatus:
    type: string
    enum:
      - CREATING
      - UPDATING
      - DELETING
      - DELETED
      - VALID
      - INVALID
  CEType:
    type: string
    enum:
      - MANAGED
      - UNMANAGED
  CRType:
    type: string
    enum:
      - EC2
      - SPOT
  ComputeResource:
    type: object
    required:
      - type
      - minvCpus
      - maxvCpus
      - instanceTypes
      - subnets
      - securityGroupIds
      - instanceRole
    properties:
      type:
        $ref: '#/definitions/CRType'
        description: The type of compute environment.
      minvCpus:
        $ref: '#/definitions/Integer'
        description: 'The minimum number of EC2 vCPUs that an environment should maintain. '
      maxvCpus:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of EC2 vCPUs that an environment can reach. '
      desiredvCpus:
        $ref: '#/definitions/Integer'
        description: 'The desired number of EC2 vCPUS in the compute environment. '
      instanceTypes:
        $ref: '#/definitions/StringList'
        description: 'The instances types that may be launched. You can specify instance families to launch any instance type within those families (for example, <code>c4</code> or <code>p3</code>), or you can specify specific sizes within a family (such as <code>c4.8xlarge</code>). You can also choose <code>optimal</code> to pick instance types (from the latest C, M, and R instance families) on the fly that match the demand of your job queues.'
      imageId:
        $ref: '#/definitions/String'
        description: The Amazon Machine Image (AMI) ID used for instances launched in the compute environment.
      subnets:
        $ref: '#/definitions/StringList'
        description: 'The VPC subnets into which the compute resources are launched. '
      securityGroupIds:
        $ref: '#/definitions/StringList'
        description: 'The EC2 security group that is associated with instances launched in the compute environment. '
      ec2KeyPair:
        $ref: '#/definitions/String'
        description: The EC2 key pair that is used for instances launched in the compute environment.
      instanceRole:
        $ref: '#/definitions/String'
        description: 'The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment. You can specify the short name or full Amazon Resource Name (ARN) of an instance profile. For example, <code>ecsInstanceRole</code> or <code>arn:aws:iam::&lt;aws_account_id&gt;:instance-profile/ecsInstanceRole</code>. For more information, see <a href="http://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon ECS Instance Role</a> in the <i>AWS Batch User Guide</i>.'
      tags:
        $ref: '#/definitions/TagsMap'
        description: 'Key-value pair tags to be applied to resources that are launched in the compute environment. '
      bidPercentage:
        $ref: '#/definitions/Integer'
        description: 'The minimum percentage that a Spot Instance price must be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20%, then the Spot price must be below 20% of the current On-Demand price for that EC2 instance.'
      spotIamFleetRole:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a <code>SPOT</code> compute environment.
    description: An object representing an AWS Batch compute resource.
  ComputeEnvironmentDetail:
    type: object
    required:
      - computeEnvironmentName
      - computeEnvironmentArn
      - ecsClusterArn
    properties:
      computeEnvironmentName:
        $ref: '#/definitions/String'
        description: 'The name of the compute environment. '
      computeEnvironmentArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the compute environment. '
      ecsClusterArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment. '
      type:
        $ref: '#/definitions/CEType'
        description: The type of the compute environment.
      state:
        $ref: '#/definitions/CEState'
        description: 'The state of the compute environment. The valid values are <code>ENABLED</code> or <code>DISABLED</code>. An <code>ENABLED</code> state indicates that you can register instances with the compute environment and that the associated instances can accept jobs. '
      status:
        $ref: '#/definitions/CEStatus'
        description: 'The current status of the compute environment (for example, <code>CREATING</code> or <code>VALID</code>).'
      statusReason:
        $ref: '#/definitions/String'
        description: 'A short, human-readable string to provide additional details about the current status of the compute environment.'
      computeResources:
        $ref: '#/definitions/ComputeResource'
        description: 'The compute resources defined for the compute environment. '
      serviceRole:
        $ref: '#/definitions/String'
        description: The service role associated with the compute environment that allows AWS Batch to make calls to AWS API operations on your behalf.
    description: An object representing an AWS Batch compute environment.
  ComputeEnvironmentDetailList:
    type: array
    items:
      $ref: '#/definitions/ComputeEnvironmentDetail'
  ComputeEnvironmentOrder:
    type: object
    required:
      - order
      - computeEnvironment
    properties:
      order:
        $ref: '#/definitions/Integer'
        description: The order of the compute environment.
      computeEnvironment:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the compute environment.
    description: 'The order in which compute environments are tried for job placement within a queue. Compute environments are tried in ascending order. For example, if two compute environments are associated with a job queue, the compute environment with a lower order integer value is tried for job placement first.'
  ComputeEnvironmentOrders:
    type: array
    items:
      $ref: '#/definitions/ComputeEnvironmentOrder'
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  TagsMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  ComputeResourceUpdate:
    type: object
    properties:
      minvCpus:
        $ref: '#/definitions/Integer'
        description: The minimum number of EC2 vCPUs that an environment should maintain.
      maxvCpus:
        $ref: '#/definitions/Integer'
        description: The maximum number of EC2 vCPUs that an environment can reach.
      desiredvCpus:
        $ref: '#/definitions/Integer'
        description: The desired number of EC2 vCPUS in the compute environment.
    description: An object representing the attributes of a compute environment that can be updated.
  Volumes:
    type: array
    items:
      $ref: '#/definitions/Volume'
  EnvironmentVariables:
    type: array
    items:
      $ref: '#/definitions/KeyValuePair'
  MountPoints:
    type: array
    items:
      $ref: '#/definitions/MountPoint'
  Ulimits:
    type: array
    items:
      $ref: '#/definitions/Ulimit'
  ContainerDetail:
    type: object
    properties:
      image:
        $ref: '#/definitions/String'
        description: The image used to start the container.
      vcpus:
        $ref: '#/definitions/Integer'
        description: 'The number of VCPUs allocated for the job. '
      memory:
        $ref: '#/definitions/Integer'
        description: The number of MiB of memory reserved for the job.
      command:
        $ref: '#/definitions/StringList'
        description: 'The command that is passed to the container. '
      jobRoleArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) associated with the job upon execution. '
      volumes:
        $ref: '#/definitions/Volumes'
        description: A list of volumes associated with the job.
      environment:
        $ref: '#/definitions/EnvironmentVariables'
        description: <p>The environment variables to pass to a container.</p> <note> <p>Environment variables must not start with <code>AWS_BATCH</code>; this naming convention is reserved for variables that are set by the AWS Batch service.</p> </note>
      mountPoints:
        $ref: '#/definitions/MountPoints'
        description: The mount points for data volumes in your container.
      readonlyRootFilesystem:
        $ref: '#/definitions/Boolean'
        description: 'When this parameter is true, the container is given read-only access to its root file system.'
      ulimits:
        $ref: '#/definitions/Ulimits'
        description: A list of <code>ulimit</code> values to set in the container.
      privileged:
        $ref: '#/definitions/Boolean'
        description: 'When this parameter is true, the container is given elevated privileges on the host container instance (similar to the <code>root</code> user).'
      user:
        $ref: '#/definitions/String'
        description: The user name to use inside the container.
      exitCode:
        $ref: '#/definitions/Integer'
        description: The exit code to return upon completion.
      reason:
        $ref: '#/definitions/String'
        description: A short (255 max characters) human-readable string to provide additional details about a running or stopped container.
      containerInstanceArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the container instance on which the container is running.
      taskArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the Amazon ECS task that is associated with the container job. Each container attempt receives a task ARN when they reach the <code>STARTING</code> status.
      logStreamName:
        $ref: '#/definitions/String'
        description: The name of the CloudWatch Logs log stream associated with the container. The log group for AWS Batch jobs is <code>/aws/batch/job</code>. Each container attempt receives a log stream name when they reach the <code>RUNNING</code> status.
    description: An object representing the details of a container that is part of a job.
  ContainerOverrides:
    type: object
    properties:
      vcpus:
        $ref: '#/definitions/Integer'
        description: The number of vCPUs to reserve for the container. This value overrides the value set in the job definition.
      memory:
        $ref: '#/definitions/Integer'
        description: The number of MiB of memory reserved for the job. This value overrides the value set in the job definition.
      command:
        $ref: '#/definitions/StringList'
        description: The command to send to the container that overrides the default command from the Docker image or the job definition.
      environment:
        $ref: '#/definitions/EnvironmentVariables'
        description: '<p>The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the job definition.</p> <note> <p>Environment variables must not start with <code>AWS_BATCH</code>; this naming convention is reserved for variables that are set by the AWS Batch service.</p> </note>'
    description: The overrides that should be sent to a container.
  ContainerProperties:
    type: object
    required:
      - image
      - vcpus
      - memory
    properties:
      image:
        $ref: '#/definitions/String'
        description: '<p>The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with <code> <i>repository-url</i>/<i>image</i>:<i>tag</i> </code>. Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to <code>Image</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p> <ul> <li> <p>Images in Amazon ECR repositories use the full registry and repository URI (for example, <code>012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;</code>). </p> </li> <li> <p>Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code> or <code>mongo</code>).</p> </li> <li> <p>Images in other repositories on Docker Hub are qualified with an organization name (for example, <code>amazon/amazon-ecs-agent</code>).</p> </li> <li> <p>Images in other online repositories are qualified further by a domain name (for example, <code>quay.io/assemblyline/ubuntu</code>).</p> </li> </ul>'
      vcpus:
        $ref: '#/definitions/Integer'
        description: 'The number of vCPUs reserved for the container. This parameter maps to <code>CpuShares</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. Each vCPU is equivalent to 1,024 CPU shares. You must specify at least one vCPU.'
      memory:
        $ref: '#/definitions/Integer'
        description: '<p>The hard limit (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed. This parameter maps to <code>Memory</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. You must specify at least 4 MiB of memory for a job.</p> <note> <p>If you are trying to maximize your resource utilization by providing your jobs as much memory as possible for a particular instance type, see <a href="http://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory Management</a> in the <i>AWS Batch User Guide</i>.</p> </note>'
      command:
        $ref: '#/definitions/StringList'
        description: 'The command that is passed to the container. This parameter maps to <code>Cmd</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.'
      jobRoleArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the IAM role that the container can assume for AWS permissions.
      volumes:
        $ref: '#/definitions/Volumes'
        description: A list of data volumes used in a job.
      environment:
        $ref: '#/definitions/EnvironmentVariables'
        description: '<p>The environment variables to pass to a container. This parameter maps to <code>Env</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p> <important> <p>We do not recommend using plaintext environment variables for sensitive information, such as credential data.</p> </important> <note> <p>Environment variables must not start with <code>AWS_BATCH</code>; this naming convention is reserved for variables that are set by the AWS Batch service.</p> </note>'
      mountPoints:
        $ref: '#/definitions/MountPoints'
        description: 'The mount points for data volumes in your container. This parameter maps to <code>Volumes</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.'
      readonlyRootFilesystem:
        $ref: '#/definitions/Boolean'
        description: 'When this parameter is true, the container is given read-only access to its root file system. This parameter maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--read-only</code> option to <code>docker run</code>.'
      privileged:
        $ref: '#/definitions/Boolean'
        description: 'When this parameter is true, the container is given elevated privileges on the host container instance (similar to the <code>root</code> user). This parameter maps to <code>Privileged</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--privileged</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.'
      ulimits:
        $ref: '#/definitions/Ulimits'
        description: 'A list of <code>ulimits</code> to set in the container. This parameter maps to <code>Ulimits</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.'
      user:
        $ref: '#/definitions/String'
        description: 'The user name to use inside the container. This parameter maps to <code>User</code> in the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/reference/api/docker_remote_api_v1.23/">Docker Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.'
    description: Container properties are used in job definitions to describe the container that is launched as part of a job.
  ContainerSummary:
    type: object
    properties:
      exitCode:
        $ref: '#/definitions/Integer'
        description: The exit code to return upon completion.
      reason:
        $ref: '#/definitions/String'
        description: A short (255 max characters) human-readable string to provide additional details about a running or stopped container.
    description: An object representing summary details of a container within a job.
  JQState:
    type: string
    enum:
      - ENABLED
      - DISABLED
  JobDefinitionList:
    type: array
    items:
      $ref: '#/definitions/JobDefinition'
  JobQueueDetailList:
    type: array
    items:
      $ref: '#/definitions/JobQueueDetail'
  JobDetailList:
    type: array
    items:
      $ref: '#/definitions/JobDetail'
  KeyValuePair:
    type: object
    properties:
      name:
        $ref: '#/definitions/String'
        description: 'The name of the key-value pair. For environment variables, this is the name of the environment variable.'
      value:
        $ref: '#/definitions/String'
        description: 'The value of the key-value pair. For environment variables, this is the value of the environment variable.'
    description: A key-value pair object.
  Host:
    type: object
    properties:
      sourcePath:
        $ref: '#/definitions/String'
        description: 'The path on the host container instance that is presented to the container. If this parameter is empty, then the Docker daemon has assigned a host path for you. If the <code>host</code> parameter contains a <code>sourcePath</code> file location, then the data volume persists at the specified location on the host container instance until you delete it manually. If the <code>sourcePath</code> value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported.'
    description: 'The contents of the <code>host</code> parameter determine whether your data volume persists on the host container instance and where it is stored. If the host parameter is empty, then the Docker daemon assigns a host path for your data volume, but the data is not guaranteed to persist after the containers associated with it stop running.'
  JQStatus:
    type: string
    enum:
      - CREATING
      - UPDATING
      - DELETING
      - DELETED
      - VALID
      - INVALID
  ParametersMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  RetryStrategy:
    type: object
    properties:
      attempts:
        $ref: '#/definitions/Integer'
        description: 'The number of times to move a job to the <code>RUNNABLE</code> status. You may specify between 1 and 10 attempts. If the value of <code>attempts</code> is greater than one, the job is retried if it fails until it has moved to <code>RUNNABLE</code> that many times.'
    description: The retry strategy associated with a job.
  JobTimeout:
    type: object
    properties:
      attemptDurationSeconds:
        $ref: '#/definitions/Integer'
        description: The time duration in seconds (measured from the job attempt's <code>startedAt</code> timestamp) after which AWS Batch terminates your jobs if they have not finished.
    description: An object representing a job timeout configuration.
  JobDefinition:
    type: object
    required:
      - jobDefinitionName
      - jobDefinitionArn
      - revision
      - type
    properties:
      jobDefinitionName:
        $ref: '#/definitions/String'
        description: 'The name of the job definition. '
      jobDefinitionArn:
        $ref: '#/definitions/String'
        description: 'The Amazon Resource Name (ARN) for the job definition. '
      revision:
        $ref: '#/definitions/Integer'
        description: The revision of the job definition.
      status:
        $ref: '#/definitions/String'
        description: The status of the job definition.
      type:
        $ref: '#/definitions/String'
        description: The type of job definition.
      parameters:
        $ref: '#/definitions/ParametersMap'
        description: Default parameters or parameter substitution placeholders that are set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults from the job definition.
      retryStrategy:
        $ref: '#/definitions/RetryStrategy'
        description: The retry strategy to use for failed jobs that are submitted with this job definition.
      containerProperties:
        $ref: '#/definitions/ContainerProperties'
        description: 'An object with various properties specific to container-based jobs. '
      timeout:
        $ref: '#/definitions/JobTimeout'
        description: The timeout configuration for jobs that are submitted with this job definition. You can specify a timeout duration after which AWS Batch terminates your jobs if they have not finished.
    description: An object representing an AWS Batch job definition.
  JobDefinitionType:
    type: string
    enum:
      - container
  JobDependency:
    type: object
    properties:
      jobId:
        $ref: '#/definitions/String'
        description: The job ID of the AWS Batch job associated with this dependency.
      type:
        $ref: '#/definitions/ArrayJobDependency'
        description: The type of the job dependency.
    description: An object representing an AWS Batch job dependency.
  JobDependencyList:
    type: array
    items:
      $ref: '#/definitions/JobDependency'
  JobStatus:
    type: string
    enum:
      - SUBMITTED
      - PENDING
      - RUNNABLE
      - STARTING
      - RUNNING
      - SUCCEEDED
      - FAILED
  JobDetail:
    type: object
    required:
      - jobName
      - jobId
      - jobQueue
      - status
      - startedAt
      - jobDefinition
    properties:
      jobName:
        $ref: '#/definitions/String'
        description: The name of the job.
      jobId:
        $ref: '#/definitions/String'
        description: The ID for the job.
      jobQueue:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the job queue with which the job is associated.
      status:
        $ref: '#/definitions/JobStatus'
        description: The current status for the job.
      attempts:
        $ref: '#/definitions/AttemptDetails'
        description: A list of job attempts associated with this job.
      statusReason:
        $ref: '#/definitions/String'
        description: 'A short, human-readable string to provide additional details about the current status of the job. '
      createdAt:
        $ref: '#/definitions/Long'
        description: 'The Unix time stamp (in seconds and milliseconds) for when the job was created. For non-array jobs and parent array jobs, this is when the job entered the <code>SUBMITTED</code> state (at the time <a>SubmitJob</a> was called). For array child jobs, this is when the child job was spawned by its parent and entered the <code>PENDING</code> state.'
      retryStrategy:
        $ref: '#/definitions/RetryStrategy'
        description: The retry strategy to use for this job if an attempt fails.
      startedAt:
        $ref: '#/definitions/Long'
        description: The Unix time stamp (in seconds and milliseconds) for when the job was started (when the job transitioned from the <code>STARTING</code> state to the <code>RUNNING</code> state).
      stoppedAt:
        $ref: '#/definitions/Long'
        description: 'The Unix time stamp (in seconds and milliseconds) for when the job was stopped (when the job transitioned from the <code>RUNNING</code> state to a terminal state, such as <code>SUCCEEDED</code> or <code>FAILED</code>).'
      dependsOn:
        $ref: '#/definitions/JobDependencyList'
        description: A list of job names or IDs on which this job depends.
      jobDefinition:
        $ref: '#/definitions/String'
        description: The job definition that is used by this job.
      parameters:
        $ref: '#/definitions/ParametersMap'
        description: 'Additional parameters passed to the job that replace parameter substitution placeholders or override any corresponding parameter defaults from the job definition. '
      container:
        $ref: '#/definitions/ContainerDetail'
        description: An object representing the details of the container that is associated with the job.
      arrayProperties:
        $ref: '#/definitions/ArrayPropertiesDetail'
        description: 'The array properties of the job, if it is an array job.'
      timeout:
        $ref: '#/definitions/JobTimeout'
        description: 'The timeout configuration for the job. '
    description: An object representing an AWS Batch job.
  JobQueueDetail:
    type: object
    required:
      - jobQueueName
      - jobQueueArn
      - state
      - priority
      - computeEnvironmentOrder
    properties:
      jobQueueName:
        $ref: '#/definitions/String'
        description: The name of the job queue.
      jobQueueArn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the job queue.
      state:
        $ref: '#/definitions/JQState'
        description: Describes the ability of the queue to accept new jobs.
      status:
        $ref: '#/definitions/JQStatus'
        description: 'The status of the job queue (for example, <code>CREATING</code> or <code>VALID</code>).'
      statusReason:
        $ref: '#/definitions/String'
        description: 'A short, human-readable string to provide additional details about the current status of the job queue.'
      priority:
        $ref: '#/definitions/Integer'
        description: 'The priority of the job queue. '
      computeEnvironmentOrder:
        $ref: '#/definitions/ComputeEnvironmentOrders'
        description: The compute environments that are attached to the job queue and the order in which job placement is preferred. Compute environments are selected for job placement in ascending order.
    description: An object representing the details of an AWS Batch job queue.
  JobSummary:
    type: object
    required:
      - jobId
      - jobName
    properties:
      jobId:
        $ref: '#/definitions/String'
        description: The ID of the job.
      jobName:
        $ref: '#/definitions/String'
        description: The name of the job.
      createdAt:
        $ref: '#/definitions/Long'
        description: 'The Unix time stamp for when the job was created. For non-array jobs and parent array jobs, this is when the job entered the <code>SUBMITTED</code> state (at the time <a>SubmitJob</a> was called). For array child jobs, this is when the child job was spawned by its parent and entered the <code>PENDING</code> state.'
      status:
        $ref: '#/definitions/JobStatus'
        description: The current status for the job.
      statusReason:
        $ref: '#/definitions/String'
        description: 'A short, human-readable string to provide additional details about the current status of the job.'
      startedAt:
        $ref: '#/definitions/Long'
        description: The Unix time stamp for when the job was started (when the job transitioned from the <code>STARTING</code> state to the <code>RUNNING</code> state).
      stoppedAt:
        $ref: '#/definitions/Long'
        description: 'The Unix time stamp for when the job was stopped (when the job transitioned from the <code>RUNNING</code> state to a terminal state, such as <code>SUCCEEDED</code> or <code>FAILED</code>).'
      container:
        $ref: '#/definitions/ContainerSummary'
        description: An object representing the details of the container that is associated with the job.
      arrayProperties:
        $ref: '#/definitions/ArrayPropertiesSummary'
        description: 'The array properties of the job, if it is an array job.'
    description: An object representing summary details of a job.
  JobSummaryList:
    type: array
    items:
      $ref: '#/definitions/JobSummary'
  MountPoint:
    type: object
    properties:
      containerPath:
        $ref: '#/definitions/String'
        description: The path on the container at which to mount the host volume.
      readOnly:
        $ref: '#/definitions/Boolean'
        description: 'If this value is <code>true</code>, the container has read-only access to the volume; otherwise, the container can write to the volume. The default value is <code>false</code>.'
      sourceVolume:
        $ref: '#/definitions/String'
        description: The name of the volume to mount.
    description: Details on a Docker volume mount point that is used in a job's container properties.
  Ulimit:
    type: object
    required:
      - hardLimit
      - name
      - softLimit
    properties:
      hardLimit:
        $ref: '#/definitions/Integer'
        description: The hard limit for the <code>ulimit</code> type.
      name:
        $ref: '#/definitions/String'
        description: The <code>type</code> of the <code>ulimit</code>.
      softLimit:
        $ref: '#/definitions/Integer'
        description: The soft limit for the <code>ulimit</code> type.
    description: The <code>ulimit</code> settings to pass to the container.
  Volume:
    type: object
    properties:
      host:
        $ref: '#/definitions/Host'
        description: 'The contents of the <code>host</code> parameter determine whether your data volume persists on the host container instance and where it is stored. If the host parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data is not guaranteed to persist after the containers associated with it stop running.'
      name:
        $ref: '#/definitions/String'
        description: 'The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. This name is referenced in the <code>sourceVolume</code> parameter of container definition <code>mountPoints</code>.'
    description: A data volume used in a job's container properties.
