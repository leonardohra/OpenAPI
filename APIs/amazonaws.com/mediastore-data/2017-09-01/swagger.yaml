swagger: '2.0'
info:
  version: '2017-09-01'
  x-release: v4
  title: AWS Elemental MediaStore Data Plane
  description: 'An AWS Elemental MediaStore asset is an object, similar to an object in the Amazon S3 service. Objects are the fundamental entities that are stored in AWS Elemental MediaStore.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediastore-data
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediastore-data-2017-09-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/mediastore/'
host: data.mediastore.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/{Path}':
    delete:
      operationId: DeleteObject
      description: Deletes an object at the specified path.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectResponse'
        '480':
          description: ContainerNotFoundException
          schema:
            $ref: '#/definitions/ContainerNotFoundException'
        '481':
          description: ObjectNotFoundException
          schema:
            $ref: '#/definitions/ObjectNotFoundException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectRequest'
        - name: Path
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
        - name: Path
          in: query
          type: string
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    head:
      operationId: DescribeObject
      description: Gets the headers for an object at the specified path.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeObjectResponse'
        '480':
          description: ContainerNotFoundException
          schema:
            $ref: '#/definitions/ContainerNotFoundException'
        '481':
          description: ObjectNotFoundException
          schema:
            $ref: '#/definitions/ObjectNotFoundException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeObjectRequest'
        - name: Path
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
        - name: Path
          in: query
          type: string
    get:
      operationId: GetObject
      description: Downloads the object at the specified path.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectResponse'
        '480':
          description: ContainerNotFoundException
          schema:
            $ref: '#/definitions/ContainerNotFoundException'
        '481':
          description: ObjectNotFoundException
          schema:
            $ref: '#/definitions/ObjectNotFoundException'
        '482':
          description: RequestedRangeNotSatisfiableException
          schema:
            $ref: '#/definitions/RequestedRangeNotSatisfiableException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectRequest'
        - name: Path
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
        - name: Path
          in: query
          type: string
    put:
      operationId: PutObject
      description: Uploads an object to the specified path. Object sizes are limited to 10 MB.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectResponse'
        '480':
          description: ContainerNotFoundException
          schema:
            $ref: '#/definitions/ContainerNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutObjectRequest'
        - name: Path
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
        - name: Path
          in: query
          type: string
  /:
    get:
      operationId: ListItems
      description: Provides a list of metadata entries about folders and objects in the specified folder.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListItemsResponse'
        '480':
          description: ContainerNotFoundException
          schema:
            $ref: '#/definitions/ContainerNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListItemsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  DeleteObjectResponse:
    type: object
    properties: {}
  DeleteObjectRequest:
    type: object
    properties: {}
  ContainerNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified container was not found for the specified account.
  ObjectNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: Could not perform an operation on an object that does not exist.
  InternalServerError:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The service is temporarily unavailable.
  DescribeObjectResponse:
    type: object
    properties: {}
  DescribeObjectRequest:
    type: object
    properties: {}
  GetObjectResponse:
    type: object
    properties:
      Body:
        $ref: '#/definitions/PayloadBlob'
        description: 'The bytes of the object. '
  GetObjectRequest:
    type: object
    properties: {}
  RequestedRangeNotSatisfiableException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The requested content range is not valid.
  ListItemsResponse:
    type: object
    properties:
      Items:
        $ref: '#/definitions/ItemList'
        description: Metadata entries for the folders and objects at the requested path.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The <code>NextToken</code> used to request the next page of results using <code>ListItems</code>.
  ListItemsRequest:
    type: object
    properties: {}
  PutObjectResponse:
    type: object
    properties:
      ContentSHA256:
        $ref: '#/definitions/SHA256Hash'
        description: The SHA256 digest of the object that is persisted.
      ETag:
        $ref: '#/definitions/ETag'
        description: Unique identifier of the object in the container.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The storage class where the object was persisted. Should be “Temporal”.
  PutObjectRequest:
    type: object
    required:
      - Body
    properties:
      Body:
        $ref: '#/definitions/PayloadBlob'
        description: 'The bytes to be stored. '
  ErrorMessage:
    type: string
    pattern: '[ \w:\.\?-]+'
    minLength: 1
    maxLength: 255
  ContentRangePattern:
    type: string
    pattern: ^bytes=\d+\-\d+/\d+$
  ContentType:
    type: string
    pattern: '^[\w\-\/\.]{1,255}$'
  PathNaming:
    type: string
    pattern: '(?:[A-Za-z0-9_\.\-\~]+/){0,10}[A-Za-z0-9_\.\-\~]+'
    minLength: 1
    maxLength: 900
  ETag:
    type: string
    pattern: '[0-9A-Fa-f]+'
    minLength: 1
    maxLength: 64
  NonNegativeLong:
    type: integer
    minimum: 0
  StringPrimitive:
    type: string
  TimeStamp:
    type: string
    format: date-time
  RangePattern:
    type: string
    pattern: '^bytes=(?:\d+\-\d*|\d*\-\d+)$'
  PayloadBlob:
    type: string
  statusCode:
    type: integer
  ItemName:
    type: string
    pattern: '[A-Za-z0-9_\.\-\~]+'
  ItemType:
    type: string
    enum:
      - OBJECT
      - FOLDER
  Item:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ItemName'
        description: The name of the item.
      Type:
        $ref: '#/definitions/ItemType'
        description: The item type (folder or object).
      ETag:
        $ref: '#/definitions/ETag'
        description: The ETag that represents a unique instance of the item.
      LastModified:
        $ref: '#/definitions/TimeStamp'
        description: The date and time that the item was last modified.
      ContentType:
        $ref: '#/definitions/ContentType'
        description: The content type of the item.
      ContentLength:
        $ref: '#/definitions/NonNegativeLong'
        description: The length of the item in bytes.
    description: A metadata entry for a folder or object.
  ItemList:
    type: array
    items:
      $ref: '#/definitions/Item'
  ListPathNaming:
    type: string
    pattern: '/?(?:[A-Za-z0-9_\.\-\~]+/){0,10}(?:[A-Za-z0-9_\.\-\~]+)?/?'
    minLength: 0
    maxLength: 900
  ListLimit:
    type: integer
    minimum: 1
    maximum: 1000
  PaginationToken:
    type: string
  StorageClass:
    type: string
    enum:
      - TEMPORAL
    minLength: 1
    maxLength: 16
  SHA256Hash:
    type: string
    pattern: '[0-9A-Fa-f]{64}'
    minLength: 64
    maxLength: 64
