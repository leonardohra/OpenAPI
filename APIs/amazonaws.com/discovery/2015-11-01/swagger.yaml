swagger: '2.0'
info:
  version: '2015-11-01'
  x-release: v4
  title: AWS Application Discovery Service
  description: '<fullname>AWS Application Discovery Service</fullname> <p>AWS Application Discovery Service helps you plan application migration projects by automatically identifying servers, virtual machines (VMs), software, and software dependencies running in your on-premises data centers. Application Discovery Service also collects application performance data, which can help you assess the outcome of your migration. The data collected by Application Discovery Service is securely retained in an AWS-hosted and managed database in the cloud. You can export the data as a CSV or XML file into your preferred visualization tool or cloud-migration solution to plan your migration. For more information, see <a href="http://aws.amazon.com/application-discovery/faqs/">AWS Application Discovery Service FAQ</a>.</p> <p>Application Discovery Service offers two modes of operation:</p> <ul> <li> <p> <b>Agentless discovery</b> mode is recommended for environments that use VMware vCenter Server. This mode doesn''t require you to install an agent on each host. Agentless discovery gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment. Agentless discovery doesn''t collect information about software and software dependencies. It also doesn''t work in non-VMware environments. </p> </li> <li> <p> <b>Agent-based discovery</b> mode collects a richer set of data than agentless discovery by using the AWS Application Discovery Agent, which you install on one or more hosts in your data center. The agent captures infrastructure and application information, including an inventory of installed software applications, system and process performance, resource utilization, and network dependencies between workloads. The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the cloud. </p> </li> </ul> <p>We recommend that you use agent-based discovery for non-VMware environments and to collect information about software and software dependencies. You can also run agent-based and agentless discovery simultaneously. Use agentless discovery to quickly complete the initial infrastructure assessment and then install agents on select hosts.</p> <p>Application Discovery Service integrates with application discovery solutions from AWS Partner Network (APN) partners. Third-party application discovery tools can query Application Discovery Service and write to the Application Discovery Service database using a public API. You can then import the data into either a visualization tool or cloud-migration solution.</p> <important> <p>Application Discovery Service doesn''t gather sensitive information. All data is handled according to the <a href="http://aws.amazon.com/privacy/">AWS Privacy Policy</a>. You can operate Application Discovery Service offline to inspect collected data before it is shared with the service.</p> </important> <p>Your AWS account must be granted access to Application Discovery Service, a process called <i>whitelisting</i>. This is true for AWS partners and customers alike. To request access, <a href="http://aws.amazon.com/application-discovery/">sign up for Application Discovery Service</a>. </p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you''re using. For more information, see <a href="http://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.</p> <p>This guide is intended for use with the <a href="http://docs.aws.amazon.com/application-discovery/latest/userguide/"> <i>AWS Application Discovery Service User Guide</i> </a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: discovery
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/discovery-2015-11-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/discovery/'
host: discovery.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AssociateConfigurationItemsToApplication
      description: Associates one or more configuration items with an application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateConfigurationItemsToApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateConfigurationItemsToApplicationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateApplication':
    post:
      operationId: CreateApplication
      description: Creates an application with the given name and description.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateApplicationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTags':
    post:
      operationId: CreateTags
      description: Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteApplications':
    post:
      operationId: DeleteApplications
      description: Deletes a list of applications and their associations with configuration items.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteApplicationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteApplicationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTags':
    post:
      operationId: DeleteTags
      description: Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAgents':
    post:
      operationId: DescribeAgents
      description: Lists agents or connectors as specified by ID or other filters. All agents/connectors associated with your user account can be listed if you call <code>DescribeAgents</code> as is without passing any parameters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAgentsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAgentsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeConfigurations':
    post:
      operationId: DescribeConfigurations
      description: '<p>Retrieves attributes for a list of configuration item IDs.</p> <note> <p>All of the supplied IDs must be for the same asset type from one of the follwoing:</p> <ul> <li> <p>server</p> </li> <li> <p>application</p> </li> <li> <p>process</p> </li> <li> <p>connection</p> </li> </ul> <p>Output fields are specific to the asset type specified. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, such as host name, operating system, number of network cards, etc.</p> <p>For a complete list of outputs for each asset type, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#DescribeConfigurations">Using the DescribeConfigurations Action</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeContinuousExports':
    post:
      operationId: DescribeContinuousExports
      description: Lists exports as specified by ID. All continuous exports associated with your user account can be listed if you call <code>DescribeContinuousExports</code> as is without passing any parameters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeContinuousExportsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeContinuousExportsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeExportConfigurations':
    post:
      operationId: DescribeExportConfigurations
      description: '<p> <code>DescribeExportConfigurations</code> is deprecated.</p> <p>Use instead <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html"> <code>DescribeExportTasks</code> </a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExportConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeExportConfigurationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeExportTasks':
    post:
      operationId: DescribeExportTasks
      description: Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeExportTasksResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeExportTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTags':
    post:
      operationId: DescribeTags
      description: '<p>Retrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter <code>filters</code>.</p> <p>There are three valid tag filter names:</p> <ul> <li> <p>tagKey</p> </li> <li> <p>tagValue</p> </li> <li> <p>configurationId</p> </li> </ul> <p>Also, all configuration items associated with your user account that have tags can be listed if you call <code>DescribeTags</code> as is without passing any parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateConfigurationItemsFromApplication':
    post:
      operationId: DisassociateConfigurationItemsFromApplication
      description: Disassociates one or more configuration items from an application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateConfigurationItemsFromApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateConfigurationItemsFromApplicationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ExportConfigurations':
    post:
      operationId: ExportConfigurations
      description: '<p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance. This API returns an export ID that you can query using the <i>DescribeExportConfigurations</i> API. The system imposes a limit of two configuration exports in six hours.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDiscoverySummary':
    post:
      operationId: GetDiscoverySummary
      description: <p>Retrieves a short summary of discovered assets.</p> <p>This API operation takes no request parameters and is called as is at the command prompt as shown in the example.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiscoverySummaryResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDiscoverySummaryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListConfigurations':
    post:
      operationId: ListConfigurations
      description: Retrieves a list of configuration items as specified by the value passed to the required paramater <code>configurationType</code>. Optional filtering may be applied to refine search results.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConfigurationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListServerNeighbors':
    post:
      operationId: ListServerNeighbors
      description: Retrieves a list of servers that are one network hop away from a specified server.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServerNeighborsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServerNeighborsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartContinuousExport':
    post:
      operationId: StartContinuousExport
      description: Start the continuous flow of agent's discovered data into Amazon Athena.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartContinuousExportResponse'
        '480':
          description: ConflictErrorException
          schema:
            $ref: '#/definitions/ConflictErrorException'
        '481':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '484':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '485':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '486':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartContinuousExportRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartDataCollectionByAgentIds':
    post:
      operationId: StartDataCollectionByAgentIds
      description: Instructs the specified agents or connectors to start collecting data.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartDataCollectionByAgentIdsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartDataCollectionByAgentIdsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartExportTask':
    post:
      operationId: StartExportTask
      description: '<p> Begins the export of discovered data to an S3 bucket.</p> <p> If you specify <code>agentIds</code> in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed agent data is limited to five concurrently running exports. </p> <p> If you do not include an <code>agentIds</code> filter, summary data is exported that includes both AWS Agentless Discovery Connector data and summary data from AWS Discovery Agents. Export of summary data is limited to two exports per day. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartExportTaskResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartExportTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopContinuousExport':
    post:
      operationId: StopContinuousExport
      description: Stop the continuous flow of agent's discovered data into Amazon Athena.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopContinuousExportResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
        '484':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopContinuousExportRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopDataCollectionByAgentIds':
    post:
      operationId: StopDataCollectionByAgentIds
      description: Instructs the specified agents or connectors to stop collecting data.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopDataCollectionByAgentIdsResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopDataCollectionByAgentIdsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateApplication':
    post:
      operationId: UpdateApplication
      description: Updates metadata about an application.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateApplicationResponse'
        '480':
          description: AuthorizationErrorException
          schema:
            $ref: '#/definitions/AuthorizationErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ServerInternalErrorException
          schema:
            $ref: '#/definitions/ServerInternalErrorException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateApplicationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AssociateConfigurationItemsToApplicationResponse:
    type: object
    properties: {}
  AssociateConfigurationItemsToApplicationRequest:
    type: object
    required:
      - applicationConfigurationId
      - configurationIds
    properties:
      applicationConfigurationId:
        $ref: '#/definitions/ApplicationId'
        description: The configuration ID of an application with which items are to be associated.
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: The ID of each configuration item to be associated with an application.
  AuthorizationErrorException: {}
  InvalidParameterException: {}
  InvalidParameterValueException: {}
  ServerInternalErrorException: {}
  CreateApplicationResponse:
    type: object
    properties:
      configurationId:
        $ref: '#/definitions/String'
        description: Configuration ID of an application to be created.
  CreateApplicationRequest:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/String'
        description: Name of the application to be created.
      description:
        $ref: '#/definitions/String'
        description: Description of the application to be created.
  CreateTagsResponse:
    type: object
    properties: {}
  CreateTagsRequest:
    type: object
    required:
      - configurationIds
      - tags
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: A list of configuration items that you want to tag.
      tags:
        $ref: '#/definitions/TagSet'
        description: '<p>Tags that you want to associate with one or more configuration items. Specify the tags that you want to create in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p>'
  ResourceNotFoundException: {}
  DeleteApplicationsResponse:
    type: object
    properties: {}
  DeleteApplicationsRequest:
    type: object
    required:
      - configurationIds
    properties:
      configurationIds:
        $ref: '#/definitions/ApplicationIdsList'
        description: Configuration ID of an application to be deleted.
  DeleteTagsResponse:
    type: object
    properties: {}
  DeleteTagsRequest:
    type: object
    required:
      - configurationIds
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: A list of configuration items with tags that you want to delete.
      tags:
        $ref: '#/definitions/TagSet'
        description: '<p>Tags that you want to delete from one or more configuration items. Specify the tags that you want to delete in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p>'
  DescribeAgentsResponse:
    type: object
    properties:
      agentsInfo:
        $ref: '#/definitions/AgentsInfo'
        description: 'Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an agent/Connector ID. The output includes agent/Connector IDs, IP addresses, media access control (MAC) addresses, agent/Connector health, host name where the agent/Connector resides, and the version number of each agent/Connector.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
  DescribeAgentsRequest:
    type: object
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: 'The agent or the Connector IDs for which you want information. If you specify no IDs, the system returns information about all agents/Connectors associated with your AWS user account.'
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{"key": "collectionStatus", "value": "STARTED"}</code> </p>'
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of agents/Connectors to return in a single page of output. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
  DescribeConfigurationsResponse:
    type: object
    properties:
      configurations:
        $ref: '#/definitions/DescribeConfigurationsAttributes'
        description: A key in the response map. The value is an array of data.
  DescribeConfigurationsRequest:
    type: object
    required:
      - configurationIds
    properties:
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: One or more configuration IDs.
  DescribeContinuousExportsResponse:
    type: object
    properties:
      descriptions:
        $ref: '#/definitions/ContinuousExportDescriptions'
        description: A list of continuous export descriptions.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token from the previous call to <code>DescribeExportTasks</code>.
  DescribeContinuousExportsRequest:
    type: object
    properties:
      exportIds:
        $ref: '#/definitions/ContinuousExportIds'
        description: The unique IDs assigned to the exports.
      maxResults:
        $ref: '#/definitions/DescribeContinuousExportsMaxResults'
        description: A number between 1 and 100 specifying the maximum number of continuous export descriptions returned.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token from the previous call to <code>DescribeExportTasks</code>.
  OperationNotPermittedException: {}
  DescribeExportConfigurationsResponse:
    type: object
    properties:
      exportsInfo:
        $ref: '#/definitions/ExportsInfo'
        description: <p/>
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token from the previous call to describe-export-tasks.
  DescribeExportConfigurationsRequest:
    type: object
    properties:
      exportIds:
        $ref: '#/definitions/ExportIds'
        description: A list of continuous export ids to search for.
      maxResults:
        $ref: '#/definitions/Integer'
        description: A number between 1 and 100 specifying the maximum number of continuous export descriptions returned.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token from the previous call to describe-export-tasks.
  DescribeExportTasksResponse:
    type: object
    properties:
      exportsInfo:
        $ref: '#/definitions/ExportsInfo'
        description: 'Contains one or more sets of export request details. When the status of a request is <code>SUCCEEDED</code>, the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <code>nextToken</code> value to include in a future <code>DescribeExportTasks</code> request. When the results of a <code>DescribeExportTasks</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.'
  DescribeExportTasksRequest:
    type: object
    properties:
      exportIds:
        $ref: '#/definitions/ExportIds'
        description: One or more unique identifiers used to query the status of an export request.
      filters:
        $ref: '#/definitions/ExportFilters'
        description: <p>One or more filters.</p> <ul> <li> <p> <code>AgentId</code> - ID of the agent whose collected data will be exported</p> </li> </ul>
      maxResults:
        $ref: '#/definitions/Integer'
        description: 'The maximum number of volume results returned by <code>DescribeExportTasks</code> in paginated output. When this parameter is used, <code>DescribeExportTasks</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The <code>nextToken</code> value returned from a previous paginated <code>DescribeExportTasks</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is null when there are no more results to return.
  DescribeTagsResponse:
    type: object
    properties:
      tags:
        $ref: '#/definitions/ConfigurationTagSet'
        description: 'Depending on the input, this is a list of configuration items tagged with a specific tag, or a list of tags for a specific configuration item.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The call returns a token. Use this token to get the next set of results.
  DescribeTagsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/TagFilters'
        description: 'You can filter the list using a <i>key</i>-<i>value</i> format. You can separate these items by using logical operators. Allowed filters include <code>tagKey</code>, <code>tagValue</code>, and <code>configurationId</code>. '
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of items to return in a single page of output. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to start the list. Use this token to get the next set of results.
  DisassociateConfigurationItemsFromApplicationResponse:
    type: object
    properties: {}
  DisassociateConfigurationItemsFromApplicationRequest:
    type: object
    required:
      - applicationConfigurationId
      - configurationIds
    properties:
      applicationConfigurationId:
        $ref: '#/definitions/ApplicationId'
        description: Configuration ID of an application from which each item is disassociated.
      configurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: Configuration ID of each item to be disassociated from an application.
  ExportConfigurationsResponse:
    type: object
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier that you can use to query the export status.
  GetDiscoverySummaryResponse:
    type: object
    properties:
      servers:
        $ref: '#/definitions/Long'
        description: The number of servers discovered.
      applications:
        $ref: '#/definitions/Long'
        description: The number of applications discovered.
      serversMappedToApplications:
        $ref: '#/definitions/Long'
        description: The number of servers mapped to applications.
      serversMappedtoTags:
        $ref: '#/definitions/Long'
        description: The number of servers mapped to tags.
      agentSummary:
        $ref: '#/definitions/CustomerAgentInfo'
        description: 'Details about discovered agents, including agent status and health.'
      connectorSummary:
        $ref: '#/definitions/CustomerConnectorInfo'
        description: 'Details about discovered connectors, including connector status and health.'
  GetDiscoverySummaryRequest:
    type: object
    properties: {}
  ListConfigurationsResponse:
    type: object
    properties:
      configurations:
        $ref: '#/definitions/Configurations'
        description: 'Returns configuration details, including the configuration ID, attribute names, and attribute values.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if your call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
  ListConfigurationsRequest:
    type: object
    required:
      - configurationType
    properties:
      configurationType:
        $ref: '#/definitions/ConfigurationItemType'
        description: 'A valid configuration identified by Application Discovery Service. '
      filters:
        $ref: '#/definitions/Filters'
        description: '<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{"key": "serverType", "value": "webServer"}</code> </p> <p>For a complete list of filter options and guidance about using them with this action, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#ListConfigurations">Querying Discovered Configuration Items</a>. </p>'
      maxResults:
        $ref: '#/definitions/Integer'
        description: The total number of items to return. The maximum value is 100.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'Token to retrieve the next set of results. For example, if a previous call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
      orderBy:
        $ref: '#/definitions/OrderByList'
        description: 'Certain filter criteria return output that can be sorted in ascending or descending order. For a list of output characteristics for each filter, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#ListConfigurations">Using the ListConfigurations Action</a>.'
  ListServerNeighborsResponse:
    type: object
    required:
      - neighbors
    properties:
      neighbors:
        $ref: '#/definitions/NeighborDetailsList'
        description: List of distinct servers that are one hop away from the given server.
      nextToken:
        $ref: '#/definitions/String'
        description: 'Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.'
      knownDependencyCount:
        $ref: '#/definitions/Long'
        description: Count of distinct servers that are one hop away from the given server.
  ListServerNeighborsRequest:
    type: object
    required:
      - configurationId
    properties:
      configurationId:
        $ref: '#/definitions/ConfigurationId'
        description: Configuration ID of the server for which neighbors are being listed.
      portInformationNeeded:
        $ref: '#/definitions/Boolean'
        description: Flag to indicate if port and protocol information is needed as part of the response.
      neighborConfigurationIds:
        $ref: '#/definitions/ConfigurationIdList'
        description: List of configuration IDs to test for one-hop-away.
      maxResults:
        $ref: '#/definitions/Integer'
        description: Maximum number of results to return in a single page of output.
      nextToken:
        $ref: '#/definitions/String'
        description: 'Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.'
  StartContinuousExportResponse:
    type: object
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: The unique ID assigned to this export.
      s3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The name of the s3 bucket where the export data parquet files are stored.
      startTime:
        $ref: '#/definitions/TimeStamp'
        description: The timestamp representing when the continuous export was started.
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The type of data collector used to gather this data (currently only offered for AGENT).
      schemaStorageConfig:
        $ref: '#/definitions/SchemaStorageConfig'
        description: <p>A dictionary which describes how the data is stored.</p> <ul> <li> <p> <code>databaseName</code> - the name of the Glue database used to store the schema.</p> </li> </ul>
  StartContinuousExportRequest:
    type: object
    properties: {}
  ConflictErrorException: {}
  ResourceInUseException: {}
  StartDataCollectionByAgentIdsResponse:
    type: object
    properties:
      agentsConfigurationStatus:
        $ref: '#/definitions/AgentConfigurationStatusList'
        description: 'Information about agents or the connector that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.'
  StartDataCollectionByAgentIdsRequest:
    type: object
    required:
      - agentIds
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: 'The IDs of the agents or connectors from which to start collecting data. If you send a request to an agent/connector ID that you do not have permission to contact, according to your AWS account, the service does not throw an exception. Instead, it returns the error in the <i>Description</i> field. If you send a request to multiple agents/connectors and you do not have permission to contact some of those agents/connectors, the system does not throw an exception. Instead, the system shows <code>Failed</code> in the <i>Description</i> field.'
  StartExportTaskResponse:
    type: object
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier used to query the status of an export request.
  StartExportTaskRequest:
    type: object
    properties:
      exportDataFormat:
        $ref: '#/definitions/ExportDataFormats'
        description: 'The file format for the returned export data. Default value is <code>CSV</code>. <b>Note:</b> <i>The</i> <code>GRAPHML</code> <i>option has been deprecated.</i> '
      filters:
        $ref: '#/definitions/ExportFilters'
        description: 'If a filter is present, it selects the single <code>agentId</code> of the Application Discovery Agent for which data is exported. The <code>agentId</code> can be found in the results of the <code>DescribeAgents</code> API or CLI. If no filter is present, <code>startTime</code> and <code>endTime</code> are ignored and exported data includes both Agentless Discovery Connector data and summary data from Application Discovery agents. '
      startTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The start timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, data is exported starting from the first data collected by the agent.'
      endTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The end timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, exported data includes the most recent data collected by the agent.'
  StopContinuousExportResponse:
    type: object
    properties:
      startTime:
        $ref: '#/definitions/TimeStamp'
        description: Timestamp that represents when this continuous export started collecting data.
      stopTime:
        $ref: '#/definitions/TimeStamp'
        description: Timestamp that represents when this continuous export was stopped.
  StopContinuousExportRequest:
    type: object
    required:
      - exportId
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: The unique ID assigned to this export.
  StopDataCollectionByAgentIdsResponse:
    type: object
    properties:
      agentsConfigurationStatus:
        $ref: '#/definitions/AgentConfigurationStatusList'
        description: 'Information about the agents or connector that were instructed to stop collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.'
  StopDataCollectionByAgentIdsRequest:
    type: object
    required:
      - agentIds
    properties:
      agentIds:
        $ref: '#/definitions/AgentIds'
        description: The IDs of the agents or connectors from which to stop collecting data.
  UpdateApplicationResponse:
    type: object
    properties: {}
  UpdateApplicationRequest:
    type: object
    required:
      - configurationId
    properties:
      configurationId:
        $ref: '#/definitions/ApplicationId'
        description: Configuration ID of the application to be updated.
      name:
        $ref: '#/definitions/String'
        description: New name of the application to be updated.
      description:
        $ref: '#/definitions/String'
        description: New description of the application to be updated.
  String:
    type: string
  Boolean:
    type: boolean
  AgentConfigurationStatus:
    type: object
    properties:
      agentId:
        $ref: '#/definitions/String'
        description: The agent/connector ID.
      operationSucceeded:
        $ref: '#/definitions/Boolean'
        description: 'Information about the status of the <code>StartDataCollection</code> and <code>StopDataCollection</code> operations. The system has recorded the data collection operation. The agent/connector receives this command the next time it polls for a new command. '
      description:
        $ref: '#/definitions/String'
        description: A description of the operation performed.
    description: 'Information about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.'
  AgentConfigurationStatusList:
    type: array
    items:
      $ref: '#/definitions/AgentConfigurationStatus'
  AgentId:
    type: string
  AgentIds:
    type: array
    items:
      $ref: '#/definitions/AgentId'
  AgentNetworkInfoList:
    type: array
    items:
      $ref: '#/definitions/AgentNetworkInfo'
  AgentStatus:
    type: string
    enum:
      - HEALTHY
      - UNHEALTHY
      - RUNNING
      - UNKNOWN
      - BLACKLISTED
      - SHUTDOWN
  AgentInfo:
    type: object
    properties:
      agentId:
        $ref: '#/definitions/AgentId'
        description: The agent or connector ID.
      hostName:
        $ref: '#/definitions/String'
        description: The name of the host where the agent or connector resides. The host can be a server or virtual machine.
      agentNetworkInfoList:
        $ref: '#/definitions/AgentNetworkInfoList'
        description: Network details about the host where the agent or connector resides.
      connectorId:
        $ref: '#/definitions/String'
        description: The ID of the connector.
      version:
        $ref: '#/definitions/String'
        description: The agent or connector version.
      health:
        $ref: '#/definitions/AgentStatus'
        description: The health of the agent or connector.
      lastHealthPingTime:
        $ref: '#/definitions/String'
        description: Time since agent or connector health was reported.
      collectionStatus:
        $ref: '#/definitions/String'
        description: Status of the collection process for an agent or connector.
      agentType:
        $ref: '#/definitions/String'
        description: Type of agent.
      registeredTime:
        $ref: '#/definitions/String'
        description: Agent's first registration timestamp in UTC.
    description: 'Information about agents or connectors associated with the user’s AWS account. Information includes agent or connector IDs, IP addresses, media access control (MAC) addresses, agent or connector health, hostname where the agent or connector resides, and agent version for each agent.'
  AgentNetworkInfo:
    type: object
    properties:
      ipAddress:
        $ref: '#/definitions/String'
        description: The IP address for the host where the agent/connector resides.
      macAddress:
        $ref: '#/definitions/String'
        description: The MAC address for the host where the agent/connector resides.
    description: Network details about the host where the agent/connector resides.
  AgentsInfo:
    type: array
    items:
      $ref: '#/definitions/AgentInfo'
  ApplicationId:
    type: string
  ApplicationIdsList:
    type: array
    items:
      $ref: '#/definitions/ApplicationId'
  ConfigurationIdList:
    type: array
    items:
      $ref: '#/definitions/ConfigurationId'
  BoxedInteger:
    type: integer
  Condition:
    type: string
  Configuration:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  ConfigurationId:
    type: string
  ConfigurationItemType:
    type: string
    enum:
      - SERVER
      - PROCESS
      - CONNECTION
      - APPLICATION
  TagKey:
    type: string
  TagValue:
    type: string
  TimeStamp:
    type: string
    format: date-time
  ConfigurationTag:
    type: object
    properties:
      configurationType:
        $ref: '#/definitions/ConfigurationItemType'
        description: A type of IT asset to tag.
      configurationId:
        $ref: '#/definitions/ConfigurationId'
        description: The configuration ID for the item to tag. You can specify a list of keys and values.
      key:
        $ref: '#/definitions/TagKey'
        description: 'A type of tag on which to filter. For example, <i>serverType</i>.'
      value:
        $ref: '#/definitions/TagValue'
        description: A value on which to filter. For example <i>key = serverType</i> and <i>value = web server</i>.
      timeOfCreation:
        $ref: '#/definitions/TimeStamp'
        description: The time the configuration tag was created in Coordinated Universal Time (UTC).
    description: Tags for a configuration item. Tags are metadata that help you categorize IT assets.
  ConfigurationTagSet:
    type: array
    items:
      $ref: '#/definitions/ConfigurationTag'
  Configurations:
    type: array
    items:
      $ref: '#/definitions/Configuration'
  ConfigurationsDownloadUrl:
    type: string
  ConfigurationsExportId:
    type: string
  ContinuousExportStatus:
    type: string
    enum:
      - START_IN_PROGRESS
      - START_FAILED
      - ACTIVE
      - ERROR
      - STOP_IN_PROGRESS
      - STOP_FAILED
      - INACTIVE
  StringMax255:
    type: string
    minLength: 1
    maxLength: 255
  S3Bucket:
    type: string
  DataSource:
    type: string
    enum:
      - AGENT
  SchemaStorageConfig:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/DatabaseName'
        value:
          $ref: '#/definitions/String'
  ContinuousExportDescription:
    type: object
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: The unique ID assigned to this export.
      status:
        $ref: '#/definitions/ContinuousExportStatus'
        description: '<p>Describes the status of the export. Can be one of the following values:</p> <ul> <li> <p>START_IN_PROGRESS - setting up resources to start continuous export.</p> </li> <li> <p>START_FAILED - an error occurred setting up continuous export. To recover, call start-continuous-export again.</p> </li> <li> <p>ACTIVE - data is being exported to the customer bucket.</p> </li> <li> <p>ERROR - an error occurred during export. To fix the issue, call stop-continuous-export and start-continuous-export.</p> </li> <li> <p>STOP_IN_PROGRESS - stopping the export.</p> </li> <li> <p>STOP_FAILED - an error occurred stopping the export. To recover, call stop-continuous-export again.</p> </li> <li> <p>INACTIVE - the continuous export has been stopped. Data is no longer being exported to the customer bucket.</p> </li> </ul>'
      statusDetail:
        $ref: '#/definitions/StringMax255'
        description: Contains information about any errors that may have occurred.
      s3Bucket:
        $ref: '#/definitions/S3Bucket'
        description: The name of the s3 bucket where the export data parquet files are stored.
      startTime:
        $ref: '#/definitions/TimeStamp'
        description: The timestamp representing when the continuous export was started.
      stopTime:
        $ref: '#/definitions/TimeStamp'
        description: The timestamp that represents when this continuous export was stopped.
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The type of data collector used to gather this data (currently only offered for AGENT).
      schemaStorageConfig:
        $ref: '#/definitions/SchemaStorageConfig'
        description: <p>An object which describes how the data is stored.</p> <ul> <li> <p> <code>databaseName</code> - the name of the Glue database used to store the schema.</p> </li> </ul>
    description: A list of continuous export descriptions.
  ContinuousExportDescriptions:
    type: array
    items:
      $ref: '#/definitions/ContinuousExportDescription'
  ContinuousExportIds:
    type: array
    items:
      $ref: '#/definitions/ConfigurationsExportId'
  TagSet:
    type: array
    items:
      $ref: '#/definitions/Tag'
  Integer:
    type: integer
  CustomerAgentInfo:
    type: object
    required:
      - activeAgents
      - healthyAgents
      - blackListedAgents
      - shutdownAgents
      - unhealthyAgents
      - totalAgents
      - unknownAgents
    properties:
      activeAgents:
        $ref: '#/definitions/Integer'
        description: Number of active discovery agents.
      healthyAgents:
        $ref: '#/definitions/Integer'
        description: Number of healthy discovery agents
      blackListedAgents:
        $ref: '#/definitions/Integer'
        description: Number of blacklisted discovery agents.
      shutdownAgents:
        $ref: '#/definitions/Integer'
        description: Number of discovery agents with status SHUTDOWN.
      unhealthyAgents:
        $ref: '#/definitions/Integer'
        description: Number of unhealthy discovery agents.
      totalAgents:
        $ref: '#/definitions/Integer'
        description: Total number of discovery agents.
      unknownAgents:
        $ref: '#/definitions/Integer'
        description: Number of unknown discovery agents.
    description: Inventory data for installed discovery agents.
  CustomerConnectorInfo:
    type: object
    required:
      - activeConnectors
      - healthyConnectors
      - blackListedConnectors
      - shutdownConnectors
      - unhealthyConnectors
      - totalConnectors
      - unknownConnectors
    properties:
      activeConnectors:
        $ref: '#/definitions/Integer'
        description: Number of active discovery connectors.
      healthyConnectors:
        $ref: '#/definitions/Integer'
        description: Number of healthy discovery connectors.
      blackListedConnectors:
        $ref: '#/definitions/Integer'
        description: Number of blacklisted discovery connectors.
      shutdownConnectors:
        $ref: '#/definitions/Integer'
        description: 'Number of discovery connectors with status SHUTDOWN,'
      unhealthyConnectors:
        $ref: '#/definitions/Integer'
        description: Number of unhealthy discovery connectors.
      totalConnectors:
        $ref: '#/definitions/Integer'
        description: Total number of discovery connectors.
      unknownConnectors:
        $ref: '#/definitions/Integer'
        description: Number of unknown discovery connectors.
    description: Inventory data for installed discovery connectors.
  DatabaseName:
    type: string
    minLength: 1
    maxLength: 252
  Filters:
    type: array
    items:
      $ref: '#/definitions/Filter'
  NextToken:
    type: string
  DescribeConfigurationsAttribute:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  DescribeConfigurationsAttributes:
    type: array
    items:
      $ref: '#/definitions/DescribeConfigurationsAttribute'
  DescribeContinuousExportsMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  ExportIds:
    type: array
    items:
      $ref: '#/definitions/ConfigurationsExportId'
  ExportsInfo:
    type: array
    items:
      $ref: '#/definitions/ExportInfo'
  ExportFilters:
    type: array
    items:
      $ref: '#/definitions/ExportFilter'
  TagFilters:
    type: array
    items:
      $ref: '#/definitions/TagFilter'
  ExportDataFormat:
    type: string
    enum:
      - CSV
      - GRAPHML
  ExportDataFormats:
    type: array
    items:
      $ref: '#/definitions/ExportDataFormat'
  FilterName:
    type: string
  FilterValues:
    type: array
    items:
      $ref: '#/definitions/FilterValue'
  ExportFilter:
    type: object
    required:
      - name
      - values
      - condition
    properties:
      name:
        $ref: '#/definitions/FilterName'
        description: 'A single <code>ExportFilter</code> name. Supported filters: <code>agentId</code>.'
      values:
        $ref: '#/definitions/FilterValues'
        description: 'A single <code>agentId</code> for a Discovery Agent. An <code>agentId</code> can be found using the <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html">DescribeAgents</a> action. Typically an ADS <code>agentId</code> is in the form <code>o-0123456789abcdef0</code>.'
      condition:
        $ref: '#/definitions/Condition'
        description: 'Supported condition: <code>EQUALS</code> '
    description: 'Used to select which agent''s data is to be exported. A single agent ID may be selected for export using the <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_StartExportTask.html">StartExportTask</a> action.'
  ExportStatus:
    type: string
    enum:
      - FAILED
      - SUCCEEDED
      - IN_PROGRESS
  ExportStatusMessage:
    type: string
  ExportRequestTime:
    type: string
    format: date-time
  ExportInfo:
    type: object
    required:
      - exportId
      - exportStatus
      - statusMessage
      - exportRequestTime
    properties:
      exportId:
        $ref: '#/definitions/ConfigurationsExportId'
        description: A unique identifier used to query an export.
      exportStatus:
        $ref: '#/definitions/ExportStatus'
        description: The status of the data export job.
      statusMessage:
        $ref: '#/definitions/ExportStatusMessage'
        description: A status message provided for API callers.
      configurationsDownloadUrl:
        $ref: '#/definitions/ConfigurationsDownloadUrl'
        description: A URL for an Amazon S3 bucket where you can review the exported data. The URL is displayed only if the export succeeded.
      exportRequestTime:
        $ref: '#/definitions/ExportRequestTime'
        description: The time that the data export was initiated.
      isTruncated:
        $ref: '#/definitions/Boolean'
        description: 'If true, the export of agent information exceeded the size limit for a single export and the exported data is incomplete for the requested time range. To address this, select a smaller time range for the export by using <code>startDate</code> and <code>endDate</code>.'
      requestedStartTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The value of <code>startTime</code> parameter in the <code>StartExportTask</code> request. If no <code>startTime</code> was requested, this result does not appear in <code>ExportInfo</code>.'
      requestedEndTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The <code>endTime</code> used in the <code>StartExportTask</code> request. If no <code>endTime</code> was requested, this result does not appear in <code>ExportInfo</code>.'
    description: Information regarding the export status of discovered data. The value is an array of objects.
  Filter:
    type: object
    required:
      - name
      - values
      - condition
    properties:
      name:
        $ref: '#/definitions/String'
        description: The name of the filter.
      values:
        $ref: '#/definitions/FilterValues'
        description: 'A string value on which to filter. For example, if you choose the <code>destinationServer.osVersion</code> filter name, you could specify <code>Ubuntu</code> for the value.'
      condition:
        $ref: '#/definitions/Condition'
        description: 'A conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by <i>AND</i>. If you specify multiple values for a particular filter, the system differentiates the values using <i>OR</i>. Calling either <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns attributes of matching configuration items.'
    description: '<p>A filter that can use conditional operators.</p> <p>For more information about filters, see <a href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html">Querying Discovered Configuration Items</a>. </p>'
  FilterValue:
    type: string
  Long:
    type: integer
  OrderByList:
    type: array
    items:
      $ref: '#/definitions/OrderByElement'
  NeighborDetailsList:
    type: array
    items:
      $ref: '#/definitions/NeighborConnectionDetail'
  NeighborConnectionDetail:
    type: object
    required:
      - sourceServerId
      - destinationServerId
      - connectionsCount
    properties:
      sourceServerId:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the server that opened the network connection.
      destinationServerId:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the server that accepted the network connection.
      destinationPort:
        $ref: '#/definitions/BoxedInteger'
        description: The destination network port for the connection.
      transportProtocol:
        $ref: '#/definitions/String'
        description: The network protocol used for the connection.
      connectionsCount:
        $ref: '#/definitions/Long'
        description: The number of open network connections with the neighboring server.
    description: Details about neighboring servers.
  orderString:
    type: string
    enum:
      - ASC
      - DESC
  OrderByElement:
    type: object
    required:
      - fieldName
    properties:
      fieldName:
        $ref: '#/definitions/String'
        description: The field on which to order.
      sortOrder:
        $ref: '#/definitions/orderString'
        description: Ordering direction.
    description: A field and direction for ordered output.
  Tag:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/TagKey'
        description: The type of tag on which to filter.
      value:
        $ref: '#/definitions/TagValue'
        description: A value for a tag key on which to filter.
    description: Metadata that help you categorize IT assets.
  TagFilter:
    type: object
    required:
      - name
      - values
    properties:
      name:
        $ref: '#/definitions/FilterName'
        description: A name of the tag filter.
      values:
        $ref: '#/definitions/FilterValues'
        description: Values for the tag filter.
    description: 'The tag filter. Valid names are: <code>tagKey</code>, <code>tagValue</code>, <code>configurationId</code>.'
