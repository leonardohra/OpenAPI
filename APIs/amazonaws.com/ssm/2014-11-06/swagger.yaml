swagger: '2.0'
info:
  version: '2014-11-06'
  x-release: v4
  title: Amazon Simple Systems Manager (SSM)
  description: '<fullname>AWS Systems Manager</fullname> <p>AWS Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager lets you remotely and securely manage the configuration of your managed instances. A <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager.</p> <p>This reference is intended to be used with the <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/">AWS Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites and configure managed instances. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html">Systems Manager Prerequisites</a> in the <i>AWS Systems Manager User Guide</i>.</p> <p>For information about other API actions you can perform on Amazon EC2 instances, see the <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/">Amazon EC2 API Reference</a>. For information about how to use a Query API, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html">Making API Requests</a>. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ssm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/ssm/'
host: ssm.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToResource
      description: '<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you can assign to your documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account''s managed instances that helps you track each instance''s owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test.</p> <p>Each resource can have a maximum of 50 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don''t have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyTagsError
          schema:
            $ref: '#/definitions/TooManyTagsError'
        '484':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CancelCommand':
    post:
      operationId: CancelCommand
      description: Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelCommandResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateActivation':
    post:
      operationId: CreateActivation
      description: 'Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html">Setting Up Systems Manager in Hybrid Environments</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateActivationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociation':
    post:
      operationId: CreateAssociation
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationResult'
        '480':
          description: AssociationAlreadyExists
          schema:
            $ref: '#/definitions/AssociationAlreadyExists'
        '481':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '486':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '487':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '488':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociationBatch':
    post:
      operationId: CreateAssociationBatch
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationBatchResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '485':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '486':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '487':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '488':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationBatchRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDocument':
    post:
      operationId: CreateDocument
      description: '<p>Creates a Systems Manager document.</p> <p>After you create a document, you can use CreateAssociation to associate it with one or more running instances.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDocumentResult'
        '480':
          description: DocumentAlreadyExists
          schema:
            $ref: '#/definitions/DocumentAlreadyExists'
        '481':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
        '485':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateMaintenanceWindow':
    post:
      operationId: CreateMaintenanceWindow
      description: Creates a new Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePatchBaseline':
    post:
      operationId: CreatePatchBaseline
      description: '<p>Creates a patch baseline.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePatchBaselineResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateResourceDataSync':
    post:
      operationId: CreateResourceDataSync
      description: '<p>Creates a resource data sync configuration to a single bucket in Amazon S3. This is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data to the Amazon S3 bucket. To check the status of the sync, use the <a>ListResourceDataSync</a>.</p> <p>By default, data is not encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. To view an example of a restrictive Amazon S3 bucket policy for Resource Data Sync, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync-create.html">Create a Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ResourceDataSyncCountExceededException
          schema:
            $ref: '#/definitions/ResourceDataSyncCountExceededException'
        '482':
          description: ResourceDataSyncAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceDataSyncAlreadyExistsException'
        '483':
          description: ResourceDataSyncInvalidConfigurationException
          schema:
            $ref: '#/definitions/ResourceDataSyncInvalidConfigurationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteActivation':
    post:
      operationId: DeleteActivation
      description: 'Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteActivationResult'
        '480':
          description: InvalidActivationId
          schema:
            $ref: '#/definitions/InvalidActivationId'
        '481':
          description: InvalidActivation
          schema:
            $ref: '#/definitions/InvalidActivation'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAssociation':
    post:
      operationId: DeleteAssociation
      description: '<p>Disassociates the specified Systems Manager document from the specified instance.</p> <p>When you disassociate a document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDocument':
    post:
      operationId: DeleteDocument
      description: '<p>Deletes the Systems Manager document and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentOperation
          schema:
            $ref: '#/definitions/InvalidDocumentOperation'
        '483':
          description: AssociatedInstances
          schema:
            $ref: '#/definitions/AssociatedInstances'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteInventory':
    post:
      operationId: DeleteInventory
      description: 'Delete a custom inventory type, or the data associated with a custom Inventory type. Deleting a custom inventory type is also referred to as deleting a custom inventory schema.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '482':
          description: InvalidOptionException
          schema:
            $ref: '#/definitions/InvalidOptionException'
        '483':
          description: InvalidDeleteInventoryParametersException
          schema:
            $ref: '#/definitions/InvalidDeleteInventoryParametersException'
        '484':
          description: InvalidInventoryRequestException
          schema:
            $ref: '#/definitions/InvalidInventoryRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteMaintenanceWindow':
    post:
      operationId: DeleteMaintenanceWindow
      description: Deletes a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameter':
    post:
      operationId: DeleteParameter
      description: Delete a parameter from the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameters':
    post:
      operationId: DeleteParameters
      description: Delete a list of parameters. This API is used to delete parameters by using the Amazon EC2 console.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePatchBaseline':
    post:
      operationId: DeletePatchBaseline
      description: Deletes a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePatchBaselineResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteResourceDataSync':
    post:
      operationId: DeleteResourceDataSync
      description: 'Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ResourceDataSyncNotFoundException
          schema:
            $ref: '#/definitions/ResourceDataSyncNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterManagedInstance':
    post:
      operationId: DeregisterManagedInstance
      description: 'Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don''t plan to use Run Command on the server, we suggest uninstalling SSM Agent first.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterPatchBaselineForPatchGroup':
    post:
      operationId: DeregisterPatchBaselineForPatchGroup
      description: Removes a patch group from a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargetFromMaintenanceWindow':
    post:
      operationId: DeregisterTargetFromMaintenanceWindow
      description: Removes a target from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: TargetInUseException
          schema:
            $ref: '#/definitions/TargetInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTaskFromMaintenanceWindow':
    post:
      operationId: DeregisterTaskFromMaintenanceWindow
      description: Removes a task from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivations':
    post:
      operationId: DescribeActivations
      description: 'Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeActivationsResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeActivationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociation':
    post:
      operationId: DescribeAssociation
      description: 'Describes the association for the specified target or instance. If you created the association by using the <code>Targets</code> parameter, then you must retrieve the association by using the association ID. If you created the association by specifying an instance ID and a Systems Manager document, then you retrieve the association by specifying the document name and the instance ID. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InvalidAssociationVersion
          schema:
            $ref: '#/definitions/InvalidAssociationVersion'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociationExecutionTargets':
    post:
      operationId: DescribeAssociationExecutionTargets
      description: Use this API action to view information about a specific execution of a specific association.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionTargetsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: AssociationExecutionDoesNotExist
          schema:
            $ref: '#/definitions/AssociationExecutionDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociationExecutions':
    post:
      operationId: DescribeAssociationExecutions
      description: 'Use this API action to view all executions for a specific association ID. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationExecutions':
    post:
      operationId: DescribeAutomationExecutions
      description: Provides details about all active and terminated Automation executions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsResult'
        '480':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '481':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationStepExecutions':
    post:
      operationId: DescribeAutomationStepExecutions
      description: Information about all active and terminated step executions in an Automation workflow.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutomationStepExecutionsResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutomationStepExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAvailablePatches':
    post:
      operationId: DescribeAvailablePatches
      description: Lists all patches that could possibly be included in a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocument':
    post:
      operationId: DescribeDocument
      description: Describes the specified Systems Manager document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocumentPermission':
    post:
      operationId: DescribeDocumentPermission
      description: 'Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user''s AWS account ID) or publicly (<i>All</i>). '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectiveInstanceAssociations':
    post:
      operationId: DescribeEffectiveInstanceAssociations
      description: All associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectivePatchesForPatchBaseline':
    post:
      operationId: DescribeEffectivePatchesForPatchBaseline
      description: Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: UnsupportedOperatingSystem
          schema:
            $ref: '#/definitions/UnsupportedOperatingSystem'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceAssociationsStatus':
    post:
      operationId: DescribeInstanceAssociationsStatus
      description: The status of the associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceInformation':
    post:
      operationId: DescribeInstanceInformation
      description: '<p>Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM Agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. </p> <note> <p>The IamRole field for this API action is the Amazon Identity and Access Management (IAM) role assigned to on-premises instances. This call does not return the IAM role for Amazon EC2 instances.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceInformationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidInstanceInformationFilterValue
          schema:
            $ref: '#/definitions/InvalidInstanceInformationFilterValue'
        '484':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceInformationRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStates':
    post:
      operationId: DescribeInstancePatchStates
      description: Retrieves the high-level patch state of one or more instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStatesForPatchGroup':
    post:
      operationId: DescribeInstancePatchStatesForPatchGroup
      description: Retrieves the high-level patch state for the instances in the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatches':
    post:
      operationId: DescribeInstancePatches
      description: Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '483':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInventoryDeletions':
    post:
      operationId: DescribeInventoryDeletions
      description: Describes a specific delete inventory operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInventoryDeletionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDeletionIdException
          schema:
            $ref: '#/definitions/InvalidDeletionIdException'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInventoryDeletionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTaskInvocations':
    post:
      operationId: DescribeMaintenanceWindowExecutionTaskInvocations
      description: Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTasks':
    post:
      operationId: DescribeMaintenanceWindowExecutionTasks
      description: 'For a given Maintenance Window execution, lists the tasks that were executed.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutions':
    post:
      operationId: DescribeMaintenanceWindowExecutions
      description: 'Lists the executions of a Maintenance Window. This includes information about when the Maintenance Window was scheduled to be active, and information about tasks registered and run with the Maintenance Window.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTargets':
    post:
      operationId: DescribeMaintenanceWindowTargets
      description: Lists the targets registered with the Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTasks':
    post:
      operationId: DescribeMaintenanceWindowTasks
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindows':
    post:
      operationId: DescribeMaintenanceWindows
      description: Retrieves the Maintenance Windows in an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameters':
    post:
      operationId: DescribeParameters
      description: '<p>Get information about a parameter.</p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          schema:
            $ref: '#/definitions/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeParametersRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchBaselines':
    post:
      operationId: DescribePatchBaselines
      description: Lists the patch baselines in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchBaselinesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchBaselinesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroupState':
    post:
      operationId: DescribePatchGroupState
      description: Returns high-level aggregated patch compliance state for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupStateResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupStateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroups':
    post:
      operationId: DescribePatchGroups
      description: Lists all patch groups that have been registered with patch baselines.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSessions':
    post:
      operationId: DescribeSessions
      description: Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSessionsResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSessionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAutomationExecution':
    post:
      operationId: GetAutomationExecution
      description: Get detailed information about a particular Automation execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetCommandInvocation':
    post:
      operationId: GetCommandInvocation
      description: 'Returns detailed information about command execution for an invocation or plugin. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCommandInvocationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidPluginName
          schema:
            $ref: '#/definitions/InvalidPluginName'
        '484':
          description: InvocationDoesNotExist
          schema:
            $ref: '#/definitions/InvocationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCommandInvocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetConnectionStatus':
    post:
      operationId: GetConnectionStatus
      description: Retrieves the Session Manager connection status for an instance to determine whether it is connected and ready to receive Session Manager connections.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectionStatusResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectionStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDefaultPatchBaseline':
    post:
      operationId: GetDefaultPatchBaseline
      description: '<p>Retrieves the default patch baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.</p> <p>If you do not specify an operating system value, the default patch baseline for Windows is returned.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDeployablePatchSnapshotForInstance':
    post:
      operationId: GetDeployablePatchSnapshotForInstance
      description: 'Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: UnsupportedOperatingSystem
          schema:
            $ref: '#/definitions/UnsupportedOperatingSystem'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDocument':
    post:
      operationId: GetDocument
      description: Gets the contents of the specified Systems Manager document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventory':
    post:
      operationId: GetInventory
      description: Query inventory information.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidInventoryGroupException
          schema:
            $ref: '#/definitions/InvalidInventoryGroupException'
        '483':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '484':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '485':
          description: InvalidAggregatorException
          schema:
            $ref: '#/definitions/InvalidAggregatorException'
        '486':
          description: InvalidResultAttributeException
          schema:
            $ref: '#/definitions/InvalidResultAttributeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventorySchema':
    post:
      operationId: GetInventorySchema
      description: 'Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventorySchemaResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventorySchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindow':
    post:
      operationId: GetMaintenanceWindow
      description: Retrieves a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecution':
    post:
      operationId: GetMaintenanceWindowExecution
      description: Retrieves details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTask':
    post:
      operationId: GetMaintenanceWindowExecutionTask
      description: Retrieves the details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTaskInvocation':
    post:
      operationId: GetMaintenanceWindowExecutionTaskInvocation
      description: 'Retrieves a task invocation. A task invocation is a specific task executing on a specific target. Maintenance Windows report status for all invocations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskInvocationResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskInvocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowTask':
    post:
      operationId: GetMaintenanceWindowTask
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameter':
    post:
      operationId: GetParameter
      description: Get information about a parameter by using the parameter name. Don't confuse this API action with the <a>GetParameters</a> API action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '482':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '483':
          description: ParameterVersionNotFound
          schema:
            $ref: '#/definitions/ParameterVersionNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameterHistory':
    post:
      operationId: GetParameterHistory
      description: Query a list of all parameters used by the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParameterHistoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParameterHistoryRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameters':
    post:
      operationId: GetParameters
      description: Get details of a parameter. Don't confuse this API action with the <a>GetParameter</a> API action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersResult'
        '480':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParametersByPath':
    post:
      operationId: GetParametersByPath
      description: '<p>Retrieve parameters in a specific hierarchy. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html">Working with Systems Manager Parameters</a> in the <i>AWS Systems Manager User Guide</i>. </p> <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code> in the request, the response includes information up to the limit specified. The number of items returned, however, can be between zero and the value of <code>MaxResults</code>. If the service reaches an internal limit while processing the results, it stops the operation and returns the matching values up to that point and a <code>NextToken</code>. You can specify the <code>NextToken</code> in a subsequent call to get the next set of results.</p> <note> <p>This API action doesn''t support filtering by tags. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersByPathResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          schema:
            $ref: '#/definitions/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '484':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '485':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersByPathRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaseline':
    post:
      operationId: GetPatchBaseline
      description: Retrieves information about a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaselineForPatchGroup':
    post:
      operationId: GetPatchBaselineForPatchGroup
      description: Retrieves the patch baseline that should be used for the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#LabelParameterVersion':
    post:
      operationId: LabelParameterVersion
      description: '<p>A parameter label is a user-defined alias to help you manage different versions of a parameter. When you modify a parameter, Systems Manager automatically saves a new version and increments the version number by one. A label can help you remember the purpose of a parameter when there are multiple versions. </p> <p>Parameter labels have the following requirements and restrictions.</p> <ul> <li> <p>A version of a parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can''t attach the same label to different versions of the same parameter. For example, if version 1 has the label Production, then you can''t attach Production to version 2.</p> </li> <li> <p>You can move a label from one version of a parameter to another.</p> </li> <li> <p>You can''t create a label when you create a new parameter. You must attach a label to a specific version of a parameter.</p> </li> <li> <p>You can''t delete a parameter label. If you no longer want to use a parameter label, then you must move it to a different version of a parameter.</p> </li> <li> <p>A label can have a maximum of 100 characters.</p> </li> <li> <p>Labels can contain letters (case sensitive), numbers, periods (.), hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can''t begin with a number, "aws," or "ssm" (not case sensitive). If a label fails to meet these requirements, then the label is not associated with a parameter and the system displays it in the list of InvalidLabels.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LabelParameterVersionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '482':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '483':
          description: ParameterVersionNotFound
          schema:
            $ref: '#/definitions/ParameterVersionNotFound'
        '484':
          description: ParameterVersionLabelLimitExceeded
          schema:
            $ref: '#/definitions/ParameterVersionLabelLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/LabelParameterVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociationVersions':
    post:
      operationId: ListAssociationVersions
      description: Retrieves all versions of an association for a specific association ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationVersionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationVersionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociations':
    post:
      operationId: ListAssociations
      description: Lists the associations for the specified Systems Manager document or instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommandInvocations':
    post:
      operationId: ListCommandInvocations
      description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandInvocationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandInvocationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommands':
    post:
      operationId: ListCommands
      description: Lists the commands requested by users of the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListComplianceItems':
    post:
      operationId: ListComplianceItems
      description: 'For a specified resource ID, this API action returns a list of compliance statuses for different resource types. Currently, you can only specify one resource ID per call. List results depend on the criteria specified in the filter. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComplianceItemsResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListComplianceItemsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListComplianceSummaries':
    post:
      operationId: ListComplianceSummaries
      description: 'Returns a summary count of compliant and non-compliant resources for a compliance type. For example, this call can return State Manager associations, patches, or custom compliance types according to the filter criteria that you specify. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComplianceSummariesResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListComplianceSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocumentVersions':
    post:
      operationId: ListDocumentVersions
      description: List all versions for a document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentVersionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentVersionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocuments':
    post:
      operationId: ListDocuments
      description: Describes one or more of your Systems Manager documents.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListInventoryEntries':
    post:
      operationId: ListInventoryEntries
      description: A list of inventory items returned by the request.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInventoryEntriesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInventoryEntriesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourceComplianceSummaries':
    post:
      operationId: ListResourceComplianceSummaries
      description: 'Returns a resource-level summary count. The summary includes information about compliant and non-compliant statuses and detailed compliance-item severity counts, according to the filter criteria you specify.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceComplianceSummariesResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceComplianceSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListResourceDataSync':
    post:
      operationId: ListResourceDataSync
      description: '<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDataSyncResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDataSyncRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDocumentPermission':
    post:
      operationId: ModifyDocumentPermission
      description: 'Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
        '483':
          description: DocumentPermissionLimit
          schema:
            $ref: '#/definitions/DocumentPermissionLimit'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutComplianceItems':
    post:
      operationId: PutComplianceItems
      description: '<p>Registers a compliance type and other compliance details on a designated resource. This action lets you register custom compliance details with a resource. This call overwrites existing compliance information on the resource, so you must provide a full list of compliance items each time that you send the request.</p> <p>ComplianceType can be one of the following:</p> <ul> <li> <p>ExecutionId: The execution ID when the patch, association, or custom compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify patch, association, or Custom:<code>string</code>.</p> </li> <li> <p>ExecutionTime. The time the patch, association, or custom compliance item was applied to the instance.</p> </li> <li> <p>Id: The patch, association, or custom compliance ID.</p> </li> <li> <p>Title: A title.</p> </li> <li> <p>Status: The status of the compliance item. For example, <code>approved</code> for patches, or <code>Failed</code> for associations.</p> </li> <li> <p>Severity: A patch severity. For example, <code>critical</code>.</p> </li> <li> <p>DocumentName: A SSM document name. For example, AWS-RunPatchBaseline.</p> </li> <li> <p>DocumentVersion: An SSM document version number. For example, 4.</p> </li> <li> <p>Classification: A patch classification. For example, <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity. For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A patch state. For example, <code>InstancesWithFailedPatches</code>.</p> </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li> <p>InstalledTime: The time the association, patch, or custom compliance item was applied to the resource. Specify the time by using the following format: yyyy-MM-dd''T''HH:mm:ss''Z''</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutComplianceItemsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidItemContentException
          schema:
            $ref: '#/definitions/InvalidItemContentException'
        '482':
          description: TotalSizeLimitExceededException
          schema:
            $ref: '#/definitions/TotalSizeLimitExceededException'
        '483':
          description: ItemSizeLimitExceededException
          schema:
            $ref: '#/definitions/ItemSizeLimitExceededException'
        '484':
          description: ComplianceTypeCountLimitExceededException
          schema:
            $ref: '#/definitions/ComplianceTypeCountLimitExceededException'
        '485':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '486':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutComplianceItemsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutInventory':
    post:
      operationId: PutInventory
      description: 'Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn''t already exist, or updates an inventory item, if it does exist.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidItemContentException
          schema:
            $ref: '#/definitions/InvalidItemContentException'
        '484':
          description: TotalSizeLimitExceededException
          schema:
            $ref: '#/definitions/TotalSizeLimitExceededException'
        '485':
          description: ItemSizeLimitExceededException
          schema:
            $ref: '#/definitions/ItemSizeLimitExceededException'
        '486':
          description: ItemContentMismatchException
          schema:
            $ref: '#/definitions/ItemContentMismatchException'
        '487':
          description: CustomSchemaCountLimitExceededException
          schema:
            $ref: '#/definitions/CustomSchemaCountLimitExceededException'
        '488':
          description: UnsupportedInventorySchemaVersionException
          schema:
            $ref: '#/definitions/UnsupportedInventorySchemaVersionException'
        '489':
          description: UnsupportedInventoryItemContextException
          schema:
            $ref: '#/definitions/UnsupportedInventoryItemContextException'
        '490':
          description: InvalidInventoryItemContextException
          schema:
            $ref: '#/definitions/InvalidInventoryItemContextException'
        '491':
          description: SubTypeCountLimitExceededException
          schema:
            $ref: '#/definitions/SubTypeCountLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutParameter':
    post:
      operationId: PutParameter
      description: Add a parameter to the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '482':
          description: ParameterLimitExceeded
          schema:
            $ref: '#/definitions/ParameterLimitExceeded'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '484':
          description: ParameterAlreadyExists
          schema:
            $ref: '#/definitions/ParameterAlreadyExists'
        '485':
          description: HierarchyLevelLimitExceededException
          schema:
            $ref: '#/definitions/HierarchyLevelLimitExceededException'
        '486':
          description: HierarchyTypeMismatchException
          schema:
            $ref: '#/definitions/HierarchyTypeMismatchException'
        '487':
          description: InvalidAllowedPatternException
          schema:
            $ref: '#/definitions/InvalidAllowedPatternException'
        '488':
          description: ParameterMaxVersionLimitExceeded
          schema:
            $ref: '#/definitions/ParameterMaxVersionLimitExceeded'
        '489':
          description: ParameterPatternMismatchException
          schema:
            $ref: '#/definitions/ParameterPatternMismatchException'
        '490':
          description: UnsupportedParameterType
          schema:
            $ref: '#/definitions/UnsupportedParameterType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterDefaultPatchBaseline':
    post:
      operationId: RegisterDefaultPatchBaseline
      description: Defines the default patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterPatchBaselineForPatchGroup':
    post:
      operationId: RegisterPatchBaselineForPatchGroup
      description: Registers a patch baseline for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupResult'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '483':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargetWithMaintenanceWindow':
    post:
      operationId: RegisterTargetWithMaintenanceWindow
      description: Registers a target with a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTaskWithMaintenanceWindow':
    post:
      operationId: RegisterTaskWithMaintenanceWindow
      description: Adds a new task to a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: FeatureNotAvailableException
          schema:
            $ref: '#/definitions/FeatureNotAvailableException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes all tags from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResumeSession':
    post:
      operationId: ResumeSession
      description: '<p>Reconnects a session to an instance after it has been disconnected. Connections can be resumed for disconnected sessions, but not terminated sessions.</p> <note> <p>This command is primarily for use by client machines to automatically reconnect during intermittent network issues. It is not intended for any other use.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResumeSessionResponse'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResumeSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendAutomationSignal':
    post:
      operationId: SendAutomationSignal
      description: 'Sends a signal to an Automation execution to change the current behavior or status of the execution. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendAutomationSignalResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: AutomationStepNotFoundException
          schema:
            $ref: '#/definitions/AutomationStepNotFoundException'
        '482':
          description: InvalidAutomationSignalException
          schema:
            $ref: '#/definitions/InvalidAutomationSignalException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendAutomationSignalRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendCommand':
    post:
      operationId: SendCommand
      description: Executes commands on one or more managed instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendCommandResult'
        '480':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: InvalidOutputFolder
          schema:
            $ref: '#/definitions/InvalidOutputFolder'
        '486':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '487':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '488':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '489':
          description: InvalidRole
          schema:
            $ref: '#/definitions/InvalidRole'
        '490':
          description: InvalidNotificationConfig
          schema:
            $ref: '#/definitions/InvalidNotificationConfig'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartAssociationsOnce':
    post:
      operationId: StartAssociationsOnce
      description: Use this API action to execute an association immediately and only one time. This action can be helpful when troubleshooting associations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAssociationsOnceResult'
        '480':
          description: InvalidAssociation
          schema:
            $ref: '#/definitions/InvalidAssociation'
        '481':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartAssociationsOnceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartAutomationExecution':
    post:
      operationId: StartAutomationExecution
      description: Initiates execution of an Automation document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAutomationExecutionResult'
        '480':
          description: AutomationDefinitionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionNotFoundException'
        '481':
          description: InvalidAutomationExecutionParametersException
          schema:
            $ref: '#/definitions/InvalidAutomationExecutionParametersException'
        '482':
          description: AutomationExecutionLimitExceededException
          schema:
            $ref: '#/definitions/AutomationExecutionLimitExceededException'
        '483':
          description: AutomationDefinitionVersionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionVersionNotFoundException'
        '484':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '485':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '486':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartSession':
    post:
      operationId: StartSession
      description: '<p>Initiates a connection to a target (for example, an instance) for a Session Manager session. Returns a URL and token that can be used to open a WebSocket connection for sending input and receiving outputs.</p> <note> <p>AWS CLI usage: <code>start-session</code> is an interactive command that requires the Session Manager plugin to be installed on the client machine making the call. For information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html"> Install the Session Manager Plugin for the AWS CLI</a> in the <i>AWS Systems Manager User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartSessionResponse'
        '480':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '481':
          description: TargetNotConnected
          schema:
            $ref: '#/definitions/TargetNotConnected'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopAutomationExecution':
    post:
      operationId: StopAutomationExecution
      description: Stop an Automation that is currently executing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InvalidAutomationStatusUpdateException
          schema:
            $ref: '#/definitions/InvalidAutomationStatusUpdateException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateSession':
    post:
      operationId: TerminateSession
      description: Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the instance. A terminated session cannot be resumed.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateSessionResponse'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociation':
    post:
      operationId: UpdateAssociation
      description: 'Updates an association. You can update the association name and version, the document version, schedule, parameters, and Amazon S3 output.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
        '482':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '483':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '486':
          description: InvalidUpdate
          schema:
            $ref: '#/definitions/InvalidUpdate'
        '487':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '488':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidAssociationVersion
          schema:
            $ref: '#/definitions/InvalidAssociationVersion'
        '491':
          description: AssociationVersionLimitExceeded
          schema:
            $ref: '#/definitions/AssociationVersionLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociationStatus':
    post:
      operationId: UpdateAssociationStatus
      description: Updates the status of the Systems Manager document associated with the specified instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '484':
          description: StatusUnchanged
          schema:
            $ref: '#/definitions/StatusUnchanged'
        '485':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocument':
    post:
      operationId: UpdateDocument
      description: The document you want to update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentResult'
        '480':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '481':
          description: DocumentVersionLimitExceeded
          schema:
            $ref: '#/definitions/DocumentVersionLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: DuplicateDocumentContent
          schema:
            $ref: '#/definitions/DuplicateDocumentContent'
        '484':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '485':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '486':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
        '487':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocumentDefaultVersion':
    post:
      operationId: UpdateDocumentDefaultVersion
      description: 'Set the default version of a document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindow':
    post:
      operationId: UpdateMaintenanceWindow
      description: Updates an existing Maintenance Window. Only specified parameters are modified.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindowTarget':
    post:
      operationId: UpdateMaintenanceWindowTarget
      description: '<p>Modifies the target of an existing Maintenance Window. You can''t change the target type, but you can change the following:</p> <p>The target from being an ID target to a Tag target, or a Tag target to an ID target.</p> <p>IDs for an ID target.</p> <p>Tags for a Tag target.</p> <p>Owner.</p> <p>Name.</p> <p>Description.</p> <p>If a parameter is null, then the corresponding field is not modified.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTargetResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTargetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindowTask':
    post:
      operationId: UpdateMaintenanceWindowTask
      description: '<p>Modifies a task assigned to a Maintenance Window. You can''t change the task type, but you can change the following values:</p> <ul> <li> <p>TaskARN. For example, you can change a RUN_COMMAND task from AWS-RunPowerShellScript to AWS-RunShellScript.</p> </li> <li> <p>ServiceRoleArn</p> </li> <li> <p>TaskInvocationParameters</p> </li> <li> <p>Priority</p> </li> <li> <p>MaxConcurrency</p> </li> <li> <p>MaxErrors</p> </li> </ul> <p>If a parameter is null, then the corresponding field is not modified. Also, if you set Replace to true, then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a> action are required for this request. Optional fields that aren''t specified are set to null.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateManagedInstanceRole':
    post:
      operationId: UpdateManagedInstanceRole
      description: Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePatchBaseline':
    post:
      operationId: UpdatePatchBaseline
      description: '<p>Modifies an existing patch baseline. Fields not specified in the request are left unchanged.</p> <note> <p>For information about valid key and value pairs in <code>PatchFilters</code> for each supported operating system type, see <a href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddTagsToResourceResult:
    type: object
    properties: {}
  AddTagsToResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - Tags
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: '<p>Specifies the type of resource you are tagging.</p> <note> <p>The ManagedInstance type for this API action is for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: '<p>The resource ID you want to tag.</p> <p>Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p> One or more tags. The value parameter is required, but if you don''t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>'
  InvalidResourceType: {}
  InvalidResourceId: {}
  InternalServerError: {}
  TooManyTagsError: {}
  TooManyUpdates: {}
  CancelCommandResult:
    type: object
    properties: {}
    description: Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.
  CancelCommandRequest:
    type: object
    required:
      - CommandId
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The ID of the command you want to cancel.
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: '(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.'
    description: <p/>
  InvalidCommandId: {}
  InvalidInstanceId: {}
  DuplicateInstanceId: {}
  CreateActivationResult:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID number generated by the system when it processed the activation. The activation ID functions like a user name.
      ActivationCode:
        $ref: '#/definitions/ActivationCode'
        description: 'The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. '
  CreateActivationRequest:
    type: object
    required:
      - IamRole
    properties:
      Description:
        $ref: '#/definitions/ActivationDescription'
        description: <p>A user-defined description of the resource that you want to register with Amazon EC2. </p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>
      DefaultInstanceName:
        $ref: '#/definitions/DefaultInstanceName'
        description: '<p>The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>'
      IamRole:
        $ref: '#/definitions/IamRole'
        description: 'The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. '
      RegistrationLimit:
        $ref: '#/definitions/RegistrationLimit'
        description: Specify the maximum number of managed instances you want to register. The default value is 1 instance.
      ExpirationDate:
        $ref: '#/definitions/ExpirationDate'
        description: The date by which this activation request should expire. The default value is 24 hours.
  CreateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  CreateAssociationRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version you want to associate with the target(s). Can be a specific version or the default version.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters for the documents runtime configuration. '
      Targets:
        $ref: '#/definitions/Targets'
        description: The targets (either instances or tags) for the association.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression when the association will be applied to the target(s).
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the output details of the request.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: Specify a descriptive name for the association.
  AssociationAlreadyExists: {}
  AssociationLimitExceeded: {}
  InvalidDocument: {}
  InvalidDocumentVersion: {}
  UnsupportedPlatformType: {}
  InvalidOutputLocation: {}
  InvalidParameters: {}
  InvalidTarget: {}
  InvalidSchedule: {}
  CreateAssociationBatchResult:
    type: object
    properties:
      Successful:
        $ref: '#/definitions/AssociationDescriptionList'
        description: Information about the associations that succeeded.
      Failed:
        $ref: '#/definitions/FailedCreateAssociationList'
        description: Information about the associations that failed.
  CreateAssociationBatchRequest:
    type: object
    required:
      - Entries
    properties:
      Entries:
        $ref: '#/definitions/CreateAssociationBatchRequestEntries'
        description: One or more associations.
  CreateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/DocumentDescription'
        description: Information about the Systems Manager document.
  CreateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/DocumentContent'
        description: A valid JSON or YAML string.
      Name:
        $ref: '#/definitions/DocumentName'
        description: '<p>A name for the Systems Manager document.</p> <important> <p>Do not use the following to begin the names of documents you create. They are reserved by AWS for use as document prefixes:</p> <ul> <li> <p> <code>aws</code> </p> </li> <li> <p> <code>amazon</code> </p> </li> <li> <p> <code>amzn</code> </p> </li> </ul> </important>'
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: 'The type of document to create. Valid document types include: Policy, Automation, and Command.'
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
      TargetType:
        $ref: '#/definitions/TargetType'
        description: 'Specify a target type to define the kinds of resources the document can run on. For example, to run a document on EC2 instances, specify the following value: /AWS::EC2::Instance. If you specify a value of ''/'' the document can run on all types of resources. If you don''t specify a value, the document can''t run on any resources. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
  DocumentAlreadyExists: {}
  MaxDocumentSizeExceeded: {}
  InvalidDocumentContent: {}
  DocumentLimitExceeded: {}
  InvalidDocumentSchemaVersion: {}
  CreateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
  CreateMaintenanceWindowRequest:
    type: object
    required:
      - Name
      - Schedule
      - Duration
      - Cutoff
      - AllowUnassociatedTargets
    properties:
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: 'An optional description for the Maintenance Window. We recommend specifying a description to help you organize your Maintenance Windows. '
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: '<p>Enables a Maintenance Window task to execute on managed instances, even if you have not registered those instances as targets. If enabled, then you must specify the unregistered instances (by instance ID) when you register a task with the Maintenance Window </p> <p>If you don''t enable this option, then you must specify previously-registered targets when you register a task with the Maintenance Window. </p>'
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  IdempotentParameterMismatch: {}
  ResourceLimitExceededException: {}
  CreatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the created patch baseline.
  CreatePatchBaselineRequest:
    type: object
    required:
      - Name
    properties:
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: '<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: 'Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.'
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: '<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/PatchSourceList'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  CreateResourceDataSyncResult:
    type: object
    properties: {}
  CreateResourceDataSyncRequest:
    type: object
    required:
      - SyncName
      - S3Destination
    properties:
      SyncName:
        $ref: '#/definitions/ResourceDataSyncName'
        description: A name for the configuration.
      S3Destination:
        $ref: '#/definitions/ResourceDataSyncS3Destination'
        description: Amazon S3 configuration details for the sync.
  ResourceDataSyncCountExceededException: {}
  ResourceDataSyncAlreadyExistsException: {}
  ResourceDataSyncInvalidConfigurationException: {}
  DeleteActivationResult:
    type: object
    properties: {}
  DeleteActivationRequest:
    type: object
    required:
      - ActivationId
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID of the activation that you want to delete.
  InvalidActivationId: {}
  InvalidActivation: {}
  DeleteAssociationResult:
    type: object
    properties: {}
  DeleteAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID that you want to delete.
  AssociationDoesNotExist: {}
  DeleteDocumentResult:
    type: object
    properties: {}
  DeleteDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document.
  InvalidDocumentOperation: {}
  AssociatedInstances: {}
  DeleteInventoryResult:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/InventoryDeletionId'
        description: 'Every <code>DeleteInventory</code> action is assigned a unique ID. This option returns a unique ID. You can use this ID to query the status of a delete operation. This option is useful for ensuring that a delete operation has completed before you begin other actions. '
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The name of the inventory data type specified in the request.
      DeletionSummary:
        $ref: '#/definitions/InventoryDeletionSummary'
        description: 'A summary of the delete operation. For more information about this summary, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.'
  DeleteInventoryRequest:
    type: object
    required:
      - TypeName
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'The name of the custom inventory type for which you want to delete either all previously collected data, or the inventory type itself. '
      SchemaDeleteOption:
        $ref: '#/definitions/InventorySchemaDeleteOption'
        description: '<p>Use the <code>SchemaDeleteOption</code> to delete a custom inventory type (schema). If you don''t choose this option, the system only deletes existing inventory data associated with the custom inventory type. Choose one of the following options:</p> <p>DisableSchema: If you choose this option, the system ignores all inventory data for the specified version, and any earlier versions. To enable this schema again, you must call the <code>PutInventory</code> action for a version greater than the disbled version.</p> <p>DeleteSchema: This option deletes the specified custom type from the Inventory service. You can recreate the schema later, if you want.</p>'
      DryRun:
        $ref: '#/definitions/DryRun'
        description: 'Use this option to view a summary of the deletion request without deleting any data or the data type. This option is useful when you only want to understand what will be deleted. Once you validate that the data to be deleted is what you intend to delete, you can run the same command without specifying the <code>DryRun</code> option.'
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  InvalidTypeNameException: {}
  InvalidOptionException: {}
  InvalidDeleteInventoryParametersException: {}
  InvalidInventoryRequestException: {}
  DeleteMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the deleted Maintenance Window.
  DeleteMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window to delete.
  DeleteParameterResult:
    type: object
    properties: {}
  DeleteParameterRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter to delete.
  ParameterNotFound: {}
  DeleteParametersResult:
    type: object
    properties:
      DeletedParameters:
        $ref: '#/definitions/ParameterNameList'
        description: The names of the deleted parameters.
      InvalidParameters:
        $ref: '#/definitions/ParameterNameList'
        description: The names of parameters that weren't deleted because the parameters are not valid.
  DeleteParametersRequest:
    type: object
    required:
      - Names
    properties:
      Names:
        $ref: '#/definitions/ParameterNameList'
        description: The names of the parameters to delete.
  DeletePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the deleted patch baseline.
  DeletePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to delete.
  ResourceInUseException: {}
  DeleteResourceDataSyncResult:
    type: object
    properties: {}
  DeleteResourceDataSyncRequest:
    type: object
    required:
      - SyncName
    properties:
      SyncName:
        $ref: '#/definitions/ResourceDataSyncName'
        description: The name of the configuration to delete.
  ResourceDataSyncNotFoundException: {}
  DeregisterManagedInstanceResult:
    type: object
    properties: {}
  DeregisterManagedInstanceRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/ManagedInstanceId'
        description: 'The ID assigned to the managed instance when you registered it using the activation process. '
  DeregisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline the patch group was deregistered from.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group deregistered from the patch baseline.
  DeregisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to deregister the patch group from.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group that should be deregistered from the patch baseline.
  DeregisterTargetFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target was removed from.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the removed target definition.
  DeregisterTargetFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTargetId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target should be removed from.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target definition to remove.
      Safe:
        $ref: '#/definitions/Boolean'
        description: 'The system checks if the target is being referenced by a task. If the target is being referenced, the system returns an error and does not deregister the target from the Maintenance Window.'
  DoesNotExistException: {}
  TargetInUseException: {}
  DeregisterTaskFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the task was removed from.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The ID of the task removed from the Maintenance Window.
  DeregisterTaskFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the task should be removed from.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The ID of the task to remove from the Maintenance Window.
  DescribeActivationsResult:
    type: object
    properties:
      ActivationList:
        $ref: '#/definitions/ActivationList'
        description: A list of activations for your AWS account.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of items to return. Use this token to get the next set of results. '
  DescribeActivationsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/DescribeActivationsFilterList'
        description: A filter to view information about your activations.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  InvalidFilter: {}
  InvalidNextToken: {}
  DescribeAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  DescribeAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID for which you want information.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: 'Specify the association version to retrieve. To view the latest version, either specify <code>$LATEST</code> for this parameter, or omit this parameter. To view a list of all associations for an instance, use ListInstanceAssociations. To get a list of versions for a specific association, use ListAssociationVersions. '
  InvalidAssociationVersion: {}
  DescribeAssociationExecutionTargetsResult:
    type: object
    properties:
      AssociationExecutionTargets:
        $ref: '#/definitions/AssociationExecutionTargetsList'
        description: Information about the execution.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeAssociationExecutionTargetsRequest:
    type: object
    required:
      - AssociationId
      - ExecutionId
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID that includes the execution for which you want to view details.
      ExecutionId:
        $ref: '#/definitions/AssociationExecutionId'
        description: The execution ID for which you want to view details.
      Filters:
        $ref: '#/definitions/AssociationExecutionTargetsFilterList'
        description: <p>Filters for the request. You can specify the following filters and values.</p> <p>Status (EQUAL)</p> <p>ResourceId (EQUAL)</p> <p>ResourceType (EQUAL)</p>
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  AssociationExecutionDoesNotExist: {}
  DescribeAssociationExecutionsResult:
    type: object
    properties:
      AssociationExecutions:
        $ref: '#/definitions/AssociationExecutionsList'
        description: A list of the executions for the specified association ID.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeAssociationExecutionsRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID for which you want to view execution history details.
      Filters:
        $ref: '#/definitions/AssociationExecutionFilterList'
        description: '<p>Filters for the request. You can specify the following filters and values.</p> <p>ExecutionId (EQUAL)</p> <p>Status (EQUAL)</p> <p>CreatedTime (EQUAL, GREATER_THAN, LESS_THAN)</p>'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  DescribeAutomationExecutionsResult:
    type: object
    properties:
      AutomationExecutionMetadataList:
        $ref: '#/definitions/AutomationExecutionMetadataList'
        description: 'The list of details about each automation execution which has occurred which matches the filter specification, if any.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAutomationExecutionsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/AutomationExecutionFilterList'
        description: Filters used to limit the scope of executions that are requested.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidFilterKey: {}
  InvalidFilterValue: {}
  DescribeAutomationStepExecutionsResult:
    type: object
    properties:
      StepExecutions:
        $ref: '#/definitions/StepExecutionList'
        description: A list of details about the current state of all steps that make up an execution.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAutomationStepExecutionsRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The Automation execution ID for which you want step execution descriptions.
      Filters:
        $ref: '#/definitions/StepExecutionFilterList'
        description: One or more filters to limit the number of step executions returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      ReverseOrder:
        $ref: '#/definitions/Boolean'
        description: A boolean that indicates whether to list step executions in reverse order by start time. The default value is false.
  AutomationExecutionNotFoundException: {}
  DescribeAvailablePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/PatchList'
        description: An array of patches. Each entry in the array is a patch structure.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAvailablePatchesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: Filters used to scope down the returned patches.
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeDocumentResult:
    type: object
    properties:
      Document:
        $ref: '#/definitions/DocumentDescription'
        description: Information about the Systems Manager document.
  DescribeDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version for which you want information. Can be a specific version or the default version.
  DescribeDocumentPermissionResponse:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIdList'
        description: The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.
  DescribeDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document for which you are the owner.
      PermissionType:
        $ref: '#/definitions/DocumentPermissionType'
        description: The permission type for the document. The permission type can be <i>Share</i>.
  InvalidPermissionType: {}
  DescribeEffectiveInstanceAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/InstanceAssociationList'
        description: The associations for the requested instance.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeEffectiveInstanceAssociationsRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID for which you want to view all associations.
      MaxResults:
        $ref: '#/definitions/EffectiveInstanceAssociationMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeEffectivePatchesForPatchBaselineResult:
    type: object
    properties:
      EffectivePatches:
        $ref: '#/definitions/EffectivePatchList'
        description: An array of patches and patch status.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeEffectivePatchesForPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to retrieve the effective patches for.
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  UnsupportedOperatingSystem: {}
  DescribeInstanceAssociationsStatusResult:
    type: object
    properties:
      InstanceAssociationStatusInfos:
        $ref: '#/definitions/InstanceAssociationStatusInfos'
        description: Status information about the association.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstanceAssociationsStatusRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance IDs for which you want association status information.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeInstanceInformationResult:
    type: object
    properties:
      InstanceInformationList:
        $ref: '#/definitions/InstanceInformationList'
        description: The instance information list.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. '
  DescribeInstanceInformationRequest:
    type: object
    properties:
      InstanceInformationFilterList:
        $ref: '#/definitions/InstanceInformationFilterList'
        description: '<p>This is a legacy method. We recommend that you don''t use this method. Instead, use the <a>InstanceInformationFilter</a> action. The <code>InstanceInformationFilter</code> action enables you to return instance information by using tags that are specified as a key-value mapping. </p> <p>If you do use this method, then you can''t use the <code>InstanceInformationFilter</code> action. Using this method and the <code>InstanceInformationFilter</code> action causes an exception error. </p>'
      Filters:
        $ref: '#/definitions/InstanceInformationStringFilterList'
        description: One or more filters. Use a filter to return a more specific list of instances.
      MaxResults:
        $ref: '#/definitions/MaxResultsEC2Compatible'
        description: 'The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidInstanceInformationFilterValue: {}
  DescribeInstancePatchStatesResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/InstancePatchStateList'
        description: The high-level patch state for the requested instances.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchStatesRequest:
    type: object
    required:
      - InstanceIds
    properties:
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: The ID of the instance whose patch state information should be retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of instances to return (per page).
  DescribeInstancePatchStatesForPatchGroupResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/InstancePatchStatesList'
        description: 'The high-level patch state for the requested instances. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchStatesForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group for which the patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/InstancePatchStateFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string between 1 and 200 characters)</p> <p> Values (array containing a single string)</p> <p> Type (string "Equal", "NotEqual", "LessThan", "GreaterThan")</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of patches to return (per page).
  DescribeInstancePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/PatchComplianceDataList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Title (string)</p> <p>KBId (string)</p> <p>Classification (string)</p> <p>Severity (string)</p> <p>State (string: "INSTALLED", "INSTALLED OTHER", "MISSING", "NOT APPLICABLE", "FAILED")</p> <p>InstalledTime (DateTime)</p> <p>InstalledBy (string)</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchesRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance whose patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string between 1 and 256 characters)</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of patches to return (per page).
  DescribeInventoryDeletionsResult:
    type: object
    properties:
      InventoryDeletions:
        $ref: '#/definitions/InventoryDeletionsList'
        description: A list of status items for deleted inventory.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  DescribeInventoryDeletionsRequest:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/InventoryDeletionId'
        description: Specify the delete inventory ID for which you want information. This ID was returned by the <code>DeleteInventory</code> action.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  InvalidDeletionIdException: {}
  DescribeMaintenanceWindowExecutionTaskInvocationsResult:
    type: object
    properties:
      WindowExecutionTaskInvocationIdentities:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationIdentityList'
        description: Information about the task invocation results per invocation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution the task is part of.
      TaskId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task in the Maintenance Window task that should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionTasksResult:
    type: object
    properties:
      WindowExecutionTaskIdentities:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskIdentityList'
        description: Information about the task executions.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTasksRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution whose task executions should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED. '
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionsResult:
    type: object
    properties:
      WindowExecutions:
        $ref: '#/definitions/MaintenanceWindowExecutionList'
        description: Information about the Maintenance Windows execution.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose executions should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, between 1 and 128 characters)</p> <p>Values (array of strings, each string is between 1 and 256 characters)</p> <p>The supported Keys are ExecutedBefore and ExecutedAfter with the value being a date/time string such as 2016-11-04T05:00:00Z.</p>'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTargetsResult:
    type: object
    properties:
      Targets:
        $ref: '#/definitions/MaintenanceWindowTargetList'
        description: Information about the targets in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTargetsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose targets should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are Type, WindowTargetId and OwnerInformation.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTasksResult:
    type: object
    properties:
      Tasks:
        $ref: '#/definitions/MaintenanceWindowTaskList'
        description: Information about the tasks in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTasksRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose tasks should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are WindowTaskId, TaskArn, Priority, and TaskType.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowsResult:
    type: object
    properties:
      WindowIdentities:
        $ref: '#/definitions/MaintenanceWindowIdentityList'
        description: Information about the Maintenance Windows.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: Optional filters used to narrow down the scope of the returned Maintenance Windows. Supported filter keys are Name and Enabled.
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterMetadataList'
        description: Parameters returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeParametersRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ParametersFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      ParameterFilters:
        $ref: '#/definitions/ParameterStringFilterList'
        description: Filters to limit the request results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  InvalidFilterOption: {}
  DescribePatchBaselinesResult:
    type: object
    properties:
      BaselineIdentities:
        $ref: '#/definitions/PatchBaselineIdentityList'
        description: An array of PatchBaselineIdentity elements.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchBaselinesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: '<p>Each element in the array is a structure containing: </p> <p>Key: (string, "NAME_PREFIX" or "OWNER")</p> <p>Value: (array of strings, exactly 1 entry, between 1 and 255 characters)</p>'
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patch baselines to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribePatchGroupStateResult:
    type: object
    properties:
      Instances:
        $ref: '#/definitions/Integer'
        description: The number of instances in the patch group.
      InstancesWithInstalledPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with installed patches.
      InstancesWithInstalledOtherPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches installed that aren't defined in the patch baseline.
      InstancesWithMissingPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with missing patches from the patch baseline.
      InstancesWithFailedPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches from the patch baseline that failed to install.
      InstancesWithNotApplicablePatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches that aren't applicable.
  DescribePatchGroupStateRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group whose patch snapshot should be retrieved.
  DescribePatchGroupsResult:
    type: object
    properties:
      Mappings:
        $ref: '#/definitions/PatchGroupPatchBaselineMappingList'
        description: '<p>Each entry in the array contains:</p> <p>PatchGroup: string (between 1 and 256 characters, Regex: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$)</p> <p>PatchBaselineIdentity: A PatchBaselineIdentity element. </p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchGroupsRequest:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patch groups to return (per page).
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeSessionsResponse:
    type: object
    properties:
      Sessions:
        $ref: '#/definitions/SessionList'
        description: A list of sessions meeting the request parameters.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeSessionsRequest:
    type: object
    required:
      - State
    properties:
      State:
        $ref: '#/definitions/SessionState'
        description: 'The session status to retrieve a list of sessions for. For example, "active".'
      MaxResults:
        $ref: '#/definitions/SessionMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/SessionFilterList'
        description: One or more filters to limit the type of sessions returned by the request.
  GetAutomationExecutionResult:
    type: object
    properties:
      AutomationExecution:
        $ref: '#/definitions/AutomationExecution'
        description: Detailed information about the current state of an automation execution.
  GetAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The unique identifier for an existing automation execution to examine. The execution ID is returned by StartAutomationExecution when the execution of an Automation document is initiated.
  GetCommandInvocationResult:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      Comment:
        $ref: '#/definitions/Comment'
        description: The comment text for the command.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: 'The name of the document that was executed. For example, AWS-RunShellScript.'
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The SSM document version used in the request.
      PluginName:
        $ref: '#/definitions/CommandPluginName'
        description: 'The name of the plugin for which you want detailed results. For example, aws:RunShellScript is a plugin.'
      ResponseCode:
        $ref: '#/definitions/ResponseCode'
        description: 'The error level response code for the plugin script. If the response code is -1, then the command has not started executing on the instance, or it was not received by the instance.'
      ExecutionStartDateTime:
        $ref: '#/definitions/StringDateTime'
        description: '<p>The date and time the plugin started executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedBefore</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedBefore,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>'
      ExecutionElapsedTime:
        $ref: '#/definitions/StringDateTime'
        description: Duration since ExecutionStartDateTime.
      ExecutionEndDateTime:
        $ref: '#/definitions/StringDateTime'
        description: '<p>The date and time the plugin was finished executing. Date and time are written in ISO 8601 format. For example, June 7, 2017 is represented as 2017-06-7. The following sample AWS CLI command uses the <code>InvokedAfter</code> filter.</p> <p> <code>aws ssm list-commands --filters key=InvokedAfter,value=2017-06-07T00:00:00Z</code> </p> <p>If the plugin has not started to execute, the string is empty.</p>'
      Status:
        $ref: '#/definitions/CommandInvocationStatus'
        description: The status of this invocation plugin. This status can be different than StatusDetails.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution for an invocation. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Delayed: The system attempted to send the command to the target, but the target was not available. The instance might not be available because of network issues, the instance was stopped, etc. The system will try to deliver the command again.</p> </li> <li> <p>Success: The command or plugin was executed successfully. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The command started to execute on the instance, but the execution was not complete before the timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command wasn''t executed successfully on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit and don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      StandardOutputContent:
        $ref: '#/definitions/StandardOutputContent'
        description: 'The first 24,000 characters written by the plugin to stdout. If the command has not finished executing, if ExecutionStatus is neither Succeeded nor Failed, then this string is empty.'
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If an Amazon S3 bucket was not specified, then this string is empty.'
      StandardErrorContent:
        $ref: '#/definitions/StandardErrorContent'
        description: 'The first 8,000 characters written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
      CloudWatchOutputConfig:
        $ref: '#/definitions/CloudWatchOutputConfig'
        description: CloudWatch Logs information where Systems Manager sent the command output.
  GetCommandInvocationRequest:
    type: object
    required:
      - CommandId
      - InstanceId
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: (Required) The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Required) The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      PluginName:
        $ref: '#/definitions/CommandPluginName'
        description: '(Optional) The name of the plugin for which you want detailed results. If the document contains only one plugin, the name can be omitted and the details will be returned.'
  InvalidPluginName: {}
  InvocationDoesNotExist: {}
  GetConnectionStatusResponse:
    type: object
    properties:
      Target:
        $ref: '#/definitions/SessionTarget'
        description: 'The ID of the instance to check connection status. '
      Status:
        $ref: '#/definitions/ConnectionStatus'
        description: 'The status of the connection to the instance. For example, ''Connected'' or ''Not Connected''.'
  GetConnectionStatusRequest:
    type: object
    required:
      - Target
    properties:
      Target:
        $ref: '#/definitions/SessionTarget'
        description: The ID of the instance.
  GetDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the default patch baseline.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: 'The operating system for the returned patch baseline. '
  GetDefaultPatchBaselineRequest:
    type: object
    properties:
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Returns the default patch baseline for the specified operating system.
  GetDeployablePatchSnapshotForInstanceResult:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The user-defined snapshot ID.
      SnapshotDownloadUrl:
        $ref: '#/definitions/SnapshotDownloadUrl'
        description: A pre-signed Amazon S3 URL that can be used to download the patch snapshot.
      Product:
        $ref: '#/definitions/Product'
        description: Returns the specific operating system (for example Windows Server 2012 or Amazon Linux 2015.09) on the instance for the specified patch snapshot.
  GetDeployablePatchSnapshotForInstanceRequest:
    type: object
    required:
      - InstanceId
      - SnapshotId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance for which the appropriate patch snapshot should be retrieved.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The user-defined snapshot ID.
  GetDocumentResult:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The contents of the Systems Manager document.
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: The document type.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: 'The document format, either JSON or YAML.'
  GetDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version for which you want information.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.
  GetInventoryResult:
    type: object
    properties:
      Entities:
        $ref: '#/definitions/InventoryResultEntityList'
        description: 'Collection of inventory entities such as a collection of instance inventory. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetInventoryRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      Aggregators:
        $ref: '#/definitions/InventoryAggregatorList'
        description: 'Returns counts of inventory types based on one or more expressions. For example, if you aggregate by using an expression that uses the <code>AWS:InstanceInformation.PlatformType</code> type, you can see a count of how many Windows and Linux instances exist in your inventoried fleet.'
      ResultAttributes:
        $ref: '#/definitions/ResultAttributeList'
        description: The list of inventory item types to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  InvalidInventoryGroupException: {}
  InvalidAggregatorException: {}
  InvalidResultAttributeException: {}
  GetInventorySchemaResult:
    type: object
    properties:
      Schemas:
        $ref: '#/definitions/InventoryItemSchemaResultList'
        description: Inventory schemas returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetInventorySchemaRequest:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeNameFilter'
        description: The type of inventory item to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/GetInventorySchemaMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      Aggregator:
        $ref: '#/definitions/AggregatorSchemaOnly'
        description: 'Returns inventory schemas that support aggregation. For example, this call returns the <code>AWS:InstanceInformation</code> type, because it supports aggregation based on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code> attributes.'
      SubType:
        $ref: '#/definitions/IsSubTypeSchema'
        description: Returns the sub-type schema for a specified inventory type.
  GetMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: The description of the Maintenance Window.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Windows is enabled.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the Maintenance Window was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date the Maintenance Window was last modified.
  GetMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the desired Maintenance Window.
  GetMaintenanceWindowExecutionResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution.
      TaskIds:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskIdList'
        description: The ID of the task executions from the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the Maintenance Window execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the Maintenance Window started executing.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the Maintenance Window finished executing.
  GetMaintenanceWindowExecutionRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
  GetMaintenanceWindowExecutionTaskResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window task that was retrieved.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The ARN of the executed task.
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: The role that was assumed when executing the task.
      Type:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task executed.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParametersList'
        description: '<p>The parameters passed to the task when it was executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>'
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: The priority of the task.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The defined maximum number of task executions that could be run in parallel.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution completed.
  GetMaintenanceWindowExecutionTaskRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window task that should be retrieved.
  GetMaintenanceWindowExecutionTaskInvocationResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The Maintenance Window execution ID.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The task execution ID.
      InvocationId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationId'
        description: The invocation ID.
      ExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskExecutionId'
        description: The execution ID.
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: 'Retrieves the task type for a Maintenance Window. Task types include the following: LAMBDA, STEP_FUNCTION, AUTOMATION, RUN_COMMAND.'
      Parameters:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationParameters'
        description: The parameters used at the time that the task executed.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The task status for an invocation.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the status. Details are only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time that the task started executing on the target.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time that the task finished executing on the target.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: 'User-provided value to be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window. '
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTaskTargetId'
        description: The Maintenance Window target ID.
  GetMaintenanceWindowExecutionTaskInvocationRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
      - InvocationId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution for which the task is a part.
      TaskId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: 'The ID of the specific task in the Maintenance Window task that should be retrieved. '
      InvocationId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationId'
        description: The invocation ID to retrieve.
  GetMaintenanceWindowTaskResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The retrieved Maintenance Window ID.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The retrieved Maintenance Window task ID.
      Targets:
        $ref: '#/definitions/Targets'
        description: The targets where the task should execute.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: 'The resource that the task used during execution. For RUN_COMMAND and AUTOMATION task types, the TaskArn is the Systems Manager Document name/ARN. For LAMBDA tasks, the value is the function name/ARN. For STEP_FUNCTION tasks, the value is the state machine ARN.'
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The IAM service role to assume during task execution.
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task to execute.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: '<p>The parameters to pass to the task when it executes.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/MaintenanceWindowTaskInvocationParameters'
        description: The parameters to pass to the task when it executes.
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The priority of the task when it executes. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The maximum number of targets allowed to run this task in parallel.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The maximum number of errors allowed before the task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: '<p>The location in Amazon S3 where the task results are logged.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The retrieved task name.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: The retrieved task description.
  GetMaintenanceWindowTaskRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID that includes the task to retrieve.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The Maintenance Window task ID to retrieve.
  GetParameterResult:
    type: object
    properties:
      Parameter:
        $ref: '#/definitions/Parameter'
        description: Information about a parameter.
  GetParameterRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter you want to query.
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
  InvalidKeyId: {}
  ParameterVersionNotFound: {}
  GetParameterHistoryResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterHistoryList'
        description: A list of parameters returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetParameterHistoryRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of a parameter you want to query.
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  GetParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterList'
        description: A list of details for a parameter.
      InvalidParameters:
        $ref: '#/definitions/ParameterNameList'
        description: A list of parameters that are not formatted correctly or do not run when executed.
  GetParametersRequest:
    type: object
    required:
      - Names
    properties:
      Names:
        $ref: '#/definitions/ParameterNameList'
        description: Names of the parameters for which you want to query information.
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
  GetParametersByPathResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterList'
        description: A list of parameters found in the specified hierarchy.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  GetParametersByPathRequest:
    type: object
    required:
      - Path
    properties:
      Path:
        $ref: '#/definitions/PSParameterName'
        description: 'The hierarchy for the parameter. Hierarchies start with a forward slash (/) and end with the parameter name. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33</code> '
      Recursive:
        $ref: '#/definitions/Boolean'
        description: '<p>Retrieve all parameters within a hierarchy.</p> <important> <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path /a, then the user can also access /a/b. Even if a user has explicitly been denied access in IAM for parameter /a, they can still call the GetParametersByPath API action recursively and view /a/b.</p> </important>'
      ParameterFilters:
        $ref: '#/definitions/ParameterStringFilterList'
        description: <p>Filters to limit the request results.</p> <note> <p>You can't filter using the parameter name.</p> </note>
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Retrieve all parameters in a hierarchy with their value decrypted.
      MaxResults:
        $ref: '#/definitions/GetParametersByPathMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  GetPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the retrieved patch baseline.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Returns the operating system specified for the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: Returns the specified compliance severity level for approved patches in the patch baseline.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      PatchGroups:
        $ref: '#/definitions/PatchGroupList'
        description: Patch groups included in the patch baseline.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch baseline was last modified.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/PatchSourceList'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
  GetPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to retrieve.
  GetPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline that should be used for the patch group.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: The operating system rule specified for patch groups using the patch baseline.
  GetPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group whose patch baseline should be retrieved.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Returns he operating system rule specified for patch groups using the patch baseline.
  LabelParameterVersionResult:
    type: object
    properties:
      InvalidLabels:
        $ref: '#/definitions/ParameterLabelList'
        description: 'The label does not meet the requirements. For information about parameter label requirements, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-labels.html">Labeling Parameters</a> in the <i>AWS Systems Manager User Guide</i>.'
  LabelParameterVersionRequest:
    type: object
    required:
      - Name
      - Labels
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The parameter name on which you want to attach one or more labels.
      ParameterVersion:
        $ref: '#/definitions/PSParameterVersion'
        description: 'The specific version of the parameter on which you want to attach one or more labels. If no version is specified, the system attaches the label to the latest version.)'
      Labels:
        $ref: '#/definitions/ParameterLabelList'
        description: One or more labels to attach to the specified parameter version.
  ParameterVersionLabelLimitExceeded: {}
  ListAssociationVersionsResult:
    type: object
    properties:
      AssociationVersions:
        $ref: '#/definitions/AssociationVersionList'
        description: Information about all versions of the association for the specified association ID.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListAssociationVersionsRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID for which you want to view all versions.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  ListAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/AssociationList'
        description: The associations.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListAssociationsRequest:
    type: object
    properties:
      AssociationFilterList:
        $ref: '#/definitions/AssociationFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandInvocationsResult:
    type: object
    properties:
      CommandInvocations:
        $ref: '#/definitions/CommandInvocationList'
        description: '(Optional) A list of all invocations. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandInvocationsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: (Optional) The invocations for a specific command ID.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Optional) The command execution details for a specific instance ID.
      MaxResults:
        $ref: '#/definitions/CommandMaxResults'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/CommandFilterList'
        description: (Optional) One or more filters. Use a filter to return a more specific list of results.
      Details:
        $ref: '#/definitions/Boolean'
        description: '(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. '
  ListCommandsResult:
    type: object
    properties:
      Commands:
        $ref: '#/definitions/CommandList'
        description: '(Optional) The list of commands requested by the user. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: '(Optional) If provided, lists only the specified command.'
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Optional) Lists commands issued against this instance ID.
      MaxResults:
        $ref: '#/definitions/CommandMaxResults'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/CommandFilterList'
        description: '(Optional) One or more filters. Use a filter to return a more specific list of results. '
  ListComplianceItemsResult:
    type: object
    properties:
      ComplianceItems:
        $ref: '#/definitions/ComplianceItemList'
        description: 'A list of compliance information for the specified resource ID. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListComplianceItemsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ComplianceStringFilterList'
        description: One or more compliance filters. Use a filter to return a more specific list of results.
      ResourceIds:
        $ref: '#/definitions/ComplianceResourceIdList'
        description: 'The ID for the resources from which to get compliance information. Currently, you can only specify one resource ID.'
      ResourceTypes:
        $ref: '#/definitions/ComplianceResourceTypeList'
        description: 'The type of resource from which to get compliance information. Currently, the only supported resource type is <code>ManagedInstance</code>.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListComplianceSummariesResult:
    type: object
    properties:
      ComplianceSummaryItems:
        $ref: '#/definitions/ComplianceSummaryItemList'
        description: 'A list of compliant and non-compliant summary counts based on compliance types. For example, this call returns State Manager associations, patches, or custom compliance types according to the filter criteria that you specified.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListComplianceSummariesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ComplianceStringFilterList'
        description: One or more compliance or inventory filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of items to return for this call. Currently, you can specify null or 50. The call also returns a token that you can specify in a subsequent call to get the next set of results.'
  ListDocumentVersionsResult:
    type: object
    properties:
      DocumentVersions:
        $ref: '#/definitions/DocumentVersionList'
        description: The document versions.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListDocumentVersionsRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document about which you want version information.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListDocumentsResult:
    type: object
    properties:
      DocumentIdentifiers:
        $ref: '#/definitions/DocumentIdentifierList'
        description: The names of the Systems Manager documents.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListDocumentsRequest:
    type: object
    properties:
      DocumentFilterList:
        $ref: '#/definitions/DocumentFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      Filters:
        $ref: '#/definitions/DocumentKeyValuesFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListInventoryEntriesResult:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The type of inventory item returned by the request.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID targeted by the request to query inventory information.
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The inventory schema version used by the instance(s).
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time that inventory information was collected for the instance(s).
      Entries:
        $ref: '#/definitions/InventoryItemEntryList'
        description: A list of inventory items on the instance(s).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListInventoryEntriesRequest:
    type: object
    required:
      - InstanceId
      - TypeName
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID for which you want inventory information.
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The type of inventory item for which you want information.
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListResourceComplianceSummariesResult:
    type: object
    properties:
      ResourceComplianceSummaryItems:
        $ref: '#/definitions/ResourceComplianceSummaryItemList'
        description: 'A summary count for specified or targeted managed instances. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListResourceComplianceSummariesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ComplianceStringFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListResourceDataSyncResult:
    type: object
    properties:
      ResourceDataSyncItems:
        $ref: '#/definitions/ResourceDataSyncItemList'
        description: A list of your current Resource Data Sync configurations and their statuses.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. Use this token to get the next set of results.
  ListResourceDataSyncRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListTagsForResourceResult:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/TagList'
        description: A list of tags.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: Returns a list of tags for a specific resource type.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource ID for which you want to see a list of tags.
  ModifyDocumentPermissionResponse:
    type: object
    properties: {}
  ModifyDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document that you want to share.
      PermissionType:
        $ref: '#/definitions/DocumentPermissionType'
        description: The permission type for the document. The permission type can be <i>Share</i>.
      AccountIdsToAdd:
        $ref: '#/definitions/AccountIdList'
        description: The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.
      AccountIdsToRemove:
        $ref: '#/definitions/AccountIdList'
        description: 'The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.'
  DocumentPermissionLimit: {}
  PutComplianceItemsResult:
    type: object
    properties: {}
  PutComplianceItemsRequest:
    type: object
    required:
      - ResourceId
      - ResourceType
      - ComplianceType
      - ExecutionSummary
      - Items
    properties:
      ResourceId:
        $ref: '#/definitions/ComplianceResourceId'
        description: 'Specify an ID for this resource. For a managed instance, this is the instance ID.'
      ResourceType:
        $ref: '#/definitions/ComplianceResourceType'
        description: Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type.
      ComplianceType:
        $ref: '#/definitions/ComplianceTypeName'
        description: 'Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>.'
      ExecutionSummary:
        $ref: '#/definitions/ComplianceExecutionSummary'
        description: 'A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
      Items:
        $ref: '#/definitions/ComplianceItemEntryList'
        description: 'Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.'
      ItemContentHash:
        $ref: '#/definitions/ComplianceItemContentHash'
        description: 'MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.'
  InvalidItemContentException: {}
  TotalSizeLimitExceededException: {}
  ItemSizeLimitExceededException: {}
  ComplianceTypeCountLimitExceededException: {}
  PutInventoryResult:
    type: object
    properties:
      Message:
        $ref: '#/definitions/PutInventoryMessage'
        description: Information about the request.
  PutInventoryRequest:
    type: object
    required:
      - InstanceId
      - Items
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: One or more instance IDs where you want to add or update inventory items.
      Items:
        $ref: '#/definitions/InventoryItemList'
        description: The inventory items that you want to add or update on instances.
  ItemContentMismatchException: {}
  CustomSchemaCountLimitExceededException: {}
  UnsupportedInventorySchemaVersionException: {}
  UnsupportedInventoryItemContextException: {}
  InvalidInventoryItemContextException: {}
  SubTypeCountLimitExceededException: {}
  PutParameterResult:
    type: object
    properties:
      Version:
        $ref: '#/definitions/PSParameterVersion'
        description: 'The new version number of a parameter. If you edit a parameter value, Parameter Store automatically creates a new version and assigns this new version a unique ID. You can reference a parameter version ID in API actions or in Systems Manager documents (SSM documents). By default, if you don''t specify a specific version, the system returns the latest parameter value when a parameter is called.'
  PutParameterRequest:
    type: object
    required:
      - Name
      - Value
      - Type
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: '<p>The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For example: <code>/Dev/DBServer/MySQL/db-string13</code> </p> <p>Naming Constraints:</p> <ul> <li> <p>Parameter names are case sensitive.</p> </li> <li> <p>A parameter name must be unique within an AWS Region</p> </li> <li> <p>A parameter name can''t be prefixed with "aws" or "ssm" (case-insensitive).</p> </li> <li> <p>Parameter names can include only the following symbols and letters: <code>a-zA-Z0-9_.-/</code> </p> </li> <li> <p>A parameter name can''t include spaces.</p> </li> <li> <p>Parameter hierarchies are limited to a maximum depth of fifteen levels.</p> </li> </ul> <p>For additional information about valid values for parameter names, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html">Requirements and Constraints for Parameter Names</a> in the <i>AWS Systems Manager User Guide</i>.</p> <note> <p>The maximum length constraint listed below includes capacity for additional system attributes that are not part of the name. The maximum length for the fully qualified parameter name is 1011 characters. </p> </note>'
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: <p>Information about the parameter that you want to add to the system. Optional but recommended.</p> <important> <p>Do not enter personally identifiable information in this field.</p> </important>
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value that you want to add to the system.
      Type:
        $ref: '#/definitions/ParameterType'
        description: '<p>The type of parameter that you want to add to the system.</p> <p>Items in a <code>StringList</code> must be separated by a comma (,). You can''t use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the <code>String</code> data type.</p> <note> <p> <code>SecureString</code> is not currently supported for AWS CloudFormation templates or in the China Regions.</p> </note>'
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: '<p>The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS Key Management Service (AWS KMS) key automatically assigned to your AWS account or a custom key. Required for parameters that use the <code>SecureString</code> data type.</p> <p>If you don''t specify a key ID, the system uses the default key associated with your AWS account.</p> <ul> <li> <p>To use your default AWS KMS key, choose the <code>SecureString</code> data type, and do <i>not</i> specify the <code>Key ID</code> when you create the parameter. The system automatically populates <code>Key ID</code> with your default KMS key.</p> </li> <li> <p>To use a custom KMS key, choose the <code>SecureString</code> data type with the <code>Key ID</code> parameter.</p> </li> </ul>'
      Overwrite:
        $ref: '#/definitions/Boolean'
        description: 'Overwrite an existing parameter. If not specified, will default to "false".'
      AllowedPattern:
        $ref: '#/definitions/AllowedPattern'
        description: 'A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\d+$ '
  ParameterLimitExceeded: {}
  ParameterAlreadyExists: {}
  HierarchyLevelLimitExceededException: {}
  HierarchyTypeMismatchException: {}
  InvalidAllowedPatternException: {}
  ParameterMaxVersionLimitExceeded: {}
  ParameterPatternMismatchException: {}
  UnsupportedParameterType: {}
  RegisterDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the default patch baseline.
  RegisterDefaultPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline that should be the default patch baseline.
  RegisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline the patch group was registered with.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group registered with the patch baseline.
  RegisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to register the patch group with.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group that should be registered with the patch baseline.
  AlreadyExistsException: {}
  RegisterTargetWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target definition in this Maintenance Window.
  RegisterTargetWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - ResourceType
      - Targets
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target should be registered with.
      ResourceType:
        $ref: '#/definitions/MaintenanceWindowResourceType'
        description: The type of target being registered with the Maintenance Window.
      Targets:
        $ref: '#/definitions/Targets'
        description: '<p>The targets (either instances or tags). </p> <p>Specify instances using the following format:</p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify tags using either of the following formats:</p> <p> <code>Key=tag:&lt;tag-key&gt;,Values=&lt;tag-value-1&gt;,&lt;tag-value-2&gt;</code> </p> <p> <code>Key=tag-key,Values=&lt;tag-key-1&gt;,&lt;tag-key-2&gt;</code> </p>'
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: An optional name for the target.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: An optional description for the target.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  RegisterTaskWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The id of the task in the Maintenance Window.
  RegisterTaskWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - Targets
      - TaskArn
      - TaskType
      - MaxConcurrency
      - MaxErrors
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the task should be added to.
      Targets:
        $ref: '#/definitions/Targets'
        description: '<p>The targets (either instances or Maintenance Window targets).</p> <p>Specify instances using the following format: </p> <p> <code>Key=InstanceIds,Values=&lt;instance-id-1&gt;,&lt;instance-id-2&gt;</code> </p> <p>Specify Maintenance Window targets using the following format:</p> <p> <code>Key=&lt;WindowTargetIds&gt;,Values=&lt;window-target-id-1&gt;,&lt;window-target-id-2&gt;</code> </p>'
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: 'The ARN of the task to execute '
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: '<p>The role to assume when running the Maintenance Window task.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account''s service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Service-Linked Role Permissions for Systems Manager</a> and <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task being registered.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: '<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/MaintenanceWindowTaskInvocationParameters'
        description: 'The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty. '
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The maximum number of errors allowed before this task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: '<p>A structure containing information about an Amazon S3 bucket to write instance-level logs to. </p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: An optional name for the task.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: An optional description for the task.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  FeatureNotAvailableException: {}
  RemoveTagsFromResourceResult:
    type: object
    properties: {}
  RemoveTagsFromResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - TagKeys
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: '<p>The type of resource of which you want to remove a tag.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: '<p>The resource ID for which you want to remove tags. Use the ID of the resource. Here are some examples:</p> <p>ManagedInstance: mi-012345abcde</p> <p>MaintenanceWindow: mw-012345abcde</p> <p>PatchBaseline: pb-012345abcde</p> <p>For the Document and Parameter values, use the name of the resource.</p> <note> <p>The ManagedInstance type for this API action is only for on-premises managed instances. You must specify the the name of the managed instance in the following format: mi-ID_number. For example, mi-1a2b3c4d5e6f.</p> </note>'
      TagKeys:
        $ref: '#/definitions/KeyList'
        description: Tag keys that you want to remove from the specified resource.
  ResumeSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the session.
      TokenValue:
        $ref: '#/definitions/TokenValue'
        description: An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.
      StreamUrl:
        $ref: '#/definitions/StreamUrl'
        description: '<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code>.</p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>'
  ResumeSessionRequest:
    type: object
    required:
      - SessionId
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the disconnected session to resume.
  SendAutomationSignalResult:
    type: object
    properties: {}
  SendAutomationSignalRequest:
    type: object
    required:
      - AutomationExecutionId
      - SignalType
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The unique identifier for an existing Automation execution that you want to send the signal to.
      SignalType:
        $ref: '#/definitions/SignalType'
        description: 'The type of signal. Valid signal types include the following: Approve and Reject '
      Payload:
        $ref: '#/definitions/AutomationParameterMap'
        description: 'The data sent with the signal. The data schema depends on the type of signal used in the request. '
  AutomationStepNotFoundException: {}
  InvalidAutomationSignalException: {}
  SendCommandResult:
    type: object
    properties:
      Command:
        $ref: '#/definitions/Command'
        description: The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.
  SendCommandRequest:
    type: object
    required:
      - DocumentName
    properties:
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: 'The instance IDs where the command should execute. You can specify a maximum of 50 IDs. If you prefer not to list individual instance IDs, you can instead send commands to a fleet of instances using the Targets parameter, which accepts EC2 tags. For more information about how to use Targets, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
      Targets:
        $ref: '#/definitions/Targets'
        description: '(Optional) An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don''t provide one or more instance IDs in the call. For more information about how to use Targets, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
      DocumentName:
        $ref: '#/definitions/DocumentARN'
        description: Required. The name of the Systems Manager document to execute. This can be a public document or a custom document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: '<p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you execute commands by using the AWS CLI, then you must escape the first two options by using a backslash. If you specify a version number, then you don''t need to use the backslash. For example:</p> <p>--document-version "\$DEFAULT"</p> <p>--document-version "\$LATEST"</p> <p>--document-version "3"</p>'
      DocumentHash:
        $ref: '#/definitions/DocumentHash'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      DocumentHashType:
        $ref: '#/definitions/DocumentHashType'
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      TimeoutSeconds:
        $ref: '#/definitions/TimeoutSeconds'
        description: 'If this time is reached and the command has not already started executing, it will not run.'
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      Parameters:
        $ref: '#/definitions/Parameters'
        description: The required and optional parameters specified in the document being executed.
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the S3 bucket where command execution responses should be stored.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The directory structure within the S3 bucket where the responses should be stored.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: '(Optional) The maximum number of instances that are allowed to execute the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity">Using Concurrency Controls</a> in the <i>AWS Systems Manager User Guide</i>.'
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: 'The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of MaxErrors, the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is 0. For more information about how to use MaxErrors, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors">Using Error Controls</a> in the <i>AWS Systems Manager User Guide</i>.'
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: 'The IAM role that Systems Manager uses to send notifications. '
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: Configurations for sending notifications.
      CloudWatchOutputConfig:
        $ref: '#/definitions/CloudWatchOutputConfig'
        description: 'Enables Systems Manager to send Run Command output to Amazon CloudWatch Logs. '
  InvalidOutputFolder: {}
  InvalidRole: {}
  InvalidNotificationConfig: {}
  StartAssociationsOnceResult:
    type: object
    properties: {}
  StartAssociationsOnceRequest:
    type: object
    required:
      - AssociationIds
    properties:
      AssociationIds:
        $ref: '#/definitions/AssociationIdList'
        description: The association IDs that you want to execute immediately and only one time.
  InvalidAssociation: {}
  StartAutomationExecutionResult:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The unique ID of a newly scheduled automation execution.
  StartAutomationExecutionRequest:
    type: object
    required:
      - DocumentName
    properties:
      DocumentName:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Automation document to use for this execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the Automation document to use for this execution.
      Parameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: 'A key-value map of execution parameters, which match the declared parameters in the Automation document.'
      ClientToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can''t be reused.'
      Mode:
        $ref: '#/definitions/ExecutionMode'
        description: 'The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.'
      TargetParameterName:
        $ref: '#/definitions/AutomationParameterKey'
        description: The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify Targets.
      Targets:
        $ref: '#/definitions/Targets'
        description: A key-value mapping to target resources. Required if you specify TargetParameterName.
      TargetMaps:
        $ref: '#/definitions/TargetMaps'
        description: A key-value mapping of document parameters to target resources. Both Targets and TargetMaps cannot be specified together.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: 'The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is 10.'
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: '<p>The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.</p> <p>Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won''t be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.</p>'
  AutomationDefinitionNotFoundException: {}
  InvalidAutomationExecutionParametersException: {}
  AutomationExecutionLimitExceededException: {}
  AutomationDefinitionVersionNotFoundException: {}
  StartSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the session.
      TokenValue:
        $ref: '#/definitions/TokenValue'
        description: An encrypted token value containing session and caller information. Used to authenticate the connection to the instance.
      StreamUrl:
        $ref: '#/definitions/StreamUrl'
        description: '<p>A URL back to SSM Agent on the instance that the Session Manager client uses to send commands and receive output from the instance. Format: <code>wss://ssm-messages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code> </p> <p> <b>region</b> represents the Region identifier for an AWS Region supported by AWS Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in the <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#ssm_region">AWS Systems Manager table of regions and endpoints</a> in the <i>AWS General Reference</i>.</p> <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>'
  StartSessionRequest:
    type: object
    required:
      - Target
    properties:
      Target:
        $ref: '#/definitions/SessionTarget'
        description: The instance to connect to for the session.
      DocumentName:
        $ref: '#/definitions/DocumentARN'
        description: 'The name of the SSM document to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>. If no document name is provided, a shell to the instance is launched by default.'
      Parameters:
        $ref: '#/definitions/SessionManagerParameters'
        description: Reserved for future use.
  TargetNotConnected: {}
  StopAutomationExecutionResult:
    type: object
    properties: {}
  StopAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID of the Automation to stop.
      Type:
        $ref: '#/definitions/StopType'
        description: 'The stop request type. Valid types include the following: Cancel and Complete. The default type is Cancel.'
  InvalidAutomationStatusUpdateException: {}
  TerminateSessionResponse:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the session that has been terminated.
  TerminateSessionRequest:
    type: object
    required:
      - SessionId
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the session to terminate.
  UpdateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: The description of the association that was updated.
  UpdateAssociationRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: 'The ID of the association you want to update. '
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters you want to update for the association. If you create a parameter using Parameter Store, you can reference the parameter using {{ssm:parameter-name}}'
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: 'The document version you want update for the association. '
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: The cron expression used to schedule the association that you want to update.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the results of this request.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the association document.
      Targets:
        $ref: '#/definitions/Targets'
        description: The targets of the association.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: The name of the association that you want to update.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: 'This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify <code>$LATEST</code>, or omit this parameter.'
  InvalidUpdate: {}
  AssociationVersionLimitExceeded: {}
  UpdateAssociationStatusResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  UpdateAssociationStatusRequest:
    type: object
    required:
      - Name
      - InstanceId
      - AssociationStatus
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationStatus:
        $ref: '#/definitions/AssociationStatus'
        description: The association status.
  StatusUnchanged: {}
  UpdateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/DocumentDescription'
        description: A description of the document that was updated.
  UpdateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The content in a document that you want to update.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document that you want to update.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document that you want to update.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: Specify the document format for the new document version. Systems Manager supports JSON and YAML documents. JSON is the default format.
      TargetType:
        $ref: '#/definitions/TargetType'
        description: Specify a new target type for the document.
  DocumentVersionLimitExceeded: {}
  DuplicateDocumentContent: {}
  UpdateDocumentDefaultVersionResult:
    type: object
    properties:
      Description:
        $ref: '#/definitions/DocumentDefaultVersionDescription'
        description: The description of a custom document that you want to set as the default version.
  UpdateDocumentDefaultVersionRequest:
    type: object
    required:
      - Name
      - DocumentVersion
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of a custom document that you want to set as the default version.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersionNumber'
        description: The version of a custom document that you want to set as the default version.
  UpdateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: An optional description of the update.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
  UpdateMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window to update.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: An optional description for the update request.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
      Replace:
        $ref: '#/definitions/Boolean'
        description: 'If True, then all fields that are required by the CreateMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null. '
  UpdateMaintenanceWindowTargetResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID specified in the update request.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The target ID specified in the update request.
      Targets:
        $ref: '#/definitions/Targets'
        description: The updated targets.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: The updated owner.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The updated name.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: The updated description.
  UpdateMaintenanceWindowTargetRequest:
    type: object
    required:
      - WindowId
      - WindowTargetId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID with which to modify the target.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The target ID to modify.
      Targets:
        $ref: '#/definitions/Targets'
        description: The targets to add or replace.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: A name for the update.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: An optional description for the update.
      Replace:
        $ref: '#/definitions/Boolean'
        description: 'If True, then all fields that are required by the RegisterTargetWithMaintenanceWindow action are also required for this API request. Optional fields that are not specified are set to null.'
  UpdateMaintenanceWindowTaskResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window that was updated.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The task ID of the Maintenance Window that was updated.
      Targets:
        $ref: '#/definitions/Targets'
        description: The updated target values.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The updated task ARN value.
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The updated service role ARN value.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: '<p>The updated parameter values.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      TaskInvocationParameters:
        $ref: '#/definitions/MaintenanceWindowTaskInvocationParameters'
        description: The updated parameter values.
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: The updated priority value.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The updated MaxConcurrency value.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The updated MaxErrors value.
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: '<p>The updated logging information in Amazon S3.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The updated task name.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: The updated task description.
  UpdateMaintenanceWindowTaskRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID that contains the task to modify.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The task ID to modify.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags) to modify. Instances are specified using Key=instanceids,Values=instanceID_1,instanceID_2. Tags are specified using Key=tag_name,Values=tag_value. '
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The task ARN to modify.
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: '<p>The IAM service role ARN to modify. The system assumes this role during task execution.</p> <p>If you do not specify a service role ARN, Systems Manager will use your account''s service-linked role for Systems Manager by default. If no service-linked role for Systems Manager exists in your account, it will be created when you run <code>RegisterTaskWithMaintenanceWindow</code> without specifying a service role ARN.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions">Service-Linked Role Permissions for Systems Manager</a> and <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role">Should I Use a Service-Linked Role or a Custom Service Role to Run Maintenance Window Tasks? </a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: '<p>The parameters to modify.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note> <p>The map has the following format:</p> <p>Key: string, between 1 and 255 characters</p> <p>Value: an array of strings, each string is between 1 and 255 characters</p>'
      TaskInvocationParameters:
        $ref: '#/definitions/MaintenanceWindowTaskInvocationParameters'
        description: The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The new <code>MaxConcurrency</code> value you want to specify. <code>MaxConcurrency</code> is the number of targets that are allowed to run this task in parallel.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The new <code>MaxErrors</code> value to specify. <code>MaxErrors</code> is the maximum number of errors that are allowed before the task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: '<p>The new logging location in Amazon S3 to specify.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The new task name to specify.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: The new task description to specify.
      Replace:
        $ref: '#/definitions/Boolean'
        description: 'If True, then all fields that are required by the RegisterTaskWithMaintenanceWndow action are also required for this API request. Optional fields that are not specified are set to null.'
  UpdateManagedInstanceRoleResult:
    type: object
    properties: {}
  UpdateManagedInstanceRoleRequest:
    type: object
    required:
      - InstanceId
      - IamRole
    properties:
      InstanceId:
        $ref: '#/definitions/ManagedInstanceId'
        description: The ID of the managed instance where you want to update the role.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: The IAM role you want to assign or change.
  UpdatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the deleted patch baseline.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: The operating system rule used by the updated patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: The compliance severity level assigned to the patch baseline after the update completed.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date when the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date when the patch baseline was last modified.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the Patch Baseline.
      Sources:
        $ref: '#/definitions/PatchSourceList'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
  UpdatePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to update.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: '<p>A list of explicitly approved patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      ApprovedPatchesComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: Assigns a new compliance severity level to an existing patch baseline.
      ApprovedPatchesEnableNonSecurity:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: '<p>A list of explicitly rejected patches for the baseline.</p> <p>For information about accepted formats for lists of approved patches and rejected patches, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager-approved-rejected-package-name-formats.html">Package Name Formats for Approved and Rejected Patch Lists</a> in the <i>AWS Systems Manager User Guide</i>.</p>'
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
      Sources:
        $ref: '#/definitions/PatchSourceList'
        description: 'Information about the patches to use to update the instances, including target operating systems and source repositories. Applies to Linux instances only.'
      Replace:
        $ref: '#/definitions/Boolean'
        description: 'If True, then all fields that are required by the CreatePatchBaseline action are also required for this API request. Optional fields that are not specified are set to null.'
  AccountId:
    type: string
    pattern: '\(\?i\)all\|[0-9]\{12\}'
  AccountIdList:
    type: array
    items:
      $ref: '#/definitions/AccountId'
    maxItems: 20
  ActivationId:
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
  ActivationDescription:
    type: string
    minLength: 0
    maxLength: 256
  DefaultInstanceName:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  IamRole:
    type: string
    maxLength: 64
  RegistrationLimit:
    type: integer
    minimum: 1
    maximum: 1000
  RegistrationsCount:
    type: integer
    minimum: 1
    maximum: 1000
  ExpirationDate:
    type: string
    format: date-time
  Boolean:
    type: boolean
  CreatedDate:
    type: string
    format: date-time
  Activation:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID created by Systems Manager when you submitted the activation.
      Description:
        $ref: '#/definitions/ActivationDescription'
        description: A user defined description of the activation.
      DefaultInstanceName:
        $ref: '#/definitions/DefaultInstanceName'
        description: A name for the managed instance when it is created.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: The Amazon Identity and Access Management (IAM) role to assign to the managed instance.
      RegistrationLimit:
        $ref: '#/definitions/RegistrationLimit'
        description: The maximum number of managed instances that can be registered using this activation.
      RegistrationsCount:
        $ref: '#/definitions/RegistrationsCount'
        description: The number of managed instances already registered with this activation.
      ExpirationDate:
        $ref: '#/definitions/ExpirationDate'
        description: The date when this activation can no longer be used to register managed instances.
      Expired:
        $ref: '#/definitions/Boolean'
        description: Whether or not the activation is expired.
      CreatedDate:
        $ref: '#/definitions/CreatedDate'
        description: The date the activation was created.
    description: An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.
  ActivationCode:
    type: string
    minLength: 20
    maxLength: 250
  ActivationList:
    type: array
    items:
      $ref: '#/definitions/Activation'
  ResourceTypeForTagging:
    type: string
    enum:
      - Document
      - ManagedInstance
      - MaintenanceWindow
      - Parameter
      - PatchBaseline
  ResourceId:
    type: string
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  AgentErrorCode:
    type: string
    maxLength: 10
  AggregatorSchemaOnly:
    type: boolean
  AllowedPattern:
    type: string
    minLength: 0
    maxLength: 1024
  ApproveAfterDays:
    type: integer
    minimum: 0
    maximum: 100
  DocumentName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  InstanceId:
    type: string
    pattern: '(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)'
  AssociationId:
    type: string
    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
  AssociationVersion:
    type: string
    pattern: '([$]LATEST)|([1-9][0-9]*)'
  DocumentVersion:
    type: string
    pattern: '([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)'
  Targets:
    type: array
    items:
      $ref: '#/definitions/Target'
    minItems: 0
    maxItems: 5
  DateTime:
    type: string
    format: date-time
  AssociationOverview:
    type: object
    properties:
      Status:
        $ref: '#/definitions/StatusName'
        description: 'The status of the association. Status can be: Pending, Success, or Failed.'
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: A detailed status of the association.
      AssociationStatusAggregatedCount:
        $ref: '#/definitions/AssociationStatusAggregatedCount'
        description: 'Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.'
    description: Information about the association.
  ScheduleExpression:
    type: string
    minLength: 1
    maxLength: 256
  AssociationName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  Association:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The association version.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document used in the association.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The instances targeted by the request to create an association. '
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date on which the association was last run.
      Overview:
        $ref: '#/definitions/AssociationOverview'
        description: Information about the association.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: The association name.
    description: Describes an association of a Systems Manager document and an instance.
  AssociationStatus:
    type: object
    required:
      - Date
      - Name
      - Message
    properties:
      Date:
        $ref: '#/definitions/DateTime'
        description: The date when the status changed.
      Name:
        $ref: '#/definitions/AssociationStatusName'
        description: The status.
      Message:
        $ref: '#/definitions/StatusMessage'
        description: The reason for the status.
      AdditionalInfo:
        $ref: '#/definitions/StatusAdditionalInfo'
        description: A user-defined string.
    description: Describes an association status.
  Parameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ParameterName'
        value:
          $ref: '#/definitions/ParameterValueList'
  InstanceAssociationOutputLocation:
    type: object
    properties:
      S3Location:
        $ref: '#/definitions/S3OutputLocation'
        description: An Amazon S3 bucket where you want to store the results of this request.
    description: An Amazon S3 bucket where you want to store the results of this request.
  AssociationDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the Systems Manager document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The association version.
      Date:
        $ref: '#/definitions/DateTime'
        description: The date when the association was made.
      LastUpdateAssociationDate:
        $ref: '#/definitions/DateTime'
        description: The date when the association was last updated.
      Status:
        $ref: '#/definitions/AssociationStatus'
        description: The association status.
      Overview:
        $ref: '#/definitions/AssociationOverview'
        description: Information about the association.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'A description of the parameters for a document. '
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The instances targeted by the request. '
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the output details of the request.
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date on which the association was last run.
      LastSuccessfulExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The last date on which the association was successfully run.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: The association name.
    description: Describes the parameters for a document.
  AssociationDescriptionList:
    type: array
    items:
      $ref: '#/definitions/AssociationDescription'
  AssociationExecutionId:
    type: string
    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
  StatusName:
    type: string
  ResourceCountByStatus:
    type: string
  AssociationExecution:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The association version.
      ExecutionId:
        $ref: '#/definitions/AssociationExecutionId'
        description: 'The execution ID for the association. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.'
      Status:
        $ref: '#/definitions/StatusName'
        description: The status of the association execution.
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed status information about the execution.
      CreatedTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date of the last execution.
      ResourceCountByStatus:
        $ref: '#/definitions/ResourceCountByStatus'
        description: An aggregate status of the resources in the execution based on the status type.
    description: Includes information about the specified association.
  AssociationExecutionFilterKey:
    type: string
    enum:
      - ExecutionId
      - Status
      - CreatedTime
  AssociationExecutionFilterValue:
    type: string
    minLength: 1
  AssociationFilterOperatorType:
    type: string
    enum:
      - EQUAL
      - LESS_THAN
      - GREATER_THAN
  AssociationExecutionFilter:
    type: object
    required:
      - Key
      - Value
      - Type
    properties:
      Key:
        $ref: '#/definitions/AssociationExecutionFilterKey'
        description: The key value used in the request.
      Value:
        $ref: '#/definitions/AssociationExecutionFilterValue'
        description: The value specified for the key.
      Type:
        $ref: '#/definitions/AssociationFilterOperatorType'
        description: The filter type specified in the request.
    description: Filters used in the request.
  AssociationExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/AssociationExecutionFilter'
    minItems: 1
  AssociationResourceId:
    type: string
    minLength: 1
    maxLength: 100
  AssociationResourceType:
    type: string
    minLength: 1
    maxLength: 50
  OutputSource:
    type: object
    properties:
      OutputSourceId:
        $ref: '#/definitions/OutputSourceId'
        description: 'The ID of the output source, for example the URL of an Amazon S3 bucket.'
      OutputSourceType:
        $ref: '#/definitions/OutputSourceType'
        description: 'The type of source where the association execution details are stored, for example, Amazon S3.'
    description: Information about the source where the association execution details are stored.
  AssociationExecutionTarget:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The association version.
      ExecutionId:
        $ref: '#/definitions/AssociationExecutionId'
        description: 'The execution ID. If the association does not run at intervals or according to a schedule, then the ExecutionID is the same as the AssociationID.'
      ResourceId:
        $ref: '#/definitions/AssociationResourceId'
        description: 'The resource ID, for example, the instance ID where the association ran.'
      ResourceType:
        $ref: '#/definitions/AssociationResourceType'
        description: 'The resource type, for example, instance.'
      Status:
        $ref: '#/definitions/StatusName'
        description: The association execution status.
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed information about the execution status.
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date of the last execution.
      OutputSource:
        $ref: '#/definitions/OutputSource'
        description: The location where the association details are saved.
    description: Includes information about the specified association execution.
  AssociationExecutionTargetsFilterKey:
    type: string
    enum:
      - Status
      - ResourceId
      - ResourceType
  AssociationExecutionTargetsFilterValue:
    type: string
    minLength: 1
  AssociationExecutionTargetsFilter:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/AssociationExecutionTargetsFilterKey'
        description: The key value used in the request.
      Value:
        $ref: '#/definitions/AssociationExecutionTargetsFilterValue'
        description: The value specified for the key.
    description: Filters for the association execution.
  AssociationExecutionTargetsFilterList:
    type: array
    items:
      $ref: '#/definitions/AssociationExecutionTargetsFilter'
    minItems: 1
  AssociationExecutionTargetsList:
    type: array
    items:
      $ref: '#/definitions/AssociationExecutionTarget'
  AssociationExecutionsList:
    type: array
    items:
      $ref: '#/definitions/AssociationExecution'
  AssociationFilterKey:
    type: string
    enum:
      - InstanceId
      - Name
      - AssociationId
      - AssociationStatusName
      - LastExecutedBefore
      - LastExecutedAfter
      - AssociationName
  AssociationFilterValue:
    type: string
    minLength: 1
  AssociationFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/AssociationFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/AssociationFilterValue'
        description: The filter value.
    description: Describes a filter.
  AssociationFilterList:
    type: array
    items:
      $ref: '#/definitions/AssociationFilter'
    minItems: 1
  AssociationIdList:
    type: array
    items:
      $ref: '#/definitions/AssociationId'
    minItems: 1
    maxItems: 10
  AssociationList:
    type: array
    items:
      $ref: '#/definitions/Association'
  AssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  AssociationStatusName:
    type: string
    enum:
      - Pending
      - Success
      - Failed
  StatusMessage:
    type: string
    minLength: 1
    maxLength: 1024
  StatusAdditionalInfo:
    type: string
    maxLength: 1024
  InstanceCount:
    type: integer
  AssociationVersionInfo:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The ID created by the system when the association was created.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The association version.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the association version was created.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name specified when the association was created.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of a Systems Manager document used when the association version was created.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: Parameters specified when the association version was created.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets specified for the association when the association version was created. '
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: The cron or rate schedule specified for the association when the association version was created.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: The location in Amazon S3 specified for the association when the association version was created.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: The name specified for the association version when the association version was created.
    description: Information about the association version.
  AssociationVersionList:
    type: array
    items:
      $ref: '#/definitions/AssociationVersionInfo'
    minItems: 1
  AttributeName:
    type: string
    minLength: 1
    maxLength: 64
  AttributeValue:
    type: string
    minLength: 0
    maxLength: 4096
  AutomationActionName:
    type: string
    pattern: '^aws:[a-zA-Z]{3,25}$'
  AutomationExecutionId:
    type: string
    minLength: 36
    maxLength: 36
  AutomationExecutionStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Waiting
      - Success
      - TimedOut
      - Cancelling
      - Cancelled
      - Failed
  StepExecutionList:
    type: array
    items:
      $ref: '#/definitions/StepExecution'
  AutomationParameterMap:
    type: array
    minItems: 1
    maxItems: 200
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AutomationParameterKey'
        value:
          $ref: '#/definitions/AutomationParameterValueList'
  String:
    type: string
  ExecutionMode:
    type: string
    enum:
      - Auto
      - Interactive
  AutomationParameterKey:
    type: string
    minLength: 1
    maxLength: 30
  TargetMaps:
    type: array
    items:
      $ref: '#/definitions/TargetMap'
    minItems: 0
    maxItems: 300
  ResolvedTargets:
    type: object
    properties:
      ParameterValues:
        $ref: '#/definitions/TargetParameterList'
        description: A list of parameter values sent to targets that resolved during the Automation execution.
      Truncated:
        $ref: '#/definitions/Boolean'
        description: A boolean value indicating whether the resolved target list is truncated.
    description: Information about targets that resolved during the Automation execution.
  MaxConcurrency:
    type: string
    pattern: '^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$'
    minLength: 1
    maxLength: 7
  MaxErrors:
    type: string
    pattern: '^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$'
    minLength: 1
    maxLength: 7
  AutomationExecution:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the Automation document used during the execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document to use during execution.
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished.
      AutomationExecutionStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: The execution status of the Automation.
      StepExecutions:
        $ref: '#/definitions/StepExecutionList'
        description: A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.
      StepExecutionsTruncated:
        $ref: '#/definitions/Boolean'
        description: 'A boolean value that indicates if the response contains the full list of the Automation step executions. If true, use the DescribeAutomationStepExecutions API action to get the full list of step executions.'
      Parameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: 'The key-value map of execution parameters, which were supplied when calling StartAutomationExecution.'
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: The list of execution outputs as defined in the automation document.
      FailureMessage:
        $ref: '#/definitions/String'
        description: 'A message describing why an execution has failed, if the status is set to Failed.'
      Mode:
        $ref: '#/definitions/ExecutionMode'
        description: The automation execution mode.
      ParentAutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The AutomationExecutionId of the parent automation.
      ExecutedBy:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the user who executed the automation.
      CurrentStepName:
        $ref: '#/definitions/String'
        description: The name of the currently executing step.
      CurrentAction:
        $ref: '#/definitions/String'
        description: The action of the currently executing step.
      TargetParameterName:
        $ref: '#/definitions/AutomationParameterKey'
        description: The parameter name.
      Targets:
        $ref: '#/definitions/Targets'
        description: The specified targets.
      TargetMaps:
        $ref: '#/definitions/TargetMaps'
        description: The specified key-value mapping of document parameters to target resources.
      ResolvedTargets:
        $ref: '#/definitions/ResolvedTargets'
        description: A list of resolved targets in the rate control execution.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The MaxConcurrency value specified by the user when the execution started.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The MaxErrors value specified by the user when the execution started.
      Target:
        $ref: '#/definitions/String'
        description: The target of the execution.
    description: Detailed information about the current state of an individual Automation execution.
  AutomationExecutionFilterKey:
    type: string
    enum:
      - DocumentNamePrefix
      - ExecutionStatus
      - ExecutionId
      - ParentExecutionId
      - CurrentAction
      - StartTimeBefore
      - StartTimeAfter
  AutomationExecutionFilterValueList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionFilterValue'
    minItems: 1
    maxItems: 10
  AutomationExecutionFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/AutomationExecutionFilterKey'
        description: 'One or more keys to limit the results. Valid filter keys include the following: DocumentNamePrefix, ExecutionStatus, ExecutionId, ParentExecutionId, CurrentAction, StartTimeBefore, StartTimeAfter.'
      Values:
        $ref: '#/definitions/AutomationExecutionFilterValueList'
        description: The values used to limit the execution information associated with the filter's key.
    description: A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.
  AutomationExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionFilter'
    minItems: 1
    maxItems: 10
  AutomationExecutionFilterValue:
    type: string
    minLength: 1
    maxLength: 150
  AutomationExecutionMetadata:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the Automation document used during execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version used during the execution.
      AutomationExecutionStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: 'The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.'
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.&gt;
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished. This is not populated if the execution is still in progress.
      ExecutedBy:
        $ref: '#/definitions/String'
        description: The IAM role ARN of the user who executed the Automation.
      LogFile:
        $ref: '#/definitions/String'
        description: An Amazon S3 bucket where execution information is stored.
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: The list of execution outputs as defined in the Automation document.
      Mode:
        $ref: '#/definitions/ExecutionMode'
        description: The Automation execution mode.
      ParentAutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The ExecutionId of the parent Automation.
      CurrentStepName:
        $ref: '#/definitions/String'
        description: The name of the currently executing step.
      CurrentAction:
        $ref: '#/definitions/String'
        description: The action of the currently executing step.
      FailureMessage:
        $ref: '#/definitions/String'
        description: The list of execution outputs as defined in the Automation document.
      TargetParameterName:
        $ref: '#/definitions/AutomationParameterKey'
        description: The list of execution outputs as defined in the Automation document.
      Targets:
        $ref: '#/definitions/Targets'
        description: The targets defined by the user when starting the Automation.
      TargetMaps:
        $ref: '#/definitions/TargetMaps'
        description: The specified key-value mapping of document parameters to target resources.
      ResolvedTargets:
        $ref: '#/definitions/ResolvedTargets'
        description: A list of targets that resolved during the execution.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The MaxConcurrency value specified by the user when starting the Automation.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The MaxErrors value specified by the user when starting the Automation.
      Target:
        $ref: '#/definitions/String'
        description: The list of execution outputs as defined in the Automation document.
    description: Details about a specific Automation execution.
  AutomationExecutionMetadataList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionMetadata'
  AutomationParameterValueList:
    type: array
    items:
      $ref: '#/definitions/AutomationParameterValue'
    minItems: 0
    maxItems: 10
  AutomationParameterValue:
    type: string
    minLength: 1
    maxLength: 512
  BaselineDescription:
    type: string
    minLength: 1
    maxLength: 1024
  BaselineId:
    type: string
    pattern: '^[a-zA-Z0-9_\-:/]{20,128}$'
    minLength: 20
    maxLength: 128
  BaselineName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  BatchErrorMessage:
    type: string
  CommandId:
    type: string
    minLength: 36
    maxLength: 36
  InstanceIdList:
    type: array
    items:
      $ref: '#/definitions/InstanceId'
    minItems: 0
    maxItems: 50
  ClientToken:
    type: string
    minLength: 1
    maxLength: 64
  CloudWatchLogGroupName:
    type: string
    pattern: '[\.\-_/#A-Za-z0-9]+'
    minLength: 1
    maxLength: 512
  CloudWatchOutputEnabled:
    type: boolean
  CloudWatchOutputConfig:
    type: object
    properties:
      CloudWatchLogGroupName:
        $ref: '#/definitions/CloudWatchLogGroupName'
        description: 'The name of the CloudWatch log group where you want to send command output. If you don''t specify a group name, Systems Manager automatically creates a log group for you. The log group uses the following naming format: aws/ssm/<i>SystemsManagerDocumentName</i>.'
      CloudWatchOutputEnabled:
        $ref: '#/definitions/CloudWatchOutputEnabled'
        description: Enables Systems Manager to send command output to CloudWatch Logs.
    description: Configuration options for sending command output to CloudWatch Logs.
  Comment:
    type: string
    maxLength: 100
  CommandStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - Cancelled
      - Failed
      - TimedOut
      - Cancelling
  StatusDetails:
    type: string
    minLength: 0
    maxLength: 100
  S3Region:
    type: string
    minLength: 3
    maxLength: 20
  S3BucketName:
    type: string
    minLength: 3
    maxLength: 63
  S3KeyPrefix:
    type: string
    maxLength: 500
  TargetCount:
    type: integer
  CompletedCount:
    type: integer
  ErrorCount:
    type: integer
  DeliveryTimedOutCount:
    type: integer
  ServiceRole:
    type: string
  NotificationConfig:
    type: object
    properties:
      NotificationArn:
        $ref: '#/definitions/NotificationArn'
        description: An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
      NotificationEvents:
        $ref: '#/definitions/NotificationEventList'
        description: 'The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html">Configuring Amazon SNS Notifications for Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      NotificationType:
        $ref: '#/definitions/NotificationType'
        description: 'Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. '
    description: Configurations for sending notifications.
  Command:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: A unique identifier for this command.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the document requested for execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The SSM document version.
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      ExpiresAfter:
        $ref: '#/definitions/DateTime'
        description: 'If this time is reached and the command has not already started executing, it will not run. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.'
      Parameters:
        $ref: '#/definitions/Parameters'
        description: The parameter values to be inserted in the document when executing the command.
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: The instance IDs against which this command was requested.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'An array of search criteria that targets instances using a Key,Value combination that you specify. Targets is required if you don''t provide one or more instance IDs in the call.'
      RequestedDateTime:
        $ref: '#/definitions/DateTime'
        description: The date and time the command was requested.
      Status:
        $ref: '#/definitions/CommandStatus'
        description: The status of the command.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to any instances.</p> </li> <li> <p>In Progress: The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success: The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The value of MaxErrors or more command invocations shows a status of Delivery Timed Out. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: The value of MaxErrors or more command invocations shows a status of Execution Timed Out. This is a terminal state.</p> </li> <li> <p>Failed: The value of MaxErrors or more command invocations shows a status of Failed. This is a terminal state.</p> </li> <li> <p>Incomplete: The command was attempted on all instances and one or more invocations does not have a value of Success but not enough invocations failed for the status to be Failed. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded: The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>'
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: 'The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use MaxConcurrency, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: 'The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 0. For more information about how to use MaxErrors, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html">Executing Commands Using Systems Manager Run Command</a> in the <i>AWS Systems Manager User Guide</i>.'
      TargetCount:
        $ref: '#/definitions/TargetCount'
        description: The number of targets for the command.
      CompletedCount:
        $ref: '#/definitions/CompletedCount'
        description: 'The number of targets for which the command invocation reached a terminal state. Terminal states include the following: Success, Failed, Execution Timed Out, Delivery Timed Out, Canceled, Terminated, or Undeliverable.'
      ErrorCount:
        $ref: '#/definitions/ErrorCount'
        description: The number of targets for which the status is Failed or Execution Timed Out.
      DeliveryTimedOutCount:
        $ref: '#/definitions/DeliveryTimedOutCount'
        description: The number of targets for which the status is Delivery Timed Out.
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: 'The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. '
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: 'Configurations for sending notifications about command status changes. '
      CloudWatchOutputConfig:
        $ref: '#/definitions/CloudWatchOutputConfig'
        description: CloudWatch Logs information where you want Systems Manager to send the command output.
    description: Describes a command request.
  CommandFilterKey:
    type: string
    enum:
      - InvokedAfter
      - InvokedBefore
      - Status
      - ExecutionStage
      - DocumentName
  CommandFilterValue:
    type: string
    minLength: 1
    maxLength: 128
  CommandFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/CommandFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/CommandFilterValue'
        description: '<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: A timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see results occurring July 7, 2018, and later.</p> </li> <li> <p>InvokedBefore: A timestamp to limit your results. For example, specify <code>2018-07-07T00:00:00Z</code> to see results before July 7, 2018.</p> </li> <li> <p>Status: Specify a valid command status to see a list of all command executions with that status. Status values you can specify include:</p> <ul> <li> <p>Pending</p> </li> <li> <p>InProgress</p> </li> <li> <p>Success</p> </li> <li> <p>Cancelled</p> </li> <li> <p>Failed</p> </li> <li> <p>TimedOut</p> </li> <li> <p>Cancelling </p> </li> </ul> </li> <li> <p>DocumentName: The name of the SSM document for which you want to see command results.</p> <p>For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on instances. </p> </li> <li> <p>ExecutionStage: An enum whose value can be either <code>Executing</code> or <code>Complete</code>.</p> <ul> <li> <p>Specify <code>Executing</code> to see a list of command executions that are currently still running.</p> </li> <li> <p>Specify <code>Complete</code> to see a list of command exeuctions that have already completed.</p> </li> </ul> </li> </ul>'
    description: Describes a command filter.
  CommandFilterList:
    type: array
    items:
      $ref: '#/definitions/CommandFilter'
    minItems: 1
    maxItems: 5
  InstanceTagName:
    type: string
    maxLength: 255
  CommandInvocationStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Delayed
      - Success
      - Cancelled
      - TimedOut
      - Failed
      - Cancelling
  InvocationTraceOutput:
    type: string
    maxLength: 2500
  Url:
    type: string
  CommandPluginList:
    type: array
    items:
      $ref: '#/definitions/CommandPlugin'
  CommandInvocation:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The command against which this invocation was requested.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID in which this invocation was requested.
      InstanceName:
        $ref: '#/definitions/InstanceTagName'
        description: 'The name of the invocation target. For Amazon EC2 instances this is the value for the aws:Name tag. For on-premises instances, this is the name of the instance.'
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The document name that was requested for execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The SSM document version.
      RequestedDateTime:
        $ref: '#/definitions/DateTime'
        description: The time and date the request was sent to this instance.
      Status:
        $ref: '#/definitions/CommandInvocationStatus'
        description: 'Whether or not the invocation succeeded, failed, or is pending.'
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit and don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      TraceOutput:
        $ref: '#/definitions/InvocationTraceOutput'
        description: ' Gets the trace output sent by the agent. '
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL to the plugin''s StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardOutputUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL to the plugin''s StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, StandardErrorUrl is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      CommandPlugins:
        $ref: '#/definitions/CommandPluginList'
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: Configurations for sending notifications about command status changes on a per instance basis.
      CloudWatchOutputConfig:
        $ref: '#/definitions/CloudWatchOutputConfig'
        description: CloudWatch Logs information where you want Systems Manager to send the command output.
    description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. '
  CommandInvocationList:
    type: array
    items:
      $ref: '#/definitions/CommandInvocation'
  CommandList:
    type: array
    items:
      $ref: '#/definitions/Command'
  CommandMaxResults:
    type: integer
    minimum: 1
    maximum: 50
  CommandPluginName:
    type: string
    minLength: 4
  CommandPluginStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  ResponseCode:
    type: integer
  CommandPluginOutput:
    type: string
    maxLength: 2500
  CommandPlugin:
    type: object
    properties:
      Name:
        $ref: '#/definitions/CommandPluginName'
        description: 'The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. '
      Status:
        $ref: '#/definitions/CommandPluginStatus'
        description: The status of this plugin. You can execute a document with multiple plugins.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the plugin execution. StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html">Understanding Command Statuses</a> in the <i>AWS Systems Manager User Guide</i>. StatusDetails can be one of the following values:</p> <ul> <li> <p>Pending: The command has not been sent to the instance.</p> </li> <li> <p>In Progress: The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success: The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out: The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command''s MaxErrors limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Execution Timed Out: Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed: The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the MaxErrors limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled: The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable: The command can''t be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don''t count against the parent command''s MaxErrors limit, and they don''t contribute to whether the parent command status is Success or Incomplete. This is a terminal state.</p> </li> <li> <p>Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      ResponseCode:
        $ref: '#/definitions/ResponseCode'
        description: 'A numeric response code generated after executing the plugin. '
      ResponseStartDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The time the plugin started executing. '
      ResponseFinishDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. '
      Output:
        $ref: '#/definitions/CommandPluginOutput'
        description: Output of the plugin execution.
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.'
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: '<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>'
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: '<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript </p> <p>test_folder is the name of the Amazon S3 bucket;</p> <p> ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix is the name of the S3 prefix;</p> <p>i-1234567876543 is the instance ID;</p> <p>awsrunShellScript is the name of the plugin.</p>'
    description: Describes plugin details.
  ComplianceExecutionId:
    type: string
    maxLength: 100
  ComplianceExecutionType:
    type: string
    maxLength: 50
  ComplianceExecutionSummary:
    type: object
    required:
      - ExecutionTime
    properties:
      ExecutionTime:
        $ref: '#/definitions/DateTime'
        description: 'The time the execution ran as a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
      ExecutionId:
        $ref: '#/definitions/ComplianceExecutionId'
        description: 'An ID created by the system when <code>PutComplianceItems</code> was called. For example, <code>CommandID</code> is a valid execution ID. You can use this ID in subsequent calls.'
      ExecutionType:
        $ref: '#/definitions/ComplianceExecutionType'
        description: 'The type of execution. For example, <code>Command</code> is a valid execution type.'
    description: 'A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd''T''HH:mm:ss''Z''.'
  ComplianceFilterValue:
    type: string
  ComplianceTypeName:
    type: string
    pattern: '[A-Za-z0-9_\-]\w+|Custom:[a-zA-Z0-9_\-]\w+'
    minLength: 1
    maxLength: 100
  ComplianceResourceType:
    type: string
    minLength: 1
    maxLength: 50
  ComplianceResourceId:
    type: string
    minLength: 1
    maxLength: 100
  ComplianceItemId:
    type: string
    minLength: 1
    maxLength: 100
  ComplianceItemTitle:
    type: string
    maxLength: 500
  ComplianceStatus:
    type: string
    enum:
      - COMPLIANT
      - NON_COMPLIANT
  ComplianceSeverity:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
  ComplianceItemDetails:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  ComplianceItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/ComplianceTypeName'
        description: 'The compliance type. For example, Association (for a State Manager association), Patch, or Custom:<code>string</code> are all valid compliance types.'
      ResourceType:
        $ref: '#/definitions/ComplianceResourceType'
        description: The type of resource. <code>ManagedInstance</code> is currently the only supported resource type.
      ResourceId:
        $ref: '#/definitions/ComplianceResourceId'
        description: 'An ID for the resource. For a managed instance, this is the instance ID.'
      Id:
        $ref: '#/definitions/ComplianceItemId'
        description: 'An ID for the compliance item. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article; for example: KB4010320.'
      Title:
        $ref: '#/definitions/ComplianceItemTitle'
        description: 'A title for the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services.'
      Status:
        $ref: '#/definitions/ComplianceStatus'
        description: The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.
      Severity:
        $ref: '#/definitions/ComplianceSeverity'
        description: 'The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.'
      ExecutionSummary:
        $ref: '#/definitions/ComplianceExecutionSummary'
        description: 'A summary for the compliance item. The summary includes an execution ID, the execution type (for example, command), and the execution time.'
      Details:
        $ref: '#/definitions/ComplianceItemDetails'
        description: 'A "Key": "Value" tag combination for the compliance item.'
    description: 'Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, etc.'
  ComplianceItemContentHash:
    type: string
    maxLength: 256
  ComplianceItemEntry:
    type: object
    required:
      - Severity
      - Status
    properties:
      Id:
        $ref: '#/definitions/ComplianceItemId'
        description: 'The compliance item ID. For example, if the compliance item is a Windows patch, the ID could be the number of the KB article.'
      Title:
        $ref: '#/definitions/ComplianceItemTitle'
        description: 'The title of the compliance item. For example, if the compliance item is a Windows patch, the title could be the title of the KB article for the patch; for example: Security Update for Active Directory Federation Services. '
      Severity:
        $ref: '#/definitions/ComplianceSeverity'
        description: 'The severity of the compliance status. Severity can be one of the following: Critical, High, Medium, Low, Informational, Unspecified.'
      Status:
        $ref: '#/definitions/ComplianceStatus'
        description: The status of the compliance item. An item is either COMPLIANT or NON_COMPLIANT.
      Details:
        $ref: '#/definitions/ComplianceItemDetails'
        description: 'A "Key": "Value" tag combination for the compliance item.'
    description: Information about a compliance item.
  ComplianceItemEntryList:
    type: array
    items:
      $ref: '#/definitions/ComplianceItemEntry'
    minItems: 0
    maxItems: 10000
  ComplianceItemList:
    type: array
    items:
      $ref: '#/definitions/ComplianceItem'
  ComplianceQueryOperatorType:
    type: string
    enum:
      - EQUAL
      - NOT_EQUAL
      - BEGIN_WITH
      - LESS_THAN
      - GREATER_THAN
  ComplianceResourceIdList:
    type: array
    items:
      $ref: '#/definitions/ComplianceResourceId'
    minItems: 1
  ComplianceResourceTypeList:
    type: array
    items:
      $ref: '#/definitions/ComplianceResourceType'
    minItems: 1
  ComplianceStringFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  ComplianceStringFilterValueList:
    type: array
    items:
      $ref: '#/definitions/ComplianceFilterValue'
    minItems: 1
    maxItems: 20
  ComplianceStringFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ComplianceStringFilterKey'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/ComplianceStringFilterValueList'
        description: The value for which to search.
      Type:
        $ref: '#/definitions/ComplianceQueryOperatorType'
        description: 'The type of comparison that should be performed for the value: Equal, NotEqual, BeginWith, LessThan, or GreaterThan.'
    description: One or more filters. Use a filter to return a more specific list of results.
  ComplianceStringFilterList:
    type: array
    items:
      $ref: '#/definitions/ComplianceStringFilter'
  ComplianceSummaryCount:
    type: integer
  CompliantSummary:
    type: object
    properties:
      CompliantCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources that are compliant.
      SeveritySummary:
        $ref: '#/definitions/SeveritySummary'
        description: A summary of the compliance severity by compliance type.
    description: A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.
  NonCompliantSummary:
    type: object
    properties:
      NonCompliantCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of compliance items that are not compliant.
      SeveritySummary:
        $ref: '#/definitions/SeveritySummary'
        description: A summary of the non-compliance severity by compliance type
    description: A summary of resources that are not compliant. The summary is organized according to resource type.
  ComplianceSummaryItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/ComplianceTypeName'
        description: 'The type of compliance item. For example, the compliance type can be Association, Patch, or Custom:string.'
      CompliantSummary:
        $ref: '#/definitions/CompliantSummary'
        description: A list of COMPLIANT items for the specified compliance type.
      NonCompliantSummary:
        $ref: '#/definitions/NonCompliantSummary'
        description: A list of NON_COMPLIANT items for the specified compliance type.
    description: A summary of compliance information by compliance type.
  ComplianceSummaryItemList:
    type: array
    items:
      $ref: '#/definitions/ComplianceSummaryItem'
  SeveritySummary:
    type: object
    properties:
      CriticalCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of critical. Critical severity is determined by the organization that published the compliance items.
      HighCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of high. High severity is determined by the organization that published the compliance items.
      MediumCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of medium. Medium severity is determined by the organization that published the compliance items.
      LowCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of low. Low severity is determined by the organization that published the compliance items.
      InformationalCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of informational. Informational severity is determined by the organization that published the compliance items.
      UnspecifiedCount:
        $ref: '#/definitions/ComplianceSummaryCount'
        description: The total number of resources or compliance items that have a severity level of unspecified. Unspecified severity is determined by the organization that published the compliance items.
    description: The number of managed instances found for each patch severity level defined in the request filter.
  ComputerName:
    type: string
    minLength: 1
    maxLength: 255
  ConnectionStatus:
    type: string
    enum:
      - Connected
      - NotConnected
  CreateAssociationBatchRequestEntries:
    type: array
    items:
      $ref: '#/definitions/CreateAssociationBatchRequestEntry'
    minItems: 1
  CreateAssociationBatchRequestEntry:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: 'The name of the configuration document. '
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: 'The ID of the instance. '
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'A description of the parameters for a document. '
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Targets:
        $ref: '#/definitions/Targets'
        description: The instances targeted by the request.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the results of this request.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: Specify a descriptive name for the association.
    description: Describes the association of a Systems Manager document and an instance.
  FailedCreateAssociationList:
    type: array
    items:
      $ref: '#/definitions/FailedCreateAssociation'
  DocumentContent:
    type: string
    minLength: 1
  DocumentType:
    type: string
    enum:
      - Command
      - Policy
      - Automation
      - Session
  DocumentFormat:
    type: string
    enum:
      - YAML
      - JSON
  TargetType:
    type: string
    pattern: '^\/[\w\.\-\:\/]*$'
    maxLength: 200
  DocumentDescription:
    type: object
    properties:
      Sha1:
        $ref: '#/definitions/DocumentSha1'
        description: 'The SHA1 hash of the document, which you can use for verification.'
      Hash:
        $ref: '#/definitions/DocumentHash'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      HashType:
        $ref: '#/definitions/DocumentHashType'
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Systems Manager document.
      Owner:
        $ref: '#/definitions/DocumentOwner'
        description: The AWS user account that created the document.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date when the document was created.
      Status:
        $ref: '#/definitions/DocumentStatus'
        description: The status of the Systems Manager document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Description:
        $ref: '#/definitions/DescriptionInDocument'
        description: 'A description of the document. '
      Parameters:
        $ref: '#/definitions/DocumentParameterList'
        description: A description of the parameters for a document.
      PlatformTypes:
        $ref: '#/definitions/PlatformTypeList'
        description: 'The list of OS platforms compatible with this Systems Manager document. '
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: 'The type of document. '
      SchemaVersion:
        $ref: '#/definitions/DocumentSchemaVersion'
        description: The schema version.
      LatestVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The latest version of the document.
      DefaultVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The default version.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: 'The document format, either JSON or YAML.'
      TargetType:
        $ref: '#/definitions/TargetType'
        description: 'The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
      Tags:
        $ref: '#/definitions/TagList'
        description: 'The tags, or metadata, that have been applied to the document.'
    description: 'Describes a Systems Manager document. '
  MaintenanceWindowName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  MaintenanceWindowDescription:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  MaintenanceWindowSchedule:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowDurationHours:
    type: integer
    minimum: 1
    maximum: 24
  MaintenanceWindowCutoff:
    type: integer
    minimum: 0
    maximum: 23
  MaintenanceWindowAllowUnassociatedTargets:
    type: boolean
  MaintenanceWindowId:
    type: string
    pattern: '^mw-[0-9a-f]{17}$'
    minLength: 20
    maxLength: 20
  OperatingSystem:
    type: string
    enum:
      - WINDOWS
      - AMAZON_LINUX
      - AMAZON_LINUX_2
      - UBUNTU
      - REDHAT_ENTERPRISE_LINUX
      - SUSE
      - CENTOS
  PatchFilterGroup:
    type: object
    required:
      - PatchFilters
    properties:
      PatchFilters:
        $ref: '#/definitions/PatchFilterList'
        description: The set of patch filters that make up the group.
    description: 'A set of patch filters, typically used for approval rules.'
  PatchRuleGroup:
    type: object
    required:
      - PatchRules
    properties:
      PatchRules:
        $ref: '#/definitions/PatchRuleList'
        description: The rules that make up the rule group.
    description: A set of rules defining the approval rules for a patch baseline.
  PatchIdList:
    type: array
    items:
      $ref: '#/definitions/PatchId'
    minItems: 0
    maxItems: 50
  PatchComplianceLevel:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFORMATIONAL
      - UNSPECIFIED
  PatchSourceList:
    type: array
    items:
      $ref: '#/definitions/PatchSource'
    minItems: 0
    maxItems: 20
  ResourceDataSyncName:
    type: string
    minLength: 1
    maxLength: 64
  ResourceDataSyncS3Destination:
    type: object
    required:
      - BucketName
      - SyncFormat
      - Region
    properties:
      BucketName:
        $ref: '#/definitions/ResourceDataSyncS3BucketName'
        description: The name of the Amazon S3 bucket where the aggregated data is stored.
      Prefix:
        $ref: '#/definitions/ResourceDataSyncS3Prefix'
        description: An Amazon S3 prefix for the bucket.
      SyncFormat:
        $ref: '#/definitions/ResourceDataSyncS3Format'
        description: 'A supported sync format. The following format is currently supported: JsonSerDe'
      Region:
        $ref: '#/definitions/ResourceDataSyncS3Region'
        description: The AWS Region with the Amazon S3 bucket targeted by the Resource Data Sync.
      AWSKMSKeyARN:
        $ref: '#/definitions/ResourceDataSyncAWSKMSKeyARN'
        description: The ARN of an encryption key for a destination in Amazon S3. Must belong to the same region as the destination Amazon S3 bucket.
    description: Information about the target Amazon S3 bucket for the Resource Data Sync.
  DefaultBaseline:
    type: boolean
  InventoryItemTypeName:
    type: string
    pattern: '^(AWS|Custom):.*$'
    minLength: 1
    maxLength: 100
  InventorySchemaDeleteOption:
    type: string
    enum:
      - DisableSchema
      - DeleteSchema
  DryRun:
    type: boolean
  InventoryDeletionId:
    type: string
  InventoryDeletionSummary:
    type: object
    properties:
      TotalCount:
        $ref: '#/definitions/TotalCount'
        description: The total number of items to delete. This count does not change during the delete operation.
      RemainingCount:
        $ref: '#/definitions/RemainingCount'
        description: Remaining number of items to delete.
      SummaryItems:
        $ref: '#/definitions/InventoryDeletionSummaryItems'
        description: A list of counts and versions for deleted items.
    description: Information about the delete operation.
  PSParameterName:
    type: string
    minLength: 1
    maxLength: 2048
  ParameterNameList:
    type: array
    items:
      $ref: '#/definitions/PSParameterName'
    minItems: 1
    maxItems: 10
  ManagedInstanceId:
    type: string
    pattern: '^mi-[0-9a-f]{17}$'
  PatchGroup:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  MaintenanceWindowTargetId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  DescribeActivationsFilterKeys:
    type: string
    enum:
      - ActivationIds
      - DefaultInstanceName
      - IamRole
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  DescribeActivationsFilter:
    type: object
    properties:
      FilterKey:
        $ref: '#/definitions/DescribeActivationsFilterKeys'
        description: The name of the filter.
      FilterValues:
        $ref: '#/definitions/StringList'
        description: The filter values.
    description: Filter for the DescribeActivation API.
  DescribeActivationsFilterList:
    type: array
    items:
      $ref: '#/definitions/DescribeActivationsFilter'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 50
  NextToken:
    type: string
  StepExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/StepExecutionFilter'
    minItems: 1
    maxItems: 6
  PatchOrchestratorFilterList:
    type: array
    items:
      $ref: '#/definitions/PatchOrchestratorFilter'
    minItems: 0
    maxItems: 5
  PatchBaselineMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  PatchList:
    type: array
    items:
      $ref: '#/definitions/Patch'
  DocumentPermissionType:
    type: string
    enum:
      - Share
  DocumentARN:
    type: string
    pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
  EffectiveInstanceAssociationMaxResults:
    type: integer
    minimum: 1
    maximum: 5
  InstanceAssociationList:
    type: array
    items:
      $ref: '#/definitions/InstanceAssociation'
  EffectivePatchList:
    type: array
    items:
      $ref: '#/definitions/EffectivePatch'
  InstanceAssociationStatusInfos:
    type: array
    items:
      $ref: '#/definitions/InstanceAssociationStatusInfo'
  InstanceInformationFilterList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationFilter'
    minItems: 0
  InstanceInformationStringFilterList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationStringFilter'
    minItems: 0
  MaxResultsEC2Compatible:
    type: integer
    minimum: 5
    maximum: 50
  InstanceInformationList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformation'
  InstancePatchStateFilterList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchStateFilter'
    minItems: 0
    maxItems: 4
  PatchComplianceMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  InstancePatchStatesList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchState'
    minItems: 1
    maxItems: 5
  InstancePatchStateList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchState'
  PatchComplianceDataList:
    type: array
    items:
      $ref: '#/definitions/PatchComplianceData'
  InventoryDeletionsList:
    type: array
    items:
      $ref: '#/definitions/InventoryDeletionStatusItem'
  MaintenanceWindowExecutionId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowFilterList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowFilter'
    minItems: 0
    maxItems: 5
  MaintenanceWindowMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  MaintenanceWindowExecutionTaskInvocationIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationIdentity'
  MaintenanceWindowExecutionTaskIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskIdentity'
  MaintenanceWindowExecutionList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecution'
  MaintenanceWindowTargetList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTarget'
  MaintenanceWindowTaskList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTask'
  MaintenanceWindowIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowIdentity'
  ParametersFilterList:
    type: array
    items:
      $ref: '#/definitions/ParametersFilter'
  ParameterStringFilterList:
    type: array
    items:
      $ref: '#/definitions/ParameterStringFilter'
  ParameterMetadataList:
    type: array
    items:
      $ref: '#/definitions/ParameterMetadata'
  PatchBaselineIdentityList:
    type: array
    items:
      $ref: '#/definitions/PatchBaselineIdentity'
  Integer:
    type: integer
  PatchGroupPatchBaselineMappingList:
    type: array
    items:
      $ref: '#/definitions/PatchGroupPatchBaselineMapping'
  SessionState:
    type: string
    enum:
      - Active
      - History
  SessionMaxResults:
    type: integer
    minimum: 1
    maximum: 200
  SessionFilterList:
    type: array
    items:
      $ref: '#/definitions/SessionFilter'
    minItems: 1
    maxItems: 5
  SessionList:
    type: array
    items:
      $ref: '#/definitions/Session'
  DescriptionInDocument:
    type: string
  DocumentDefaultVersionDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document.
      DefaultVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The default version of the document.
    description: A default version of a document.
  DocumentSha1:
    type: string
  DocumentHash:
    type: string
    maxLength: 256
  DocumentHashType:
    type: string
    enum:
      - Sha256
      - Sha1
  DocumentOwner:
    type: string
  DocumentStatus:
    type: string
    enum:
      - Creating
      - Active
      - Updating
      - Deleting
  DocumentParameterList:
    type: array
    items:
      $ref: '#/definitions/DocumentParameter'
  PlatformTypeList:
    type: array
    items:
      $ref: '#/definitions/PlatformType'
  DocumentSchemaVersion:
    type: string
    pattern: '([0-9]+)\.([0-9]+)'
  DocumentFilterKey:
    type: string
    enum:
      - Name
      - Owner
      - PlatformTypes
      - DocumentType
  DocumentFilterValue:
    type: string
    minLength: 1
  DocumentFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/DocumentFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/DocumentFilterValue'
        description: The value of the filter.
    description: Describes a filter.
  DocumentFilterList:
    type: array
    items:
      $ref: '#/definitions/DocumentFilter'
    minItems: 1
  DocumentIdentifier:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Systems Manager document.
      Owner:
        $ref: '#/definitions/DocumentOwner'
        description: The AWS user account that created the document.
      PlatformTypes:
        $ref: '#/definitions/PlatformTypeList'
        description: 'The operating system platform. '
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: The document type.
      SchemaVersion:
        $ref: '#/definitions/DocumentSchemaVersion'
        description: The schema version.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: 'The document format, either JSON or YAML.'
      TargetType:
        $ref: '#/definitions/TargetType'
        description: 'The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS Resource Types Reference</a> in the <i>AWS CloudFormation User Guide</i>. '
      Tags:
        $ref: '#/definitions/TagList'
        description: 'The tags, or metadata, that have been applied to the document.'
    description: Describes the name of a Systems Manager document.
  DocumentIdentifierList:
    type: array
    items:
      $ref: '#/definitions/DocumentIdentifier'
  DocumentKeyValuesFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  DocumentKeyValuesFilterValues:
    type: array
    items:
      $ref: '#/definitions/DocumentKeyValuesFilterValue'
  DocumentKeyValuesFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/DocumentKeyValuesFilterKey'
        description: The name of the filter key.
      Values:
        $ref: '#/definitions/DocumentKeyValuesFilterValues'
        description: The value for the filter key.
    description: '<p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>Other valid values include Owner, Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you can use a name prefix to return a list of documents. For example, in the AWS CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key and value pair, use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p> <p>For example, if you created a Key called region and are using the AWS CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>'
  DocumentKeyValuesFilterList:
    type: array
    items:
      $ref: '#/definitions/DocumentKeyValuesFilter'
    minItems: 0
    maxItems: 6
  DocumentKeyValuesFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  DocumentParameterName:
    type: string
  DocumentParameterType:
    type: string
    enum:
      - String
      - StringList
  DocumentParameterDescrption:
    type: string
  DocumentParameterDefaultValue:
    type: string
  DocumentParameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/DocumentParameterType'
        description: The type of parameter. The type can be either String or StringList.
      Description:
        $ref: '#/definitions/DocumentParameterDescrption'
        description: 'A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.'
      DefaultValue:
        $ref: '#/definitions/DocumentParameterDefaultValue'
        description: 'If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.'
    description: 'Parameters specified in a System Manager document that execute on the server when the command is run. '
  DocumentVersionInfo:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The document name.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the document was created.
      IsDefaultVersion:
        $ref: '#/definitions/Boolean'
        description: An identifier for the default version of the document.
      DocumentFormat:
        $ref: '#/definitions/DocumentFormat'
        description: 'The document format, either JSON or YAML.'
    description: Version information about the document.
  DocumentVersionList:
    type: array
    items:
      $ref: '#/definitions/DocumentVersionInfo'
    minItems: 1
  DocumentVersionNumber:
    type: string
    pattern: '(^[1-9][0-9]*$)'
  Patch:
    type: object
    properties:
      Id:
        $ref: '#/definitions/PatchId'
        description: The ID of the patch (this is different than the Microsoft Knowledge Base ID).
      ReleaseDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch was released.
      Title:
        $ref: '#/definitions/PatchTitle'
        description: The title of the patch.
      Description:
        $ref: '#/definitions/PatchDescription'
        description: The description of the patch.
      ContentUrl:
        $ref: '#/definitions/PatchContentUrl'
        description: The URL where more information can be obtained about the patch.
      Vendor:
        $ref: '#/definitions/PatchVendor'
        description: The name of the vendor providing the patch.
      ProductFamily:
        $ref: '#/definitions/PatchProductFamily'
        description: 'The product family the patch is applicable for (for example, Windows).'
      Product:
        $ref: '#/definitions/PatchProduct'
        description: 'The specific product the patch is applicable for (for example, WindowsServer2016).'
      Classification:
        $ref: '#/definitions/PatchClassification'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      MsrcSeverity:
        $ref: '#/definitions/PatchMsrcSeverity'
        description: 'The severity of the patch (for example Critical, Important, Moderate).'
      KbNumber:
        $ref: '#/definitions/PatchKbNumber'
        description: The Microsoft Knowledge Base ID of the patch.
      MsrcNumber:
        $ref: '#/definitions/PatchMsrcNumber'
        description: The ID of the MSRC bulletin the patch is related to.
      Language:
        $ref: '#/definitions/PatchLanguage'
        description: The language of the patch if it's language-specific.
    description: Represents metadata about a patch.
  PatchStatus:
    type: object
    properties:
      DeploymentStatus:
        $ref: '#/definitions/PatchDeploymentStatus'
        description: 'The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).'
      ComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: The compliance severity level for a patch.
      ApprovalDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).
    description: Information about the approval status of a patch.
  EffectivePatch:
    type: object
    properties:
      Patch:
        $ref: '#/definitions/Patch'
        description: 'Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.'
      PatchStatus:
        $ref: '#/definitions/PatchStatus'
        description: 'The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
    description: 'The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
  Fault:
    type: string
    enum:
      - Client
      - Server
      - Unknown
  FailedCreateAssociation:
    type: object
    properties:
      Entry:
        $ref: '#/definitions/CreateAssociationBatchRequestEntry'
        description: The association.
      Message:
        $ref: '#/definitions/BatchErrorMessage'
        description: A description of the failure.
      Fault:
        $ref: '#/definitions/Fault'
        description: The source of the failure.
    description: Describes a failed association.
  FailureDetails:
    type: object
    properties:
      FailureStage:
        $ref: '#/definitions/String'
        description: 'The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.'
      FailureType:
        $ref: '#/definitions/String'
        description: 'The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.'
      Details:
        $ref: '#/definitions/AutomationParameterMap'
        description: Detailed information about the Automation step failure.
    description: Information about an Automation failure.
  StringDateTime:
    type: string
    pattern: '^([\-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d(?!:))?)?(\17[0-5]\d([\.,]\d)?)?([zZ]|([\-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$'
  StandardOutputContent:
    type: string
    maxLength: 24000
  StandardErrorContent:
    type: string
    maxLength: 8000
  SessionTarget:
    type: string
    minLength: 1
    maxLength: 50
  SnapshotId:
    type: string
    pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  SnapshotDownloadUrl:
    type: string
  Product:
    type: string
  InventoryFilterList:
    type: array
    items:
      $ref: '#/definitions/InventoryFilter'
    minItems: 1
    maxItems: 5
  InventoryAggregatorList:
    type: array
    items:
      $ref: '#/definitions/InventoryAggregator'
    minItems: 1
    maxItems: 10
  ResultAttributeList:
    type: array
    items:
      $ref: '#/definitions/ResultAttribute'
    minItems: 1
    maxItems: 1
  InventoryResultEntityList:
    type: array
    items:
      $ref: '#/definitions/InventoryResultEntity'
  GetInventorySchemaMaxResults:
    type: integer
    minimum: 50
    maximum: 200
  InventoryItemTypeNameFilter:
    type: string
    minLength: 0
    maxLength: 100
  IsSubTypeSchema:
    type: boolean
  InventoryItemSchemaResultList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemSchema'
  MaintenanceWindowExecutionTaskIdList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
  MaintenanceWindowExecutionStatus:
    type: string
    enum:
      - PENDING
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - TIMED_OUT
      - CANCELLING
      - CANCELLED
      - SKIPPED_OVERLAPPING
  MaintenanceWindowExecutionStatusDetails:
    type: string
    minLength: 0
    maxLength: 250
  MaintenanceWindowExecutionTaskInvocationId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskExecutionId:
    type: string
  MaintenanceWindowTaskType:
    type: string
    enum:
      - RUN_COMMAND
      - AUTOMATION
      - STEP_FUNCTIONS
      - LAMBDA
  MaintenanceWindowExecutionTaskInvocationParameters:
    type: string
    format: password
  OwnerInformation:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  MaintenanceWindowTaskTargetId:
    type: string
    maxLength: 36
  MaintenanceWindowTaskArn:
    type: string
    minLength: 1
    maxLength: 1600
  MaintenanceWindowTaskParametersList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTaskParameters'
  MaintenanceWindowTaskPriority:
    type: integer
    minimum: 0
  MaintenanceWindowEnabled:
    type: boolean
  MaintenanceWindowTaskParameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/MaintenanceWindowTaskParameterName'
        value:
          $ref: '#/definitions/MaintenanceWindowTaskParameterValueExpression'
  MaintenanceWindowTaskInvocationParameters:
    type: object
    properties:
      RunCommand:
        $ref: '#/definitions/MaintenanceWindowRunCommandParameters'
        description: The parameters for a RUN_COMMAND task type.
      Automation:
        $ref: '#/definitions/MaintenanceWindowAutomationParameters'
        description: The parameters for an AUTOMATION task type.
      StepFunctions:
        $ref: '#/definitions/MaintenanceWindowStepFunctionsParameters'
        description: The parameters for a STEP_FUNCTION task type.
      Lambda:
        $ref: '#/definitions/MaintenanceWindowLambdaParameters'
        description: The parameters for a LAMBDA task type.
    description: The parameters for task execution.
  LoggingInfo:
    type: object
    required:
      - S3BucketName
      - S3Region
    properties:
      S3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of an Amazon S3 bucket where execution logs are stored .
      S3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: '(Optional) The Amazon S3 bucket subfolder. '
      S3Region:
        $ref: '#/definitions/S3Region'
        description: The region where the Amazon S3 bucket is located.
    description: '<p>Information about an Amazon S3 bucket to write instance-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
  ParameterHistoryList:
    type: array
    items:
      $ref: '#/definitions/ParameterHistory'
  Parameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/ParameterType'
        description: 'The type of parameter. Valid values include the following: String, String list, Secure string.'
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value.
      Version:
        $ref: '#/definitions/PSParameterVersion'
        description: The parameter version.
      Selector:
        $ref: '#/definitions/PSParameterSelector'
        description: '<p>Either the version number or the label used to retrieve the parameter value. Specify selectors by using one of the following formats:</p> <p>parameter_name:version</p> <p>parameter_name:label</p>'
      SourceResult:
        $ref: '#/definitions/String'
        description: Applies to parameters that reference information in other AWS services. SourceResult is the raw result or response from the source.
      LastModifiedDate:
        $ref: '#/definitions/DateTime'
        description: Date the parameter was last changed or updated and the parameter version was created.
      ARN:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the parameter.
    description: An Amazon EC2 Systems Manager parameter in Parameter Store.
  GetParametersByPathMaxResults:
    type: integer
    minimum: 1
    maximum: 10
  ParameterList:
    type: array
    items:
      $ref: '#/definitions/Parameter'
  PatchGroupList:
    type: array
    items:
      $ref: '#/definitions/PatchGroup'
  IPAddress:
    type: string
    minLength: 1
    maxLength: 46
  IdempotencyToken:
    type: string
    pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
    minLength: 36
    maxLength: 36
  InstanceAssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  InstanceAggregatedAssociationOverview:
    type: object
    properties:
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed status information about the aggregated associations.
      InstanceAssociationStatusAggregatedCount:
        $ref: '#/definitions/InstanceAssociationStatusAggregatedCount'
        description: The number of associations for the instance(s).
    description: Status information about the aggregated associations.
  InstanceAssociation:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The content of the association document for the instance(s).
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: Version information for the association on the instance.
    description: 'One or more association documents on the instance. '
  InstanceAssociationExecutionSummary:
    type: string
    minLength: 1
    maxLength: 512
  S3OutputLocation:
    type: object
    properties:
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: '(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon S3 bucket region.'
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The Amazon S3 bucket subfolder.
    description: An Amazon S3 bucket where you want to store the results of this request.
  S3OutputUrl:
    type: object
    properties:
      OutputUrl:
        $ref: '#/definitions/Url'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
    description: A URL for the Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationOutputUrl:
    type: object
    properties:
      S3OutputUrl:
        $ref: '#/definitions/S3OutputUrl'
        description: The URL of Amazon S3 bucket where you want to store the results of this request.
    description: The URL of Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationStatusInfo:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the association.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The association document verions.
      AssociationVersion:
        $ref: '#/definitions/AssociationVersion'
        description: The version of the association applied to the instance.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID where the association was created.
      ExecutionDate:
        $ref: '#/definitions/DateTime'
        description: 'The date the instance association executed. '
      Status:
        $ref: '#/definitions/StatusName'
        description: Status information about the instance association.
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed status information about the instance association.
      ExecutionSummary:
        $ref: '#/definitions/InstanceAssociationExecutionSummary'
        description: Summary information about association execution.
      ErrorCode:
        $ref: '#/definitions/AgentErrorCode'
        description: An error code returned by the request to create the association.
      OutputUrl:
        $ref: '#/definitions/InstanceAssociationOutputUrl'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
      AssociationName:
        $ref: '#/definitions/AssociationName'
        description: The name of the association applied to the instance.
    description: Status information about the instance association.
  PingStatus:
    type: string
    enum:
      - Online
      - ConnectionLost
      - Inactive
  Version:
    type: string
    pattern: '^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$'
  PlatformType:
    type: string
    enum:
      - Windows
      - Linux
  ResourceType:
    type: string
    enum:
      - ManagedInstance
      - Document
      - EC2Instance
  InstanceInformation:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: 'The instance ID. '
      PingStatus:
        $ref: '#/definitions/PingStatus'
        description: 'Connection status of SSM Agent. '
      LastPingDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The date and time when agent last pinged Systems Manager service. '
      AgentVersion:
        $ref: '#/definitions/Version'
        description: 'The version of SSM Agent running on your Linux instance. '
      IsLatestVersion:
        $ref: '#/definitions/Boolean'
        description: 'Indicates whether latest version of SSM Agent is running on your instance. Some older versions of Windows Server use the EC2Config service to process SSM requests. For this reason, this field does not indicate whether or not the latest version is installed on Windows managed instances.'
      PlatformType:
        $ref: '#/definitions/PlatformType'
        description: 'The operating system platform type. '
      PlatformName:
        $ref: '#/definitions/String'
        description: 'The name of the operating system platform running on your instance. '
      PlatformVersion:
        $ref: '#/definitions/String'
        description: 'The version of the OS platform running on your instance. '
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The activation ID created by Systems Manager when the server or VM was registered.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: 'The Amazon Identity and Access Management (IAM) role assigned to the on-premises Systems Manager managed instances. This call does not return the IAM role for Amazon EC2 instances. '
      RegistrationDate:
        $ref: '#/definitions/DateTime'
        description: The date the server or VM was registered with AWS as a managed instance.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of instance. Instances are either EC2 instances or managed instances. '
      Name:
        $ref: '#/definitions/String'
        description: The name of the managed instance.
      IPAddress:
        $ref: '#/definitions/IPAddress'
        description: The IP address of the managed instance.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The fully qualified host name of the managed instance.
      AssociationStatus:
        $ref: '#/definitions/StatusName'
        description: The status of the association.
      LastAssociationExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date the association was last executed.
      LastSuccessfulAssociationExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The last date the association was successfully run.
      AssociationOverview:
        $ref: '#/definitions/InstanceAggregatedAssociationOverview'
        description: Information about the association.
    description: 'Describes a filter for a specific list of instances. '
  InstanceInformationFilterKey:
    type: string
    enum:
      - InstanceIds
      - AgentVersion
      - PingStatus
      - PlatformTypes
      - ActivationIds
      - IamRole
      - ResourceType
      - AssociationStatus
  InstanceInformationFilterValueSet:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationFilterValue'
    minItems: 1
    maxItems: 100
  InstanceInformationFilter:
    type: object
    required:
      - key
      - valueSet
    properties:
      key:
        $ref: '#/definitions/InstanceInformationFilterKey'
        description: 'The name of the filter. '
      valueSet:
        $ref: '#/definitions/InstanceInformationFilterValueSet'
        description: The filter values.
    description: <p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this action instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and does not support tags. </p>
  InstanceInformationFilterValue:
    type: string
    minLength: 1
  InstanceInformationStringFilterKey:
    type: string
    minLength: 1
  InstanceInformationStringFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/InstanceInformationStringFilterKey'
        description: '<p>The filter key name to describe your instances. For example:</p> <p>"InstanceIds"|"AgentVersion"|"PingStatus"|"PlatformTypes"|"ActivationIds"|"IamRole"|"ResourceType"|"AssociationStatus"|"Tag Key"</p>'
      Values:
        $ref: '#/definitions/InstanceInformationFilterValueSet'
        description: The filter values.
    description: The filters to describe or get information about your managed instances.
  PatchInstalledCount:
    type: integer
  PatchInstalledOtherCount:
    type: integer
  PatchMissingCount:
    type: integer
  PatchFailedCount:
    type: integer
  PatchNotApplicableCount:
    type: integer
  PatchOperationType:
    type: string
    enum:
      - Scan
      - Install
  InstancePatchState:
    type: object
    required:
      - InstanceId
      - PatchGroup
      - BaselineId
      - OperationStartTime
      - OperationEndTime
      - Operation
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the managed instance the high-level patch compliance information was collected for.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group the managed instance belongs to.
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline used to patch the instance.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: Placeholder information. This field will always be empty in the current release of the service.
      InstalledCount:
        $ref: '#/definitions/PatchInstalledCount'
        description: The number of patches from the patch baseline that are installed on the instance.
      InstalledOtherCount:
        $ref: '#/definitions/PatchInstalledOtherCount'
        description: The number of patches not specified in the patch baseline that are installed on the instance.
      MissingCount:
        $ref: '#/definitions/PatchMissingCount'
        description: The number of patches from the patch baseline that are applicable for the instance but aren't currently installed.
      FailedCount:
        $ref: '#/definitions/PatchFailedCount'
        description: 'The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.'
      NotApplicableCount:
        $ref: '#/definitions/PatchNotApplicableCount'
        description: The number of patches from the patch baseline that aren't applicable for the instance and hence aren't installed on the instance.
      OperationStartTime:
        $ref: '#/definitions/DateTime'
        description: The time the most recent patching operation was started on the instance.
      OperationEndTime:
        $ref: '#/definitions/DateTime'
        description: The time the most recent patching operation completed on the instance.
      Operation:
        $ref: '#/definitions/PatchOperationType'
        description: 'The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).'
    description: 'Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.'
  InstancePatchStateFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InstancePatchStateFilterValues:
    type: array
    items:
      $ref: '#/definitions/InstancePatchStateFilterValue'
    minItems: 1
    maxItems: 1
  InstancePatchStateOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - LessThan
      - GreaterThan
  InstancePatchStateFilter:
    type: object
    required:
      - Key
      - Values
      - Type
    properties:
      Key:
        $ref: '#/definitions/InstancePatchStateFilterKey'
        description: 'The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.'
      Values:
        $ref: '#/definitions/InstancePatchStateFilterValues'
        description: 'The value for the filter, must be an integer greater than or equal to 0.'
      Type:
        $ref: '#/definitions/InstancePatchStateOperatorType'
        description: 'The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.'
    description: Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.
  InstancePatchStateFilterValue:
    type: string
  InventoryAggregatorExpression:
    type: string
    minLength: 1
    maxLength: 1000
  InventoryGroupList:
    type: array
    items:
      $ref: '#/definitions/InventoryGroup'
    minItems: 1
    maxItems: 10
  InventoryAggregator:
    type: object
    properties:
      Expression:
        $ref: '#/definitions/InventoryAggregatorExpression'
        description: The inventory type and attribute name for aggregation.
      Aggregators:
        $ref: '#/definitions/InventoryAggregatorList'
        description: Nested aggregators to further refine aggregation for an inventory type.
      Groups:
        $ref: '#/definitions/InventoryGroupList'
        description: A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.
    description: Specifies the inventory type and attribute for the aggregation execution.
  InventoryAttributeDataType:
    type: string
    enum:
      - string
      - number
  InventoryDeletionLastStatusMessage:
    type: string
  InventoryDeletionLastStatusUpdateTime:
    type: string
    format: date-time
  InventoryDeletionStartTime:
    type: string
    format: date-time
  InventoryDeletionStatus:
    type: string
    enum:
      - InProgress
      - Complete
  InventoryDeletionStatusItem:
    type: object
    properties:
      DeletionId:
        $ref: '#/definitions/InventoryDeletionId'
        description: The deletion ID returned by the <code>DeleteInventory</code> action.
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The name of the inventory data type.
      DeletionStartTime:
        $ref: '#/definitions/InventoryDeletionStartTime'
        description: The UTC timestamp when the delete operation started.
      LastStatus:
        $ref: '#/definitions/InventoryDeletionStatus'
        description: The status of the operation. Possible values are InProgress and Complete.
      LastStatusMessage:
        $ref: '#/definitions/InventoryDeletionLastStatusMessage'
        description: Information about the status.
      DeletionSummary:
        $ref: '#/definitions/InventoryDeletionSummary'
        description: 'Information about the delete operation. For more information about this summary, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-delete.html#sysman-inventory-delete-summary">Understanding the Delete Inventory Summary</a> in the <i>AWS Systems Manager User Guide</i>.'
      LastStatusUpdateTime:
        $ref: '#/definitions/InventoryDeletionLastStatusUpdateTime'
        description: The UTC timestamp of when the last status report.
    description: Status information returned by the <code>DeleteInventory</code> action.
  TotalCount:
    type: integer
  RemainingCount:
    type: integer
  InventoryDeletionSummaryItems:
    type: array
    items:
      $ref: '#/definitions/InventoryDeletionSummaryItem'
  InventoryItemSchemaVersion:
    type: string
    pattern: '^([0-9]{1,6})(\.[0-9]{1,6})$'
  ResourceCount:
    type: integer
  InventoryDeletionSummaryItem:
    type: object
    properties:
      Version:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The inventory type version.
      Count:
        $ref: '#/definitions/ResourceCount'
        description: A count of the number of deleted items.
      RemainingCount:
        $ref: '#/definitions/RemainingCount'
        description: The remaining number of items to delete.
    description: 'Either a count, remaining count, or a version number in a delete inventory summary.'
  InventoryFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InventoryFilterValueList:
    type: array
    items:
      $ref: '#/definitions/InventoryFilterValue'
    minItems: 1
    maxItems: 40
  InventoryQueryOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - BeginWith
      - LessThan
      - GreaterThan
      - Exists
  InventoryFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/InventoryFilterKey'
        description: The name of the filter key.
      Values:
        $ref: '#/definitions/InventoryFilterValueList'
        description: 'Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal '
      Type:
        $ref: '#/definitions/InventoryQueryOperatorType'
        description: 'The type of filter. Valid values include the following: "Equal"|"NotEqual"|"BeginWith"|"LessThan"|"GreaterThan"'
    description: One or more filters. Use a filter to return a more specific list of results.
  InventoryFilterValue:
    type: string
  InventoryGroupName:
    type: string
    minLength: 1
    maxLength: 200
  InventoryGroup:
    type: object
    required:
      - Name
      - Filters
    properties:
      Name:
        $ref: '#/definitions/InventoryGroupName'
        description: The name of the group.
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: 'Filters define the criteria for the group. The <code>matchingCount</code> field displays the number of resources that match the criteria. The <code>notMatchingCount</code> field displays the number of resources that don''t match the criteria. '
    description: A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.
  InventoryItemCaptureTime:
    type: string
    pattern: '^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$'
  InventoryItemContentHash:
    type: string
    maxLength: 256
  InventoryItemEntryList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemEntry'
    minItems: 0
    maxItems: 10000
  InventoryItemContentContext:
    type: array
    minItems: 0
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  InventoryItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - CaptureTime
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.'
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory item.
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time the inventory information was collected.
      ContentHash:
        $ref: '#/definitions/InventoryItemContentHash'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/InventoryItemEntryList'
        description: The inventory data of the inventory type.
      Context:
        $ref: '#/definitions/InventoryItemContentContext'
        description: 'A map of associated properties for a specified inventory type. For example, with this attribute, you can specify the <code>ExecutionId</code>, <code>ExecutionType</code>, <code>ComplianceType</code> properties of the <code>AWS:ComplianceItem</code> type.'
    description: Information collected from managed instances based on your inventory policy document
  InventoryItemAttributeName:
    type: string
  InventoryItemAttribute:
    type: object
    required:
      - Name
      - DataType
    properties:
      Name:
        $ref: '#/definitions/InventoryItemAttributeName'
        description: Name of the inventory item attribute.
      DataType:
        $ref: '#/definitions/InventoryAttributeDataType'
        description: 'The data type of the inventory item attribute. '
    description: Attributes are the entries within the inventory item content. It contains name and value.
  InventoryItemAttributeList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemAttribute'
    minItems: 1
    maxItems: 50
  InventoryItemEntry:
    type: array
    minItems: 0
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  InventoryItemList:
    type: array
    items:
      $ref: '#/definitions/InventoryItem'
    minItems: 1
    maxItems: 30
  InventoryTypeDisplayName:
    type: string
  InventoryItemSchema:
    type: object
    required:
      - TypeName
      - Attributes
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'The name of the inventory type. Default inventory item type names start with AWS. Custom inventory type names will start with Custom. Default inventory item types include the following: AWS:AWSComponent, AWS:Application, AWS:InstanceInformation, AWS:Network, and AWS:WindowsUpdate.'
      Version:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory item.
      Attributes:
        $ref: '#/definitions/InventoryItemAttributeList'
        description: The schema attributes for inventory. This contains data type and attribute name.
      DisplayName:
        $ref: '#/definitions/InventoryTypeDisplayName'
        description: The alias name of the inventory type. The alias name is used for display purposes.
    description: The inventory item schema definition. Users can use this to compose inventory query filters.
  InventoryResultEntityId:
    type: string
  InventoryResultItemMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/InventoryResultItemKey'
        value:
          $ref: '#/definitions/InventoryResultItem'
  InventoryResultEntity:
    type: object
    properties:
      Id:
        $ref: '#/definitions/InventoryResultEntityId'
        description: 'ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. '
      Data:
        $ref: '#/definitions/InventoryResultItemMap'
        description: The data section in the inventory result entity JSON.
    description: Inventory query results.
  InventoryResultItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - Content
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The name of the inventory result item type.
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory result item/
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time inventory item data was captured.
      ContentHash:
        $ref: '#/definitions/InventoryItemContentHash'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The PutInventory API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/InventoryItemEntryList'
        description: 'Contains all the inventory data of the item type. Results include attribute names and values. '
    description: The inventory result item.
  InventoryResultItemKey:
    type: string
  TagKey:
    type: string
    pattern: '^\(\?!^\(\?i\)aws:\)\(\?=^[\p\{L\}\p\{Z\}\p\{N\}_.:/=\+\-@]*$\).*$'
    minLength: 1
    maxLength: 128
  KeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  PSParameterVersion:
    type: integer
  ParameterLabelList:
    type: array
    items:
      $ref: '#/definitions/ParameterLabel'
    minItems: 1
    maxItems: 10
  LastResourceDataSyncMessage:
    type: string
  LastResourceDataSyncStatus:
    type: string
    enum:
      - Successful
      - Failed
      - InProgress
  LastResourceDataSyncTime:
    type: string
    format: date-time
  LastSuccessfulResourceDataSyncTime:
    type: string
    format: date-time
  ResourceComplianceSummaryItemList:
    type: array
    items:
      $ref: '#/definitions/ResourceComplianceSummaryItem'
  ResourceDataSyncItemList:
    type: array
    items:
      $ref: '#/definitions/ResourceDataSyncItem'
  Long:
    type: integer
  MaintenanceWindowAutomationParameters:
    type: object
    properties:
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of an Automation document to use during task execution.
      Parameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: '<p>The parameters for the AUTOMATION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For AUTOMATION task types, Systems Manager ignores any values specified for these parameters.</p> </note>'
    description: The parameters for an AUTOMATION task type.
  MaintenanceWindowExecution:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window.
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished.
    description: 'Describes the information about an execution of a Maintenance Window. '
  MaintenanceWindowExecutionTaskIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the status of the task execution. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution finished.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The ARN of the executed task.
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of executed task.
    description: Information about a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowExecutionTaskInvocationIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window execution.
      InvocationId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationId'
        description: The ID of the task invocation.
      ExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskExecutionId'
        description: 'The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.'
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The task type.
      Parameters:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationParameters'
        description: The parameters that were provided for the invocation when it was executed.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task invocation.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: 'The details explaining the status of the task invocation. Only available for certain Status values. '
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the invocation started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the invocation finished.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTaskTargetId'
        description: The ID of the target definition in this Maintenance Window the invocation was performed for.
    description: Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  MaintenanceWindowFilterValues:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowFilterValue'
  MaintenanceWindowFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/MaintenanceWindowFilterKey'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/MaintenanceWindowFilterValues'
        description: The filter values.
    description: Filter used in the request.
  MaintenanceWindowFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowIdentity:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: A description of the Maintenance Window.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
    description: Information about the Maintenance Window.
  MaintenanceWindowLambdaClientContext:
    type: string
    minLength: 1
    maxLength: 8000
  MaintenanceWindowLambdaQualifier:
    type: string
    minLength: 1
    maxLength: 128
  MaintenanceWindowLambdaPayload:
    type: string
    maxLength: 4096
    format: password
  MaintenanceWindowLambdaParameters:
    type: object
    properties:
      ClientContext:
        $ref: '#/definitions/MaintenanceWindowLambdaClientContext'
        description: Pass client-specific information to the Lambda function that you are invoking. You can then process the client information in your Lambda function as you choose through the context variable.
      Qualifier:
        $ref: '#/definitions/MaintenanceWindowLambdaQualifier'
        description: '(Optional) Specify a Lambda function version or alias name. If you specify a function version, the action uses the qualified function ARN to invoke a specific Lambda function. If you specify an alias name, the action uses the alias ARN to invoke the Lambda function version to which the alias points.'
      Payload:
        $ref: '#/definitions/MaintenanceWindowLambdaPayload'
        description: JSON to provide to your Lambda function as input.
    description: '<p>The parameters for a LAMBDA task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>'
  MaintenanceWindowResourceType:
    type: string
    enum:
      - INSTANCE
  TimeoutSeconds:
    type: integer
    minimum: 30
    maximum: 2592000
  MaintenanceWindowRunCommandParameters:
    type: object
    properties:
      Comment:
        $ref: '#/definitions/Comment'
        description: Information about the command(s) to execute.
      DocumentHash:
        $ref: '#/definitions/DocumentHash'
        description: The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
      DocumentHashType:
        $ref: '#/definitions/DocumentHashType'
        description: SHA-256 or SHA-1. SHA-1 hashes have been deprecated.
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: Configurations for sending notifications about command status changes on a per-instance basis.
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The Amazon S3 bucket subfolder.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: The parameters for the RUN_COMMAND task execution.
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The IAM service role to assume during task execution.
      TimeoutSeconds:
        $ref: '#/definitions/TimeoutSeconds'
        description: 'If this time is reached and the command has not already started executing, it doesn not execute.'
    description: '<p>The parameters for a RUN_COMMAND task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Run Command tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>'
  MaintenanceWindowStepFunctionsInput:
    type: string
    maxLength: 4096
    format: password
  MaintenanceWindowStepFunctionsName:
    type: string
    minLength: 1
    maxLength: 80
  MaintenanceWindowStepFunctionsParameters:
    type: object
    properties:
      Input:
        $ref: '#/definitions/MaintenanceWindowStepFunctionsInput'
        description: The inputs for the STEP_FUNCTION task.
      Name:
        $ref: '#/definitions/MaintenanceWindowStepFunctionsName'
        description: The name of the STEP_FUNCTION task.
    description: '<p>The parameters for a STEP_FUNCTION task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>'
  MaintenanceWindowTarget:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID where the target is registered.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target.
      ResourceType:
        $ref: '#/definitions/MaintenanceWindowResourceType'
        description: The type of target.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The target name.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: A description of the target.
    description: The target registered with the Maintenance Window.
  MaintenanceWindowTask:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID where the task is registered.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The task ID.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: 'The resource that the task uses during execution. For RUN_COMMAND and AUTOMATION task types, <code>TaskArn</code> is the Systems Manager document name or ARN. For LAMBDA tasks, it''s the function name or ARN. For STEP_FUNCTION tasks, it''s the state machine ARN.'
      Type:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: 'The type of task. The type can be one of the following: RUN_COMMAND, AUTOMATION, LAMBDA, or STEP_FUNCTION.'
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: '<p>The parameters that should be passed to the task when it is executed.</p> <note> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The priority of the task in the Maintenance Window. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.'
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: '<p>Information about an Amazon S3 bucket to write task-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported Maintenance Window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>'
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The role that should be assumed when executing the task
      MaxConcurrency:
        $ref: '#/definitions/MaxConcurrency'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/MaxErrors'
        description: The maximum number of errors allowed before this task stops being scheduled.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The task name.
      Description:
        $ref: '#/definitions/MaintenanceWindowDescription'
        description: A description of the task.
    description: Information about a task defined for a Maintenance Window.
  MaintenanceWindowTaskParameterName:
    type: string
    minLength: 1
    maxLength: 255
  MaintenanceWindowTaskParameterValue:
    type: string
    minLength: 1
    maxLength: 255
    format: password
  MaintenanceWindowTaskParameterValueList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTaskParameterValue'
  MaintenanceWindowTaskParameterValueExpression:
    type: object
    properties:
      Values:
        $ref: '#/definitions/MaintenanceWindowTaskParameterValueList'
        description: 'This field contains an array of 0 or more strings, each 1 to 255 characters in length.'
    description: Defines the values for a task parameter.
  NormalStringMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  NotificationArn:
    type: string
  NotificationEventList:
    type: array
    items:
      $ref: '#/definitions/NotificationEvent'
  NotificationType:
    type: string
    enum:
      - Command
      - Invocation
  NotificationEvent:
    type: string
    enum:
      - All
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  OutputSourceId:
    type: string
    minLength: 36
    maxLength: 36
  OutputSourceType:
    type: string
  PSParameterSelector:
    type: string
    minLength: 0
    maxLength: 128
  PSParameterValue:
    type: string
    minLength: 1
    maxLength: 4096
  ParameterType:
    type: string
    enum:
      - String
      - StringList
      - SecureString
  ParameterDescription:
    type: string
    minLength: 0
    maxLength: 1024
  ParameterKeyId:
    type: string
    pattern: '^([a-zA-Z0-9:/_-]+)$'
    minLength: 1
    maxLength: 256
  ParameterHistory:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/ParameterType'
        description: The type of parameter used.
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/DateTime'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: Information about the parameter.
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value.
      AllowedPattern:
        $ref: '#/definitions/AllowedPattern'
        description: <p>Parameter names can include the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>
      Version:
        $ref: '#/definitions/PSParameterVersion'
        description: The parameter version.
      Labels:
        $ref: '#/definitions/ParameterLabelList'
        description: Labels assigned to the parameter version.
    description: Information about parameter usage.
  ParameterLabel:
    type: string
    minLength: 1
    maxLength: 100
  ParameterMetadata:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The parameter name.
      Type:
        $ref: '#/definitions/ParameterType'
        description: 'The type of parameter. Valid parameter types include the following: String, String list, Secure string.'
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/DateTime'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: Description of the parameter actions.
      AllowedPattern:
        $ref: '#/definitions/AllowedPattern'
        description: <p>A parameter name can include only the following letters and symbols.</p> <p>a-zA-Z0-9_.-</p>
      Version:
        $ref: '#/definitions/PSParameterVersion'
        description: The parameter version.
    description: Metada includes information like the ARN of the last user and the date/time the parameter was last used.
  ParameterName:
    type: string
  ParameterStringFilterKey:
    type: string
    pattern: 'tag:.+|Name|Type|KeyId|Path|Label'
    minLength: 1
    maxLength: 132
  ParameterStringQueryOption:
    type: string
    minLength: 1
    maxLength: 10
  ParameterStringFilterValueList:
    type: array
    items:
      $ref: '#/definitions/ParameterStringFilterValue'
    minItems: 1
    maxItems: 50
  ParameterStringFilter:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/ParameterStringFilterKey'
        description: The name of the filter.
      Option:
        $ref: '#/definitions/ParameterStringQueryOption'
        description: 'Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.'
      Values:
        $ref: '#/definitions/ParameterStringFilterValueList'
        description: The value you want to search for.
    description: <p>One or more filters. Use a filter to return a more specific list of results.</p> <note> <p>The <code>Name</code> field can't be used with the <a>GetParametersByPath</a> API action.</p> </note>
  ParameterStringFilterValue:
    type: string
    minLength: 1
    maxLength: 1024
  ParameterValue:
    type: string
  ParameterValueList:
    type: array
    items:
      $ref: '#/definitions/ParameterValue'
  ParametersFilterKey:
    type: string
    enum:
      - Name
      - Type
      - KeyId
  ParametersFilterValueList:
    type: array
    items:
      $ref: '#/definitions/ParametersFilterValue'
    minItems: 1
    maxItems: 50
  ParametersFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/ParametersFilterKey'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/ParametersFilterValueList'
        description: The filter values.
    description: 'This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.'
  ParametersFilterValue:
    type: string
    minLength: 1
    maxLength: 1024
  PatchId:
    type: string
    minLength: 1
    maxLength: 100
  PatchTitle:
    type: string
  PatchDescription:
    type: string
  PatchContentUrl:
    type: string
  PatchVendor:
    type: string
  PatchProductFamily:
    type: string
  PatchProduct:
    type: string
  PatchClassification:
    type: string
  PatchMsrcSeverity:
    type: string
  PatchKbNumber:
    type: string
  PatchMsrcNumber:
    type: string
  PatchLanguage:
    type: string
  PatchBaselineIdentity:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline.
      BaselineName:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: 'Defines the operating system the patch baseline applies to. The Default value is WINDOWS. '
      BaselineDescription:
        $ref: '#/definitions/BaselineDescription'
        description: The description of the patch baseline.
      DefaultBaseline:
        $ref: '#/definitions/DefaultBaseline'
        description: 'Whether this is the default baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.'
    description: Defines the basic information about a patch baseline.
  PatchSeverity:
    type: string
  PatchComplianceDataState:
    type: string
    enum:
      - INSTALLED
      - INSTALLED_OTHER
      - MISSING
      - NOT_APPLICABLE
      - FAILED
  PatchComplianceData:
    type: object
    required:
      - Title
      - KBId
      - Classification
      - Severity
      - State
      - InstalledTime
    properties:
      Title:
        $ref: '#/definitions/PatchTitle'
        description: The title of the patch.
      KBId:
        $ref: '#/definitions/PatchKbNumber'
        description: The operating system-specific ID of the patch.
      Classification:
        $ref: '#/definitions/PatchClassification'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      Severity:
        $ref: '#/definitions/PatchSeverity'
        description: 'The severity of the patch (for example, Critical, Important, Moderate).'
      State:
        $ref: '#/definitions/PatchComplianceDataState'
        description: 'The state of the patch on the instance (INSTALLED, INSTALLED_OTHER, MISSING, NOT_APPLICABLE or FAILED).'
      InstalledTime:
        $ref: '#/definitions/DateTime'
        description: The date/time the patch was installed on the instance. Note that not all operating systems provide this level of information.
    description: Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.
  PatchDeploymentStatus:
    type: string
    enum:
      - APPROVED
      - PENDING_APPROVAL
      - EXPLICIT_APPROVED
      - EXPLICIT_REJECTED
  PatchFilterKey:
    type: string
    enum:
      - PRODUCT
      - CLASSIFICATION
      - MSRC_SEVERITY
      - PATCH_ID
      - SECTION
      - PRIORITY
      - SEVERITY
  PatchFilterValueList:
    type: array
    items:
      $ref: '#/definitions/PatchFilterValue'
    minItems: 1
    maxItems: 20
  PatchFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/PatchFilterKey'
        description: <p>The key for the filter.</p> <p>See <a>PatchFilter</a> for lists of valid keys for each operating system type.</p>
      Values:
        $ref: '#/definitions/PatchFilterValueList'
        description: <p>The value for the filter key.</p> <p>See <a>PatchFilter</a> for lists of valid values for each key based on operating system type.</p>
    description: '<p>Defines a patch filter.</p> <p>A patch filter consists of key/value pairs, but not all keys are valid for all operating system types. For example, the key <code>PRODUCT</code> is valid for all supported operating system types. The key <code>MSRC_SEVERITY</code>, however, is valid only for Windows operating systems, and the key <code>SECTION</code> is valid only for Ubuntu operating systems.</p> <p>Refer to the following sections for information about which keys may be used with each major operating system, and which values are valid for each key.</p> <p> <b>Windows Operating Systems</b> </p> <p>The supported keys for Windows operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Windows7</code> </p> </li> <li> <p> <code>Windows8</code> </p> </li> <li> <p> <code>Windows8.1</code> </p> </li> <li> <p> <code>Windows8Embedded</code> </p> </li> <li> <p> <code>Windows10</code> </p> </li> <li> <p> <code>Windows10LTSB</code> </p> </li> <li> <p> <code>WindowsServer2008</code> </p> </li> <li> <p> <code>WindowsServer2008R2</code> </p> </li> <li> <p> <code>WindowsServer2012</code> </p> </li> <li> <p> <code>WindowsServer2012R2</code> </p> </li> <li> <p> <code>WindowsServer2016</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CriticalUpdates</code> </p> </li> <li> <p> <code>DefinitionUpdates</code> </p> </li> <li> <p> <code>Drivers</code> </p> </li> <li> <p> <code>FeaturePacks</code> </p> </li> <li> <p> <code>SecurityUpdates</code> </p> </li> <li> <p> <code>ServicePacks</code> </p> </li> <li> <p> <code>Tools</code> </p> </li> <li> <p> <code>UpdateRollups</code> </p> </li> <li> <p> <code>Updates</code> </p> </li> <li> <p> <code>Upgrades</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>MSRC_SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> <li> <p> <code>Unspecified</code> </p> </li> </ul> <p> <b>Ubuntu Operating Systems</b> </p> <p>The supported keys for Ubuntu operating systems are <code>PRODUCT</code>, <code>PRIORITY</code>, and <code>SECTION</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Ubuntu14.04</code> </p> </li> <li> <p> <code>Ubuntu16.04</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>PRIORITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Required</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Standard</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Extra</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SECTION</code> </p> <p>Only the length of the key value is validated. Minimum length is 1. Maximum length is 64.</p> <p> <b>Amazon Linux Operating Systems</b> </p> <p>The supported keys for Amazon Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2012.03</code> </p> </li> <li> <p> <code>AmazonLinux2012.09</code> </p> </li> <li> <p> <code>AmazonLinux2013.03</code> </p> </li> <li> <p> <code>AmazonLinux2013.09</code> </p> </li> <li> <p> <code>AmazonLinux2014.03</code> </p> </li> <li> <p> <code>AmazonLinux2014.09</code> </p> </li> <li> <p> <code>AmazonLinux2015.03</code> </p> </li> <li> <p> <code>AmazonLinux2015.09</code> </p> </li> <li> <p> <code>AmazonLinux2016.03</code> </p> </li> <li> <p> <code>AmazonLinux2016.09</code> </p> </li> <li> <p> <code>AmazonLinux2017.03</code> </p> </li> <li> <p> <code>AmazonLinux2017.09</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>Amazon Linux 2 Operating Systems</b> </p> <p>The supported keys for Amazon Linux 2 operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>AmazonLinux2</code> </p> </li> <li> <p> <code>AmazonLinux2.0</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>RedHat Enterprise Linux (RHEL) Operating Systems</b> </p> <p>The supported keys for RedHat Enterprise Linux operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>RedhatEnterpriseLinux6.5</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.6</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.7</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.8</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux6.9</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.0</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.1</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.2</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.3</code> </p> </li> <li> <p> <code>RedhatEnterpriseLinux7.4</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>SUSE Linux Enterprise Server (SLES) Operating Systems</b> </p> <p>The supported keys for SLES operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Suse12.0</code> </p> </li> <li> <p> <code>Suse12.1</code> </p> </li> <li> <p> <code>Suse12.2</code> </p> </li> <li> <p> <code>Suse12.3</code> </p> </li> <li> <p> <code>Suse12.4</code> </p> </li> <li> <p> <code>Suse12.5</code> </p> </li> <li> <p> <code>Suse12.6</code> </p> </li> <li> <p> <code>Suse12.7</code> </p> </li> <li> <p> <code>Suse12.8</code> </p> </li> <li> <p> <code>Suse12.9</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Optional</code> </p> </li> <li> <p> <code>Feature</code> </p> </li> <li> <p> <code>Document</code> </p> </li> <li> <p> <code>Yast</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Moderate</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul> <p> <b>CentOS Operating Systems</b> </p> <p>The supported keys for CentOS operating systems are <code>PRODUCT</code>, <code>CLASSIFICATION</code>, and <code>SEVERITY</code>. See the following lists for valid values for each of these keys.</p> <p> <i>Supported key:</i> <code>PRODUCT</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>CentOS6.5</code> </p> </li> <li> <p> <code>CentOS6.6</code> </p> </li> <li> <p> <code>CentOS6.7</code> </p> </li> <li> <p> <code>CentOS6.8</code> </p> </li> <li> <p> <code>CentOS6.9</code> </p> </li> <li> <p> <code>CentOS7.0</code> </p> </li> <li> <p> <code>CentOS7.1</code> </p> </li> <li> <p> <code>CentOS7.2</code> </p> </li> <li> <p> <code>CentOS7.3</code> </p> </li> <li> <p> <code>CentOS7.4</code> </p> </li> <li> <p> <code>*</code> </p> <p> <i>Use a wildcard character (*) to target all supported operating system versions.</i> </p> </li> </ul> <p> <i>Supported key:</i> <code>CLASSIFICATION</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Security</code> </p> </li> <li> <p> <code>Bugfix</code> </p> </li> <li> <p> <code>Enhancement</code> </p> </li> <li> <p> <code>Recommended</code> </p> </li> <li> <p> <code>Newpackage</code> </p> </li> </ul> <p> <i>Supported key:</i> <code>SEVERITY</code> </p> <p> <i>Supported values:</i> </p> <ul> <li> <p> <code>Critical</code> </p> </li> <li> <p> <code>Important</code> </p> </li> <li> <p> <code>Medium</code> </p> </li> <li> <p> <code>Low</code> </p> </li> </ul>'
  PatchFilterList:
    type: array
    items:
      $ref: '#/definitions/PatchFilter'
    minItems: 0
    maxItems: 4
  PatchFilterValue:
    type: string
    minLength: 1
    maxLength: 64
  PatchGroupPatchBaselineMapping:
    type: object
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group registered with the patch baseline.
      BaselineIdentity:
        $ref: '#/definitions/PatchBaselineIdentity'
        description: The patch baseline the patch group is registered with.
    description: The mapping between a patch group and the patch baseline the patch group is registered with.
  PatchOrchestratorFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  PatchOrchestratorFilterValues:
    type: array
    items:
      $ref: '#/definitions/PatchOrchestratorFilterValue'
  PatchOrchestratorFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/PatchOrchestratorFilterKey'
        description: The key for the filter.
      Values:
        $ref: '#/definitions/PatchOrchestratorFilterValues'
        description: The value for the filter.
    description: Defines a filter used in Patch Manager APIs.
  PatchOrchestratorFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  PatchRule:
    type: object
    required:
      - PatchFilterGroup
      - ApproveAfterDays
    properties:
      PatchFilterGroup:
        $ref: '#/definitions/PatchFilterGroup'
        description: The patch filter group that defines the criteria for the rule.
      ComplianceLevel:
        $ref: '#/definitions/PatchComplianceLevel'
        description: 'A compliance severity level for all approved patches in a patch baseline. Valid compliance severity levels include the following: Unspecified, Critical, High, Medium, Low, and Informational.'
      ApproveAfterDays:
        $ref: '#/definitions/ApproveAfterDays'
        description: 'The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline. For example, a value of <code>7</code> means that patches are approved seven days after they are released. '
      EnableNonSecurity:
        $ref: '#/definitions/Boolean'
        description: 'For instances identified by the approval rule filters, enables a patch baseline to apply non-security updates available in the specified repository. The default value is ''false''. Applies to Linux instances only.'
    description: Defines an approval rule for a patch baseline.
  PatchRuleList:
    type: array
    items:
      $ref: '#/definitions/PatchRule'
    minItems: 0
    maxItems: 10
  PatchSourceName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,50}$'
  PatchSourceProductList:
    type: array
    items:
      $ref: '#/definitions/PatchSourceProduct'
    minItems: 1
    maxItems: 20
  PatchSourceConfiguration:
    type: string
    minLength: 1
    maxLength: 512
    format: password
  PatchSource:
    type: object
    required:
      - Name
      - Products
      - Configuration
    properties:
      Name:
        $ref: '#/definitions/PatchSourceName'
        description: The name specified to identify the patch source.
      Products:
        $ref: '#/definitions/PatchSourceProductList'
        description: 'The specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see <a>PatchFilter</a>.'
      Configuration:
        $ref: '#/definitions/PatchSourceConfiguration'
        description: '<p>The value of the yum repo configuration. For example:</p> <p> <code>cachedir=/var/cache/yum/$basesearch</code> </p> <p> <code>$releasever</code> </p> <p> <code>keepcache=0</code> </p> <p> <code>debuglevel=2</code> </p>'
    description: 'Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.'
  PatchSourceProduct:
    type: string
    minLength: 1
    maxLength: 128
  PutInventoryMessage:
    type: string
  TargetParameterList:
    type: array
    items:
      $ref: '#/definitions/ParameterValue'
  ResourceComplianceSummaryItem:
    type: object
    properties:
      ComplianceType:
        $ref: '#/definitions/ComplianceTypeName'
        description: The compliance type.
      ResourceType:
        $ref: '#/definitions/ComplianceResourceType'
        description: The resource type.
      ResourceId:
        $ref: '#/definitions/ComplianceResourceId'
        description: The resource ID.
      Status:
        $ref: '#/definitions/ComplianceStatus'
        description: The compliance status for the resource.
      OverallSeverity:
        $ref: '#/definitions/ComplianceSeverity'
        description: The highest severity item found for the resource. The resource is compliant for this item.
      ExecutionSummary:
        $ref: '#/definitions/ComplianceExecutionSummary'
        description: Information about the execution.
      CompliantSummary:
        $ref: '#/definitions/CompliantSummary'
        description: A list of items that are compliant for the resource.
      NonCompliantSummary:
        $ref: '#/definitions/NonCompliantSummary'
        description: A list of items that aren't compliant for the resource.
    description: 'Compliance summary information for a specific resource. '
  ResourceDataSyncAWSKMSKeyARN:
    type: string
    pattern: 'arn:.*'
    minLength: 1
    maxLength: 512
  ResourceDataSyncCreatedTime:
    type: string
    format: date-time
  ResourceDataSyncItem:
    type: object
    properties:
      SyncName:
        $ref: '#/definitions/ResourceDataSyncName'
        description: The name of the Resource Data Sync.
      S3Destination:
        $ref: '#/definitions/ResourceDataSyncS3Destination'
        description: Configuration information for the target Amazon S3 bucket.
      LastSyncTime:
        $ref: '#/definitions/LastResourceDataSyncTime'
        description: The last time the configuration attempted to sync (UTC).
      LastSuccessfulSyncTime:
        $ref: '#/definitions/LastSuccessfulResourceDataSyncTime'
        description: The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).
      LastStatus:
        $ref: '#/definitions/LastResourceDataSyncStatus'
        description: The status reported by the last sync.
      SyncCreatedTime:
        $ref: '#/definitions/ResourceDataSyncCreatedTime'
        description: The date and time the configuration was created (UTC).
      LastSyncStatusMessage:
        $ref: '#/definitions/LastResourceDataSyncMessage'
        description: The status message details reported by the last sync.
    description: 'Information about a Resource Data Sync configuration, including its current status and last successful sync.'
  ResourceDataSyncS3BucketName:
    type: string
    minLength: 1
    maxLength: 2048
  ResourceDataSyncS3Prefix:
    type: string
    minLength: 1
    maxLength: 256
  ResourceDataSyncS3Format:
    type: string
    enum:
      - JsonSerDe
  ResourceDataSyncS3Region:
    type: string
    minLength: 1
    maxLength: 64
  ResultAttribute:
    type: object
    required:
      - TypeName
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'Name of the inventory item type. Valid value: AWS:InstanceInformation. Default Value: AWS:InstanceInformation.'
    description: The inventory item result attribute.
  SessionId:
    type: string
    minLength: 1
    maxLength: 96
  TokenValue:
    type: string
    minLength: 0
    maxLength: 300
  StreamUrl:
    type: string
  SignalType:
    type: string
    enum:
      - Approve
      - Reject
      - StartStep
      - StopStep
      - Resume
  SessionStatus:
    type: string
    enum:
      - Connected
      - Connecting
      - Disconnected
      - Terminated
      - Terminating
      - Failed
  SessionOwner:
    type: string
    minLength: 1
    maxLength: 256
  SessionDetails:
    type: string
    minLength: 1
    maxLength: 1024
  SessionManagerOutputUrl:
    type: object
    properties:
      S3OutputUrl:
        $ref: '#/definitions/SessionManagerS3OutputUrl'
        description: Reserved for future use.
      CloudWatchOutputUrl:
        $ref: '#/definitions/SessionManagerCloudWatchOutputUrl'
        description: Reserved for future use.
    description: Reserved for future use.
  Session:
    type: object
    properties:
      SessionId:
        $ref: '#/definitions/SessionId'
        description: The ID of the session.
      Target:
        $ref: '#/definitions/SessionTarget'
        description: The instance that the Session Manager session connected to.
      Status:
        $ref: '#/definitions/SessionStatus'
        description: 'The status of the session. For example, "Connected" or "Terminated".'
      StartDate:
        $ref: '#/definitions/DateTime'
        description: 'The date and time, in ISO-8601 Extended format, when the session began.'
      EndDate:
        $ref: '#/definitions/DateTime'
        description: 'The date and time, in ISO-8601 Extended format, when the session was terminated.'
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: 'The name of the Session Manager SSM document used to define the parameters and plugin settings for the session. For example, <code>SSM-SessionManagerRunShell</code>.'
      Owner:
        $ref: '#/definitions/SessionOwner'
        description: The ID of the AWS user account that started the session.
      Details:
        $ref: '#/definitions/SessionDetails'
        description: Reserved for future use.
      OutputUrl:
        $ref: '#/definitions/SessionManagerOutputUrl'
        description: Reserved for future use.
    description: Information about a Session Manager connection to an instance.
  SessionFilterKey:
    type: string
    enum:
      - InvokedAfter
      - InvokedBefore
      - Target
      - Owner
      - Status
  SessionFilterValue:
    type: string
    minLength: 1
    maxLength: 200
  SessionFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/SessionFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/SessionFilterValue'
        description: '<p>The filter value. Valid values for each filter key are as follows:</p> <ul> <li> <p>InvokedAfter: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started August 29, 2018, and later.</p> </li> <li> <p>InvokedBefore: Specify a timestamp to limit your results. For example, specify 2018-08-29T00:00:00Z to see sessions that started before August 29, 2018.</p> </li> <li> <p>Target: Specify an instance to which session connections have been made.</p> </li> <li> <p>Owner: Specify an AWS user account to see a list of sessions started by that user.</p> </li> <li> <p>Status: Specify a valid session status to see a list of all sessions with that status. Status values you can specify include:</p> <ul> <li> <p>Connected</p> </li> <li> <p>Connecting</p> </li> <li> <p>Disconnected</p> </li> <li> <p>Terminated</p> </li> <li> <p>Terminating</p> </li> <li> <p>Failed</p> </li> </ul> </li> </ul>'
    description: Describes a filter for Session Manager information.
  SessionManagerCloudWatchOutputUrl:
    type: string
    minLength: 1
    maxLength: 2083
  SessionManagerS3OutputUrl:
    type: string
    minLength: 1
    maxLength: 2083
  SessionManagerParameterName:
    type: string
    minLength: 1
    maxLength: 255
  SessionManagerParameterValue:
    type: string
    minLength: 1
    maxLength: 65535
  SessionManagerParameterValueList:
    type: array
    items:
      $ref: '#/definitions/SessionManagerParameterValue'
  SessionManagerParameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/SessionManagerParameterName'
        value:
          $ref: '#/definitions/SessionManagerParameterValueList'
  ValidNextStepList:
    type: array
    items:
      $ref: '#/definitions/ValidNextStep'
  StepExecution:
    type: object
    properties:
      StepName:
        $ref: '#/definitions/String'
        description: The name of this execution step.
      Action:
        $ref: '#/definitions/AutomationActionName'
        description: The action this step performs. The action determines the behavior of the step.
      TimeoutSeconds:
        $ref: '#/definitions/Long'
        description: The timeout seconds of the step.
      OnFailure:
        $ref: '#/definitions/String'
        description: The action to take if the step fails. The default value is Abort.
      MaxAttempts:
        $ref: '#/definitions/Integer'
        description: The maximum number of tries to run the action of the step. The default value is 1.
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: 'If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.'
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: 'If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.'
      StepStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: 'The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.'
      ResponseCode:
        $ref: '#/definitions/String'
        description: The response code returned by the execution of the step.
      Inputs:
        $ref: '#/definitions/NormalStringMap'
        description: Fully-resolved values passed into the step before execution.
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: Returned values from the execution of the step.
      Response:
        $ref: '#/definitions/String'
        description: A message associated with the response code for an execution.
      FailureMessage:
        $ref: '#/definitions/String'
        description: 'If a step failed, this message explains why the execution failed.'
      FailureDetails:
        $ref: '#/definitions/FailureDetails'
        description: Information about the Automation failure.
      StepExecutionId:
        $ref: '#/definitions/String'
        description: The unique ID of a step execution.
      OverriddenParameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: A user-specified list of parameters to override when executing a step.
      IsEnd:
        $ref: '#/definitions/Boolean'
        description: The flag which can be used to end automation no matter whether the step succeeds or fails.
      NextStep:
        $ref: '#/definitions/String'
        description: The next step after the step succeeds.
      IsCritical:
        $ref: '#/definitions/Boolean'
        description: The flag which can be used to help decide whether the failure of current step leads to the Automation failure.
      ValidNextSteps:
        $ref: '#/definitions/ValidNextStepList'
        description: 'Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.'
    description: Detailed information about an the execution state of an Automation step.
  StepExecutionFilterKey:
    type: string
    enum:
      - StartTimeBefore
      - StartTimeAfter
      - StepExecutionStatus
      - StepExecutionId
      - StepName
      - Action
  StepExecutionFilterValueList:
    type: array
    items:
      $ref: '#/definitions/StepExecutionFilterValue'
    minItems: 1
    maxItems: 10
  StepExecutionFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/StepExecutionFilterKey'
        description: 'One or more keys to limit the results. Valid filter keys include the following: StepName, Action, StepExecutionId, StepExecutionStatus, StartTimeBefore, StartTimeAfter.'
      Values:
        $ref: '#/definitions/StepExecutionFilterValueList'
        description: The values of the filter key.
    description: A filter to limit the amount of step execution information returned by the call.
  StepExecutionFilterValue:
    type: string
    minLength: 1
    maxLength: 150
  StopType:
    type: string
    enum:
      - Complete
      - Cancel
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The name of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: 'Metadata that you assign to your AWS resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Systems Manager, you can apply tags to documents, managed instances, Maintenance Windows, Parameter Store parameters, and patch baselines.'
  TargetKey:
    type: string
    pattern: '^[\p{L}\p{Z}\p{N}_.:/=\-@]*$'
    minLength: 1
    maxLength: 128
  TargetValues:
    type: array
    items:
      $ref: '#/definitions/TargetValue'
    minItems: 0
    maxItems: 50
  Target:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TargetKey'
        description: 'User-defined criteria for sending commands that target instances that meet the criteria. Key can be tag:&lt;Amazon EC2 tag&gt; or InstanceIds. For more information about how to send commands that target instances using Key,Value parameters, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting">Targeting Multiple Instances</a> in the <i>AWS Systems Manager User Guide</i>.'
      Values:
        $ref: '#/definitions/TargetValues'
        description: 'User-defined criteria that maps to Key. For example, if you specified tag:ServerRole, you could specify value:WebServer to execute a command on instances that include Amazon EC2 tags of ServerRole,WebServer. For more information about how to send commands that target instances using Key,Value parameters, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending Commands to a Fleet</a> in the <i>AWS Systems Manager User Guide</i>.'
    description: '<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don''t provide one or more instance IDs in the call.</p> <p/>'
  TargetMapKey:
    type: string
    minLength: 1
    maxLength: 50
  TargetMapValueList:
    type: array
    items:
      $ref: '#/definitions/TargetMapValue'
    minItems: 0
    maxItems: 25
  TargetMap:
    type: array
    minItems: 1
    maxItems: 20
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TargetMapKey'
        value:
          $ref: '#/definitions/TargetMapValueList'
  TargetMapValue:
    type: string
    minLength: 1
    maxLength: 50
  TargetValue:
    type: string
  ValidNextStep:
    type: string
    minLength: 1
    maxLength: 65535
