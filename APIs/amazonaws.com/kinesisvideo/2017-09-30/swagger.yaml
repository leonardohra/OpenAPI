swagger: '2.0'
info:
  version: '2017-09-30'
  x-release: v4
  title: Amazon Kinesis Video Streams
  description: <p/>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: kinesisvideo
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/kinesisvideo/'
host: kinesisvideo.amazonaws.com
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /createStream:
    post:
      operationId: CreateStream
      description: '<p>Creates a new Kinesis video stream. </p> <p>When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream''s metadata, Kinesis Video Streams updates the version. </p> <p> <code>CreateStream</code> is an asynchronous operation.</p> <p>For information about how the service works, see <a href="http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How it Works</a>. </p> <p>You must have permissions for the <code>KinesisVideo:CreateStream</code> action.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamOutput'
        '480':
          description: AccountStreamLimitExceededException
          schema:
            $ref: '#/definitions/AccountStreamLimitExceededException'
        '481':
          description: DeviceStreamLimitExceededException
          schema:
            $ref: '#/definitions/DeviceStreamLimitExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InvalidDeviceException
          schema:
            $ref: '#/definitions/InvalidDeviceException'
        '484':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '485':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteStream:
    post:
      operationId: DeleteStream
      description: '<p>Deletes a Kinesis video stream and the data contained in the stream. </p> <p>This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p>This operation requires permission for the <code>KinesisVideo:DeleteStream</code> action.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeStream:
    post:
      operationId: DescribeStream
      description: 'Returns the most current information about the specified stream. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStreamOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /getDataEndpoint:
    post:
      operationId: GetDataEndpoint
      description: '<p>Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the <code>GetMedia</code> or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code> operation). </p> <note> <p>The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.</p> </note> <p>In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDataEndpointOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDataEndpointInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listStreams:
    post:
      operationId: ListStreams
      description: 'Returns an array of <code>StreamInfo</code> objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamsOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListStreamsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listTagsForStream:
    post:
      operationId: ListTagsForStream
      description: '<p>Returns a list of tags associated with the specified stream.</p> <p>In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /tagStream:
    post:
      operationId: TagStream
      description: '<p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p> <p>You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.</p> <p>This operation requires permission for the <code>KinesisVideo:TagStream</code> action.</p> <p>Kinesis video streams support up to 50 tags.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
        '485':
          description: TagsPerResourceExceededLimitException
          schema:
            $ref: '#/definitions/TagsPerResourceExceededLimitException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /untagStream:
    post:
      operationId: UntagStream
      description: '<p>Removes one or more tags from a stream. In the request, specify only a tag key or keys; don''t specify the value. If you specify a tag key that does not exist, it''s ignored.</p> <p>In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateDataRetention:
    post:
      operationId: UpdateDataRetention
      description: '<p> Increases or decreases the stream''s data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the <code>Operation</code> parameter in the request body. In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p> <note> <p>The retention period that you specify replaces the current value.</p> </note> <p>This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing the data retention period affects the data in the stream as follows:</p> <ul> <li> <p>If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.</p> </li> <li> <p>If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataRetentionOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '485':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDataRetentionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateStream:
    post:
      operationId: UpdateStream
      description: '<p>Updates stream metadata, such as the device name and media type.</p> <p>You must provide the stream name or the Amazon Resource Name (ARN) of the stream.</p> <p>To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p> <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '485':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStreamInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateStreamOutput:
    type: object
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
  CreateStreamInput:
    type: object
    required:
      - StreamName
    properties:
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: '<p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>'
      StreamName:
        $ref: '#/definitions/StreamName'
        description: '<p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
      MediaType:
        $ref: '#/definitions/MediaType'
        description: '<p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a> for guidelines.</p> <p>To play video on the console, the media must be H.264 encoded, and you need to specify this video type in this parameter as <code>video/h264</code>. </p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>'
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href="http://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>. </p>'
      DataRetentionInHours:
        $ref: '#/definitions/DataRetentionInHours'
        description: '<p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>'
  AccountStreamLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The number of streams created for the account is too high.
  DeviceStreamLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: 'Not implemented. '
  ResourceInUseException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The stream is currently not available for this operation.
  InvalidDeviceException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: Not implemented.
  InvalidArgumentException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The value for this input parameter is invalid.
  ClientLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: Kinesis Video Streams has throttled the request because you have exceeded the limit of allowed client calls. Try making the call later.
  DeleteStreamOutput:
    type: object
    properties: {}
  DeleteStreamInput:
    type: object
    required:
      - StreamARN
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: 'The Amazon Resource Name (ARN) of the stream that you want to delete. '
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: '<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>'
  ResourceNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: Amazon Kinesis Video Streams can't find the stream that you specified.
  NotAuthorizedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The caller is not authorized to perform this operation.
  DescribeStreamOutput:
    type: object
    properties:
      StreamInfo:
        $ref: '#/definitions/StreamInfo'
        description: An object that describes the stream.
  DescribeStreamInput:
    type: object
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
  GetDataEndpointOutput:
    type: object
    properties:
      DataEndpoint:
        $ref: '#/definitions/DataEndpoint'
        description: 'The endpoint value. To read data from the stream or to write data to it, specify this endpoint in your application.'
  GetDataEndpointInput:
    type: object
    required:
      - APIName
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: 'The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. '
      APIName:
        $ref: '#/definitions/APIName'
        description: The name of the API action for which to get an endpoint.
  ListStreamsOutput:
    type: object
    properties:
      StreamInfoList:
        $ref: '#/definitions/StreamInfoList'
        description: An array of <code>StreamInfo</code> objects.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request. '
  ListStreamsInput:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/ListStreamsInputLimit'
        description: 'The maximum number of streams to return in the response. The default is 10,000.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.'
      StreamNameCondition:
        $ref: '#/definitions/StreamNameCondition'
        description: 'Optional: Returns only streams that satisfy a specific condition. Currently, you can specify only the prefix of a stream name as a condition. '
  ListTagsForStreamOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a <code>ListTags</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags.'
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A map of tag keys and values associated with the specified stream.
  ListTagsForStreamInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.'
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream that you want to list tags for.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to list tags for.
  InvalidResourceFormatException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: The format of the <code>StreamARN</code> is invalid.
  TagStreamOutput:
    type: object
    properties: {}
  TagStreamInput:
    type: object
    required:
      - Tags
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to add the tag or tags to.
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
  TagsPerResourceExceededLimitException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: 'You have exceeded the limit of tags that you can associate with the resource. Kinesis video streams support up to 50 tags. '
  UntagStreamOutput:
    type: object
    properties: {}
  UntagStreamInput:
    type: object
    required:
      - TagKeyList
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to remove tags from.
      TagKeyList:
        $ref: '#/definitions/TagKeyList'
        description: A list of the keys of the tags that you want to remove.
  UpdateDataRetentionOutput:
    type: object
    properties: {}
  UpdateDataRetentionInput:
    type: object
    required:
      - CurrentVersion
      - Operation
      - DataRetentionChangeInHours
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream whose retention period you want to change.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: 'The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.'
      Operation:
        $ref: '#/definitions/UpdateDataRetentionOperation'
        description: Indicates whether you want to increase or decrease the retention period.
      DataRetentionChangeInHours:
        $ref: '#/definitions/DataRetentionChangeInHours'
        description: 'The retention period, in hours. The value you specify replaces the current value.'
  VersionMismatchException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ErrorMessage'
    description: 'The stream version that you specified is not the latest version. To get the latest version, use the <a href="http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html">DescribeStream</a> API.'
  UpdateStreamOutput:
    type: object
    properties: {}
  UpdateStreamInput:
    type: object
    required:
      - CurrentVersion
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: '<p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the stream whose metadata you want to update.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: The version of the stream whose metadata you want to update.
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: '<p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>'
      MediaType:
        $ref: '#/definitions/MediaType'
        description: '<p>The stream''s media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>'
  APIName:
    type: string
    enum:
      - PUT_MEDIA
      - GET_MEDIA
      - LIST_FRAGMENTS
      - GET_MEDIA_FOR_FRAGMENT_LIST
      - GET_HLS_STREAMING_SESSION_URL
  ErrorMessage:
    type: string
  ComparisonOperator:
    type: string
    enum:
      - BEGINS_WITH
  DeviceName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 128
  StreamName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 256
  MediaType:
    type: string
    pattern: '[\w\-\.\+]+/[\w\-\.\+]+'
    minLength: 1
    maxLength: 128
  KmsKeyId:
    type: string
    minLength: 1
    maxLength: 2048
  DataRetentionInHours:
    type: integer
    minimum: 0
  ResourceARN:
    type: string
    pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
    minLength: 1
    maxLength: 1024
  DataEndpoint:
    type: string
  DataRetentionChangeInHours:
    type: integer
    minimum: 1
  Version:
    type: string
    pattern: '[a-zA-Z0-9]+'
    minLength: 1
    maxLength: 64
  StreamInfo:
    type: object
    properties:
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: The name of the device that is associated with the stream.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
      MediaType:
        $ref: '#/definitions/MediaType'
        description: 'The <code>MediaType</code> of the stream. '
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.
      Version:
        $ref: '#/definitions/Version'
        description: The version of the stream.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the stream.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A time stamp that indicates when the stream was created.
      DataRetentionInHours:
        $ref: '#/definitions/DataRetentionInHours'
        description: 'How long the stream retains data, in hours.'
    description: An object describing a Kinesis video stream.
  ListStreamsInputLimit:
    type: integer
    minimum: 1
    maximum: 10000
  NextToken:
    type: string
    minLength: 0
    maxLength: 512
  StreamNameCondition:
    type: object
    properties:
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: 'A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.'
      ComparisonValue:
        $ref: '#/definitions/StreamName'
        description: A value to compare.
    description: 'Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. '
  StreamInfoList:
    type: array
    items:
      $ref: '#/definitions/StreamInfo'
  ResourceTags:
    type: array
    minItems: 1
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TagKey'
        value:
          $ref: '#/definitions/TagValue'
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    minLength: 0
    maxLength: 256
  Status:
    type: string
    enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
  Timestamp:
    type: string
    format: date-time
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  UpdateDataRetentionOperation:
    type: string
    enum:
      - INCREASE_DATA_RETENTION
      - DECREASE_DATA_RETENTION
