swagger: '2.0'
info:
  version: '2015-10-07'
  x-release: v4
  title: Amazon CloudWatch Events
  description: '<p>Amazon CloudWatch Events helps you to respond to state changes in your AWS resources. When your resources change state, they automatically send events into an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a pre-determined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an AWS Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from AWS CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events">Amazon CloudWatch Events User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: events
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/events-2015-10-07.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/events/'
host: events.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: DeleteRule
      description: '<p>Deletes the specified rule.</p> <p>Before you can delete the rule, you must remove all targets, using <a>RemoveTargets</a>.</p> <p>When you delete a rule, incoming events might continue to match to the deleted rule. Allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventBus':
    post:
      operationId: DescribeEventBus
      description: 'Displays the external AWS accounts that are permitted to write events to your account using your account''s event bus, and the associated policy. To enable your account to receive events from other accounts, use <a>PutPermission</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventBusResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventBusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRule':
    post:
      operationId: DescribeRule
      description: '<p>Describes the specified rule.</p> <p>DescribeRule does not list the targets of a rule. To see the targets associated with a rule, use <a>ListTargetsByRule</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisableRule':
    post:
      operationId: DisableRule
      description: '<p>Disables the specified rule. A disabled rule won''t match any events, and won''t self-trigger if it has a schedule expression.</p> <p>When you disable a rule, incoming events might continue to match to the disabled rule. Allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#EnableRule':
    post:
      operationId: EnableRule
      description: '<p>Enables the specified rule. If the rule does not exist, the operation fails.</p> <p>When you enable a rule, incoming events might not immediately start matching to a newly enabled rule. Allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRuleNamesByTarget':
    post:
      operationId: ListRuleNamesByTarget
      description: Lists the rules for the specified target. You can see which of the rules in Amazon CloudWatch Events can invoke a specific target in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRuleNamesByTargetResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRuleNamesByTargetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRules':
    post:
      operationId: ListRules
      description: '<p>Lists your Amazon CloudWatch Events rules. You can either list all the rules or you can provide a prefix to match to the rule names.</p> <p>ListRules does not list the targets of a rule. To see the targets associated with a rule, use <a>ListTargetsByRule</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRulesResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRulesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTargetsByRule':
    post:
      operationId: ListTargetsByRule
      description: Lists the targets assigned to the specified rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsByRuleResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTargetsByRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutEvents':
    post:
      operationId: PutEvents
      description: Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutEventsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutEventsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutPermission':
    post:
      operationId: PutPermission
      description: '<p>Running <code>PutPermission</code> permits the specified AWS account to put events to your account''s default <i>event bus</i>. CloudWatch Events rules in your account are triggered by these events arriving to your default event bus. </p> <p>For another account to send events to your account, that external account must have a CloudWatch Events rule with your account''s default event bus as a target.</p> <p>To enable multiple AWS accounts to put events to your default event bus, run <code>PutPermission</code> once for each of these accounts.</p> <p>The permission policy on the default event bus cannot exceed 10 KB in size.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: PolicyLengthExceededException
          schema:
            $ref: '#/definitions/PolicyLengthExceededException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutRule':
    post:
      operationId: PutRule
      description: '<p>Creates or updates the specified rule. Rules are enabled by default, or based on value of the state. You can disable a rule using <a>DisableRule</a>.</p> <p>If you are updating an existing rule, the rule is replaced with what you specify in this <code>PutRule</code> command. If you omit arguments in <code>PutRule</code>, the old values for those arguments are not kept. Instead, they are replaced with null values.</p> <p>When you create or update a rule, incoming events might not immediately start matching to new or updated rules. Allow a short period of time for changes to take effect.</p> <p>A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression, in which case the rule triggers on matching events as well as on a schedule.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutRuleResponse'
        '480':
          description: InvalidEventPatternException
          schema:
            $ref: '#/definitions/InvalidEventPatternException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRuleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutTargets':
    post:
      operationId: PutTargets
      description: '<p>Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.</p> <p>Targets are the resources that are invoked when a rule is triggered.</p> <p>You can configure the following as targets for CloudWatch Events:</p> <ul> <li> <p>EC2 instances</p> </li> <li> <p>SSM Run Command</p> </li> <li> <p>SSM Automation</p> </li> <li> <p>AWS Lambda functions</p> </li> <li> <p>Data streams in Amazon Kinesis Data Streams</p> </li> <li> <p>Data delivery streams in Amazon Kinesis Data Firehose</p> </li> <li> <p>Amazon ECS tasks</p> </li> <li> <p>AWS Step Functions state machines</p> </li> <li> <p>AWS Batch jobs</p> </li> <li> <p>AWS CodeBuild projects</p> </li> <li> <p>Pipelines in AWS CodePipeline</p> </li> <li> <p>Amazon Inspector assessment templates</p> </li> <li> <p>Amazon SNS topics</p> </li> <li> <p>Amazon SQS queues, including FIFO queues</p> </li> <li> <p>The default event bus of another AWS account</p> </li> </ul> <p>Creating rules with built-in targets is supported only in the AWS Management Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>, <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>, and <code>EC2 TerminateInstances API call</code>. </p> <p>For some target types, <code>PutTargets</code> provides target-specific parameters. If the target is a Kinesis data stream, you can optionally specify which shard the event goes to by using the <code>KinesisParameters</code> argument. To invoke a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code> field.</p> <p>To be able to make API calls against the resources that you own, Amazon CloudWatch Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources, CloudWatch Events relies on resource-based policies. For EC2 instances, Kinesis data streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles that you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p> <p>If another AWS account is in the same region and has granted you permission (using <code>PutPermission</code>), you can send events to that account. Set that account''s event bus as a target of the rules in your account. To send the matched events to the other account, specify that account''s event bus as the <code>Arn</code> value when you run <code>PutTargets</code>. If your account sends events to another account, your account is charged for each sent event. Each event sent to another account is charged as a custom event. The account receiving the event is not charged. For more information, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>For more information about enabling cross-account events, see <a>PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b> are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:</p> <ul> <li> <p>If none of the following arguments are specified for a target, then the entire event is passed to the target in JSON format (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).</p> </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then the matched event is overridden with this constant.</p> </li> <li> <p>If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).</p> </li> <li> <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.</p> </li> </ul> <p>When you specify <code>InputPath</code> or <code>InputTransformer</code>, you must use JSON dot notation, not bracket notation.</p> <p>When you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTargetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemovePermission':
    post:
      operationId: RemovePermission
      description: Revokes the permission of another AWS account to be able to put events to your default event bus. Specify the account to revoke by the <code>StatementId</code> value that you associated with the account when you granted it permission with <code>PutPermission</code>. You can find the <code>StatementId</code> by using <a>DescribeEventBus</a>.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemovePermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTargets':
    post:
      operationId: RemoveTargets
      description: '<p>Removes the specified targets from the specified rule. When the rule is triggered, those targets are no longer be invoked.</p> <p>When you remove a target, when the associated rule triggers, removed targets might continue to be invoked. Allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTargetsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '482':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TestEventPattern':
    post:
      operationId: TestEventPattern
      description: '<p>Tests whether the specified event pattern matches the provided event.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestEventPatternResponse'
        '480':
          description: InvalidEventPatternException
          schema:
            $ref: '#/definitions/InvalidEventPatternException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestEventPatternRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  DeleteRuleRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
  ConcurrentModificationException: {}
  InternalException: {}
  DescribeEventBusResponse:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: 'The name of the event bus. Currently, this is always <code>default</code>.'
      Arn:
        $ref: '#/definitions/String'
        description: The Amazon Resource Name (ARN) of the account permitted to write events to the current account.
      Policy:
        $ref: '#/definitions/String'
        description: The policy that enables the external account to send events to your account.
  DescribeEventBusRequest:
    type: object
    properties: {}
  ResourceNotFoundException: {}
  DescribeRuleResponse:
    type: object
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      Arn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".'
      State:
        $ref: '#/definitions/RuleState'
        description: Specifies whether the rule is enabled or disabled.
      Description:
        $ref: '#/definitions/RuleDescription'
        description: The description of the rule.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role associated with the rule.
  DescribeRuleRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
  DisableRuleRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
  EnableRuleRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
  ListRuleNamesByTargetResponse:
    type: object
    properties:
      RuleNames:
        $ref: '#/definitions/RuleNameList'
        description: The names of the rules that can invoke the given target.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
  ListRuleNamesByTargetRequest:
    type: object
    required:
      - TargetArn
    properties:
      TargetArn:
        $ref: '#/definitions/TargetArn'
        description: The Amazon Resource Name (ARN) of the target resource.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
  ListRulesResponse:
    type: object
    properties:
      Rules:
        $ref: '#/definitions/RuleResponseList'
        description: The rules that match the specified criteria.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
  ListRulesRequest:
    type: object
    properties:
      NamePrefix:
        $ref: '#/definitions/RuleName'
        description: The prefix matching the rule name.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
  ListTargetsByRuleResponse:
    type: object
    properties:
      Targets:
        $ref: '#/definitions/TargetList'
        description: The targets assigned to the rule.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Indicates whether there are additional results to retrieve. If there are no more results, the value is null.'
  ListTargetsByRuleRequest:
    type: object
    required:
      - Rule
    properties:
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to retrieve the next set of results.
      Limit:
        $ref: '#/definitions/LimitMax100'
        description: The maximum number of results to return.
  PutEventsResponse:
    type: object
    properties:
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
      Entries:
        $ref: '#/definitions/PutEventsResultEntryList'
        description: 'The successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.'
  PutEventsRequest:
    type: object
    required:
      - Entries
    properties:
      Entries:
        $ref: '#/definitions/PutEventsRequestEntryList'
        description: 'The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on.'
  PutPermissionRequest:
    type: object
    required:
      - Action
      - Principal
      - StatementId
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: 'The action that you are enabling the other account to perform. Currently, this must be <code>events:PutEvents</code>.'
      Principal:
        $ref: '#/definitions/Principal'
        description: '<p>The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify "*" to permit any account to put events to your default event bus.</p> <p>If you specify "*", avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an <code>account</code> field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.</p>'
      StatementId:
        $ref: '#/definitions/StatementId'
        description: 'An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this <code>StatementId</code> when you run <a>RemovePermission</a>.'
  PolicyLengthExceededException: {}
  PutRuleResponse:
    type: object
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
  PutRuleRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule that you are creating or updating.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)" or "rate(5 minutes)".'
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      State:
        $ref: '#/definitions/RuleState'
        description: Indicates whether the rule is enabled or disabled.
      Description:
        $ref: '#/definitions/RuleDescription'
        description: A description of the rule.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role associated with the rule.
  InvalidEventPatternException: {}
  LimitExceededException: {}
  PutTargetsResponse:
    type: object
    properties:
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
      FailedEntries:
        $ref: '#/definitions/PutTargetsResultEntryList'
        description: The failed target entries.
  PutTargetsRequest:
    type: object
    required:
      - Rule
      - Targets
    properties:
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      Targets:
        $ref: '#/definitions/TargetList'
        description: The targets to update or add to the rule.
  RemovePermissionRequest:
    type: object
    required:
      - StatementId
    properties:
      StatementId:
        $ref: '#/definitions/StatementId'
        description: The statement ID corresponding to the account that is no longer allowed to put events to the default event bus.
  RemoveTargetsResponse:
    type: object
    properties:
      FailedEntryCount:
        $ref: '#/definitions/Integer'
        description: The number of failed entries.
      FailedEntries:
        $ref: '#/definitions/RemoveTargetsResultEntryList'
        description: The failed target entries.
  RemoveTargetsRequest:
    type: object
    required:
      - Rule
      - Ids
    properties:
      Rule:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      Ids:
        $ref: '#/definitions/TargetIdList'
        description: The IDs of the targets to remove from the rule.
  TestEventPatternResponse:
    type: object
    properties:
      Result:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the event matches the event pattern.
  TestEventPatternRequest:
    type: object
    required:
      - EventPattern
      - Event
    properties:
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      Event:
        $ref: '#/definitions/String'
        description: 'The event, in JSON format, to test against the event pattern.'
  Action:
    type: string
    pattern: 'events:[a-zA-Z]+'
    minLength: 1
    maxLength: 64
  Arn:
    type: string
    minLength: 1
    maxLength: 1600
  AssignPublicIp:
    type: string
    enum:
      - ENABLED
      - DISABLED
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  AwsVpcConfiguration:
    type: object
    required:
      - Subnets
    properties:
      Subnets:
        $ref: '#/definitions/StringList'
        description: Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
      SecurityGroups:
        $ref: '#/definitions/StringList'
        description: 'Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.'
      AssignPublicIp:
        $ref: '#/definitions/AssignPublicIp'
        description: Specifies whether the task's elastic network interface receives a public IP address. You can specify <code>ENABLED</code> only when <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>.
    description: 'This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode.'
  Integer:
    type: integer
  BatchArrayProperties:
    type: object
    properties:
      Size:
        $ref: '#/definitions/Integer'
        description: 'The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.'
    description: 'The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job.'
  String:
    type: string
  BatchRetryStrategy:
    type: object
    properties:
      Attempts:
        $ref: '#/definitions/Integer'
        description: 'The number of times to attempt to retry, if the job fails. Valid values are 1–10.'
    description: 'The retry strategy to use for failed jobs, if the target is an AWS Batch job. If you specify a retry strategy here, it overrides the retry strategy defined in the job definition.'
  BatchParameters:
    type: object
    required:
      - JobDefinition
      - JobName
    properties:
      JobDefinition:
        $ref: '#/definitions/String'
        description: The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
      JobName:
        $ref: '#/definitions/String'
        description: 'The name to use for this execution of the job, if the target is an AWS Batch job.'
      ArrayProperties:
        $ref: '#/definitions/BatchArrayProperties'
        description: 'The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job.'
      RetryStrategy:
        $ref: '#/definitions/BatchRetryStrategy'
        description: 'The retry strategy to use for failed jobs, if the target is an AWS Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition.'
    description: The custom parameters to be used when the target is an AWS Batch job.
  Boolean:
    type: boolean
  RuleName:
    type: string
    pattern: '[\.\-_A-Za-z0-9]+'
    minLength: 1
    maxLength: 64
  RuleArn:
    type: string
    minLength: 1
    maxLength: 1600
  EventPattern:
    type: string
  ScheduleExpression:
    type: string
    maxLength: 256
  RuleState:
    type: string
    enum:
      - ENABLED
      - DISABLED
  RuleDescription:
    type: string
    maxLength: 512
  RoleArn:
    type: string
    minLength: 1
    maxLength: 1600
  LimitMin1:
    type: integer
    minimum: 1
  LaunchType:
    type: string
    enum:
      - EC2
      - FARGATE
  NetworkConfiguration:
    type: object
    properties:
      awsvpcConfiguration:
        $ref: '#/definitions/AwsVpcConfiguration'
        description: 'Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode.'
    description: This structure specifies the network configuration for an ECS task.
  EcsParameters:
    type: object
    required:
      - TaskDefinitionArn
    properties:
      TaskDefinitionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the task definition to use if the event target is an Amazon ECS task. '
      TaskCount:
        $ref: '#/definitions/LimitMin1'
        description: The number of tasks to create based on <code>TaskDefinition</code>. The default is 1.
      LaunchType:
        $ref: '#/definitions/LaunchType'
        description: 'Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The <code>FARGATE</code> value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html">AWS Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.'
      NetworkConfiguration:
        $ref: '#/definitions/NetworkConfiguration'
        description: '<p>Use this structure if the ECS task uses the <code>awsvpc</code> network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if <code>LaunchType</code> is <code>FARGATE</code> because the <code>awsvpc</code> mode is required for Fargate tasks.</p> <p>If you specify <code>NetworkConfiguration</code> when the target ECS task does not use the <code>awsvpc</code> network mode, the task fails.</p>'
      PlatformVersion:
        $ref: '#/definitions/String'
        description: '<p>Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as <code>1.1.0</code>.</p> <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>. For more information about valid platform versions, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">AWS Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>'
      Group:
        $ref: '#/definitions/String'
        description: Specifies an ECS task group for the task. The maximum length is 255 characters.
    description: The custom parameters to be used when the target is an Amazon ECS task.
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
  EventId:
    type: string
  EventResource:
    type: string
  EventResourceList:
    type: array
    items:
      $ref: '#/definitions/EventResource'
  EventTime:
    type: string
    format: date-time
  TransformerPaths:
    type: array
    maxItems: 10
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/InputTransformerPathKey'
        value:
          $ref: '#/definitions/TargetInputPath'
  TransformerInput:
    type: string
    minLength: 1
    maxLength: 8192
  InputTransformer:
    type: object
    required:
      - InputTemplate
    properties:
      InputPathsMap:
        $ref: '#/definitions/TransformerPaths'
        description: '<p>Map of JSON paths to be extracted from the event. You can then insert these in the template in <code>InputTemplate</code> to produce the output you want to be sent to the target.</p> <p> <code>InputPathsMap</code> is an array key-value pairs, where each value is a valid JSON path. You can have as many as 10 key-value pairs. You must use JSON dot notation, not bracket notation.</p> <p>The keys cannot start with "AWS." </p>'
      InputTemplate:
        $ref: '#/definitions/TransformerInput'
        description: '<p>Input template where you specify placeholders that will be filled with the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target. Enclose each <code>InputPathsMaps</code> value in brackets: &lt;<i>value</i>&gt; The InputTemplate must be valid JSON.</p> <p>If <code>InputTemplate</code> is a JSON object (surrounded by curly braces), the following restrictions apply:</p> <ul> <li> <p>The placeholder cannot be used as an object key.</p> </li> <li> <p>Object values cannot include quote marks.</p> </li> </ul> <p>The following example shows the syntax for using <code>InputPathsMap</code> and <code>InputTemplate</code>.</p> <p> <code> "InputTransformer":</code> </p> <p> <code>{</code> </p> <p> <code>"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},</code> </p> <p> <code>"InputTemplate": "&lt;instance&gt; is in state &lt;status&gt;"</code> </p> <p> <code>}</code> </p> <p>To have the <code>InputTemplate</code> include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:</p> <p> <code> "InputTransformer":</code> </p> <p> <code>{</code> </p> <p> <code>"InputPathsMap": {"instance": "$.detail.instance","status": "$.detail.status"},</code> </p> <p> <code>"InputTemplate": "&lt;instance&gt; is in state \"&lt;status&gt;\""</code> </p> <p> <code>}</code> </p>'
    description: Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.
  InputTransformerPathKey:
    type: string
    pattern: '[A-Za-z0-9\_\-]+'
    minLength: 1
    maxLength: 256
  TargetPartitionKeyPath:
    type: string
    maxLength: 256
  KinesisParameters:
    type: object
    required:
      - PartitionKeyPath
    properties:
      PartitionKeyPath:
        $ref: '#/definitions/TargetPartitionKeyPath'
        description: 'The JSON path to be extracted from the event and used as the partition key. For more information, see <a href="http://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>.'
    description: 'This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis data stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.'
  LimitMax100:
    type: integer
    minimum: 1
    maximum: 100
  TargetArn:
    type: string
    minLength: 1
    maxLength: 1600
  NextToken:
    type: string
    minLength: 1
    maxLength: 2048
  RuleNameList:
    type: array
    items:
      $ref: '#/definitions/RuleName'
  RuleResponseList:
    type: array
    items:
      $ref: '#/definitions/Rule'
  TargetList:
    type: array
    items:
      $ref: '#/definitions/Target'
    minItems: 1
    maxItems: 100
  MessageGroupId:
    type: string
  Principal:
    type: string
    pattern: '(\d{12}|\*)'
    minLength: 1
    maxLength: 12
  PutEventsRequestEntryList:
    type: array
    items:
      $ref: '#/definitions/PutEventsRequestEntry'
    minItems: 1
    maxItems: 10
  PutEventsRequestEntry:
    type: object
    properties:
      Time:
        $ref: '#/definitions/EventTime'
        description: 'The time stamp of the event, per <a href="https://www.rfc-editor.org/rfc/rfc3339.txt">RFC3339</a>. If no time stamp is provided, the time stamp of the <a>PutEvents</a> call is used.'
      Source:
        $ref: '#/definitions/String'
        description: The source of the event. This field is required.
      Resources:
        $ref: '#/definitions/EventResourceList'
        description: 'AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.'
      DetailType:
        $ref: '#/definitions/String'
        description: Free-form string used to decide what fields to expect in the event detail.
      Detail:
        $ref: '#/definitions/String'
        description: A valid JSON string. There is no other schema imposed. The JSON string may contain fields and nested subobjects.
    description: Represents an event to be submitted.
  PutEventsResultEntryList:
    type: array
    items:
      $ref: '#/definitions/PutEventsResultEntry'
  PutEventsResultEntry:
    type: object
    properties:
      EventId:
        $ref: '#/definitions/EventId'
        description: The ID of the event.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The error code that indicates why the event submission failed.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the event submission failed.
    description: Represents an event that failed to be submitted.
  StatementId:
    type: string
    pattern: '[a-zA-Z0-9-_]+'
    minLength: 1
    maxLength: 64
  PutTargetsResultEntryList:
    type: array
    items:
      $ref: '#/definitions/PutTargetsResultEntry'
  TargetId:
    type: string
    pattern: '[\.\-_A-Za-z0-9]+'
    minLength: 1
    maxLength: 64
  PutTargetsResultEntry:
    type: object
    properties:
      TargetId:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the target addition failed.
    description: Represents a target that failed to be added to a rule.
  TargetIdList:
    type: array
    items:
      $ref: '#/definitions/TargetId'
    minItems: 1
    maxItems: 100
  RemoveTargetsResultEntryList:
    type: array
    items:
      $ref: '#/definitions/RemoveTargetsResultEntry'
  RemoveTargetsResultEntry:
    type: object
    properties:
      TargetId:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The error message that explains why the target removal failed.
    description: Represents a target that failed to be removed from a rule.
  Rule:
    type: object
    properties:
      Name:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      Arn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      EventPattern:
        $ref: '#/definitions/EventPattern'
        description: 'The event pattern of the rule. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>.'
      State:
        $ref: '#/definitions/RuleState'
        description: The state of the rule.
      Description:
        $ref: '#/definitions/RuleDescription'
        description: The description of the rule.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)".'
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the role that is used for target invocation.
    description: Contains information about a rule in Amazon CloudWatch Events.
  RunCommandTargets:
    type: array
    items:
      $ref: '#/definitions/RunCommandTarget'
    minItems: 1
    maxItems: 5
  RunCommandParameters:
    type: object
    required:
      - RunCommandTargets
    properties:
      RunCommandTargets:
        $ref: '#/definitions/RunCommandTargets'
        description: 'Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.'
    description: 'This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. '
  RunCommandTargetKey:
    type: string
    pattern: '^[\p{L}\p{Z}\p{N}_.:/=+\-@]*$'
    minLength: 1
    maxLength: 128
  RunCommandTargetValues:
    type: array
    items:
      $ref: '#/definitions/RunCommandTargetValue'
    minItems: 1
    maxItems: 50
  RunCommandTarget:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/RunCommandTargetKey'
        description: 'Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.'
      Values:
        $ref: '#/definitions/RunCommandTargetValues'
        description: 'If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs.'
    description: 'Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.'
  RunCommandTargetValue:
    type: string
    minLength: 1
    maxLength: 256
  SqsParameters:
    type: object
    properties:
      MessageGroupId:
        $ref: '#/definitions/MessageGroupId'
        description: The FIFO message group ID to use as the target.
    description: This structure includes the custom parameter to be used when the target is an SQS FIFO queue.
  TargetInput:
    type: string
    maxLength: 8192
  TargetInputPath:
    type: string
    maxLength: 256
  Target:
    type: object
    required:
      - Id
      - Arn
    properties:
      Id:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
      Arn:
        $ref: '#/definitions/TargetArn'
        description: The Amazon Resource Name (ARN) of the target.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target.'
      Input:
        $ref: '#/definitions/TargetInput'
        description: 'Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see <a href="http://www.rfc-editor.org/rfc/rfc7159.txt">The JavaScript Object Notation (JSON) Data Interchange Format</a>.'
      InputPath:
        $ref: '#/definitions/TargetInputPath'
        description: 'The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href="http://goessner.net/articles/JsonPath/">JSONPath</a>.'
      InputTransformer:
        $ref: '#/definitions/InputTransformer'
        description: Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target.
      KinesisParameters:
        $ref: '#/definitions/KinesisParameters'
        description: 'The custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.'
      RunCommandParameters:
        $ref: '#/definitions/RunCommandParameters'
        description: Parameters used when you are using the rule to invoke Amazon EC2 Run Command.
      EcsParameters:
        $ref: '#/definitions/EcsParameters'
        description: 'Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>.'
      BatchParameters:
        $ref: '#/definitions/BatchParameters'
        description: 'If the event target is an AWS Batch job, this contains the job definition, job name, and other parameters. For more information, see <a href="http://docs.aws.amazon.com/batch/latest/userguide/jobs.html">Jobs</a> in the <i>AWS Batch User Guide</i>.'
      SqsParameters:
        $ref: '#/definitions/SqsParameters'
        description: '<p>Contains the message group ID to use when the target is a FIFO queue.</p> <p>If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.</p>'
    description: 'Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a>PutTargets</a>.'
