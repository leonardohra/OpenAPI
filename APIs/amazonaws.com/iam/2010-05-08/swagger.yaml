swagger: '2.0'
info:
  version: '2010-05-08'
  x-release: v4
  title: AWS Identity and Access Management
  description: '<fullname>AWS Identity and Access Management</fullname> <p>AWS Identity and Access Management (IAM) is a web service that you can use to manage users and user permissions under your AWS account. This guide provides descriptions of IAM actions that you can call programmatically. For general information about IAM, see <a href="http://aws.amazon.com/iam/">AWS Identity and Access Management (IAM)</a>. For the user guide for IAM, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/">Using IAM</a>. </p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to IAM and AWS. For example, the SDKs take care of tasks such as cryptographically signing requests (see below), managing errors, and retrying requests automatically. For information about the AWS SDKs, including how to download and install them, see the <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a> page. </p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to IAM. However, you can also use the IAM Query API to make direct calls to the IAM web service. To learn more about the IAM Query API, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>Using IAM</i> guide. IAM supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for others. However, GET requests are subject to the limitation size of a URL. Therefore, for operations that require larger sizes, use a POST request. </p> <p> <b>Signing Requests</b> </p> <p>Requests must be signed using an access key ID and a secret access key. We strongly recommend that you do not use your AWS account access key ID and secret access key for everyday work with IAM. You can use the access key ID and secret access key for an IAM user or you can use the AWS Security Token Service to generate temporary security credentials and use those to sign requests.</p> <p>To sign requests, we recommend that you use <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. If you have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </p> <p> <b>Additional Resources</b> </p> <p>For more information, see the following:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html">AWS Security Credentials</a>. This topic provides general information about the types of credentials used for accessing AWS. </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAMBestPractices.html">IAM Best Practices</a>. This topic presents a list of suggestions for using the IAM service to help secure your AWS resources. </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a>. This set of topics walk you through the process of signing a request using an access key ID and secret access key. </p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iam
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iam-2010-05-08.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/iam/'
host: iam.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes: []
produces: []
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddClientIDToOpenIDConnectProvider
      description: <p>Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource.</p> <p>This operation is idempotent; it does not fail or return an error if you add an existing client ID to the provider.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddClientIDToOpenIDConnectProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AddRoleToInstanceProfile':
    post:
      operationId: AddRoleToInstanceProfile
      description: '<p>Adds the specified IAM role to the specified instance profile. An instance profile can contain only one role, and this limit cannot be increased. You can remove the existing role and then add a different role to an instance profile. You must then wait for the change to appear across all of AWS because of <a href="https://en.wikipedia.org/wiki/Eventual_consistency">eventual consistency</a>. To force the change, you must <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIamInstanceProfile.html">disassociate the instance profile</a> and then <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateIamInstanceProfile.html">associate the instance profile</a>, or you can stop your instance and then restart it.</p> <note> <p>The caller of this API must be granted the <code>PassRole</code> permission on the IAM role by a permission policy.</p> </note> <p>For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddRoleToInstanceProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AddUserToGroup':
    post:
      operationId: AddUserToGroup
      description: Adds the specified user to the specified group.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddUserToGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachGroupPolicy':
    post:
      operationId: AttachGroupPolicy
      description: '<p>Attaches the specified managed policy to the specified IAM group.</p> <p>You use this API to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: PolicyNotAttachableException
          schema:
            $ref: '#/definitions/PolicyNotAttachableException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachGroupPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachRolePolicy':
    post:
      operationId: AttachRolePolicy
      description: '<p>Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role''s permission (access) policy.</p> <note> <p>You cannot use a managed policy as the role''s trust policy. The role''s trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role''s trust policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this API to attach a <i>managed</i> policy to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: PolicyNotAttachableException
          schema:
            $ref: '#/definitions/PolicyNotAttachableException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachUserPolicy':
    post:
      operationId: AttachUserPolicy
      description: '<p>Attaches the specified managed policy to the specified user.</p> <p>You use this API to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: PolicyNotAttachableException
          schema:
            $ref: '#/definitions/PolicyNotAttachableException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachUserPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ChangePassword':
    post:
      operationId: ChangePassword
      description: '<p>Changes the password of the IAM user who is calling this operation. The AWS account root user password is not affected by this operation.</p> <p>To change the password for a different user, see <a>UpdateLoginProfile</a>. For more information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidUserTypeException
          schema:
            $ref: '#/definitions/InvalidUserTypeException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '484':
          description: PasswordPolicyViolationException
          schema:
            $ref: '#/definitions/PasswordPolicyViolationException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAccessKey':
    post:
      operationId: CreateAccessKey
      description: '<p> Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials. This is true even if the AWS account has no associated users.</p> <p> For information about limits on the number of keys you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAccessKeyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAccessKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAccountAlias':
    post:
      operationId: CreateAccountAlias
      description: 'Creates an alias for your AWS account. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAccountAliasRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateGroup':
    post:
      operationId: CreateGroup
      description: '<p>Creates a new group.</p> <p> For information about the number of groups you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateInstanceProfile':
    post:
      operationId: CreateInstanceProfile
      description: '<p> Creates a new instance profile. For information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p> <p> For information about the number of instance profiles you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInstanceProfileResponse'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInstanceProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLoginProfile':
    post:
      operationId: CreateLoginProfile
      description: ' Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing Passwords</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoginProfileResponse'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: PasswordPolicyViolationException
          schema:
            $ref: '#/definitions/PasswordPolicyViolationException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoginProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateOpenIDConnectProvider':
    post:
      operationId: CreateOpenIDConnectProvider
      description: '<p>Creates an IAM entity to describe an identity provider (IdP) that supports <a href="http://openid.net/connect/">OpenID Connect (OIDC)</a>.</p> <p>The OIDC provider that you create with this operation can be used as a principal in a role''s trust policy. Such a policy establishes a trust relationship between AWS and the OIDC provider.</p> <p>When you create the IAM OIDC provider, you specify the following:</p> <ul> <li> <p>The URL of the OIDC identity provider (IdP) to trust</p> </li> <li> <p>A list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider</p> </li> <li> <p>A list of thumbprints of the server certificate(s) that the IdP uses.</p> </li> </ul> <p>You get all of this information from the OIDC IdP that you want to use to access AWS.</p> <note> <p>Because trust for the OIDC provider is derived from the IAM provider that this operation creates, it is best to limit access to the <a>CreateOpenIDConnectProvider</a> operation to highly privileged users.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOpenIDConnectProviderResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOpenIDConnectProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePolicy':
    post:
      operationId: CreatePolicy
      description: '<p>Creates a new managed policy for your AWS account.</p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy''s default version. For more information about policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policies in general, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '483':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePolicyVersion':
    post:
      operationId: CreatePolicyVersion
      description: '<p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version.</p> <p>Optionally, you can set the new version as the policy''s default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyVersionResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolicyVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateRole':
    post:
      operationId: CreateRole
      description: 'Creates a new role for your AWS account. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">IAM Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRoleResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '483':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateSAMLProvider':
    post:
      operationId: CreateSAMLProvider
      description: '<p>Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.</p> <p>The SAML provider resource that you create with this operation can be used as a principal in an IAM role''s trust policy. Such a policy can enable federated users who sign-in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS.</p> <p>When you create the SAML provider resource, you upload a SAML metadata document that you get from your IdP. That document includes the issuer''s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization''s IdP.</p> <note> <p> This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> </note> <p> For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html">Enabling SAML 2.0 Federated Users to Access the AWS Management Console</a> and <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSAMLProviderResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSAMLProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateServiceLinkedRole':
    post:
      operationId: CreateServiceLinkedRole
      description: '<p>Creates an IAM role that is linked to a specific AWS service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your AWS resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed.</p> <p>The name of the role is generated by combining the string that you specify for the <code>AWSServiceName</code> parameter with the string that you specify for the <code>CustomSuffix</code> parameter. The resulting name must be unique in your account or the request fails.</p> <p>To attach a policy to this service-linked role, you must make the request using the AWS service that depends on this role.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateServiceLinkedRoleResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateServiceLinkedRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateServiceSpecificCredential':
    post:
      operationId: CreateServiceSpecificCredential
      description: '<p>Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service. </p> <p>You can have a maximum of two sets of service-specific credentials for each supported service per user.</p> <p>The only supported service at this time is AWS CodeCommit.</p> <p>You can reset the password to a new service-generated value by calling <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific credentials, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html">Using IAM with AWS CodeCommit: Git Credentials, SSH Keys, and AWS Access Keys</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateServiceSpecificCredentialResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceNotSupportedException
          schema:
            $ref: '#/definitions/ServiceNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateServiceSpecificCredentialRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateUser':
    post:
      operationId: CreateUser
      description: '<p>Creates a new IAM user for your AWS account.</p> <p> For information about limitations on the number of IAM users you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateVirtualMFADevice':
    post:
      operationId: CreateVirtualMFADevice
      description: '<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of MFA devices you can create, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on Entities</a> in the <i>IAM User Guide</i>.</p> <important> <p>The seed information contained in the QR code and the Base32 string should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateVirtualMFADeviceResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVirtualMFADeviceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeactivateMFADevice':
    post:
      operationId: DeactivateMFADevice
      description: '<p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeactivateMFADeviceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAccessKey':
    post:
      operationId: DeleteAccessKey
      description: '<p>Deletes the access key pair associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAccessKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAccountAlias':
    post:
      operationId: DeleteAccountAlias
      description: ' Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAccountAliasRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAccountPasswordPolicy':
    post:
      operationId: DeleteAccountPasswordPolicy
      description: Deletes the password policy for the AWS account. There are no parameters.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteGroup':
    post:
      operationId: DeleteGroup
      description: Deletes the specified IAM group. The group must not contain any users or have any attached policies.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteGroupPolicy':
    post:
      operationId: DeleteGroupPolicy
      description: '<p>Deletes the specified inline policy that is embedded in the specified IAM group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteInstanceProfile':
    post:
      operationId: DeleteInstanceProfile
      description: '<p>Deletes the specified instance profile. The instance profile must not have an associated role.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important> <p>For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInstanceProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteLoginProfile':
    post:
      operationId: DeleteLoginProfile
      description: '<p>Deletes the password for the specified IAM user, which terminates the user''s ability to access AWS services through the AWS Management Console.</p> <important> <p> Deleting a user''s password does not prevent a user from accessing AWS through the command line interface or the API. To prevent all user access you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoginProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteOpenIDConnectProvider':
    post:
      operationId: DeleteOpenIDConnectProvider
      description: <p>Deletes an OpenID Connect identity provider (IdP) resource object in IAM.</p> <p>Deleting an IAM OIDC provider resource does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a deleted provider fails.</p> <p>This operation is idempotent; it does not fail or return an error if you call the operation for a provider that does not exist.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteOpenIDConnectProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePolicy':
    post:
      operationId: DeletePolicy
      description: '<p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition you must delete all the policy''s versions. The following steps describe the process for deleting a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups, and roles that the policy is attached to, using the <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a> API operations. To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li> <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy''s versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy''s default version in the next step of the process.</p> </li> <li> <p>Delete the policy (this automatically deletes the policy''s default version) using this API.</p> </li> </ul> <p>For information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePolicyVersion':
    post:
      operationId: DeletePolicyVersion
      description: '<p>Deletes the specified version from the specified managed policy.</p> <p>You cannot delete the default version from a policy using this API. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p> <p>For information about versions for managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePolicyVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteRole':
    post:
      operationId: DeleteRole
      description: '<p>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteRolePermissionsBoundary':
    post:
      operationId: DeleteRolePermissionsBoundary
      description: <p>Deletes the permissions boundary for the specified IAM role. </p> <important> <p>Deleting the permissions boundary for a role might increase its permissions by allowing anyone who assumes the role to perform all the actions granted in its permissions policies. </p> </important>
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRolePermissionsBoundaryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteRolePolicy':
    post:
      operationId: DeleteRolePolicy
      description: '<p>Deletes the specified inline policy that is embedded in the specified IAM role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteSAMLProvider':
    post:
      operationId: DeleteSAMLProvider
      description: '<p>Deletes a SAML provider resource in IAM.</p> <p>Deleting the provider resource from IAM does not update any roles that reference the SAML provider resource''s ARN as a principal in their trust policies. Any attempt to assume a role that references a non-existent provider resource ARN fails.</p> <note> <p> This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSAMLProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteSSHPublicKey':
    post:
      operationId: DeleteSSHPublicKey
      description: '<p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSSHPublicKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteServerCertificate':
    post:
      operationId: DeleteServerCertificate
      description: '<p>Deletes the specified server certificate.</p> <p>For more information about working with server certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p> If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn''t detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href="http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServerCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteServiceLinkedRole':
    post:
      operationId: DeleteServiceLinkedRole
      description: '<p>Submits a service-linked role deletion request and returns a <code>DeletionTaskId</code>, which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code> of the earlier request is returned.</p> <p>If you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a> API operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the service that is linked to the role. For more information about removing resources from a service, see the <a href="http://docs.aws.amazon.com/">AWS documentation</a> for your service.</p> <p>For more information about service-linked roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">Roles Terms and Concepts: AWS Service-Linked Role</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteServiceLinkedRoleResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServiceLinkedRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteServiceSpecificCredential':
    post:
      operationId: DeleteServiceSpecificCredential
      description: Deletes the specified service-specific credential.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServiceSpecificCredentialRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteSigningCertificate':
    post:
      operationId: DeleteSigningCertificate
      description: '<p>Deletes a signing certificate associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated IAM users.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSigningCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteUser':
    post:
      operationId: DeleteUser
      description: 'Deletes the specified IAM user. The user must not belong to any groups or have any access keys, signing certificates, or attached policies.'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteUserPermissionsBoundary':
    post:
      operationId: DeleteUserPermissionsBoundary
      description: <p>Deletes the permissions boundary for the specified IAM user.</p> <important> <p>Deleting the permissions boundary for a user might increase its permissions by allowing the user to perform all the actions granted in its permissions policies. </p> </important>
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserPermissionsBoundaryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteUserPolicy':
    post:
      operationId: DeleteUserPolicy
      description: '<p>Deletes the specified inline policy that is embedded in the specified IAM user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteVirtualMFADevice':
    post:
      operationId: DeleteVirtualMFADevice
      description: '<p>Deletes a virtual MFA device.</p> <note> <p> You must deactivate a user''s virtual MFA device before you can delete it. For information about deactivating MFA devices, see <a>DeactivateMFADevice</a>. </p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVirtualMFADeviceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachGroupPolicy':
    post:
      operationId: DetachGroupPolicy
      description: '<p>Removes the specified managed policy from the specified IAM group.</p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteGroupPolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachGroupPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachRolePolicy':
    post:
      operationId: DetachRolePolicy
      description: '<p>Removes the specified managed policy from the specified role.</p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteRolePolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachUserPolicy':
    post:
      operationId: DetachUserPolicy
      description: '<p>Removes the specified managed policy from the specified user.</p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteUserPolicy</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachUserPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#EnableMFADevice':
    post:
      operationId: EnableMFADevice
      description: 'Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.'
      responses:
        '200':
          description: Success
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '482':
          description: InvalidAuthenticationCodeException
          schema:
            $ref: '#/definitions/InvalidAuthenticationCodeException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '485':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableMFADeviceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GenerateCredentialReport':
    post:
      operationId: GenerateCredentialReport
      description: ' Generates a credential report for the AWS account. For more information about the credential report, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting Credential Reports</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GenerateCredentialReportResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAccessKeyLastUsed':
    post:
      operationId: GetAccessKeyLastUsed
      description: 'Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the AWS service and region that were specified in the last request made with that key.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccessKeyLastUsedResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccessKeyLastUsedRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAccountAuthorizationDetails':
    post:
      operationId: GetAccountAuthorizationDetails
      description: '<p>Retrieves information about all IAM users, groups, roles, and policies in your AWS account, including their relationships to one another. Use this API to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountAuthorizationDetailsResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountAuthorizationDetailsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAccountPasswordPolicy':
    post:
      operationId: GetAccountPasswordPolicy
      description: 'Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountPasswordPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAccountSummary':
    post:
      operationId: GetAccountSummary
      description: '<p>Retrieves information about IAM entity usage and IAM quotas in the AWS account.</p> <p> For information about limitations on IAM entities, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountSummaryResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetContextKeysForCustomPolicy':
    post:
      operationId: GetContextKeysForCustomPolicy
      description: '<p>Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM policy. Use <code>GetContextKeysForCustomPolicy</code> to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetContextKeysForPolicyResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetContextKeysForCustomPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetContextKeysForPrincipalPolicy':
    post:
      operationId: GetContextKeysForPrincipalPolicy
      description: '<p>Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.</p> <p>You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user''s permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetContextKeysForPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetContextKeysForPrincipalPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetCredentialReport':
    post:
      operationId: GetCredentialReport
      description: ' Retrieves a credential report for the AWS account. For more information about the credential report, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting Credential Reports</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCredentialReportResponse'
        '480':
          description: CredentialReportNotPresentException
          schema:
            $ref: '#/definitions/CredentialReportNotPresentException'
        '481':
          description: CredentialReportExpiredException
          schema:
            $ref: '#/definitions/CredentialReportExpiredException'
        '482':
          description: CredentialReportNotReadyException
          schema:
            $ref: '#/definitions/CredentialReportNotReadyException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetGroup':
    post:
      operationId: GetGroup
      description: ' Returns a list of IAM users that are in the specified IAM group. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetGroupPolicy':
    post:
      operationId: GetGroupPolicy
      description: '<p>Retrieves the specified inline policy document that is embedded in the specified IAM group.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy''s default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGroupPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGroupPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceProfile':
    post:
      operationId: GetInstanceProfile
      description: ' Retrieves information about the specified instance profile, including the instance profile''s path, GUID, ARN, and role. For more information about instance profiles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceProfileResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceProfileRequest'
      x-waiters:
        - delay: 1
          operation: GetInstanceProfile
          maxAttempts: 40
          acceptors:
            - expected: 200
              matcher: status
              state: success
            - state: retry
              matcher: status
              expected: 404
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetLoginProfile':
    post:
      operationId: GetLoginProfile
      description: 'Retrieves the user name and password-creation date for the specified IAM user. If the user has not been assigned a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoginProfileResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoginProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetOpenIDConnectProvider':
    post:
      operationId: GetOpenIDConnectProvider
      description: Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOpenIDConnectProviderResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOpenIDConnectProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPolicy':
    post:
      operationId: GetPolicy
      description: '<p>Retrieves information about the specified managed policy, including the policy''s default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. This API returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPolicyVersion':
    post:
      operationId: GetPolicyVersion
      description: '<p>Retrieves information about the specified version of the specified managed policy, including the policy document.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>.</p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API.</p> <p>For more information about the types of policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyVersionResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPolicyVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetRole':
    post:
      operationId: GetRole
      description: '<p>Retrieves information about the specified role, including the role''s path, GUID, ARN, and the role''s trust policy that grants permission to assume the role. For more information about roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRoleResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetRolePolicy':
    post:
      operationId: GetRolePolicy
      description: '<p>Retrieves the specified inline policy document that is embedded with the specified IAM role.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy''s default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about roles, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRolePolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetSAMLProvider':
    post:
      operationId: GetSAMLProvider
      description: '<p>Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated.</p> <note> <p>This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSAMLProviderResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSAMLProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetSSHPublicKey':
    post:
      operationId: GetSSHPublicKey
      description: '<p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSSHPublicKeyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: UnrecognizedPublicKeyEncodingException
          schema:
            $ref: '#/definitions/UnrecognizedPublicKeyEncodingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSSHPublicKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetServerCertificate':
    post:
      operationId: GetServerCertificate
      description: '<p>Retrieves information about the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServerCertificateResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServerCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetServiceLinkedRoleDeletionStatus':
    post:
      operationId: GetServiceLinkedRoleDeletionStatus
      description: 'Retrieves the status of your service-linked role deletion. After you use the <a>DeleteServiceLinkedRole</a> API operation to submit a service-linked role for deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code> to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceLinkedRoleDeletionStatusResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceLinkedRoleDeletionStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetUser':
    post:
      operationId: GetUser
      description: '<p>Retrieves information about the specified IAM user, including the user''s creation date, path, unique ID, and ARN.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request to this API.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUserResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUserRequest'
      x-waiters:
        - delay: 1
          operation: GetUser
          maxAttempts: 20
          acceptors:
            - state: success
              matcher: status
              expected: 200
            - state: retry
              matcher: error
              expected: NoSuchEntity
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetUserPolicy':
    post:
      operationId: GetUserPolicy
      description: '<p>Retrieves the specified inline policy document that is embedded in the specified IAM user.</p> <note> <p>Policies returned by this API are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy''s default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetUserPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetUserPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAccessKeys':
    post:
      operationId: ListAccessKeys
      description: '<p>Returns information about the access key IDs associated with the specified IAM user. If there are none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAccessKeysResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAccessKeysRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAccountAliases':
    post:
      operationId: ListAccountAliases
      description: 'Lists the account alias associated with the AWS account (Note: you can have only one). For information about using an AWS account alias, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an Alias for Your AWS Account ID</a> in the <i>IAM User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAccountAliasesResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAccountAliasesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAttachedGroupPolicies':
    post:
      operationId: ListAttachedGroupPolicies
      description: '<p>Lists all managed policies that are attached to the specified IAM group.</p> <p>An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use the <a>ListGroupPolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedGroupPoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedGroupPoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAttachedRolePolicies':
    post:
      operationId: ListAttachedRolePolicies
      description: '<p>Lists all managed policies that are attached to the specified IAM role.</p> <p>An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use the <a>ListRolePolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedRolePoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedRolePoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAttachedUserPolicies':
    post:
      operationId: ListAttachedUserPolicies
      description: '<p>Lists all managed policies that are attached to the specified IAM user.</p> <p>An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use the <a>ListUserPolicies</a> API. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedUserPoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedUserPoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListEntitiesForPolicy':
    post:
      operationId: ListEntitiesForPolicy
      description: '<p>Lists all IAM users, groups, and roles that the specified managed policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEntitiesForPolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEntitiesForPolicyRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListGroupPolicies':
    post:
      operationId: ListGroupPolicies
      description: '<p>Lists the names of the inline policies that are embedded in the specified IAM group.</p> <p>An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupPoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupPoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListGroups':
    post:
      operationId: ListGroups
      description: <p>Lists the IAM groups that have the specified path prefix.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListGroupsForUser':
    post:
      operationId: ListGroupsForUser
      description: <p>Lists the IAM groups that the specified IAM user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsForUserResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsForUserRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListInstanceProfiles':
    post:
      operationId: ListInstanceProfiles
      description: '<p>Lists the instance profiles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInstanceProfilesResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInstanceProfilesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListInstanceProfilesForRole':
    post:
      operationId: ListInstanceProfilesForRole
      description: '<p>Lists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInstanceProfilesForRoleResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInstanceProfilesForRoleRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListMFADevices':
    post:
      operationId: ListMFADevices
      description: '<p>Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request for this API.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMFADevicesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMFADevicesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListOpenIDConnectProviders':
    post:
      operationId: ListOpenIDConnectProviders
      description: Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOpenIDConnectProvidersResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOpenIDConnectProvidersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPolicies':
    post:
      operationId: ListPolicies
      description: '<p>Lists all the managed policies that are available in your AWS account, including your own customer-defined managed policies and all AWS managed policies.</p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPoliciesResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPolicyVersions':
    post:
      operationId: ListPolicyVersions
      description: '<p>Lists information about the versions of the specified managed policy, including the version that is currently set as the policy''s default version.</p> <p>For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyVersionsResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPolicyVersionsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRolePolicies':
    post:
      operationId: ListRolePolicies
      description: '<p>Lists the names of the inline policies that are embedded in the specified IAM role.</p> <p>An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRolePoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRolePoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRoles':
    post:
      operationId: ListRoles
      description: '<p>Lists the IAM roles that have the specified path prefix. If there are none, the operation returns an empty list. For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRolesResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRolesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListSAMLProviders':
    post:
      operationId: ListSAMLProviders
      description: '<p>Lists the SAML provider resource objects defined in IAM in the account.</p> <note> <p> This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSAMLProvidersResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSAMLProvidersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListSSHPublicKeys':
    post:
      operationId: ListSSHPublicKeys
      description: '<p>Returns information about the SSH public keys associated with the specified IAM user. If there are none, the operation returns an empty list.</p> <p>The SSH public keys returned by this operation are used only for authenticating the IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSSHPublicKeysResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSSHPublicKeysRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListServerCertificates':
    post:
      operationId: ListServerCertificates
      description: '<p>Lists the server certificates stored in IAM that have the specified path prefix. If none exist, the operation returns an empty list.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about working with server certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServerCertificatesResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServerCertificatesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListServiceSpecificCredentials':
    post:
      operationId: ListServiceSpecificCredentials
      description: 'Returns information about the service-specific credentials associated with the specified IAM user. If there are none, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an AWS service, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html">Set Up service-specific credentials</a> in the AWS CodeCommit User Guide.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListServiceSpecificCredentialsResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceNotSupportedException
          schema:
            $ref: '#/definitions/ServiceNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListServiceSpecificCredentialsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListSigningCertificates':
    post:
      operationId: ListSigningCertificates
      description: '<p>Returns information about the signing certificates associated with the specified IAM user. If there are none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request for this API. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSigningCertificatesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSigningCertificatesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListUserPolicies':
    post:
      operationId: ListUserPolicies
      description: '<p>Lists the names of the inline policies embedded in the specified IAM user.</p> <p>An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUserPoliciesResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUserPoliciesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListUsers':
    post:
      operationId: ListUsers
      description: '<p>Lists the IAM users that have the specified path prefix. If no path prefix is specified, the operation returns all users in the AWS account. If there are none, the operation returns an empty list.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsersResponse'
        '480':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListVirtualMFADevices':
    post:
      operationId: ListVirtualMFADevices
      description: '<p>Lists the virtual MFA devices defined in the AWS account by assignment status. If you do not specify an assignment status, the operation returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListVirtualMFADevicesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVirtualMFADevicesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutGroupPolicy':
    post:
      operationId: PutGroupPolicy
      description: '<p>Adds or updates an inline policy document that is embedded in the specified IAM group.</p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a group, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutGroupPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutRolePermissionsBoundary':
    post:
      operationId: PutRolePermissionsBoundary
      description: '<p>Adds or updates the policy that is specified as the IAM role''s permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a role. Use the boundary to control the maximum permissions that the role can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the role.</p> <p>You cannot set the boundary for a service-linked role. </p> <important> <p>Policies used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the role. To learn how the effective permissions for a role are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '483':
          description: PolicyNotAttachableException
          schema:
            $ref: '#/definitions/PolicyNotAttachableException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRolePermissionsBoundaryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutRolePolicy':
    post:
      operationId: PutRolePolicy
      description: '<p>Adds or updates an inline policy document that is embedded in the specified IAM role.</p> <p>When you embed an inline policy in a role, the inline policy is used as part of the role''s access (permissions) policy. The role''s trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role''s trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>.</p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed with a role, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutUserPermissionsBoundary':
    post:
      operationId: PutUserPermissionsBoundary
      description: '<p>Adds or updates the policy that is specified as the IAM user''s permissions boundary. You can use an AWS managed policy or a customer managed policy to set the boundary for a user. Use the boundary to control the maximum permissions that the user can have. Setting a permissions boundary is an advanced feature that can affect the permissions for the user.</p> <important> <p>Policies that are used as permissions boundaries do not provide permissions. You must also attach a permissions policy to the user. To learn how the effective permissions for a user are evaluated, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html">IAM JSON Policy Evaluation Logic</a> in the IAM User Guide. </p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: PolicyNotAttachableException
          schema:
            $ref: '#/definitions/PolicyNotAttachableException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutUserPermissionsBoundaryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutUserPolicy':
    post:
      operationId: PutUserPolicy
      description: '<p>Adds or updates an inline policy document that is embedded in the specified IAM user.</p> <p>An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about limits on the number of inline policies that you can embed in a user, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html">Limitations on IAM Entities</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutUserPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveClientIDFromOpenIDConnectProvider':
    post:
      operationId: RemoveClientIDFromOpenIDConnectProvider
      description: <p>Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object.</p> <p>This operation is idempotent; it does not fail or return an error if you try to remove a client ID that does not exist.</p>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveClientIDFromOpenIDConnectProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveRoleFromInstanceProfile':
    post:
      operationId: RemoveRoleFromInstanceProfile
      description: '<p>Removes the specified IAM role from the specified EC2 instance profile.</p> <important> <p>Make sure that you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance might break any applications running on the instance.</p> </important> <p> For more information about IAM roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html">Working with Roles</a>. For more information about instance profiles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About Instance Profiles</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveRoleFromInstanceProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveUserFromGroup':
    post:
      operationId: RemoveUserFromGroup
      description: Removes the specified user from the specified group.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveUserFromGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResetServiceSpecificCredential':
    post:
      operationId: ResetServiceSpecificCredential
      description: Resets the password for a service-specific credential. The new password is AWS generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetServiceSpecificCredentialResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetServiceSpecificCredentialRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResyncMFADevice':
    post:
      operationId: ResyncMFADevice
      description: '<p>Synchronizes the specified MFA device with its IAM resource object on the AWS servers.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a Virtual MFA Device</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidAuthenticationCodeException
          schema:
            $ref: '#/definitions/InvalidAuthenticationCodeException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResyncMFADeviceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetDefaultPolicyVersion':
    post:
      operationId: SetDefaultPolicyVersion
      description: '<p>Sets the specified version of the specified policy as the policy''s default (operative) version.</p> <p>This operation affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API.</p> <p>For information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetDefaultPolicyVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SimulateCustomPolicy':
    post:
      operationId: SimulateCustomPolicy
      description: '<p>Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API operations and AWS resources to determine the policies'' effective permissions. The policies are provided as strings.</p> <p>The simulation does not perform the API operations; it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p>If you want to simulate existing policies attached to an IAM user, group, or role, use <a>SimulatePrincipalPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForCustomPolicy</a>.</p> <p>If the output is long, you can use <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SimulatePolicyResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: PolicyEvaluationException
          schema:
            $ref: '#/definitions/PolicyEvaluationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimulateCustomPolicyRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SimulatePrincipalPolicy':
    post:
      operationId: SimulatePrincipalPolicy
      description: '<p>Simulate how a set of IAM policies attached to an IAM entity works with a list of API operations and AWS resources to determine the policies'' effective permissions. The entity can be an IAM user, group, or role. If you specify a user, then the simulation also includes all of the policies that are attached to groups that the user belongs to.</p> <p>You can optionally include a list of one or more additional policies specified as strings to include in the simulation. If you want to simulate only policies specified as strings, use <a>SimulateCustomPolicy</a> instead.</p> <p>You can also optionally include one resource-based policy to be evaluated with each of the resources included in the simulation.</p> <p>The simulation does not perform the API operations, it only checks the authorization to determine if the simulated policies allow or deny the operations.</p> <p> <b>Note:</b> This API discloses information about the permissions granted to other users. If you do not want users to see other user''s permissions, then consider allowing them to use <a>SimulateCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by AWS and its services that provide details about the context of an API query request. You can use the <code>Condition</code> element of an IAM policy to evaluate context keys. To get the list of context keys that the policies require for correct simulation, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>If the output is long, you can use the <code>MaxItems</code> and <code>Marker</code> parameters to paginate the results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SimulatePolicyResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: PolicyEvaluationException
          schema:
            $ref: '#/definitions/PolicyEvaluationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimulatePrincipalPolicyRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAccessKey':
    post:
      operationId: UpdateAccessKey
      description: '<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user''s key as part of a key rotation workflow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <p>For information about rotating keys, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing Keys and Certificates</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAccessKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAccountPasswordPolicy':
    post:
      operationId: UpdateAccountPasswordPolicy
      description: '<p>Updates the password policy settings for the AWS account.</p> <note> <ul> <li> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter''s value reverts to its default value. See the <b>Request Parameters</b> section for each parameter''s default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that parameter when you invoke the operation.</p> </li> </ul> </note> <p> For more information about using a password policy, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM Password Policy</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAccountPasswordPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssumeRolePolicy':
    post:
      operationId: UpdateAssumeRolePolicy
      description: 'Updates the policy that grants an IAM entity permission to assume a role. This is typically referred to as the "role trust policy". For more information about roles, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using Roles to Delegate Permissions and Federate Identities</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: MalformedPolicyDocumentException
          schema:
            $ref: '#/definitions/MalformedPolicyDocumentException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssumeRolePolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateGroup':
    post:
      operationId: UpdateGroup
      description: '<p>Updates the name and/or the path of the specified IAM group.</p> <important> <p> You should understand the implications of changing a group''s path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html">Renaming Users and Groups</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the role group with the old name and the new name. For example, to change the group named <code>Managers</code> to <code>MGRs</code>, the principal must have a policy that allows them to update both groups. If the principal has permission to update the <code>Managers</code> group, but not the <code>MGRs</code> group, then the update fails. For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access Management</a>. </p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateLoginProfile':
    post:
      operationId: UpdateLoginProfile
      description: '<p>Changes the password for the specified IAM user.</p> <p>IAM users can change their own passwords by calling <a>ChangePassword</a>. For more information about modifying passwords, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing Passwords</a> in the <i>IAM User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: PasswordPolicyViolationException
          schema:
            $ref: '#/definitions/PasswordPolicyViolationException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLoginProfileRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateOpenIDConnectProviderThumbprint':
    post:
      operationId: UpdateOpenIDConnectProviderThumbprint
      description: '<p>Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints.</p> <p>The list that you pass with this operation completely replaces the existing list of thumbprints. (The lists are not merged.)</p> <p>Typically, you need to update a thumbprint only when the identity provider''s certificate changes, which occurs rarely. However, if the provider''s certificate <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC provider as a principal fails until the certificate thumbprint is updated.</p> <note> <p>Because trust for the OIDC provider is derived from the provider''s certificate and is validated by the thumbprint, it is best to limit access to the <code>UpdateOpenIDConnectProviderThumbprint</code> operation to highly privileged users.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOpenIDConnectProviderThumbprintRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateRole':
    post:
      operationId: UpdateRole
      description: Updates the description or maximum session duration setting of a role.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRoleResponse'
        '480':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateRoleDescription':
    post:
      operationId: UpdateRoleDescription
      description: <p>Use instead.</p> <p>Modifies only the description of a role. This operation performs the same function as the <code>Description</code> parameter in the <code>UpdateRole</code> operation.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRoleDescriptionResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: UnmodifiableEntityException
          schema:
            $ref: '#/definitions/UnmodifiableEntityException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRoleDescriptionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateSAMLProvider':
    post:
      operationId: UpdateSAMLProvider
      description: '<p>Updates the metadata document for an existing SAML provider resource object.</p> <note> <p>This operation requires <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSAMLProviderResponse'
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSAMLProviderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateSSHPublicKey':
    post:
      operationId: UpdateSSHPublicKey
      description: '<p>Sets the status of an IAM user''s SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user''s SSH public key as part of a key rotation work flow.</p> <p>The SSH public key affected by this operation is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSSHPublicKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateServerCertificate':
    post:
      operationId: UpdateServerCertificate
      description: '<p>Updates the name and/or the path of the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic also includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <important> <p>You should understand the implications of changing a server certificate''s path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs_manage.html#RenamingServerCerts">Renaming a Server Certificate</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p>The person making the request (the principal), must have permission to change the server certificate with the old name and the new name. For example, to change the certificate named <code>ProductionCert</code> to <code>ProdCert</code>, the principal must have a policy that allows them to update both certificates. If the principal has permission to update the <code>ProductionCert</code> group, but not the <code>ProdCert</code> certificate, then the update fails. For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access Management</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServerCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateServiceSpecificCredential':
    post:
      operationId: UpdateServiceSpecificCredential
      description: Sets the status of a service-specific credential to <code>Active</code> or <code>Inactive</code>. Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user's service-specific credential as part of a credential rotation work flow.
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceSpecificCredentialRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateSigningCertificate':
    post:
      operationId: UpdateSigningCertificate
      description: '<p>Changes the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user''s signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSigningCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateUser':
    post:
      operationId: UpdateUser
      description: '<p>Updates the name and/or the path of the specified IAM user.</p> <important> <p> You should understand the implications of changing an IAM user''s path or name. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_manage.html#id_users_renaming">Renaming an IAM User</a> and <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups_manage_rename.html">Renaming an IAM Group</a> in the <i>IAM User Guide</i>.</p> </important> <note> <p> To change a user name, the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html">Permissions and Policies</a>. </p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '483':
          description: EntityTemporarilyUnmodifiableException
          schema:
            $ref: '#/definitions/EntityTemporarilyUnmodifiableException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UploadSSHPublicKey':
    post:
      operationId: UploadSSHPublicKey
      description: '<p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href="http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadSSHPublicKeyResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '482':
          description: InvalidPublicKeyException
          schema:
            $ref: '#/definitions/InvalidPublicKeyException'
        '483':
          description: DuplicateSSHPublicKeyException
          schema:
            $ref: '#/definitions/DuplicateSSHPublicKeyException'
        '484':
          description: UnrecognizedPublicKeyEncodingException
          schema:
            $ref: '#/definitions/UnrecognizedPublicKeyEncodingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadSSHPublicKeyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UploadServerCertificate':
    post:
      operationId: UploadServerCertificate
      description: '<p>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.</p> <p>We recommend that you use <a href="https://aws.amazon.com/certificate-manager/">AWS Certificate Manager</a> to provision, manage, and deploy your server certificates. With ACM you can request a certificate, deploy it to AWS resources, and let ACM handle certificate renewals for you. Certificates provided by ACM are free. For more information about using ACM, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS Certificate Manager User Guide</a>.</p> <p>For more information about working with server certificates, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with Server Certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of AWS services that can use the server certificates that you manage with IAM.</p> <p>For information about the number of server certificates you can upload, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html">Limitations on IAM Entities and Objects</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/programming.html">Calling the API by Making HTTP Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadServerCertificateResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: MalformedCertificateException
          schema:
            $ref: '#/definitions/MalformedCertificateException'
        '483':
          description: KeyPairMismatchException
          schema:
            $ref: '#/definitions/KeyPairMismatchException'
        '484':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadServerCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UploadSigningCertificate':
    post:
      operationId: UploadSigningCertificate
      description: '<p>Uploads an X.509 signing certificate and associates it with the specified IAM user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>If the <code>UserName</code> field is not specified, the IAM user name is determined implicitly based on the AWS access key ID used to sign the request. Because this operation works for access keys under the AWS account, you can use this operation to manage AWS account root user credentials even if the AWS account has no associated users.</p> <note> <p>Because the body of an X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href="http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making Query Requests</a> in the <i>IAM User Guide</i>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadSigningCertificateResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: MalformedCertificateException
          schema:
            $ref: '#/definitions/MalformedCertificateException'
        '483':
          description: InvalidCertificateException
          schema:
            $ref: '#/definitions/InvalidCertificateException'
        '484':
          description: DuplicateCertificateException
          schema:
            $ref: '#/definitions/DuplicateCertificateException'
        '485':
          description: NoSuchEntityException
          schema:
            $ref: '#/definitions/NoSuchEntityException'
        '486':
          description: ServiceFailureException
          schema:
            $ref: '#/definitions/ServiceFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadSigningCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddClientIDToOpenIDConnectProviderRequest:
    type: object
    required:
      - OpenIDConnectProviderArn
      - ClientID
    example:
      ClientID: my-application-ID
      OpenIDConnectProviderArn: 'arn:aws:iam::123456789012:oidc-provider/server.example.com'
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider resource to add the client ID to. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> operation.
      ClientID:
        $ref: '#/definitions/clientIDType'
        description: The client ID (also known as audience) to add to the IAM OpenID Connect provider resource.
  InvalidInputException:
    type: object
    properties:
      message:
        $ref: '#/definitions/invalidInputMessage'
    description: The request was rejected because an invalid or out-of-range value was supplied for an input parameter.
  NoSuchEntityException:
    type: object
    properties:
      message:
        $ref: '#/definitions/noSuchEntityMessage'
    description: The request was rejected because it referenced an entity that does not exist. The error message describes the entity.
  LimitExceededException:
    type: object
    properties:
      message:
        $ref: '#/definitions/limitExceededMessage'
    description: The request was rejected because it attempted to create resources beyond the current AWS account limits. The error message describes the limit exceeded.
  ServiceFailureException:
    type: object
    properties:
      message:
        $ref: '#/definitions/serviceFailureExceptionMessage'
    description: 'The request processing has failed because of an unknown error, exception or failure.'
  AddRoleToInstanceProfileRequest:
    type: object
    required:
      - InstanceProfileName
      - RoleName
    example:
      InstanceProfileName: Webserver
      RoleName: S3Access
    properties:
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: '<p>The name of the instance profile to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to add.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  EntityAlreadyExistsException:
    type: object
    properties:
      message:
        $ref: '#/definitions/entityAlreadyExistsMessage'
    description: The request was rejected because it attempted to create a resource that already exists.
  UnmodifiableEntityException:
    type: object
    properties:
      message:
        $ref: '#/definitions/unmodifiableEntityMessage'
    description: The request was rejected because only the service that depends on the service-linked role can modify or delete the role on your behalf. The error message includes the name of the service that depends on this service-linked role. You must request the change through that service.
  AddUserToGroupRequest:
    type: object
    required:
      - GroupName
      - UserName
    example:
      GroupName: Admins
      UserName: Bob
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to add.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  AttachGroupPolicyRequest:
    type: object
    required:
      - GroupName
      - PolicyArn
    example:
      GroupName: Finance
      PolicyArn: 'arn:aws:iam::aws:policy/ReadOnlyAccess'
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name (friendly name, not ARN) of the group to attach the policy to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  PolicyNotAttachableException:
    type: object
    properties:
      message:
        $ref: '#/definitions/policyNotAttachableMessage'
    description: The request failed because AWS service role policies can only be attached to the service-linked role for that service.
  AttachRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyArn
    example:
      PolicyArn: 'arn:aws:iam::aws:policy/ReadOnlyAccess'
      RoleName: ReadOnlyRole
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name (friendly name, not ARN) of the role to attach the policy to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  AttachUserPolicyRequest:
    type: object
    required:
      - UserName
      - PolicyArn
    example:
      PolicyArn: 'arn:aws:iam::aws:policy/AdministratorAccess'
      UserName: Alice
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name (friendly name, not ARN) of the IAM user to attach the policy to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  ChangePasswordRequest:
    type: object
    required:
      - OldPassword
      - NewPassword
    example:
      NewPassword: ']35d/{pB9Fo9wJ'
      OldPassword: 3s0K_;xh4~8XXI
    properties:
      OldPassword:
        $ref: '#/definitions/passwordType'
        description: The IAM user's current password.
      NewPassword:
        $ref: '#/definitions/passwordType'
        description: '<p>The new password. The new password must conform to the AWS account''s password policy, if one exists.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\u0020) through the end of the ASCII character range (\u00FF). You can also include the tab (\u0009), line feed (\u000A), and carriage return (\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>'
  InvalidUserTypeException:
    type: object
    properties:
      message:
        $ref: '#/definitions/invalidUserTypeMessage'
    description: The request was rejected because the type of user for the transaction was incorrect.
  EntityTemporarilyUnmodifiableException:
    type: object
    properties:
      message:
        $ref: '#/definitions/entityTemporarilyUnmodifiableMessage'
    description: 'The request was rejected because it referenced an entity that is temporarily unmodifiable, such as a user name that was deleted and then recreated. The error indicates that the request is likely to succeed if you try again after waiting several minutes. The error message describes the entity.'
  PasswordPolicyViolationException:
    type: object
    properties:
      message:
        $ref: '#/definitions/passwordPolicyViolationMessage'
    description: The request was rejected because the provided password did not meet the requirements imposed by the account password policy.
  CreateAccessKeyResponse:
    type: object
    required:
      - AccessKey
    example:
      AccessKey:
        AccessKeyId: AKIAIOSFODNN7EXAMPLE
        CreateDate: '2015-03-09T18:39:23.411Z'
        SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
        Status: Active
        UserName: Bob
    properties:
      AccessKey:
        $ref: '#/definitions/AccessKey'
        description: A structure with details about the access key.
    description: 'Contains the response to a successful <a>CreateAccessKey</a> request. '
  CreateAccessKeyRequest:
    type: object
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the IAM user that the new key will belong to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  CreateAccountAliasRequest:
    type: object
    required:
      - AccountAlias
    example:
      AccountAlias: examplecorp
    properties:
      AccountAlias:
        $ref: '#/definitions/accountAliasType'
        description: '<p>The account alias to create.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>'
  CreateGroupResponse:
    type: object
    required:
      - Group
    example:
      Group:
        Arn: 'arn:aws:iam::123456789012:group/Admins'
        CreateDate: '2015-03-09T20:30:24.940Z'
        GroupId: AIDGPMS9RO4H3FEXAMPLE
        GroupName: Admins
        Path: /
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: A structure containing details about the new group.
    description: 'Contains the response to a successful <a>CreateGroup</a> request. '
  CreateGroupRequest:
    type: object
    required:
      - GroupName
    example:
      GroupName: Admins
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: '<p> The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group to create. Do not include the path in this value.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The group name must be unique within the account. Group names are not distinguished by case. For example, you cannot create groups named both "ADMINS" and "admins".</p>'
  CreateInstanceProfileResponse:
    type: object
    required:
      - InstanceProfile
    example:
      InstanceProfile:
        Arn: 'arn:aws:iam::123456789012:instance-profile/Webserver'
        CreateDate: '2015-03-09T20:33:19.626Z'
        InstanceProfileId: AIPAJMBYC7DLSPEXAMPLE
        InstanceProfileName: Webserver
        Path: /
        Roles: []
    properties:
      InstanceProfile:
        $ref: '#/definitions/InstanceProfile'
        description: A structure containing details about the new instance profile.
    description: 'Contains the response to a successful <a>CreateInstanceProfile</a> request. '
  CreateInstanceProfileRequest:
    type: object
    required:
      - InstanceProfileName
    example:
      InstanceProfileName: Webserver
    properties:
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: '<p>The name of the instance profile to create.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Path:
        $ref: '#/definitions/pathType'
        description: '<p> The path to the instance profile. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
  CreateLoginProfileResponse:
    type: object
    required:
      - LoginProfile
    example:
      LoginProfile:
        CreateDate: '2015-03-10T20:55:40.274Z'
        PasswordResetRequired: true
        UserName: Bob
    properties:
      LoginProfile:
        $ref: '#/definitions/LoginProfile'
        description: A structure containing the user name and password create date.
    description: 'Contains the response to a successful <a>CreateLoginProfile</a> request. '
  CreateLoginProfileRequest:
    type: object
    required:
      - UserName
      - Password
    example:
      Password: 'h]6EszR}vJ*m'
      PasswordResetRequired: true
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user to create a password for. The user must already exist.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Password:
        $ref: '#/definitions/passwordType'
        description: '<p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (\u0020) through the end of the ASCII character range (\u00FF). You can also include the tab (\u0009), line feed (\u000A), and carriage return (\u000D) characters. Any of these characters are valid in a password. However, many tools, such as the AWS Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>'
      PasswordResetRequired:
        $ref: '#/definitions/booleanType'
        description: Specifies whether the user is required to set a new password on next sign-in.
  CreateOpenIDConnectProviderResponse:
    type: object
    example:
      OpenIDConnectProviderArn: 'arn:aws:iam::123456789012:oidc-provider/server.example.com'
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: 'The Amazon Resource Name (ARN) of the new IAM OpenID Connect provider that is created. For more information, see <a>OpenIDConnectProviderListEntry</a>. '
    description: 'Contains the response to a successful <a>CreateOpenIDConnectProvider</a> request. '
  CreateOpenIDConnectProviderRequest:
    type: object
    required:
      - Url
      - ThumbprintList
    example:
      ClientIDList:
        - my-application-id
      ThumbprintList:
        - 3768084dfb3d2b68b7897bf5f565da8efEXAMPLE
      Url: 'https://server.example.com'
    properties:
      Url:
        $ref: '#/definitions/OpenIDConnectProviderUrlType'
        description: '<p>The URL of the identity provider. The URL must begin with <code>https://</code> and should correspond to the <code>iss</code> claim in the provider''s OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like <code>https://server.example.org</code> or <code>https://example.com</code>.</p> <p>You cannot register the same provider multiple times in a single AWS account. If you try to submit a URL that has already been used for an OpenID Connect provider in the AWS account, you will get an error.</p>'
      ClientIDList:
        $ref: '#/definitions/clientIDListType'
        description: '<p>A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that''s sent as the <code>client_id</code> parameter on OAuth requests.)</p> <p>You can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider.</p> <p>There is no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code> operation accepts client IDs up to 255 characters long.</p>'
      ThumbprintList:
        $ref: '#/definitions/thumbprintListType'
        description: '<p>A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider''s server certificates. Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.</p> <p>The server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.</p> <p>You must provide at least one thumbprint when creating an IAM OIDC provider. For example, assume that the OIDC provider is <code>server.example.com</code> and the provider stores its keys at https://keys.server.example.com/openid-connect. In that case, the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com.</p> <p>For more information about obtaining the OIDC provider''s thumbprint, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html">Obtaining the Thumbprint for an OpenID Connect Provider</a> in the <i>IAM User Guide</i>.</p>'
  CreatePolicyResponse:
    type: object
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: A structure containing details about the new policy.
    description: 'Contains the response to a successful <a>CreatePolicy</a> request. '
  CreatePolicyRequest:
    type: object
    required:
      - PolicyName
      - PolicyDocument
    properties:
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The friendly name of the policy.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Path:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path for the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The JSON policy document that you want to use as the content for the new policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      Description:
        $ref: '#/definitions/policyDescriptionType'
        description: '<p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>'
  MalformedPolicyDocumentException:
    type: object
    properties:
      message:
        $ref: '#/definitions/malformedPolicyDocumentMessage'
    description: The request was rejected because the policy document was malformed. The error message describes the specific error.
  CreatePolicyVersionResponse:
    type: object
    properties:
      PolicyVersion:
        $ref: '#/definitions/PolicyVersion'
        description: A structure containing details about the new policy version.
    description: 'Contains the response to a successful <a>CreatePolicyVersion</a> request. '
  CreatePolicyVersionRequest:
    type: object
    required:
      - PolicyArn
      - PolicyDocument
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      SetAsDefault:
        $ref: '#/definitions/booleanType'
        description: '<p>Specifies whether to set this version as the policy''s default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
  CreateRoleResponse:
    type: object
    required:
      - Role
    example:
      Role:
        Arn: 'arn:aws:iam::123456789012:role/Test-Role'
        AssumeRolePolicyDocument: <URL-encoded-JSON>
        CreateDate: '2013-06-07T20:43:32.821Z'
        Path: /
        RoleId: AKIAIOSFODNN7EXAMPLE
        RoleName: Test-Role
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: A structure containing details about the new role.
    description: 'Contains the response to a successful <a>CreateRole</a> request. '
  CreateRoleRequest:
    type: object
    required:
      - RoleName
      - AssumeRolePolicyDocument
    example:
      AssumeRolePolicyDocument: <URL-encoded-JSON>
      Path: /
      RoleName: Test-Role
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: '<p> The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to create.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p> <p>Role names are not distinguished by case. For example, you cannot create roles named both "PRODROLE" and "prodrole".</p>'
      AssumeRolePolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The trust relationship policy document that grants an entity permission to assume the role.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      Description:
        $ref: '#/definitions/roleDescriptionType'
        description: A description of the role.
      MaxSessionDuration:
        $ref: '#/definitions/roleMaxSessionDurationType'
        description: '<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don''t specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>'
      PermissionsBoundary:
        $ref: '#/definitions/arnType'
        description: The ARN of the policy that is used to set the permissions boundary for the role.
  CreateSAMLProviderResponse:
    type: object
    properties:
      SAMLProviderArn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the new SAML provider resource in IAM.
    description: 'Contains the response to a successful <a>CreateSAMLProvider</a> request. '
  CreateSAMLProviderRequest:
    type: object
    required:
      - SAMLMetadataDocument
      - Name
    properties:
      SAMLMetadataDocument:
        $ref: '#/definitions/SAMLMetadataDocumentType'
        description: '<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer''s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization''s IdP.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html">About SAML 2.0-based Federation</a> in the <i>IAM User Guide</i> </p>'
      Name:
        $ref: '#/definitions/SAMLProviderNameType'
        description: '<p>The name of the provider to create.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  CreateServiceLinkedRoleResponse:
    type: object
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: A <a>Role</a> object that contains details about the newly created role.
  CreateServiceLinkedRoleRequest:
    type: object
    required:
      - AWSServiceName
    properties:
      AWSServiceName:
        $ref: '#/definitions/groupNameType'
        description: 'The AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code> '
      Description:
        $ref: '#/definitions/roleDescriptionType'
        description: The description of the role.
      CustomSuffix:
        $ref: '#/definitions/customSuffixType'
        description: 'A string that you provide, which is combined with the service name to form the complete role name. If you make multiple requests for the same service, then you must supply a different <code>CustomSuffix</code> for each request. Otherwise the request fails with a duplicate role name error. For example, you could add <code>-1</code> or <code>-debug</code> to the suffix.'
  CreateServiceSpecificCredentialResponse:
    type: object
    properties:
      ServiceSpecificCredential:
        $ref: '#/definitions/ServiceSpecificCredential'
        description: '<p>A structure that contains information about the newly created service-specific credential.</p> <important> <p>This is the only time that the password for this credential set is available. It cannot be recovered later. Instead, you will have to reset the password with <a>ResetServiceSpecificCredential</a>.</p> </important>'
  CreateServiceSpecificCredentialRequest:
    type: object
    required:
      - UserName
      - ServiceName
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      ServiceName:
        $ref: '#/definitions/serviceName'
        description: The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
  ServiceNotSupportedException:
    type: object
    properties:
      message:
        $ref: '#/definitions/serviceNotSupportedMessage'
    description: The specified service does not support service-specific credentials.
  CreateUserResponse:
    type: object
    example:
      User:
        Arn: 'arn:aws:iam::123456789012:user/Bob'
        CreateDate: '2013-06-08T03:20:41.270Z'
        Path: /
        UserId: AKIAIOSFODNN7EXAMPLE
        UserName: Bob
    properties:
      User:
        $ref: '#/definitions/User'
        description: A structure with details about the new IAM user.
    description: 'Contains the response to a successful <a>CreateUser</a> request. '
  CreateUserRequest:
    type: object
    required:
      - UserName
    example:
      UserName: Bob
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: '<p> The path for the user name. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the user to create.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. User names are not distinguished by case. For example, you cannot create users named both "TESTUSER" and "testuser".</p>'
      PermissionsBoundary:
        $ref: '#/definitions/arnType'
        description: The ARN of the policy that is used to set the permissions boundary for the user.
  CreateVirtualMFADeviceResponse:
    type: object
    required:
      - VirtualMFADevice
    properties:
      VirtualMFADevice:
        $ref: '#/definitions/VirtualMFADevice'
        description: A structure containing details about the new virtual MFA device.
    description: 'Contains the response to a successful <a>CreateVirtualMFADevice</a> request. '
  CreateVirtualMFADeviceRequest:
    type: object
    required:
      - VirtualMFADeviceName
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: '<p> The path for the virtual MFA device. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      VirtualMFADeviceName:
        $ref: '#/definitions/virtualMFADeviceName'
        description: '<p>The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeactivateMFADeviceRequest:
    type: object
    required:
      - UserName
      - SerialNumber
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user whose MFA device you want to deactivate.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
  DeleteAccessKeyRequest:
    type: object
    required:
      - AccessKeyId
    example:
      AccessKeyId: AKIDPMS9RO4H3FEXAMPLE
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      AccessKeyId:
        $ref: '#/definitions/accessKeyIdType'
        description: '<p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
  DeleteAccountAliasRequest:
    type: object
    required:
      - AccountAlias
    example:
      AccountAlias: mycompany
    properties:
      AccountAlias:
        $ref: '#/definitions/accountAliasType'
        description: '<p>The name of the account alias to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of lowercase letters, digits, and dashes. You cannot start or finish with a dash, nor can you have two dashes in a row.</p>'
  DeleteGroupRequest:
    type: object
    required:
      - GroupName
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the IAM group to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteConflictException:
    type: object
    properties:
      message:
        $ref: '#/definitions/deleteConflictMessage'
    description: The request was rejected because it attempted to delete a resource that has attached subordinate entities. The error message describes these entities.
  DeleteGroupPolicyRequest:
    type: object
    required:
      - GroupName
      - PolicyName
    example:
      GroupName: Admins
      PolicyName: ExamplePolicy
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteInstanceProfileRequest:
    type: object
    required:
      - InstanceProfileName
    example:
      InstanceProfileName: ExampleInstanceProfile
    properties:
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: '<p>The name of the instance profile to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteLoginProfileRequest:
    type: object
    required:
      - UserName
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the user whose password you want to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteOpenIDConnectProviderRequest:
    type: object
    required:
      - OpenIDConnectProviderArn
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the IAM OpenID Connect provider resource object to delete. You can get a list of OpenID Connect provider resource ARNs by using the <a>ListOpenIDConnectProviders</a> operation.
  DeletePolicyRequest:
    type: object
    required:
      - PolicyArn
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to delete.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  DeletePolicyVersionRequest:
    type: object
    required:
      - PolicyArn
      - VersionId
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      VersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: '<p>The policy version to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter ''v'' followed by one or two digits, and optionally followed by a period ''.'' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
  DeleteRoleRequest:
    type: object
    required:
      - RoleName
    example:
      RoleName: Test-Role
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteRolePermissionsBoundaryRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: 'The name (friendly name, not ARN) of the IAM role from which you want to remove the permissions boundary.'
  DeleteRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyName
    example:
      PolicyName: ExamplePolicy
      RoleName: Test-Role
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the inline policy to delete from the specified IAM role.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteSAMLProviderRequest:
    type: object
    required:
      - SAMLProviderArn
    properties:
      SAMLProviderArn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the SAML provider to delete.
  DeleteSSHPublicKeyRequest:
    type: object
    required:
      - UserName
      - SSHPublicKeyId
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SSHPublicKeyId:
        $ref: '#/definitions/publicKeyIdType'
        description: '<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
  DeleteServerCertificateRequest:
    type: object
    required:
      - ServerCertificateName
    properties:
      ServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: '<p>The name of the server certificate you want to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteServiceLinkedRoleResponse:
    type: object
    required:
      - DeletionTaskId
    properties:
      DeletionTaskId:
        $ref: '#/definitions/DeletionTaskIdType'
        description: The deletion task identifier that you can use to check the status of the deletion. This identifier is returned in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
  DeleteServiceLinkedRoleRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The name of the service-linked role to be deleted.
  DeleteServiceSpecificCredentialRequest:
    type: object
    required:
      - ServiceSpecificCredentialId
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      ServiceSpecificCredentialId:
        $ref: '#/definitions/serviceSpecificCredentialId'
        description: '<p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
  DeleteSigningCertificateRequest:
    type: object
    required:
      - CertificateId
    example:
      CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
      UserName: Anika
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      CertificateId:
        $ref: '#/definitions/certificateIdType'
        description: '<p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>'
  DeleteUserRequest:
    type: object
    required:
      - UserName
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteUserPermissionsBoundaryRequest:
    type: object
    required:
      - UserName
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: 'The name (friendly name, not ARN) of the IAM user from which you want to remove the permissions boundary.'
  DeleteUserPolicyRequest:
    type: object
    required:
      - UserName
      - PolicyName
    example:
      PolicyName: ExamplePolicy
      UserName: Juan
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  DeleteVirtualMFADeviceRequest:
    type: object
    required:
      - SerialNumber
    example:
      SerialNumber: 'arn:aws:iam::123456789012:mfa/ExampleName'
    properties:
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
  DetachGroupPolicyRequest:
    type: object
    required:
      - GroupName
      - PolicyArn
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name (friendly name, not ARN) of the IAM group to detach the policy from.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  DetachRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyArn
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  DetachUserPolicyRequest:
    type: object
    required:
      - UserName
      - PolicyArn
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name (friendly name, not ARN) of the IAM user to detach the policy from.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  EnableMFADeviceRequest:
    type: object
    required:
      - UserName
      - SerialNumber
      - AuthenticationCode1
      - AuthenticationCode2
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
      AuthenticationCode1:
        $ref: '#/definitions/authenticationCodeType'
        description: '<p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>'
      AuthenticationCode2:
        $ref: '#/definitions/authenticationCodeType'
        description: '<p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you can <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>'
  InvalidAuthenticationCodeException:
    type: object
    properties:
      message:
        $ref: '#/definitions/invalidAuthenticationCodeMessage'
    description: The request was rejected because the authentication code was not recognized. The error message describes the specific error.
  GenerateCredentialReportResponse:
    type: object
    properties:
      State:
        $ref: '#/definitions/ReportStateType'
        description: Information about the state of the credential report.
      Description:
        $ref: '#/definitions/ReportStateDescriptionType'
        description: Information about the credential report.
    description: 'Contains the response to a successful <a>GenerateCredentialReport</a> request. '
  GetAccessKeyLastUsedResponse:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: <p>The name of the AWS IAM user that owns this access key.</p> <p/>
      AccessKeyLastUsed:
        $ref: '#/definitions/AccessKeyLastUsed'
        description: Contains information about the last time the access key was used.
    description: Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.
  GetAccessKeyLastUsedRequest:
    type: object
    required:
      - AccessKeyId
    properties:
      AccessKeyId:
        $ref: '#/definitions/accessKeyIdType'
        description: '<p>The identifier of an access key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
  GetAccountAuthorizationDetailsResponse:
    type: object
    properties:
      UserDetailList:
        $ref: '#/definitions/userDetailListType'
        description: A list containing information about IAM users.
      GroupDetailList:
        $ref: '#/definitions/groupDetailListType'
        description: A list containing information about IAM groups.
      RoleDetailList:
        $ref: '#/definitions/roleDetailListType'
        description: A list containing information about IAM roles.
      Policies:
        $ref: '#/definitions/ManagedPolicyDetailListType'
        description: A list containing information about managed policies.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request. '
  GetAccountAuthorizationDetailsRequest:
    type: object
    properties:
      Filter:
        $ref: '#/definitions/entityListType'
        description: <p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
  GetAccountPasswordPolicyResponse:
    type: object
    required:
      - PasswordPolicy
    example:
      PasswordPolicy:
        AllowUsersToChangePassword: false
        ExpirePasswords: false
        HardExpiry: false
        MaxPasswordAge: 90
        MinimumPasswordLength: 8
        PasswordReusePrevention: 12
        RequireLowercaseCharacters: false
        RequireNumbers: true
        RequireSymbols: true
        RequireUppercaseCharacters: false
    properties:
      PasswordPolicy:
        $ref: '#/definitions/PasswordPolicy'
        description: A structure that contains details about the account's password policy.
    description: 'Contains the response to a successful <a>GetAccountPasswordPolicy</a> request. '
  GetAccountSummaryResponse:
    type: object
    example:
      SummaryMap:
        AccessKeysPerUserQuota: 2
        AccountAccessKeysPresent: 1
        AccountMFAEnabled: 0
        AccountSigningCertificatesPresent: 0
        AttachedPoliciesPerGroupQuota: 10
        AttachedPoliciesPerRoleQuota: 10
        AttachedPoliciesPerUserQuota: 10
        GroupPolicySizeQuota: 5120
        Groups: 15
        GroupsPerUserQuota: 10
        GroupsQuota: 100
        MFADevices: 6
        MFADevicesInUse: 3
        Policies: 8
        PoliciesQuota: 1000
        PolicySizeQuota: 5120
        PolicyVersionsInUse: 22
        PolicyVersionsInUseQuota: 10000
        ServerCertificates: 1
        ServerCertificatesQuota: 20
        SigningCertificatesPerUserQuota: 2
        UserPolicySizeQuota: 2048
        Users: 27
        UsersQuota: 5000
        VersionsPerPolicyQuota: 5
    properties:
      SummaryMap:
        $ref: '#/definitions/summaryMapType'
        description: A set of key value pairs containing information about IAM entity usage and IAM quotas.
    description: 'Contains the response to a successful <a>GetAccountSummary</a> request. '
  GetContextKeysForPolicyResponse:
    type: object
    properties:
      ContextKeyNames:
        $ref: '#/definitions/ContextKeyNamesResultListType'
        description: The list of context keys that are referenced in the input policies.
    description: 'Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a> or <a>GetContextKeysForCustomPolicy</a> request. '
  GetContextKeysForCustomPolicyRequest:
    type: object
    required:
      - PolicyInputList
    properties:
      PolicyInputList:
        $ref: '#/definitions/SimulationPolicyListType'
        description: '<p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  GetContextKeysForPrincipalPolicyRequest:
    type: object
    required:
      - PolicySourceArn
    properties:
      PolicySourceArn:
        $ref: '#/definitions/arnType'
        description: '<p>The ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies that are attached to the user. The list also includes all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must be URL encoded to be included as a part of a real HTML request.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      PolicyInputList:
        $ref: '#/definitions/SimulationPolicyListType'
        description: '<p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  GetCredentialReportResponse:
    type: object
    properties:
      Content:
        $ref: '#/definitions/ReportContentType'
        description: Contains the credential report. The report is Base64-encoded.
      ReportFormat:
        $ref: '#/definitions/ReportFormatType'
        description: The format (MIME type) of the credential report.
      GeneratedTime:
        $ref: '#/definitions/dateType'
        description: ' The date and time when the credential report was created, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>.'
    description: 'Contains the response to a successful <a>GetCredentialReport</a> request. '
  CredentialReportNotPresentException:
    type: object
    properties:
      message:
        $ref: '#/definitions/credentialReportNotPresentExceptionMessage'
    description: 'The request was rejected because the credential report does not exist. To generate a credential report, use <a>GenerateCredentialReport</a>.'
  CredentialReportExpiredException:
    type: object
    properties:
      message:
        $ref: '#/definitions/credentialReportExpiredExceptionMessage'
    description: 'The request was rejected because the most recent credential report has expired. To generate a new credential report, use <a>GenerateCredentialReport</a>. For more information about credential report expiration, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Getting Credential Reports</a> in the <i>IAM User Guide</i>.'
  CredentialReportNotReadyException:
    type: object
    properties:
      message:
        $ref: '#/definitions/credentialReportNotReadyExceptionMessage'
    description: The request was rejected because the credential report is still being generated.
  GetGroupResponse:
    type: object
    required:
      - Group
      - Users
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: A structure that contains details about the group.
      Users:
        $ref: '#/definitions/userListType'
        description: A list of users in the group.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>GetGroup</a> request. '
  GetGroupRequest:
    type: object
    required:
      - GroupName
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  GetGroupPolicyResponse:
    type: object
    required:
      - GroupName
      - PolicyName
      - PolicyDocument
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: The group the policy is associated with.
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The name of the policy.
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The policy document.
    description: 'Contains the response to a successful <a>GetGroupPolicy</a> request. '
  GetGroupPolicyRequest:
    type: object
    required:
      - GroupName
      - PolicyName
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group the policy is associated with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document to get.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetInstanceProfileResponse:
    type: object
    required:
      - InstanceProfile
    example:
      InstanceProfile:
        Arn: 'arn:aws:iam::336924118301:instance-profile/ExampleInstanceProfile'
        CreateDate: '2013-06-12T23:52:02Z'
        InstanceProfileId: AID2MAB8DPLSRHEXAMPLE
        InstanceProfileName: ExampleInstanceProfile
        Path: /
        Roles:
          - Arn: 'arn:aws:iam::336924118301:role/Test-Role'
            AssumeRolePolicyDocument: <URL-encoded-JSON>
            CreateDate: '2013-01-09T06:33:26Z'
            Path: /
            RoleId: AIDGPMS9RO4H3FEXAMPLE
            RoleName: Test-Role
    properties:
      InstanceProfile:
        $ref: '#/definitions/InstanceProfile'
        description: A structure containing details about the instance profile.
    description: 'Contains the response to a successful <a>GetInstanceProfile</a> request. '
  GetInstanceProfileRequest:
    type: object
    required:
      - InstanceProfileName
    example:
      InstanceProfileName: ExampleInstanceProfile
    properties:
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: '<p>The name of the instance profile to get information about.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetLoginProfileResponse:
    type: object
    required:
      - LoginProfile
    example:
      LoginProfile:
        CreateDate: '2012-09-21T23:03:39Z'
        UserName: Anika
    properties:
      LoginProfile:
        $ref: '#/definitions/LoginProfile'
        description: A structure containing the user name and password create date for the user.
    description: 'Contains the response to a successful <a>GetLoginProfile</a> request. '
  GetLoginProfileRequest:
    type: object
    required:
      - UserName
    example:
      UserName: Anika
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetOpenIDConnectProviderResponse:
    type: object
    properties:
      Url:
        $ref: '#/definitions/OpenIDConnectProviderUrlType'
        description: 'The URL that the IAM OIDC provider resource object is associated with. For more information, see <a>CreateOpenIDConnectProvider</a>.'
      ClientIDList:
        $ref: '#/definitions/clientIDListType'
        description: 'A list of client IDs (also known as audiences) that are associated with the specified IAM OIDC provider resource object. For more information, see <a>CreateOpenIDConnectProvider</a>.'
      ThumbprintList:
        $ref: '#/definitions/thumbprintListType'
        description: 'A list of certificate thumbprints that are associated with the specified IAM OIDC provider resource object. For more information, see <a>CreateOpenIDConnectProvider</a>. '
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date and time when the IAM OIDC provider resource object was created in the AWS account.
    description: 'Contains the response to a successful <a>GetOpenIDConnectProvider</a> request. '
  GetOpenIDConnectProviderRequest:
    type: object
    required:
      - OpenIDConnectProviderArn
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the OIDC provider resource object in IAM to get information for. You can get a list of OIDC provider resource ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  GetPolicyResponse:
    type: object
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: A structure containing details about the policy.
    description: 'Contains the response to a successful <a>GetPolicy</a> request. '
  GetPolicyRequest:
    type: object
    required:
      - PolicyArn
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  GetPolicyVersionResponse:
    type: object
    properties:
      PolicyVersion:
        $ref: '#/definitions/PolicyVersion'
        description: A structure containing details about the policy version.
    description: 'Contains the response to a successful <a>GetPolicyVersion</a> request. '
  GetPolicyVersionRequest:
    type: object
    required:
      - PolicyArn
      - VersionId
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      VersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: '<p>Identifies the policy version to retrieve.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter ''v'' followed by one or two digits, and optionally followed by a period ''.'' and a string of letters and digits.</p>'
  GetRoleResponse:
    type: object
    required:
      - Role
    example:
      Role:
        Arn: 'arn:aws:iam::123456789012:role/Test-Role'
        AssumeRolePolicyDocument: <URL-encoded-JSON>
        CreateDate: '2013-04-18T05:01:58Z'
        Path: /
        RoleId: AIDIODR4TAW7CSEXAMPLE
        RoleName: Test-Role
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: A structure containing details about the IAM role.
    description: 'Contains the response to a successful <a>GetRole</a> request. '
  GetRoleRequest:
    type: object
    required:
      - RoleName
    example:
      RoleName: Test-Role
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the IAM role to get information about.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetRolePolicyResponse:
    type: object
    required:
      - RoleName
      - PolicyName
      - PolicyDocument
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The role the policy is associated with.
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The name of the policy.
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The policy document.
    description: 'Contains the response to a successful <a>GetRolePolicy</a> request. '
  GetRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role associated with the policy.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document to get.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetSAMLProviderResponse:
    type: object
    properties:
      SAMLMetadataDocument:
        $ref: '#/definitions/SAMLMetadataDocumentType'
        description: The XML metadata document that includes information about an identity provider.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date and time when the SAML provider was created.
      ValidUntil:
        $ref: '#/definitions/dateType'
        description: The expiration date and time for the SAML provider.
    description: 'Contains the response to a successful <a>GetSAMLProvider</a> request. '
  GetSAMLProviderRequest:
    type: object
    required:
      - SAMLProviderArn
    properties:
      SAMLProviderArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the SAML provider resource object in IAM to get information about.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  GetSSHPublicKeyResponse:
    type: object
    properties:
      SSHPublicKey:
        $ref: '#/definitions/SSHPublicKey'
        description: A structure containing details about the SSH public key.
    description: Contains the response to a successful <a>GetSSHPublicKey</a> request.
  GetSSHPublicKeyRequest:
    type: object
    required:
      - UserName
      - SSHPublicKeyId
      - Encoding
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SSHPublicKeyId:
        $ref: '#/definitions/publicKeyIdType'
        description: '<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
      Encoding:
        $ref: '#/definitions/encodingType'
        description: 'Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.'
  UnrecognizedPublicKeyEncodingException:
    type: object
    properties:
      message:
        $ref: '#/definitions/unrecognizedPublicKeyEncodingMessage'
    description: The request was rejected because the public key encoding format is unsupported or unrecognized.
  GetServerCertificateResponse:
    type: object
    required:
      - ServerCertificate
    properties:
      ServerCertificate:
        $ref: '#/definitions/ServerCertificate'
        description: A structure containing details about the server certificate.
    description: 'Contains the response to a successful <a>GetServerCertificate</a> request. '
  GetServerCertificateRequest:
    type: object
    required:
      - ServerCertificateName
    properties:
      ServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: '<p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetServiceLinkedRoleDeletionStatusResponse:
    type: object
    required:
      - Status
    properties:
      Status:
        $ref: '#/definitions/DeletionTaskStatusType'
        description: The status of the deletion.
      Reason:
        $ref: '#/definitions/DeletionTaskFailureReasonType'
        description: An object that contains details about the reason the deletion failed.
  GetServiceLinkedRoleDeletionStatusRequest:
    type: object
    required:
      - DeletionTaskId
    properties:
      DeletionTaskId:
        $ref: '#/definitions/DeletionTaskIdType'
        description: The deletion task identifier. This identifier is returned by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
  GetUserResponse:
    type: object
    required:
      - User
    example:
      User:
        Arn: 'arn:aws:iam::123456789012:user/Bob'
        CreateDate: '2012-09-21T23:03:13Z'
        Path: /
        UserId: AKIAIOSFODNN7EXAMPLE
        UserName: Bob
    properties:
      User:
        $ref: '#/definitions/User'
        description: '<p>A structure containing details about the IAM user.</p> <important> <p>Due to a service issue, password last used data does not include password use from May 3rd 2018 22:50 PDT to May 23rd 2018 14:08 PDT. This affects <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_finding-unused.html">last sign-in</a> dates shown in the IAM console and password last used dates in the <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html">IAM credential report</a>, and returned by this GetUser API. If users signed in during the affected time, the password last used date that is returned is the date the user last signed in before May 3rd 2018. For users that signed in after May 23rd 2018 14:08 PDT, the returned password last used date is accurate.</p> <p>If you use password last used information to identify unused credentials for deletion, such as deleting users who did not sign in to AWS in the last 90 days, we recommend that you adjust your evaluation window to include dates after May 23rd 2018. Alternatively, if your users use access keys to access AWS programmatically you can refer to access key last used information because it is accurate for all dates. </p> </important>'
    description: 'Contains the response to a successful <a>GetUser</a> request. '
  GetUserRequest:
    type: object
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  GetUserPolicyResponse:
    type: object
    required:
      - UserName
      - PolicyName
      - PolicyDocument
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: The user the policy is associated with.
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The name of the policy.
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The policy document.
    description: 'Contains the response to a successful <a>GetUserPolicy</a> request. '
  GetUserPolicyRequest:
    type: object
    required:
      - UserName
      - PolicyName
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user who the policy is associated with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document to get.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  ListAccessKeysResponse:
    type: object
    required:
      - AccessKeyMetadata
    example:
      AccessKeyMetadata:
        - AccessKeyId: AKIA111111111EXAMPLE
          CreateDate: '2016-12-01T22:19:58Z'
          Status: Active
          UserName: Alice
        - AccessKeyId: AKIA222222222EXAMPLE
          CreateDate: '2016-12-01T22:20:01Z'
          Status: Active
          UserName: Alice
    properties:
      AccessKeyMetadata:
        $ref: '#/definitions/accessKeyMetadataListType'
        description: A list of objects containing metadata about the access keys.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListAccessKeys</a> request. '
  ListAccessKeysRequest:
    type: object
    example:
      UserName: Alice
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListAccountAliasesResponse:
    type: object
    required:
      - AccountAliases
    example:
      AccountAliases:
        - exmaple-corporation
    properties:
      AccountAliases:
        $ref: '#/definitions/accountAliasListType'
        description: A list of aliases associated with the account. AWS supports only one alias per account.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListAccountAliases</a> request. '
  ListAccountAliasesRequest:
    type: object
    example: {}
    properties:
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListAttachedGroupPoliciesResponse:
    type: object
    properties:
      AttachedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of the attached policies.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListAttachedGroupPolicies</a> request. '
  ListAttachedGroupPoliciesRequest:
    type: object
    required:
      - GroupName
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name (friendly name, not ARN) of the group to list attached policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PathPrefix:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListAttachedRolePoliciesResponse:
    type: object
    properties:
      AttachedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of the attached policies.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListAttachedRolePolicies</a> request. '
  ListAttachedRolePoliciesRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name (friendly name, not ARN) of the role to list attached policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PathPrefix:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListAttachedUserPoliciesResponse:
    type: object
    properties:
      AttachedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of the attached policies.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListAttachedUserPolicies</a> request. '
  ListAttachedUserPoliciesRequest:
    type: object
    required:
      - UserName
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name (friendly name, not ARN) of the user to list attached policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PathPrefix:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListEntitiesForPolicyResponse:
    type: object
    properties:
      PolicyGroups:
        $ref: '#/definitions/PolicyGroupListType'
        description: A list of IAM groups that the policy is attached to.
      PolicyUsers:
        $ref: '#/definitions/PolicyUserListType'
        description: A list of IAM users that the policy is attached to.
      PolicyRoles:
        $ref: '#/definitions/PolicyRoleListType'
        description: A list of IAM roles that the policy is attached to.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListEntitiesForPolicy</a> request. '
  ListEntitiesForPolicyRequest:
    type: object
    required:
      - PolicyArn
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      EntityFilter:
        $ref: '#/definitions/EntityType'
        description: '<p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>'
      PathPrefix:
        $ref: '#/definitions/pathType'
        description: '<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      PolicyUsageFilter:
        $ref: '#/definitions/PolicyUsageType'
        description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListGroupPoliciesResponse:
    type: object
    required:
      - PolicyNames
    example:
      PolicyNames:
        - AdminRoot
        - KeyPolicy
    properties:
      PolicyNames:
        $ref: '#/definitions/policyNameListType'
        description: '<p>A list of policy names.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListGroupPolicies</a> request. '
  ListGroupPoliciesRequest:
    type: object
    required:
      - GroupName
    example:
      GroupName: Admins
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group to list policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListGroupsResponse:
    type: object
    required:
      - Groups
    example:
      Groups:
        - Arn: 'arn:aws:iam::123456789012:group/Admins'
          CreateDate: '2016-12-15T21:40:08.121Z'
          GroupId: AGPA1111111111EXAMPLE
          GroupName: Admins
          Path: /division_abc/subdivision_xyz/
        - Arn: 'arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test'
          CreateDate: '2016-11-30T14:10:01.156Z'
          GroupId: AGP22222222222EXAMPLE
          GroupName: Test
          Path: /division_abc/subdivision_xyz/product_1234/engineering/
        - Arn: 'arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers'
          CreateDate: '2016-06-12T20:14:52.032Z'
          GroupId: AGPI3333333333EXAMPLE
          GroupName: Managers
          Path: /division_abc/subdivision_xyz/product_1234/
    properties:
      Groups:
        $ref: '#/definitions/groupListType'
        description: A list of groups.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListGroups</a> request. '
  ListGroupsRequest:
    type: object
    example: {}
    properties:
      PathPrefix:
        $ref: '#/definitions/pathPrefixType'
        description: '<p> The path prefix for filtering the results. For example, the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListGroupsForUserResponse:
    type: object
    required:
      - Groups
    example:
      Groups:
        - Arn: 'arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test'
          CreateDate: '2016-11-30T14:10:01.156Z'
          GroupId: AGP2111111111EXAMPLE
          GroupName: Test
          Path: /division_abc/subdivision_xyz/product_1234/engineering/
        - Arn: 'arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers'
          CreateDate: '2016-06-12T20:14:52.032Z'
          GroupId: AGPI222222222SEXAMPLE
          GroupName: Managers
          Path: /division_abc/subdivision_xyz/product_1234/
    properties:
      Groups:
        $ref: '#/definitions/groupListType'
        description: A list of groups.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListGroupsForUser</a> request. '
  ListGroupsForUserRequest:
    type: object
    required:
      - UserName
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to list groups for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListInstanceProfilesResponse:
    type: object
    required:
      - InstanceProfiles
    properties:
      InstanceProfiles:
        $ref: '#/definitions/instanceProfileListType'
        description: A list of instance profiles.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListInstanceProfiles</a> request. '
  ListInstanceProfilesRequest:
    type: object
    properties:
      PathPrefix:
        $ref: '#/definitions/pathPrefixType'
        description: '<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListInstanceProfilesForRoleResponse:
    type: object
    required:
      - InstanceProfiles
    properties:
      InstanceProfiles:
        $ref: '#/definitions/instanceProfileListType'
        description: A list of instance profiles.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListInstanceProfilesForRole</a> request. '
  ListInstanceProfilesForRoleRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to list instance profiles for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListMFADevicesResponse:
    type: object
    required:
      - MFADevices
    properties:
      MFADevices:
        $ref: '#/definitions/mfaDeviceListType'
        description: A list of MFA devices.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListMFADevices</a> request. '
  ListMFADevicesRequest:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user whose MFA devices you want to list.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListOpenIDConnectProvidersResponse:
    type: object
    properties:
      OpenIDConnectProviderList:
        $ref: '#/definitions/OpenIDConnectProviderListType'
        description: The list of IAM OIDC provider resource objects defined in the AWS account.
    description: 'Contains the response to a successful <a>ListOpenIDConnectProviders</a> request. '
  ListOpenIDConnectProvidersRequest:
    type: object
    properties: {}
  ListPoliciesResponse:
    type: object
    properties:
      Policies:
        $ref: '#/definitions/policyListType'
        description: A list of policies.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListPolicies</a> request. '
  ListPoliciesRequest:
    type: object
    properties:
      Scope:
        $ref: '#/definitions/policyScopeType'
        description: '<p>The scope to use for filtering the results.</p> <p>To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>'
      OnlyAttached:
        $ref: '#/definitions/booleanType'
        description: '<p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>'
      PathPrefix:
        $ref: '#/definitions/policyPathType'
        description: 'The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.'
      PolicyUsageFilter:
        $ref: '#/definitions/PolicyUsageType'
        description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListPolicyVersionsResponse:
    type: object
    properties:
      Versions:
        $ref: '#/definitions/policyDocumentVersionListType'
        description: '<p>A list of policy versions.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListPolicyVersions</a> request. '
  ListPolicyVersionsRequest:
    type: object
    required:
      - PolicyArn
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListRolePoliciesResponse:
    type: object
    required:
      - PolicyNames
    properties:
      PolicyNames:
        $ref: '#/definitions/policyNameListType'
        description: A list of policy names.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListRolePolicies</a> request. '
  ListRolePoliciesRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to list policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListRolesResponse:
    type: object
    required:
      - Roles
    properties:
      Roles:
        $ref: '#/definitions/roleListType'
        description: A list of roles.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListRoles</a> request. '
  ListRolesRequest:
    type: object
    properties:
      PathPrefix:
        $ref: '#/definitions/pathPrefixType'
        description: '<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all roles whose path starts with <code>/application_abc/component_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListSAMLProvidersResponse:
    type: object
    properties:
      SAMLProviderList:
        $ref: '#/definitions/SAMLProviderListType'
        description: The list of SAML provider resource objects defined in IAM for this AWS account.
    description: 'Contains the response to a successful <a>ListSAMLProviders</a> request. '
  ListSAMLProvidersRequest:
    type: object
    properties: {}
  ListSSHPublicKeysResponse:
    type: object
    properties:
      SSHPublicKeys:
        $ref: '#/definitions/SSHPublicKeyListType'
        description: A list of the SSH public keys assigned to IAM user.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: Contains the response to a successful <a>ListSSHPublicKeys</a> request.
  ListSSHPublicKeysRequest:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user to list SSH public keys for. If none is specified, the <code>UserName</code> field is determined implicitly based on the AWS access key used to sign the request.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListServerCertificatesResponse:
    type: object
    required:
      - ServerCertificateMetadataList
    properties:
      ServerCertificateMetadataList:
        $ref: '#/definitions/serverCertificateMetadataListType'
        description: A list of server certificates.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListServerCertificates</a> request. '
  ListServerCertificatesRequest:
    type: object
    properties:
      PathPrefix:
        $ref: '#/definitions/pathPrefixType'
        description: '<p> The path prefix for filtering the results. For example: <code>/company/servercerts</code> would get all server certificates for which the path starts with <code>/company/servercerts</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListServiceSpecificCredentialsResponse:
    type: object
    properties:
      ServiceSpecificCredentials:
        $ref: '#/definitions/ServiceSpecificCredentialsListType'
        description: A list of structures that each contain details about a service-specific credential.
  ListServiceSpecificCredentialsRequest:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      ServiceName:
        $ref: '#/definitions/serviceName'
        description: 'Filters the returned results to only those for the specified AWS service. If not specified, then AWS returns service-specific credentials for all services.'
  ListSigningCertificatesResponse:
    type: object
    required:
      - Certificates
    example:
      Certificates:
        - CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----'
          CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
          Status: Active
          UploadDate: '2013-06-06T21:40:08Z'
          UserName: Bob
    properties:
      Certificates:
        $ref: '#/definitions/certificateListType'
        description: A list of the user's signing certificate information.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListSigningCertificates</a> request. '
  ListSigningCertificatesRequest:
    type: object
    example:
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the IAM user whose signing certificates you want to examine.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListUserPoliciesResponse:
    type: object
    required:
      - PolicyNames
    properties:
      PolicyNames:
        $ref: '#/definitions/policyNameListType'
        description: A list of policy names.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListUserPolicies</a> request. '
  ListUserPoliciesRequest:
    type: object
    required:
      - UserName
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to list policies for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListUsersResponse:
    type: object
    required:
      - Users
    example:
      Users:
        - Arn: 'arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Juan'
          CreateDate: '2012-09-05T19:38:48Z'
          PasswordLastUsed: '2016-09-08T21:47:36Z'
          Path: /division_abc/subdivision_xyz/engineering/
          UserId: AID2MAB8DPLSRHEXAMPLE
          UserName: Juan
        - Arn: 'arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/engineering/Anika'
          CreateDate: '2014-04-09T15:43:45Z'
          PasswordLastUsed: '2016-09-24T16:18:07Z'
          Path: /division_abc/subdivision_xyz/engineering/
          UserId: AIDIODR4TAW7CSEXAMPLE
          UserName: Anika
    properties:
      Users:
        $ref: '#/definitions/userListType'
        description: A list of users.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListUsers</a> request. '
  ListUsersRequest:
    type: object
    example: {}
    properties:
      PathPrefix:
        $ref: '#/definitions/pathPrefixType'
        description: '<p> The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path starts with <code>/division_abc/subdivision_xyz/</code>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  ListVirtualMFADevicesResponse:
    type: object
    required:
      - VirtualMFADevices
    example:
      VirtualMFADevices:
        - SerialNumber: 'arn:aws:iam::123456789012:mfa/ExampleMFADevice'
        - SerialNumber: 'arn:aws:iam::123456789012:mfa/Juan'
    properties:
      VirtualMFADevices:
        $ref: '#/definitions/virtualMFADeviceListType'
        description: ' The list of virtual MFA devices in the current account that match the <code>AssignmentStatus</code> value that was passed in the request.'
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: 'Contains the response to a successful <a>ListVirtualMFADevices</a> request. '
  ListVirtualMFADevicesRequest:
    type: object
    example: {}
    properties:
      AssignmentStatus:
        $ref: '#/definitions/assignmentStatusType'
        description: ' The status (<code>Unassigned</code> or <code>Assigned</code>) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the operation defaults to <code>Any</code> which lists both assigned and unassigned virtual MFA devices.'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
  PutGroupPolicyRequest:
    type: object
    required:
      - GroupName
      - PolicyName
      - PolicyDocument
    example:
      GroupName: Admins
      PolicyDocument: '{"Version":"2012-10-17","Statement":{"Effect":"Allow","Action":"*","Resource":"*"}}'
      PolicyName: AllPerms
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group to associate the policy with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  PutRolePermissionsBoundaryRequest:
    type: object
    required:
      - RoleName
      - PermissionsBoundary
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: 'The name (friendly name, not ARN) of the IAM role for which you want to set the permissions boundary.'
      PermissionsBoundary:
        $ref: '#/definitions/arnType'
        description: The ARN of the policy that is used to set the permissions boundary for the role.
  PutRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyName
      - PolicyDocument
    example:
      PolicyDocument: '{"Version":"2012-10-17","Statement":{"Effect":"Allow","Action":"s3:*","Resource":"*"}}'
      PolicyName: S3AccessPolicy
      RoleName: S3Access
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to associate the policy with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  PutUserPermissionsBoundaryRequest:
    type: object
    required:
      - UserName
      - PermissionsBoundary
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: 'The name (friendly name, not ARN) of the IAM user for which you want to set the permissions boundary.'
      PermissionsBoundary:
        $ref: '#/definitions/arnType'
        description: The ARN of the policy that is used to set the permissions boundary for the user.
  PutUserPolicyRequest:
    type: object
    required:
      - UserName
      - PolicyName
      - PolicyDocument
    example:
      PolicyDocument: '{"Version":"2012-10-17","Statement":{"Effect":"Allow","Action":"*","Resource":"*"}}'
      PolicyName: AllAccessPolicy
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to associate the policy with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: '<p>The name of the policy document.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The policy document.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  RemoveClientIDFromOpenIDConnectProviderRequest:
    type: object
    required:
      - OpenIDConnectProviderArn
      - ClientID
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource to remove the client ID from. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      ClientID:
        $ref: '#/definitions/clientIDType'
        description: 'The client ID (also known as audience) to remove from the IAM OIDC provider resource. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.'
  RemoveRoleFromInstanceProfileRequest:
    type: object
    required:
      - InstanceProfileName
      - RoleName
    example:
      InstanceProfileName: ExampleInstanceProfile
      RoleName: Test-Role
    properties:
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: '<p>The name of the instance profile to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to remove.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  RemoveUserFromGroupRequest:
    type: object
    required:
      - GroupName
      - UserName
    example:
      GroupName: Admins
      UserName: Bob
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>The name of the group to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user to remove.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  ResetServiceSpecificCredentialResponse:
    type: object
    properties:
      ServiceSpecificCredential:
        $ref: '#/definitions/ServiceSpecificCredential'
        description: '<p>A structure with details about the updated service-specific credential, including the new password.</p> <important> <p>This is the <b>only</b> time that you can access the password. You cannot recover the password later, but you can reset it again.</p> </important>'
  ResetServiceSpecificCredentialRequest:
    type: object
    required:
      - ServiceSpecificCredentialId
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      ServiceSpecificCredentialId:
        $ref: '#/definitions/serviceSpecificCredentialId'
        description: '<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
  ResyncMFADeviceRequest:
    type: object
    required:
      - UserName
      - SerialNumber
      - AuthenticationCode1
      - AuthenticationCode2
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user whose MFA device you want to resynchronize.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: '<p>Serial number that uniquely identifies the MFA device.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      AuthenticationCode1:
        $ref: '#/definitions/authenticationCodeType'
        description: <p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
      AuthenticationCode2:
        $ref: '#/definitions/authenticationCodeType'
        description: <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
  SetDefaultPolicyVersionRequest:
    type: object
    required:
      - PolicyArn
      - VersionId
    properties:
      PolicyArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM policy whose default version you want to set.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      VersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: '<p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>IAM User Guide</i>.</p>'
  SimulatePolicyResponse:
    type: object
    properties:
      EvaluationResults:
        $ref: '#/definitions/EvaluationResultsListType'
        description: The results of the simulation.
      IsTruncated:
        $ref: '#/definitions/booleanType'
        description: 'A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all of your results.'
      Marker:
        $ref: '#/definitions/markerType'
        description: 'When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.'
    description: Contains the response to a successful <a>SimulatePrincipalPolicy</a> or <a>SimulateCustomPolicy</a> request.
  SimulateCustomPolicyRequest:
    type: object
    required:
      - PolicyInputList
      - ActionNames
    properties:
      PolicyInputList:
        $ref: '#/definitions/SimulationPolicyListType'
        description: '<p>A list of policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy. Do not include any resource-based policies in this parameter. Any resource-based policy must be submitted with the <code>ResourcePolicy</code> parameter. The policies cannot be "scope-down" policies, such as you could include in a call to <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html">GetFederationToken</a> or one of the <a href="http://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html">AssumeRole</a> API operations. In other words, do not use policies designed to restrict what a user can do while using the temporary credentials.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      ActionNames:
        $ref: '#/definitions/ActionNameListType'
        description: 'A list of names of API operations to evaluate in the simulation. Each operation is evaluated against each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>.'
      ResourceArns:
        $ref: '#/definitions/ResourceNameListType'
        description: '<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>If you include a <code>ResourcePolicy</code>, then it must be applicable to all of the resources included in the simulation or you receive an invalid input error.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      ResourcePolicy:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      ResourceOwner:
        $ref: '#/definitions/ResourceNameType'
        description: '<p>An ARN representing the AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN, such as an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.</p> <p>The ARN for an account uses the following syntax: <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>. For example, to represent the account with the 112233445566 ID, use the following ARN: <code>arn:aws:iam::112233445566-ID:root</code>. </p>'
      CallerArn:
        $ref: '#/definitions/ResourceNameType'
        description: '<p>The ARN of the IAM user that you want to use as the simulated caller of the API operations. <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> so that the policy''s <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p>'
      ContextEntries:
        $ref: '#/definitions/ContextEntryListType'
        description: 'A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permission policies, the corresponding value is supplied.'
      ResourceHandlingOption:
        $ref: '#/definitions/ResourceHandlingOptionType'
        description: '<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>'
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
  PolicyEvaluationException:
    type: object
    properties:
      message:
        $ref: '#/definitions/policyEvaluationErrorMessage'
    description: The request failed because a provided policy could not be successfully evaluated. An additional detailed message indicates the source of the failure.
  SimulatePrincipalPolicyRequest:
    type: object
    required:
      - PolicySourceArn
      - ActionNames
    properties:
      PolicySourceArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of a user, group, or role whose policies you want to include in the simulation. If you specify a user, group, or role, the simulation includes all policies that are associated with that entity. If you specify a user, the simulation also includes all policies that are attached to any groups the user belongs to.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      PolicyInputList:
        $ref: '#/definitions/SimulationPolicyListType'
        description: '<p>An optional list of additional policy documents to include in the simulation. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      ActionNames:
        $ref: '#/definitions/ActionNameListType'
        description: 'A list of names of API operations to evaluate in the simulation. Each operation is evaluated for each resource. Each operation must include the service identifier, such as <code>iam:CreateUser</code>.'
      ResourceArns:
        $ref: '#/definitions/ResourceNameListType'
        description: '<p>A list of ARNs of AWS resources to include in the simulation. If this parameter is not provided, then the value defaults to <code>*</code> (all resources). Each API in the <code>ActionNames</code> parameter is evaluated for each resource in this list. The simulation determines the access result (allowed or denied) of each combination and reports it in the response.</p> <p>The simulation does not automatically retrieve policies for the specified resources. If you want to include a resource policy in the simulation, then you must include the policy as a string in the <code>ResourcePolicy</code> parameter.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      ResourcePolicy:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>A resource-based policy to include in the simulation provided as a string. Each resource in the simulation is treated as if it had this policy attached. You can include only one resource-based policy in a simulation.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      ResourceOwner:
        $ref: '#/definitions/ResourceNameType'
        description: 'An AWS account ID that specifies the owner of any simulated resource that does not identify its owner in the resource ARN, such as an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also used as the account owner of any <code>ResourcePolicy</code> included in the simulation. If the <code>ResourceOwner</code> parameter is not specified, then the owner of the resources and the resource policy defaults to the account of the identity provided in <code>CallerArn</code>. This parameter is required only if you specify a resource-based policy and account that owns the resource is different from the account that owns the simulated calling user <code>CallerArn</code>.'
      CallerArn:
        $ref: '#/definitions/ResourceNameType'
        description: '<p>The ARN of the IAM user that you want to specify as the simulated caller of the API operations. If you do not specify a <code>CallerArn</code>, it defaults to the ARN of the user that you specify in <code>PolicySourceArn</code>, if you specified a user. If you include both a <code>PolicySourceArn</code> (for example, <code>arn:aws:iam::123456789012:user/David</code>) and a <code>CallerArn</code> (for example, <code>arn:aws:iam::123456789012:user/Bob</code>), the result is that you simulate calling the API operations as Bob, as if Bob had David''s policies.</p> <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an assumed role, federated user, or a service principal.</p> <p> <code>CallerArn</code> is required if you include a <code>ResourcePolicy</code> and the <code>PolicySourceArn</code> is not the ARN for an IAM user. This is required so that the resource-based policy''s <code>Principal</code> element has a value to use in evaluating the policy.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      ContextEntries:
        $ref: '#/definitions/ContextEntryListType'
        description: 'A list of context keys and corresponding values for the simulation to use. Whenever a context key is evaluated in one of the simulated IAM permission policies, the corresponding value is supplied.'
      ResourceHandlingOption:
        $ref: '#/definitions/ResourceHandlingOptionType'
        description: '<p>Specifies the type of simulation to run. Different API operations that support resource-based policies require different combinations of resources. By specifying the type of simulation to run, you enable the policy simulator to enforce the presence of the required resources to ensure reliable simulation results. If your simulation does not match one of the following scenarios, then you can omit this parameter. The following list shows each of the supported scenario values and the resources that you must define to run the simulation.</p> <p>Each of the EC2 scenarios requires that you specify instance, image, and security-group resources. If your scenario includes an EBS volume, then you must specify that volume as a resource. If the EC2 scenario includes VPC, then you must supply the network-interface resource. If it includes an IP subnet, then you must specify the subnet resource. For more information on the EC2 scenario options, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported Platforms</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p> <b>EC2-Classic-InstanceStore</b> </p> <p>instance, image, security-group</p> </li> <li> <p> <b>EC2-Classic-EBS</b> </p> <p>instance, image, security-group, volume</p> </li> <li> <p> <b>EC2-VPC-InstanceStore</b> </p> <p>instance, image, security-group, network-interface</p> </li> <li> <p> <b>EC2-VPC-InstanceStore-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet</p> </li> <li> <p> <b>EC2-VPC-EBS</b> </p> <p>instance, image, security-group, network-interface, volume</p> </li> <li> <p> <b>EC2-VPC-EBS-Subnet</b> </p> <p>instance, image, security-group, network-interface, subnet, volume</p> </li> </ul>'
      MaxItems:
        $ref: '#/definitions/maxItemsType'
        description: '<p>(Optional) Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, it defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code> and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>'
      Marker:
        $ref: '#/definitions/markerType'
        description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
  UpdateAccessKeyRequest:
    type: object
    required:
      - AccessKeyId
      - Status
    example:
      AccessKeyId: AKIAIOSFODNN7EXAMPLE
      Status: Inactive
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user whose key you want to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      AccessKeyId:
        $ref: '#/definitions/accessKeyIdType'
        description: '<p>The access key ID of the secret access key you want to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
      Status:
        $ref: '#/definitions/statusType'
        description: ' The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for API calls to AWS, while <code>Inactive</code> means that the key cannot be used.'
  UpdateAccountPasswordPolicyRequest:
    type: object
    example:
      MinimumPasswordLength: 8
      RequireNumbers: true
    properties:
      MinimumPasswordLength:
        $ref: '#/definitions/minimumPasswordLengthType'
        description: '<p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>'
      RequireSymbols:
        $ref: '#/definitions/booleanType'
        description: '<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | ''</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>'
      RequireNumbers:
        $ref: '#/definitions/booleanType'
        description: '<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>'
      RequireUppercaseCharacters:
        $ref: '#/definitions/booleanType'
        description: '<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>'
      RequireLowercaseCharacters:
        $ref: '#/definitions/booleanType'
        description: '<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>'
      AllowUsersToChangePassword:
        $ref: '#/definitions/booleanType'
        description: '<p> Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html">Letting IAM Users Change Their Own Passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users in the account do not automatically have permissions to change their own password.</p>'
      MaxPasswordAge:
        $ref: '#/definitions/maxPasswordAgeType'
        description: '<p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>'
      PasswordReusePrevention:
        $ref: '#/definitions/passwordReusePreventionType'
        description: '<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>'
      HardExpiry:
        $ref: '#/definitions/booleanObjectType'
        description: '<p>Prevents IAM users from setting a new password after their password has expired. The IAM user cannot be accessed until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.</p>'
  UpdateAssumeRolePolicyRequest:
    type: object
    required:
      - RoleName
      - PolicyDocument
    example:
      PolicyDocument: '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":["ec2.amazonaws.com"]},"Action":["sts:AssumeRole"]}]}'
      RoleName: S3AccessForEC2Instances
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: '<p>The name of the role to update with the new policy.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The policy that grants an entity permission to assume the role.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  UpdateGroupRequest:
    type: object
    required:
      - GroupName
    example:
      GroupName: Test
      NewGroupName: Test-1
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>Name of the IAM group to update. If you''re changing the name of the group, this is the original name.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      NewPath:
        $ref: '#/definitions/pathType'
        description: '<p>New path for the IAM group. Only include this if changing the group''s path.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      NewGroupName:
        $ref: '#/definitions/groupNameType'
        description: '<p>New name for the IAM group. Only include this if changing the group''s name.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  UpdateLoginProfileRequest:
    type: object
    required:
      - UserName
    example:
      Password: 'SomeKindOfPassword123!@#'
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the user whose password you want to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      Password:
        $ref: '#/definitions/passwordType'
        description: '<p>The new password for the specified IAM user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul> <p>However, the format can be further restricted by the account administrator by setting a password policy on the AWS account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>'
      PasswordResetRequired:
        $ref: '#/definitions/booleanObjectType'
        description: Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.
  UpdateOpenIDConnectProviderThumbprintRequest:
    type: object
    required:
      - OpenIDConnectProviderArn
      - ThumbprintList
    properties:
      OpenIDConnectProviderArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the IAM OIDC provider resource object for which you want to update the thumbprint. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> operation.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
      ThumbprintList:
        $ref: '#/definitions/thumbprintListType'
        description: 'A list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. '
  UpdateRoleResponse:
    type: object
    properties: {}
  UpdateRoleRequest:
    type: object
    required:
      - RoleName
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The name of the role that you want to modify.
      Description:
        $ref: '#/definitions/roleDescriptionType'
        description: The new description that you want to apply to the specified role.
      MaxSessionDuration:
        $ref: '#/definitions/roleMaxSessionDurationType'
        description: '<p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the AWS CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don''t specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p>'
  UpdateRoleDescriptionResponse:
    type: object
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: A structure that contains details about the modified role.
  UpdateRoleDescriptionRequest:
    type: object
    required:
      - RoleName
      - Description
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The name of the role that you want to modify.
      Description:
        $ref: '#/definitions/roleDescriptionType'
        description: The new description that you want to apply to the specified role.
  UpdateSAMLProviderResponse:
    type: object
    properties:
      SAMLProviderArn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the SAML provider that was updated.
    description: 'Contains the response to a successful <a>UpdateSAMLProvider</a> request. '
  UpdateSAMLProviderRequest:
    type: object
    required:
      - SAMLMetadataDocument
      - SAMLProviderArn
    properties:
      SAMLMetadataDocument:
        $ref: '#/definitions/SAMLMetadataDocumentType'
        description: 'An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer''s name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization''s IdP.'
      SAMLProviderArn:
        $ref: '#/definitions/arnType'
        description: '<p>The Amazon Resource Name (ARN) of the SAML provider to update.</p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>'
  UpdateSSHPublicKeyRequest:
    type: object
    required:
      - UserName
      - SSHPublicKeyId
      - Status
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SSHPublicKeyId:
        $ref: '#/definitions/publicKeyIdType'
        description: '<p>The unique identifier for the SSH public key.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
      Status:
        $ref: '#/definitions/statusType'
        description: The status to assign to the SSH public key. <code>Active</code> means that the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
  UpdateServerCertificateRequest:
    type: object
    required:
      - ServerCertificateName
    properties:
      ServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: '<p>The name of the server certificate that you want to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      NewPath:
        $ref: '#/definitions/pathType'
        description: '<p>The new path for the server certificate. Include this only if you are updating the server certificate''s path.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      NewServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: '<p>The new name for the server certificate. Include this only if you are updating the server certificate''s name. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  UpdateServiceSpecificCredentialRequest:
    type: object
    required:
      - ServiceSpecificCredentialId
      - Status
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      ServiceSpecificCredentialId:
        $ref: '#/definitions/serviceSpecificCredentialId'
        description: '<p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
      Status:
        $ref: '#/definitions/statusType'
        description: The status to be assigned to the service-specific credential.
  UpdateSigningCertificateRequest:
    type: object
    required:
      - CertificateId
      - Status
    example:
      CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
      Status: Inactive
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the IAM user the signing certificate belongs to.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      CertificateId:
        $ref: '#/definitions/certificateIdType'
        description: '<p>The ID of the signing certificate you want to update.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>'
      Status:
        $ref: '#/definitions/statusType'
        description: ' The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for API calls to AWS <code>Inactive</code> means that the certificate cannot be used.'
  UpdateUserRequest:
    type: object
    required:
      - UserName
    example:
      NewUserName: Robert
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>Name of the user to update. If you''re changing the name of the user, this is the original user name.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      NewPath:
        $ref: '#/definitions/pathType'
        description: '<p>New path for the IAM user. Include this parameter only if you''re changing the user''s path.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p>'
      NewUserName:
        $ref: '#/definitions/userNameType'
        description: '<p>New name for the user. Include this parameter only if you''re changing the user''s name.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
  UploadSSHPublicKeyResponse:
    type: object
    properties:
      SSHPublicKey:
        $ref: '#/definitions/SSHPublicKey'
        description: Contains information about the SSH public key.
    description: Contains the response to a successful <a>UploadSSHPublicKey</a> request.
  UploadSSHPublicKeyRequest:
    type: object
    required:
      - UserName
      - SSHPublicKeyBody
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: '<p>The name of the IAM user to associate the SSH public key with.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      SSHPublicKeyBody:
        $ref: '#/definitions/publicKeyMaterialType'
        description: '<p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The miminum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  InvalidPublicKeyException:
    type: object
    properties:
      message:
        $ref: '#/definitions/invalidPublicKeyMessage'
    description: The request was rejected because the public key is malformed or otherwise invalid.
  DuplicateSSHPublicKeyException:
    type: object
    properties:
      message:
        $ref: '#/definitions/duplicateSSHPublicKeyMessage'
    description: The request was rejected because the SSH public key is already associated with the specified IAM user.
  UploadServerCertificateResponse:
    type: object
    example:
      ServerCertificateMetadata:
        Arn: 'arn:aws:iam::123456789012:server-certificate/company/servercerts/ProdServerCert'
        Expiration: '2012-05-08T01:02:03.004Z'
        Path: /company/servercerts/
        ServerCertificateId: ASCA1111111111EXAMPLE
        ServerCertificateName: ProdServerCert
        UploadDate: '2010-05-08T01:02:03.004Z'
    properties:
      ServerCertificateMetadata:
        $ref: '#/definitions/ServerCertificateMetadata'
        description: 'The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key.'
    description: 'Contains the response to a successful <a>UploadServerCertificate</a> request. '
  UploadServerCertificateRequest:
    type: object
    required:
      - ServerCertificateName
      - CertificateBody
      - PrivateKey
    example:
      CertificateBody: '-----BEGIN CERTIFICATE-----<a very long certificate text string>-----END CERTIFICATE-----'
      Path: /company/servercerts/
      PrivateKey: '-----BEGIN DSA PRIVATE KEY-----<a very long private key string>-----END DSA PRIVATE KEY-----'
      ServerCertificateName: ProdServerCert
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: '<p>The path for the server certificate. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p> If you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the <code>path</code> parameter. The path must begin with <code>/cloudfront</code> and must include a trailing slash (for example, <code>/cloudfront/test/</code>).</p> </note>'
      ServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: '<p>The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      CertificateBody:
        $ref: '#/definitions/certificateBodyType'
        description: '<p>The contents of the public key certificate in PEM-encoded format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      PrivateKey:
        $ref: '#/definitions/privateKeyType'
        description: '<p>The contents of the private key in PEM-encoded format.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
      CertificateChain:
        $ref: '#/definitions/certificateChainType'
        description: '<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  MalformedCertificateException:
    type: object
    properties:
      message:
        $ref: '#/definitions/malformedCertificateMessage'
    description: The request was rejected because the certificate was malformed or expired. The error message describes the specific error.
  KeyPairMismatchException:
    type: object
    properties:
      message:
        $ref: '#/definitions/keyPairMismatchMessage'
    description: The request was rejected because the public key certificate and the private key do not match.
  UploadSigningCertificateResponse:
    type: object
    required:
      - Certificate
    example:
      Certificate:
        CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----'
        CertificateId: ID123456789012345EXAMPLE
        Status: Active
        UploadDate: '2015-06-06T21:40:08.121Z'
        UserName: Bob
    properties:
      Certificate:
        $ref: '#/definitions/SigningCertificate'
        description: Information about the certificate.
    description: 'Contains the response to a successful <a>UploadSigningCertificate</a> request. '
  UploadSigningCertificateRequest:
    type: object
    required:
      - CertificateBody
    example:
      CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----'
      UserName: Bob
    properties:
      UserName:
        $ref: '#/definitions/existingUserNameType'
        description: '<p>The name of the user the signing certificate is for.</p> <p>This parameter allows (per its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      CertificateBody:
        $ref: '#/definitions/certificateBodyType'
        description: '<p>The contents of the signing certificate.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF)</p> </li> <li> <p>The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D)</p> </li> </ul>'
  InvalidCertificateException:
    type: object
    properties:
      message:
        $ref: '#/definitions/invalidCertificateMessage'
    description: The request was rejected because the certificate is invalid.
  DuplicateCertificateException:
    type: object
    properties:
      message:
        $ref: '#/definitions/duplicateCertificateMessage'
    description: The request was rejected because the same certificate is associated with an IAM user in the account.
  userNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 64
  accessKeyIdType:
    type: string
    pattern: '[\w]+'
    minLength: 16
    maxLength: 128
  statusType:
    type: string
    enum:
      - Active
      - Inactive
  accessKeySecretType:
    type: string
    format: password
  dateType:
    type: string
    format: date-time
  AccessKey:
    type: object
    required:
      - UserName
      - AccessKeyId
      - Status
      - SecretAccessKey
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user that the access key is associated with.
      AccessKeyId:
        $ref: '#/definitions/accessKeyIdType'
        description: The ID for this access key.
      Status:
        $ref: '#/definitions/statusType'
        description: 'The status of the access key. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not. '
      SecretAccessKey:
        $ref: '#/definitions/accessKeySecretType'
        description: The secret key used to sign requests.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date when the access key was created.
    description: '<p>Contains information about an AWS access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> operations. </p> <note> <p>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key.</p> </note>'
  stringType:
    type: string
  AccessKeyLastUsed:
    type: object
    required:
      - LastUsedDate
      - ServiceName
      - Region
    properties:
      LastUsedDate:
        $ref: '#/definitions/dateType'
        description: '<p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the access key was most recently used. This field is null in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>'
      ServiceName:
        $ref: '#/definitions/stringType'
        description: '<p>The name of the AWS service with which this access key was most recently used. This field displays "N/A" in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>'
      Region:
        $ref: '#/definitions/stringType'
        description: '<p>The AWS region where this access key was most recently used. This field is displays "N/A" in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul> <p>For more information about AWS regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>'
    description: <p>Contains information about the last time an AWS access key was used.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> operation.</p>
  AccessKeyMetadata:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user that the key is associated with.
      AccessKeyId:
        $ref: '#/definitions/accessKeyIdType'
        description: The ID for this access key.
      Status:
        $ref: '#/definitions/statusType'
        description: The status of the access key. <code>Active</code> means the key is valid for API calls; <code>Inactive</code> means it is not.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date when the access key was created.
    description: '<p>Contains information about an AWS access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>'
  ActionNameType:
    type: string
    minLength: 3
    maxLength: 128
  ActionNameListType:
    type: array
    items:
      $ref: '#/definitions/ActionNameType'
  arnType:
    type: string
    description: '<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources.</p> <p>For more information about ARNs, go to <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>'
    minLength: 20
    maxLength: 2048
  clientIDType:
    type: string
    minLength: 1
    maxLength: 255
  instanceProfileNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  roleNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 64
  groupNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  existingUserNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  ArnListType:
    type: array
    items:
      $ref: '#/definitions/arnType'
  PermissionsBoundaryAttachmentType:
    type: string
    enum:
      - PermissionsBoundaryPolicy
  AttachedPermissionsBoundary:
    type: object
    properties:
      PermissionsBoundaryType:
        $ref: '#/definitions/PermissionsBoundaryAttachmentType'
        description: ' The permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of <code>Policy</code>.'
      PermissionsBoundaryArn:
        $ref: '#/definitions/arnType'
        description: ' The ARN of the policy used to set the permissions boundary for the user or role.'
    description: '<p>Contains information about an attached permissions boundary.</p> <p>An attached permissions boundary is a managed policy that has been attached to a user or role to set the permissions boundary.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
  policyNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  AttachedPolicy:
    type: object
    properties:
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The friendly name of the attached policy.
      PolicyArn:
        $ref: '#/definitions/arnType'
    description: '<p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  BootstrapDatum:
    type: string
    format: password
  passwordType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 128
    format: password
  ColumnNumber:
    type: integer
  ContextKeyNameType:
    type: string
    minLength: 5
    maxLength: 256
  ContextKeyValueListType:
    type: array
    items:
      $ref: '#/definitions/ContextKeyValueType'
  ContextKeyTypeEnum:
    type: string
    enum:
      - string
      - stringList
      - numeric
      - numericList
      - boolean
      - booleanList
      - ip
      - ipList
      - binary
      - binaryList
      - date
      - dateList
  ContextEntry:
    type: object
    properties:
      ContextKeyName:
        $ref: '#/definitions/ContextKeyNameType'
        description: 'The full name of a condition context key, including the service prefix. For example, <code>aws:SourceIp</code> or <code>s3:VersionId</code>.'
      ContextKeyValues:
        $ref: '#/definitions/ContextKeyValueListType'
        description: 'The value (or values, if the condition context key supports multiple values) to provide to the simulation when the key is referenced by a <code>Condition</code> element in an input policy.'
      ContextKeyType:
        $ref: '#/definitions/ContextKeyTypeEnum'
        description: The data type of the value (or values) specified in the <code>ContextKeyValues</code> parameter.
    description: '<p>Contains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the <code>Condition</code> elements of the input policies.</p> <p>This data type is used as an input parameter to <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulateCustomPolicy</a> </code>.</p>'
  ContextEntryListType:
    type: array
    items:
      $ref: '#/definitions/ContextEntry'
  ContextKeyNamesResultListType:
    type: array
    items:
      $ref: '#/definitions/ContextKeyNameType'
  ContextKeyValueType:
    type: string
  accountAliasType:
    type: string
    pattern: '^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$'
    minLength: 3
    maxLength: 63
  pathType:
    type: string
    pattern: '(\u002F)|(\u002F[\u0021-\u007F]+\u002F)'
    minLength: 1
    maxLength: 512
  Group:
    type: object
    required:
      - Path
      - GroupName
      - GroupId
      - Arn
      - CreateDate
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: 'The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: The friendly name that identifies the group.
      GroupId:
        $ref: '#/definitions/idType'
        description: ' The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      Arn:
        $ref: '#/definitions/arnType'
        description: ' The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the group was created.'
    description: '<p>Contains information about an IAM group entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li> <li> <p> <a>ListGroups</a> </p> </li> </ul>'
  InstanceProfile:
    type: object
    required:
      - Path
      - InstanceProfileName
      - InstanceProfileId
      - Arn
      - CreateDate
      - Roles
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: ' The path to the instance profile. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      InstanceProfileName:
        $ref: '#/definitions/instanceProfileNameType'
        description: The name identifying the instance profile.
      InstanceProfileId:
        $ref: '#/definitions/idType'
        description: ' The stable and unique string identifying the instance profile. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      Arn:
        $ref: '#/definitions/arnType'
        description: ' The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date when the instance profile was created.
      Roles:
        $ref: '#/definitions/roleListType'
        description: The role associated with the instance profile.
    description: '<p>Contains information about an instance profile.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a> </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a> </p> </li> </ul>'
  booleanType:
    type: boolean
  LoginProfile:
    type: object
    required:
      - UserName
      - CreateDate
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: 'The name of the user, which can be used for signing in to the AWS Management Console.'
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date when the password for the user was created.
      PasswordResetRequired:
        $ref: '#/definitions/booleanType'
        description: Specifies whether the user is required to set a new password on next sign-in.
    description: <p>Contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> operations. </p>
  OpenIDConnectProviderUrlType:
    type: string
    description: Contains a URL that specifies the endpoint for an OpenID Connect provider.
    minLength: 1
    maxLength: 255
  clientIDListType:
    type: array
    items:
      $ref: '#/definitions/clientIDType'
  thumbprintListType:
    type: array
    description: Contains a list of thumbprints of identity provider server certificates.
    items:
      $ref: '#/definitions/thumbprintType'
  policyPathType:
    type: string
    pattern: '((/[A-Za-z0-9\.,\+@=_-]+)*)/'
  policyDocumentType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 131072
  policyDescriptionType:
    type: string
    maxLength: 1000
  Policy:
    type: object
    properties:
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The friendly name (not ARN) identifying the policy.
      PolicyId:
        $ref: '#/definitions/idType'
        description: '<p>The stable and unique string identifying the policy.</p> <p>For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>'
      Arn:
        $ref: '#/definitions/arnType'
      Path:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path to the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>'
      DefaultVersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: The identifier for the version of the policy that is set as the default version.
      AttachmentCount:
        $ref: '#/definitions/attachmentCountType'
        description: 'The number of entities (users, groups, and roles) that the policy is attached to.'
      PermissionsBoundaryUsageCount:
        $ref: '#/definitions/attachmentCountType'
        description: '<p>The number of entities (users and roles) for which the policy is used to set the permissions boundary. </p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
      IsAttachable:
        $ref: '#/definitions/booleanType'
        description: 'Specifies whether the policy can be attached to an IAM user, group, or role.'
      Description:
        $ref: '#/definitions/policyDescriptionType'
        description: <p>A friendly description of the policy.</p> <p>This element is included in the response to the <a>GetPolicy</a> operation. It is not included in the response to the <a>ListPolicies</a> operation. </p>
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was created.'
      UpdateDate:
        $ref: '#/definitions/dateType'
        description: '<p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.</p>'
    description: '<p>Contains information about a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>, and <a>ListPolicies</a> operations. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  PolicyVersion:
    type: object
    properties:
      Document:
        $ref: '#/definitions/policyDocumentType'
        description: '<p>The policy document.</p> <p>The policy document is returned in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a> operations. It is not returned in the response to the <a>CreatePolicyVersion</a> or <a>ListPolicyVersions</a> operations. </p> <p>The policy document returned in this structure is URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p>'
      VersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: '<p>The identifier for the policy version.</p> <p>Policy version identifiers always begin with <code>v</code> (always lowercase). When a policy is created, the first policy version is <code>v1</code>. </p>'
      IsDefaultVersion:
        $ref: '#/definitions/booleanType'
        description: Specifies whether the policy version is set as the policy's default version.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy version was created.'
    description: '<p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  roleDescriptionType:
    type: string
    pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
    maxLength: 1000
  roleMaxSessionDurationType:
    type: integer
    minimum: 3600
    maximum: 43200
  Role:
    type: object
    required:
      - Path
      - RoleName
      - RoleId
      - Arn
      - CreateDate
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: ' The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The friendly name that identifies the role.
      RoleId:
        $ref: '#/definitions/idType'
        description: ' The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      Arn:
        $ref: '#/definitions/arnType'
        description: ' The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i> guide. '
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the role was created.'
      AssumeRolePolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The policy that grants an entity permission to assume the role.
      Description:
        $ref: '#/definitions/roleDescriptionType'
        description: A description of the role that you provide.
      MaxSessionDuration:
        $ref: '#/definitions/roleMaxSessionDurationType'
        description: The maximum session duration (in seconds) for the specified role. Anyone who uses the AWS CLI or API to assume the role can specify the duration using the optional <code>DurationSeconds</code> API parameter or <code>duration-seconds</code> CLI parameter.
      PermissionsBoundary:
        $ref: '#/definitions/AttachedPermissionsBoundary'
        description: '<p>The ARN of the policy used to set the permissions boundary for the role.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
    description: Contains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.
  SAMLMetadataDocumentType:
    type: string
    minLength: 1000
    maxLength: 10000000
  SAMLProviderNameType:
    type: string
    pattern: '[\w._-]+'
    minLength: 1
    maxLength: 128
  customSuffixType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 64
  serviceName:
    type: string
  ServiceSpecificCredential:
    type: object
    required:
      - CreateDate
      - ServiceName
      - ServiceUserName
      - ServicePassword
      - ServiceSpecificCredentialId
      - UserName
      - Status
    properties:
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the service-specific credential were created.'
      ServiceName:
        $ref: '#/definitions/serviceName'
        description: The name of the service associated with the service-specific credential.
      ServiceUserName:
        $ref: '#/definitions/serviceUserName'
        description: 'The generated user name for the service-specific credential. This value is generated by combining the IAM user''s name combined with the ID number of the AWS account, as in <code>jane-at-123456789012</code>, for example. This value cannot be configured by the user.'
      ServicePassword:
        $ref: '#/definitions/servicePassword'
        description: The generated password for the service-specific credential.
      ServiceSpecificCredentialId:
        $ref: '#/definitions/serviceSpecificCredentialId'
        description: The unique identifier for the service-specific credential.
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user associated with the service-specific credential.
      Status:
        $ref: '#/definitions/statusType'
        description: 'The status of the service-specific credential. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.'
    description: Contains the details of a service-specific credential.
  User:
    type: object
    required:
      - Path
      - UserName
      - UserId
      - Arn
      - CreateDate
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: 'The path to the user. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      UserName:
        $ref: '#/definitions/userNameType'
        description: The friendly name identifying the user.
      UserId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      Arn:
        $ref: '#/definitions/arnType'
        description: 'The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user was created.'
      PasswordLastUsed:
        $ref: '#/definitions/dateType'
        description: '<p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user''s password was last used to sign in to an AWS website. For a list of AWS websites that capture a user''s last sign-in time, see the <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html">Credential Reports</a> topic in the <i>Using IAM</i> guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. If the field is null (no value) then it indicates that they never signed in with a password. This can be because:</p> <ul> <li> <p>The user never had a password.</p> </li> <li> <p>A password exists but has not been used since IAM started tracking this information on October 20th, 2014.</p> </li> </ul> <p>A null does not mean that the user <i>never</i> had a password. Also, if the user does not currently have a password, but had one in the past, then this field contains the date and time the most recent password was used.</p> <p>This value is returned only in the <a>GetUser</a> and <a>ListUsers</a> operations. </p>'
      PermissionsBoundary:
        $ref: '#/definitions/AttachedPermissionsBoundary'
        description: '<p>The ARN of the policy used to set the permissions boundary for the user.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
    description: '<p>Contains information about an IAM user entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p> <a>ListUsers</a> </p> </li> </ul>'
  virtualMFADeviceName:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
  VirtualMFADevice:
    type: object
    required:
      - SerialNumber
    properties:
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: The serial number associated with <code>VirtualMFADevice</code>.
      Base32StringSeed:
        $ref: '#/definitions/BootstrapDatum'
        description: ' The Base32 seed defined as specified in <a href="https://tools.ietf.org/html/rfc3548.txt">RFC3548</a>. The <code>Base32StringSeed</code> is Base64-encoded. '
      QRCodePNG:
        $ref: '#/definitions/BootstrapDatum'
        description: ' A QR code PNG image that encodes <code>otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String</code> where <code>$virtualMFADeviceName</code> is one of the create call arguments, <code>AccountName</code> is the user name if set (otherwise, the account ID otherwise), and <code>Base32String</code> is the seed in Base32 format. The <code>Base32String</code> value is Base64-encoded. '
      User:
        $ref: '#/definitions/User'
        description: The IAM user associated with this virtual MFA device.
      EnableDate:
        $ref: '#/definitions/dateType'
        description: The date and time on which the virtual MFA device was enabled.
    description: Contains information about a virtual MFA device.
  credentialReportExpiredExceptionMessage:
    type: string
  credentialReportNotPresentExceptionMessage:
    type: string
  credentialReportNotReadyExceptionMessage:
    type: string
  serialNumberType:
    type: string
    pattern: '[\w+=/:,.@-]+'
    minLength: 9
    maxLength: 256
  deleteConflictMessage:
    type: string
  policyVersionIdType:
    type: string
    pattern: 'v[1-9][0-9]*(\.[A-Za-z0-9-]*)?'
  publicKeyIdType:
    type: string
    pattern: '[\w]+'
    minLength: 20
    maxLength: 128
  serverCertificateNameType:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  DeletionTaskIdType:
    type: string
    minLength: 1
    maxLength: 1000
  serviceSpecificCredentialId:
    type: string
    pattern: '[\w]+'
    minLength: 20
    maxLength: 128
  certificateIdType:
    type: string
    pattern: '[\w]+'
    minLength: 24
    maxLength: 128
  ReasonType:
    type: string
    maxLength: 1000
  RoleUsageListType:
    type: array
    items:
      $ref: '#/definitions/RoleUsageType'
  DeletionTaskFailureReasonType:
    type: object
    properties:
      Reason:
        $ref: '#/definitions/ReasonType'
        description: A short description of the reason that the service-linked role deletion failed.
      RoleUsageList:
        $ref: '#/definitions/RoleUsageListType'
        description: 'A list of objects that contains details about the service-linked role deletion failure, if that information is returned by the service. If the service-linked role has active sessions or if any resources that were used by the role have not been deleted from the linked service, the role can''t be deleted. This parameter includes a list of the resources that are associated with the role and the region in which the resources are being used.'
    description: <p>The reason that the service-linked role deletion failed.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
  DeletionTaskStatusType:
    type: string
    enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
      - NOT_STARTED
  duplicateCertificateMessage:
    type: string
  duplicateSSHPublicKeyMessage:
    type: string
  authenticationCodeType:
    type: string
    pattern: '[\d]+'
    minLength: 6
    maxLength: 6
  entityAlreadyExistsMessage:
    type: string
  entityTemporarilyUnmodifiableMessage:
    type: string
  EntityType:
    type: string
    enum:
      - User
      - Role
      - Group
      - LocalManagedPolicy
      - AWSManagedPolicy
  EvalDecisionSourceType:
    type: string
    minLength: 3
    maxLength: 256
  PolicyEvaluationDecisionType:
    type: string
    enum:
      - allowed
      - explicitDeny
      - implicitDeny
  EvalDecisionDetailsType:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/EvalDecisionSourceType'
        value:
          $ref: '#/definitions/PolicyEvaluationDecisionType'
  ResourceNameType:
    type: string
    minLength: 1
    maxLength: 2048
  StatementListType:
    type: array
    items:
      $ref: '#/definitions/Statement'
  OrganizationsDecisionDetail:
    type: object
    properties:
      AllowedByOrganizations:
        $ref: '#/definitions/booleanType'
        description: Specifies whether the simulated operation is allowed by the AWS Organizations service control policies that impact the simulated user's account.
    description: Contains information about AWS Organizations's effect on a policy simulation.
  ResourceSpecificResultListType:
    type: array
    items:
      $ref: '#/definitions/ResourceSpecificResult'
  EvaluationResult:
    type: object
    required:
      - EvalActionName
      - EvalDecision
    properties:
      EvalActionName:
        $ref: '#/definitions/ActionNameType'
        description: The name of the API operation tested on the indicated resource.
      EvalResourceName:
        $ref: '#/definitions/ResourceNameType'
        description: The ARN of the resource that the indicated API operation was tested on.
      EvalDecision:
        $ref: '#/definitions/PolicyEvaluationDecisionType'
        description: The result of the simulation.
      MatchedStatements:
        $ref: '#/definitions/StatementListType'
        description: 'A list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the operation on the resource, if only one statement denies that operation, then the explicit deny overrides any allow, and the deny statement is the only entry included in the result.'
      MissingContextValues:
        $ref: '#/definitions/ContextKeyNamesResultListType'
        description: 'A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is "*", either explicitly, or when the <code>ResourceArns</code> parameter blank. If you include a list of resources, then any missing context values are instead included under the <code>ResourceSpecificResults</code> section. To discover the context keys used by a set of policies, you can call <a>GetContextKeysForCustomPolicy</a> or <a>GetContextKeysForPrincipalPolicy</a>.'
      OrganizationsDecisionDetail:
        $ref: '#/definitions/OrganizationsDecisionDetail'
        description: A structure that details how AWS Organizations and its service control policies affect the results of the simulation. Only applies if the simulated user's account is part of an organization.
      EvalDecisionDetails:
        $ref: '#/definitions/EvalDecisionDetailsType'
        description: 'Additional details about the results of the evaluation decision. When there are both IAM policies and resource policies, this parameter explains how each set of policies contributes to the final evaluation decision. When simulating cross-account access to a resource, both the resource-based policy and the caller''s IAM policy must grant access. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html">How IAM Roles Differ from Resource-based Policies</a> '
      ResourceSpecificResults:
        $ref: '#/definitions/ResourceSpecificResultListType'
        description: The individual results of the simulation of the API operation specified in EvalActionName on each resource.
    description: <p>Contains the results of a simulation.</p> <p>This data type is used by the return parameter of <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulatePrincipalPolicy</a> </code>.</p>
  EvaluationResultsListType:
    type: array
    items:
      $ref: '#/definitions/EvaluationResult'
  ReportStateType:
    type: string
    enum:
      - STARTED
      - INPROGRESS
      - COMPLETE
  ReportStateDescriptionType:
    type: string
  entityListType:
    type: array
    items:
      $ref: '#/definitions/EntityType'
  maxItemsType:
    type: integer
    minimum: 1
    maximum: 1000
  markerType:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 320
  userDetailListType:
    type: array
    items:
      $ref: '#/definitions/UserDetail'
  groupDetailListType:
    type: array
    items:
      $ref: '#/definitions/GroupDetail'
  roleDetailListType:
    type: array
    items:
      $ref: '#/definitions/RoleDetail'
  ManagedPolicyDetailListType:
    type: array
    items:
      $ref: '#/definitions/ManagedPolicyDetail'
  PasswordPolicy:
    type: object
    properties:
      MinimumPasswordLength:
        $ref: '#/definitions/minimumPasswordLengthType'
        description: Minimum length to require for IAM user passwords.
      RequireSymbols:
        $ref: '#/definitions/booleanType'
        description: Specifies whether to require symbols for IAM user passwords.
      RequireNumbers:
        $ref: '#/definitions/booleanType'
        description: Specifies whether to require numbers for IAM user passwords.
      RequireUppercaseCharacters:
        $ref: '#/definitions/booleanType'
        description: Specifies whether to require uppercase characters for IAM user passwords.
      RequireLowercaseCharacters:
        $ref: '#/definitions/booleanType'
        description: Specifies whether to require lowercase characters for IAM user passwords.
      AllowUsersToChangePassword:
        $ref: '#/definitions/booleanType'
        description: Specifies whether IAM users are allowed to change their own password.
      ExpirePasswords:
        $ref: '#/definitions/booleanType'
        description: Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater than 0. Returns false if MaxPasswordAge is 0 or not present.
      MaxPasswordAge:
        $ref: '#/definitions/maxPasswordAgeType'
        description: The number of days that an IAM user password is valid.
      PasswordReusePrevention:
        $ref: '#/definitions/passwordReusePreventionType'
        description: Specifies the number of previous passwords that IAM users are prevented from reusing.
      HardExpiry:
        $ref: '#/definitions/booleanObjectType'
        description: Specifies whether IAM users are prevented from setting a new password after their password has expired.
    description: <p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> operation. </p>
  summaryMapType:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/summaryKeyType'
        value:
          $ref: '#/definitions/summaryValueType'
  SimulationPolicyListType:
    type: array
    items:
      $ref: '#/definitions/policyDocumentType'
  ReportContentType:
    type: string
  ReportFormatType:
    type: string
    enum:
      - text/csv
  userListType:
    type: array
    description: <p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> operations. </p>
    items:
      $ref: '#/definitions/User'
  encodingType:
    type: string
    enum:
      - SSH
      - PEM
  SSHPublicKey:
    type: object
    required:
      - UserName
      - SSHPublicKeyId
      - Fingerprint
      - SSHPublicKeyBody
      - Status
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user associated with the SSH public key.
      SSHPublicKeyId:
        $ref: '#/definitions/publicKeyIdType'
        description: The unique identifier for the SSH public key.
      Fingerprint:
        $ref: '#/definitions/publicKeyFingerprintType'
        description: The MD5 message digest of the SSH public key.
      SSHPublicKeyBody:
        $ref: '#/definitions/publicKeyMaterialType'
        description: The SSH public key.
      Status:
        $ref: '#/definitions/statusType'
        description: The status of the SSH public key. <code>Active</code> means that the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
      UploadDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.'
    description: <p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> operations. </p>
  ServerCertificate:
    type: object
    required:
      - ServerCertificateMetadata
      - CertificateBody
    properties:
      ServerCertificateMetadata:
        $ref: '#/definitions/ServerCertificateMetadata'
        description: 'The meta information of the server certificate, such as its name, path, ID, and ARN.'
      CertificateBody:
        $ref: '#/definitions/certificateBodyType'
        description: The contents of the public key certificate.
      CertificateChain:
        $ref: '#/definitions/certificateChainType'
        description: The contents of the public key certificate chain.
    description: <p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> operation. </p>
  idType:
    type: string
    pattern: '[\w]+'
    minLength: 16
    maxLength: 128
  policyDetailListType:
    type: array
    items:
      $ref: '#/definitions/PolicyDetail'
  attachedPoliciesListType:
    type: array
    items:
      $ref: '#/definitions/AttachedPolicy'
  GroupDetail:
    type: object
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: 'The path to the group. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: The friendly name that identifies the group.
      GroupId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      Arn:
        $ref: '#/definitions/arnType'
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the group was created.'
      GroupPolicyList:
        $ref: '#/definitions/policyDetailListType'
        description: A list of the inline policies embedded in the group.
      AttachedManagedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of the managed policies attached to the group.
    description: '<p>Contains information about an IAM group, including all of the group''s policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>'
  roleListType:
    type: array
    description: <p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> operation.</p>
    items:
      $ref: '#/definitions/Role'
  invalidAuthenticationCodeMessage:
    type: string
  invalidCertificateMessage:
    type: string
  invalidInputMessage:
    type: string
  invalidPublicKeyMessage:
    type: string
  invalidUserTypeMessage:
    type: string
  keyPairMismatchMessage:
    type: string
  limitExceededMessage:
    type: string
  LineNumber:
    type: integer
  accessKeyMetadataListType:
    type: array
    description: <p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>
    items:
      $ref: '#/definitions/AccessKeyMetadata'
  accountAliasListType:
    type: array
    items:
      $ref: '#/definitions/accountAliasType'
  PolicyUsageType:
    type: string
    enum:
      - PermissionsPolicy
      - PermissionsBoundary
    description: '<p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
  PolicyGroupListType:
    type: array
    items:
      $ref: '#/definitions/PolicyGroup'
  PolicyUserListType:
    type: array
    items:
      $ref: '#/definitions/PolicyUser'
  PolicyRoleListType:
    type: array
    items:
      $ref: '#/definitions/PolicyRole'
  policyNameListType:
    type: array
    description: <p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> operation.</p>
    items:
      $ref: '#/definitions/policyNameType'
  groupListType:
    type: array
    description: <p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> operation.</p>
    items:
      $ref: '#/definitions/Group'
  pathPrefixType:
    type: string
    pattern: '\u002F[\u0021-\u007F]*'
    minLength: 1
    maxLength: 512
  instanceProfileListType:
    type: array
    description: Contains a list of instance profiles.
    items:
      $ref: '#/definitions/InstanceProfile'
  mfaDeviceListType:
    type: array
    description: <p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> operations. </p>
    items:
      $ref: '#/definitions/MFADevice'
  OpenIDConnectProviderListType:
    type: array
    description: Contains a list of IAM OpenID Connect providers.
    items:
      $ref: '#/definitions/OpenIDConnectProviderListEntry'
  policyScopeType:
    type: string
    enum:
      - All
      - AWS
      - Local
  policyListType:
    type: array
    items:
      $ref: '#/definitions/Policy'
  policyDocumentVersionListType:
    type: array
    items:
      $ref: '#/definitions/PolicyVersion'
  SAMLProviderListType:
    type: array
    items:
      $ref: '#/definitions/SAMLProviderListEntry'
  SSHPublicKeyListType:
    type: array
    items:
      $ref: '#/definitions/SSHPublicKeyMetadata'
  serverCertificateMetadataListType:
    type: array
    items:
      $ref: '#/definitions/ServerCertificateMetadata'
  ServiceSpecificCredentialsListType:
    type: array
    items:
      $ref: '#/definitions/ServiceSpecificCredentialMetadata'
  certificateListType:
    type: array
    description: <p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> operation.</p>
    items:
      $ref: '#/definitions/SigningCertificate'
  assignmentStatusType:
    type: string
    enum:
      - Assigned
      - Unassigned
      - Any
  virtualMFADeviceListType:
    type: array
    items:
      $ref: '#/definitions/VirtualMFADevice'
  MFADevice:
    type: object
    required:
      - UserName
      - SerialNumber
      - EnableDate
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The user with whom the MFA device is associated.
      SerialNumber:
        $ref: '#/definitions/serialNumberType'
        description: 'The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.'
      EnableDate:
        $ref: '#/definitions/dateType'
        description: The date when the MFA device was enabled for the user.
    description: <p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> operation.</p>
  malformedCertificateMessage:
    type: string
  malformedPolicyDocumentMessage:
    type: string
  attachmentCountType:
    type: integer
  ManagedPolicyDetail:
    type: object
    properties:
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The friendly name (not ARN) identifying the policy.
      PolicyId:
        $ref: '#/definitions/idType'
        description: '<p>The stable and unique string identifying the policy.</p> <p>For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>'
      Arn:
        $ref: '#/definitions/arnType'
      Path:
        $ref: '#/definitions/policyPathType'
        description: '<p>The path to the policy.</p> <p>For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>'
      DefaultVersionId:
        $ref: '#/definitions/policyVersionIdType'
        description: '<p>The identifier for the version of the policy that is set as the default (operative) version.</p> <p>For more information about policy versions, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>'
      AttachmentCount:
        $ref: '#/definitions/attachmentCountType'
        description: 'The number of principal entities (users, groups, and roles) that the policy is attached to.'
      PermissionsBoundaryUsageCount:
        $ref: '#/definitions/attachmentCountType'
        description: '<p>The number of entities (users and roles) for which the policy is used as the permissions boundary. </p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
      IsAttachable:
        $ref: '#/definitions/booleanType'
        description: 'Specifies whether the policy can be attached to an IAM user, group, or role.'
      Description:
        $ref: '#/definitions/policyDescriptionType'
        description: A friendly description of the policy.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was created.'
      UpdateDate:
        $ref: '#/definitions/dateType'
        description: '<p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.</p>'
      PolicyVersionList:
        $ref: '#/definitions/policyDocumentVersionListType'
        description: A list containing information about the versions of the policy.
    description: '<p>Contains information about a managed policy, including the policy''s ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p> <p>For more information about managed policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  noSuchEntityMessage:
    type: string
  OpenIDConnectProviderListEntry:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/arnType'
    description: Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.
  minimumPasswordLengthType:
    type: integer
    minimum: 6
    maximum: 128
  maxPasswordAgeType:
    type: integer
    minimum: 1
    maximum: 1095
  passwordReusePreventionType:
    type: integer
    minimum: 1
    maximum: 24
  booleanObjectType:
    type: boolean
  passwordPolicyViolationMessage:
    type: string
  PolicyDetail:
    type: object
    properties:
      PolicyName:
        $ref: '#/definitions/policyNameType'
        description: The name of the policy.
      PolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The policy document.
    description: '<p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>'
  policyEvaluationErrorMessage:
    type: string
  PolicyGroup:
    type: object
    properties:
      GroupName:
        $ref: '#/definitions/groupNameType'
        description: 'The name (friendly name, not ARN) identifying the group.'
      GroupId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the group. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.'
    description: '<p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  PolicyIdentifierType:
    type: string
  policyNotAttachableMessage:
    type: string
  PolicyRole:
    type: object
    properties:
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: 'The name (friendly name, not ARN) identifying the role.'
      RoleId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.'
    description: '<p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  PolicySourceType:
    type: string
    enum:
      - user
      - group
      - role
      - aws-managed
      - user-managed
      - resource
      - none
  PolicyUser:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: 'The name (friendly name, not ARN) identifying the user.'
      UserId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM Identifiers</a> in the <i>IAM User Guide</i>.'
    description: '<p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>'
  Position:
    type: object
    properties:
      Line:
        $ref: '#/definitions/LineNumber'
        description: The line containing the specified position in the document.
      Column:
        $ref: '#/definitions/ColumnNumber'
        description: The column in the line containing the specified position in the document.
    description: <p>Contains the row and column of a location of a <code>Statement</code> element in a policy document.</p> <p>This data type is used as a member of the <code> <a>Statement</a> </code> type.</p>
  RegionNameType:
    type: string
    minLength: 1
    maxLength: 100
  ResourceHandlingOptionType:
    type: string
    minLength: 1
    maxLength: 64
  ResourceNameListType:
    type: array
    items:
      $ref: '#/definitions/ResourceNameType'
  ResourceSpecificResult:
    type: object
    required:
      - EvalResourceName
      - EvalResourceDecision
    properties:
      EvalResourceName:
        $ref: '#/definitions/ResourceNameType'
        description: 'The name of the simulated resource, in Amazon Resource Name (ARN) format.'
      EvalResourceDecision:
        $ref: '#/definitions/PolicyEvaluationDecisionType'
        description: The result of the simulation of the simulated API operation on the resource specified in <code>EvalResourceName</code>.
      MatchedStatements:
        $ref: '#/definitions/StatementListType'
        description: 'A list of the statements in the input policies that determine the result for this part of the simulation. Remember that even if multiple statements allow the operation on the resource, if <i>any</i> statement denies that operation, then the explicit deny overrides any allow, and the deny statement is the only entry included in the result.'
      MissingContextValues:
        $ref: '#/definitions/ContextKeyNamesResultListType'
        description: 'A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when a list of ARNs is included in the <code>ResourceArns</code> parameter instead of "*". If you do not specify individual resources, by setting <code>ResourceArns</code> to "*" or by not including the <code>ResourceArns</code> parameter, then any missing context values are instead included under the <code>EvaluationResults</code> section. To discover the context keys used by a set of policies, you can call <a>GetContextKeysForCustomPolicy</a> or <a>GetContextKeysForPrincipalPolicy</a>.'
      EvalDecisionDetails:
        $ref: '#/definitions/EvalDecisionDetailsType'
        description: 'Additional details about the results of the evaluation decision. When there are both IAM policies and resource policies, this parameter explains how each set of policies contributes to the final evaluation decision. When simulating cross-account access to a resource, both the resource-based policy and the caller''s IAM policy must grant access.'
    description: <p>Contains the result of the simulation of a single API operation call on a single resource.</p> <p>This data type is used by a member of the <a>EvaluationResult</a> data type.</p>
  RoleDetail:
    type: object
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: 'The path to the role. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      RoleName:
        $ref: '#/definitions/roleNameType'
        description: The friendly name that identifies the role.
      RoleId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the role. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      Arn:
        $ref: '#/definitions/arnType'
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the role was created.'
      AssumeRolePolicyDocument:
        $ref: '#/definitions/policyDocumentType'
        description: The trust policy that grants permission to assume the role.
      InstanceProfileList:
        $ref: '#/definitions/instanceProfileListType'
        description: A list of instance profiles that contain this role.
      RolePolicyList:
        $ref: '#/definitions/policyDetailListType'
        description: A list of inline policies embedded in the role. These policies are the role's access (permissions) policies.
      AttachedManagedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of managed policies attached to the role. These policies are the role's access (permissions) policies.
      PermissionsBoundary:
        $ref: '#/definitions/AttachedPermissionsBoundary'
        description: '<p>The ARN of the policy used to set the permissions boundary for the role.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
    description: '<p>Contains information about an IAM role, including all of the role''s policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>'
  RoleUsageType:
    type: object
    properties:
      Region:
        $ref: '#/definitions/RegionNameType'
        description: The name of the region where the service-linked role is being used.
      Resources:
        $ref: '#/definitions/ArnListType'
        description: The name of the resource that is using the service-linked role.
    description: '<p>An object that contains details about how a service-linked role is used, if that information is returned by the service.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>'
  SAMLProviderListEntry:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/arnType'
        description: The Amazon Resource Name (ARN) of the SAML provider.
      ValidUntil:
        $ref: '#/definitions/dateType'
        description: The expiration date and time for the SAML provider.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: The date and time when the SAML provider was created.
    description: Contains the list of SAML providers for this account.
  publicKeyFingerprintType:
    type: string
    pattern: '[:\w]+'
    minLength: 48
    maxLength: 48
  publicKeyMaterialType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
  SSHPublicKeyMetadata:
    type: object
    required:
      - UserName
      - SSHPublicKeyId
      - Status
      - UploadDate
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user associated with the SSH public key.
      SSHPublicKeyId:
        $ref: '#/definitions/publicKeyIdType'
        description: The unique identifier for the SSH public key.
      Status:
        $ref: '#/definitions/statusType'
        description: The status of the SSH public key. <code>Active</code> means that the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
      UploadDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.'
    description: '<p>Contains information about an SSH public key, without the key''s body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> operation.</p>'
  ServerCertificateMetadata:
    type: object
    required:
      - Path
      - ServerCertificateName
      - ServerCertificateId
      - Arn
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: ' The path to the server certificate. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      ServerCertificateName:
        $ref: '#/definitions/serverCertificateNameType'
        description: The name that identifies the server certificate.
      ServerCertificateId:
        $ref: '#/definitions/idType'
        description: ' The stable and unique string identifying the server certificate. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      Arn:
        $ref: '#/definitions/arnType'
        description: ' The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide. '
      UploadDate:
        $ref: '#/definitions/dateType'
        description: The date when the server certificate was uploaded.
      Expiration:
        $ref: '#/definitions/dateType'
        description: The date on which the certificate is set to expire.
    description: '<p>Contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> operations. </p>'
  certificateBodyType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
  certificateChainType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 2097152
  serviceFailureExceptionMessage:
    type: string
  serviceNotSupportedMessage:
    type: string
  serviceUserName:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 17
    maxLength: 200
  servicePassword:
    type: string
    format: password
  ServiceSpecificCredentialMetadata:
    type: object
    required:
      - UserName
      - Status
      - ServiceUserName
      - CreateDate
      - ServiceSpecificCredentialId
      - ServiceName
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the IAM user associated with the service-specific credential.
      Status:
        $ref: '#/definitions/statusType'
        description: 'The status of the service-specific credential. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.'
      ServiceUserName:
        $ref: '#/definitions/serviceUserName'
        description: The generated user name for the service-specific credential.
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the service-specific credential were created.'
      ServiceSpecificCredentialId:
        $ref: '#/definitions/serviceSpecificCredentialId'
        description: The unique identifier for the service-specific credential.
      ServiceName:
        $ref: '#/definitions/serviceName'
        description: The name of the service associated with the service-specific credential.
    description: Contains additional details about a service-specific credential.
  SigningCertificate:
    type: object
    required:
      - UserName
      - CertificateId
      - CertificateBody
      - Status
    properties:
      UserName:
        $ref: '#/definitions/userNameType'
        description: The name of the user the signing certificate is associated with.
      CertificateId:
        $ref: '#/definitions/certificateIdType'
        description: The ID for the signing certificate.
      CertificateBody:
        $ref: '#/definitions/certificateBodyType'
        description: The contents of the signing certificate.
      Status:
        $ref: '#/definitions/statusType'
        description: 'The status of the signing certificate. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.'
      UploadDate:
        $ref: '#/definitions/dateType'
        description: The date when the signing certificate was uploaded.
    description: <p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> operations. </p>
  Statement:
    type: object
    properties:
      SourcePolicyId:
        $ref: '#/definitions/PolicyIdentifierType'
        description: The identifier of the policy that was provided as an input.
      SourcePolicyType:
        $ref: '#/definitions/PolicySourceType'
        description: The type of the policy.
      StartPosition:
        $ref: '#/definitions/Position'
        description: The row and column of the beginning of the <code>Statement</code> in an IAM policy.
      EndPosition:
        $ref: '#/definitions/Position'
        description: The row and column of the end of a <code>Statement</code> in an IAM policy.
    description: <p>Contains a reference to a <code>Statement</code> element in a policy document that determines the result of the simulation.</p> <p>This data type is used by the <code>MatchedStatements</code> member of the <code> <a>EvaluationResult</a> </code> type.</p>
  unmodifiableEntityMessage:
    type: string
  unrecognizedPublicKeyEncodingMessage:
    type: string
  privateKeyType:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
    minLength: 1
    maxLength: 16384
    format: password
  groupNameListType:
    type: array
    items:
      $ref: '#/definitions/groupNameType'
  UserDetail:
    type: object
    properties:
      Path:
        $ref: '#/definitions/pathType'
        description: 'The path to the user. For more information about paths, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      UserName:
        $ref: '#/definitions/userNameType'
        description: The friendly name identifying the user.
      UserId:
        $ref: '#/definitions/idType'
        description: 'The stable and unique string identifying the user. For more information about IDs, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM Identifiers</a> in the <i>Using IAM</i> guide.'
      Arn:
        $ref: '#/definitions/arnType'
      CreateDate:
        $ref: '#/definitions/dateType'
        description: 'The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user was created.'
      UserPolicyList:
        $ref: '#/definitions/policyDetailListType'
        description: A list of the inline policies embedded in the user.
      GroupList:
        $ref: '#/definitions/groupNameListType'
        description: A list of IAM groups that the user is in.
      AttachedManagedPolicies:
        $ref: '#/definitions/attachedPoliciesListType'
        description: A list of the managed policies attached to the user.
      PermissionsBoundary:
        $ref: '#/definitions/AttachedPermissionsBoundary'
        description: '<p>The ARN of the policy used to set the permissions boundary for the user.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions Boundaries for IAM Identities </a> in the <i>IAM User Guide</i>.</p>'
    description: '<p>Contains information about an IAM user, including all the user''s policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>'
  summaryKeyType:
    type: string
    enum:
      - Users
      - UsersQuota
      - Groups
      - GroupsQuota
      - ServerCertificates
      - ServerCertificatesQuota
      - UserPolicySizeQuota
      - GroupPolicySizeQuota
      - GroupsPerUserQuota
      - SigningCertificatesPerUserQuota
      - AccessKeysPerUserQuota
      - MFADevices
      - MFADevicesInUse
      - AccountMFAEnabled
      - AccountAccessKeysPresent
      - AccountSigningCertificatesPresent
      - AttachedPoliciesPerGroupQuota
      - AttachedPoliciesPerRoleQuota
      - AttachedPoliciesPerUserQuota
      - Policies
      - PoliciesQuota
      - PolicySizeQuota
      - PolicyVersionsInUse
      - PolicyVersionsInUseQuota
      - VersionsPerPolicyQuota
  summaryValueType:
    type: integer
  thumbprintType:
    type: string
    description: <p>Contains a thumbprint for an identity provider's server certificate.</p> <p>The identity provider's server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string.</p>
    minLength: 40
    maxLength: 40
