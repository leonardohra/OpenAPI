swagger: '2.0'
info:
  version: '2013-04-01'
  x-release: v4
  title: Amazon Route 53
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: route53
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53-2013-04-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/route53/'
host: route53.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/2013-04-01/hostedzone/{Id}/associatevpc':
    post:
      operationId: AssociateVPCWithHostedZone
      description: '<p>Associates an Amazon VPC with a private hosted zone. </p> <important> <p>To perform the association, the VPC and the private hosted zone must already exist. You can''t convert a public hosted zone into a private hosted zone.</p> </important> <note> <p>If you want to associate a VPC that was created by using one AWS account with a private hosted zone that was created by using a different account, the AWS account that created the private hosted zone must first submit a <code>CreateVPCAssociationAuthorization</code> request. Then the account that created the VPC must submit an <code>AssociateVPCWithHostedZone</code> request.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateVPCWithHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '482':
          description: InvalidVPCId
          schema:
            $ref: '#/definitions/InvalidVPCId'
        '483':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '484':
          description: PublicZoneVPCAssociation
          schema:
            $ref: '#/definitions/PublicZoneVPCAssociation'
        '485':
          description: ConflictingDomainExists
          schema:
            $ref: '#/definitions/ConflictingDomainExists'
        '486':
          description: LimitsExceeded
          schema:
            $ref: '#/definitions/LimitsExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateVPCWithHostedZoneRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/rrset/':
    post:
      operationId: ChangeResourceRecordSets
      description: '<p>Creates, changes, or deletes a resource record set, which contains authoritative DNS information for a specified domain name or subdomain name. For example, you can use <code>ChangeResourceRecordSets</code> to create a resource record set that routes traffic for test.example.com to a web server that has an IP address of 192.0.2.44.</p> <p> <b>Change Batches and Transactional Changes</b> </p> <p>The request body must include a document with a <code>ChangeResourceRecordSetsRequest</code> element. The request body contains a list of change items, known as a change batch. Change batches are considered transactional changes. When using the Amazon Route 53 API to change resource record sets, Amazon Route 53 either makes all or none of the changes in a change batch request. This ensures that Amazon Route 53 never partially implements the intended changes to the resource record sets in a hosted zone. </p> <p>For example, a change batch request that deletes the <code>CNAME</code> record for www.example.com and creates an alias resource record set for www.example.com. Amazon Route 53 deletes the first resource record set and creates the second resource record set in a single operation. If either the <code>DELETE</code> or the <code>CREATE</code> action fails, then both changes (plus any other changes in the batch) fail, and the original <code>CNAME</code> record continues to exist.</p> <important> <p>Due to the nature of transactional changes, you can''t delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Amazon Route 53 returns an <code>InvalidChangeBatch</code> error.</p> </important> <p> <b>Traffic Flow</b> </p> <p>To create resource record sets for complex routing configurations, use either the traffic flow visual editor in the Amazon Route 53 console or the API actions for traffic policies and traffic policy instances. Save the configuration as a traffic policy, then associate the traffic policy with one or more domain names (such as example.com) or subdomain names (such as www.example.com), in the same hosted zone or in multiple hosted zones. You can roll back the updates if the new configuration isn''t performing as expected. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html">Using Traffic Flow to Route DNS Traffic</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Create, Delete, and Upsert</b> </p> <p>Use <code>ChangeResourceRecordsSetsRequest</code> to perform the following actions:</p> <ul> <li> <p> <code>CREATE</code>: Creates a resource record set that has the specified values.</p> </li> <li> <p> <code>DELETE</code>: Deletes an existing resource record set that has the specified values.</p> </li> <li> <p> <code>UPSERT</code>: If a resource record set does not already exist, AWS creates it. If a resource set does exist, Amazon Route 53 updates it with the values in the request. </p> </li> </ul> <p> <b>Syntaxes for Creating, Updating, and Deleting Resource Record Sets</b> </p> <p>The syntax for a request depends on the type of resource record set that you want to create, delete, or update, such as weighted, alias, or failover. The XML elements in your request must appear in the order listed in the syntax. </p> <p>For an example for each type of resource record set, see "Examples."</p> <p>Don''t refer to the syntax in the "Parameter Syntax" section, which includes all of the elements for every kind of resource record set that you can create, delete, or update by using <code>ChangeResourceRecordSets</code>. </p> <p> <b>Change Propagation to Amazon Route 53 DNS Servers</b> </p> <p>When you submit a <code>ChangeResourceRecordSets</code> request, Amazon Route 53 propagates your changes to all of the Amazon Route 53 authoritative DNS servers. While your changes are propagating, <code>GetChange</code> returns a status of <code>PENDING</code>. When propagation is complete, <code>GetChange</code> returns a status of <code>INSYNC</code>. Changes generally propagate to all Amazon Route 53 name servers within 60 seconds. For more information, see <a>GetChange</a>.</p> <p> <b>Limits on ChangeResourceRecordSets Requests</b> </p> <p>For information about the limits on a <code>ChangeResourceRecordSets</code> request, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChangeResourceRecordSetsResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '482':
          description: InvalidChangeBatch
          schema:
            $ref: '#/definitions/InvalidChangeBatch'
        '483':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '484':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangeResourceRecordSetsRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/tags/{ResourceType}/{ResourceId}':
    post:
      operationId: ChangeTagsForResource
      description: '<p>Adds, edits, or deletes tags for a health check or a hosted zone.</p> <p>For information about using tags for cost allocation, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ChangeTagsForResourceResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '483':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ChangeTagsForResourceRequest'
        - name: ResourceType
          in: path
          type: string
          required: true
        - name: ResourceId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTagsForResource
      description: '<p>Lists tags for one health check or hosted zone. </p> <p>For information about using tags for cost allocation, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '483':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: ResourceType
          in: path
          type: string
          required: true
        - name: ResourceId
          in: path
          type: string
          required: true
  /2013-04-01/healthcheck:
    post:
      operationId: CreateHealthCheck
      description: '<p>Creates a new health check.</p> <p>For information about adding health checks to resource record sets, see <a>ResourceRecordSet$HealthCheckId</a> in <a>ChangeResourceRecordSets</a>. </p> <p> <b>ELB Load Balancers</b> </p> <p>If you''re registering EC2 instances with an Elastic Load Balancing (ELB) load balancer, do not create Amazon Route 53 health checks for the EC2 instances. When you register an EC2 instance with a load balancer, you configure settings for an ELB health check, which performs a similar function to an Amazon Route 53 health check.</p> <p> <b>Private Hosted Zones</b> </p> <p>You can associate health checks with failover resource record sets in a private hosted zone. Note the following:</p> <ul> <li> <p>Amazon Route 53 health checkers are outside the VPC. To check the health of an endpoint within a VPC by IP address, you must assign a public IP address to the instance in the VPC.</p> </li> <li> <p>You can configure a health checker to check the health of an external resource that the instance relies on, such as a database server.</p> </li> <li> <p>You can create a CloudWatch metric, associate an alarm with the metric, and then create a health check that is based on the state of the alarm. For example, you might create a CloudWatch metric that checks the status of the Amazon EC2 <code>StatusCheckFailed</code> metric, add an alarm to the metric, and then create a health check that is based on the state of the alarm. For information about creating CloudWatch metrics and alarms by using the CloudWatch console, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatch.html">Amazon CloudWatch User Guide</a>.</p> </li> </ul>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateHealthCheckResponse'
        '480':
          description: TooManyHealthChecks
          schema:
            $ref: '#/definitions/TooManyHealthChecks'
        '481':
          description: HealthCheckAlreadyExists
          schema:
            $ref: '#/definitions/HealthCheckAlreadyExists'
        '482':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateHealthCheckRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListHealthChecks
      description: 'Retrieve a list of the health checks that are associated with the current AWS account. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListHealthChecksResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: IncompatibleVersion
          schema:
            $ref: '#/definitions/IncompatibleVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListHealthChecksRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
  /2013-04-01/hostedzone:
    post:
      operationId: CreateHostedZone
      description: '<p>Creates a new public hosted zone, which you use to specify how the Domain Name System (DNS) routes traffic on the Internet for a domain, such as example.com, and its subdomains. </p> <important> <p>You can''t convert a public hosted zones to a private hosted zone or vice versa. Instead, you must create a new hosted zone with the same name and create new resource record sets.</p> </important> <p>For more information about charges for hosted zones, see <a href="http://aws.amazon.com/route53/pricing/">Amazon Route 53 Pricing</a>.</p> <p>Note the following:</p> <ul> <li> <p>You can''t create a hosted zone for a top-level domain (TLD).</p> </li> <li> <p>Amazon Route 53 automatically creates a default SOA record and four NS records for the zone. For more information about SOA and NS records, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html">NS and SOA Records that Amazon Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>If you want to use the same name servers for multiple hosted zones, you can optionally associate a reusable delegation set with the hosted zone. See the <code>DelegationSetId</code> element.</p> </li> <li> <p>If your domain is registered with a registrar other than Amazon Route 53, you must update the name servers with your registrar to make Amazon Route 53 your DNS service. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/creating-migrating.html">Configuring Amazon Route 53 as your DNS Service</a> in the <i>Amazon Route 53 Developer Guide</i>. </p> </li> </ul> <p>When you submit a <code>CreateHostedZone</code> request, the initial status of the hosted zone is <code>PENDING</code>. This means that the NS and SOA records are not yet available on all Amazon Route 53 DNS servers. When the NS and SOA records are available, the status of the zone changes to <code>INSYNC</code>.</p>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateHostedZoneResponse'
        '480':
          description: InvalidDomainName
          schema:
            $ref: '#/definitions/InvalidDomainName'
        '481':
          description: HostedZoneAlreadyExists
          schema:
            $ref: '#/definitions/HostedZoneAlreadyExists'
        '482':
          description: TooManyHostedZones
          schema:
            $ref: '#/definitions/TooManyHostedZones'
        '483':
          description: InvalidVPCId
          schema:
            $ref: '#/definitions/InvalidVPCId'
        '484':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '485':
          description: DelegationSetNotAvailable
          schema:
            $ref: '#/definitions/DelegationSetNotAvailable'
        '486':
          description: ConflictingDomainExists
          schema:
            $ref: '#/definitions/ConflictingDomainExists'
        '487':
          description: NoSuchDelegationSet
          schema:
            $ref: '#/definitions/NoSuchDelegationSet'
        '488':
          description: DelegationSetNotReusable
          schema:
            $ref: '#/definitions/DelegationSetNotReusable'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateHostedZoneRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListHostedZones
      description: '<p>Retrieves a list of the public and private hosted zones that are associated with the current AWS account. The response includes a <code>HostedZones</code> child element for each hosted zone.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of hosted zones, you can use the <code>maxitems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListHostedZonesResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchDelegationSet
          schema:
            $ref: '#/definitions/NoSuchDelegationSet'
        '482':
          description: DelegationSetNotReusable
          schema:
            $ref: '#/definitions/DelegationSetNotReusable'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListHostedZonesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
  /2013-04-01/queryloggingconfig:
    post:
      operationId: CreateQueryLoggingConfig
      description: '<p>Creates a configuration for DNS query logging. After you create a query logging configuration, Amazon Route 53 begins to publish log data to an Amazon CloudWatch Logs log group.</p> <p>DNS query logs contain information about the queries that Amazon Route 53 receives for a specified public hosted zone, such as the following:</p> <ul> <li> <p>Amazon Route 53 edge location that responded to the DNS query</p> </li> <li> <p>Domain or subdomain that was requested</p> </li> <li> <p>DNS record type, such as A or AAAA</p> </li> <li> <p>DNS response code, such as <code>NoError</code> or <code>ServFail</code> </p> </li> </ul> <dl> <dt>Log Group and Resource Policy</dt> <dd> <p>Before you create a query logging configuration, perform the following operations.</p> <note> <p>If you create a query logging configuration using the Amazon Route 53 console, Amazon Route 53 performs these operations automatically.</p> </note> <ol> <li> <p>Create a CloudWatch Logs log group, and make note of the ARN, which you specify when you create a query logging configuration. Note the following:</p> <ul> <li> <p>You must create the log group in the us-east-1 region.</p> </li> <li> <p>You must use the same AWS account to create the log group and the hosted zone that you want to configure query logging for.</p> </li> <li> <p>When you create log groups for query logging, we recommend that you use a consistent prefix, for example:</p> <p> <code>/aws/route53/<i>hosted zone name</i> </code> </p> <p>In the next step, you''ll create a resource policy, which controls access to one or more log groups and the associated AWS resources, such as Amazon Route 53 hosted zones. There''s a limit on the number of resource policies that you can create, so we recommend that you use a consistent prefix so you can use the same resource policy for all the log groups that you create for query logging.</p> </li> </ul> </li> <li> <p>Create a CloudWatch Logs resource policy, and give it the permissions that Amazon Route 53 needs to create log streams and to send query logs to log streams. For the value of <code>Resource</code>, specify the ARN for the log group that you created in the previous step. To use the same resource policy for all the CloudWatch Logs log groups that you created for query logging configurations, replace the hosted zone name with <code>*</code>, for example:</p> <p> <code>arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*</code> </p> <note> <p>You can''t use the CloudWatch console to create or edit a resource policy. You must use the CloudWatch API, one of the AWS SDKs, or the AWS CLI.</p> </note> </li> </ol> </dd> <dt>Log Streams and Edge Locations</dt> <dd> <p>When Amazon Route 53 finishes creating the configuration for DNS query logging, it does the following:</p> <ul> <li> <p>Creates a log stream for an edge location the first time that the edge location responds to DNS queries for the specified hosted zone. That log stream is used to log all queries that Amazon Route 53 responds to for that edge location.</p> </li> <li> <p>Begins to send query logs to the applicable log stream.</p> </li> </ul> <p>The name of each log stream is in the following format:</p> <p> <code> <i>hosted zone ID</i>/<i>edge location code</i> </code> </p> <p>The edge location code is a three-letter code and an arbitrarily assigned number, for example, DFW3. The three-letter code typically corresponds with the International Air Transport Association airport code for an airport near the edge location. (These abbreviations might change in the future.) For a list of edge locations, see "The Amazon Route 53 Global Network" on the <a href="http://aws.amazon.com/route53/details/">Amazon Route 53 Product Details</a> page.</p> </dd> <dt>Queries That Are Logged</dt> <dd> <p>Query logs contain only the queries that DNS resolvers forward to Amazon Route 53. If a DNS resolver has already cached the response to a query (such as the IP address for a load balancer for example.com), the resolver will continue to return the cached response. It doesn''t forward another query to Amazon Route 53 until the TTL for the corresponding resource record set expires. Depending on how many DNS queries are submitted for a resource record set, and depending on the TTL for that resource record set, query logs might contain information about only one query out of every several thousand queries that are submitted to DNS. For more information about how DNS works, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html">Routing Internet Traffic to Your Website or Web Application</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </dd> <dt>Log File Format</dt> <dd> <p>For a list of the values in each query log and the format of each value, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </dd> <dt>Pricing</dt> <dd> <p>For information about charges for query logs, see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> </dd> <dt>How to Stop Logging</dt> <dd> <p>If you want Amazon Route 53 to stop sending query logs to CloudWatch Logs, delete the query logging configuration. For more information, see <a>DeleteQueryLoggingConfig</a>.</p> </dd> </dl>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateQueryLoggingConfigResponse'
        '480':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
        '481':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '482':
          description: NoSuchCloudWatchLogsLogGroup
          schema:
            $ref: '#/definitions/NoSuchCloudWatchLogsLogGroup'
        '483':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '484':
          description: QueryLoggingConfigAlreadyExists
          schema:
            $ref: '#/definitions/QueryLoggingConfigAlreadyExists'
        '485':
          description: InsufficientCloudWatchLogsResourcePolicy
          schema:
            $ref: '#/definitions/InsufficientCloudWatchLogsResourcePolicy'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateQueryLoggingConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListQueryLoggingConfigs
      description: '<p>Lists the configurations for DNS query logging that are associated with the current AWS account or the configuration that is associated with a specified hosted zone.</p> <p>For more information about DNS query logs, see <a>CreateQueryLoggingConfig</a>. Additional information, including the format of DNS query logs, appears in <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListQueryLoggingConfigsResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListQueryLoggingConfigsRequest'
  /2013-04-01/delegationset:
    post:
      operationId: CreateReusableDelegationSet
      description: '<p>Creates a delegation set (a group of four name servers) that can be reused by multiple hosted zones. If a hosted zoned ID is specified, <code>CreateReusableDelegationSet</code> marks the delegation set associated with that zone as reusable.</p> <note> <p>You can''t associate a reusable delegation set with a private hosted zone.</p> </note> <p>For information about using a reusable delegation set to configure white label name servers, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/white-label-name-servers.html">Configuring White Label Name Servers</a>.</p> <p>The process for migrating existing hosted zones to use a reusable delegation set is comparable to the process for configuring white label name servers. You need to perform the following steps:</p> <ol> <li> <p>Create a reusable delegation set.</p> </li> <li> <p>Recreate hosted zones, and reduce the TTL to 60 seconds or less.</p> </li> <li> <p>Recreate resource record sets in the new hosted zones.</p> </li> <li> <p>Change the registrar''s name servers to use the name servers for the new hosted zones.</p> </li> <li> <p>Monitor traffic for the website or application.</p> </li> <li> <p>Change TTLs back to their original values.</p> </li> </ol> <p>If you want to migrate existing hosted zones to use a reusable delegation set, the existing hosted zones can''t use any of the name servers that are assigned to the reusable delegation set. If one or more hosted zones do use one or more name servers that are assigned to the reusable delegation set, you can do one of the following:</p> <ul> <li> <p>For small numbers of hosted zones—up to a few hundred—it''s relatively easy to create reusable delegation sets until you get one that has four name servers that don''t overlap with any of the name servers in your hosted zones.</p> </li> <li> <p>For larger numbers of hosted zones, the easiest solution is to use more than one reusable delegation set.</p> </li> <li> <p>For larger numbers of hosted zones, you can also migrate hosted zones that have overlapping name servers to hosted zones that don''t have overlapping name servers, then migrate the hosted zones again to use the reusable delegation set.</p> </li> </ul>'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateReusableDelegationSetResponse'
        '480':
          description: DelegationSetAlreadyCreated
          schema:
            $ref: '#/definitions/DelegationSetAlreadyCreated'
        '481':
          description: LimitsExceeded
          schema:
            $ref: '#/definitions/LimitsExceeded'
        '482':
          description: HostedZoneNotFound
          schema:
            $ref: '#/definitions/HostedZoneNotFound'
        '483':
          description: InvalidArgument
          schema:
            $ref: '#/definitions/InvalidArgument'
        '484':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '485':
          description: DelegationSetNotAvailable
          schema:
            $ref: '#/definitions/DelegationSetNotAvailable'
        '486':
          description: DelegationSetAlreadyReusable
          schema:
            $ref: '#/definitions/DelegationSetAlreadyReusable'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReusableDelegationSetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListReusableDelegationSets
      description: Retrieves a list of the reusable delegation sets that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListReusableDelegationSetsResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListReusableDelegationSetsRequest'
  /2013-04-01/trafficpolicy:
    post:
      operationId: CreateTrafficPolicy
      description: 'Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrafficPolicyResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: TooManyTrafficPolicies
          schema:
            $ref: '#/definitions/TooManyTrafficPolicies'
        '482':
          description: TrafficPolicyAlreadyExists
          schema:
            $ref: '#/definitions/TrafficPolicyAlreadyExists'
        '483':
          description: InvalidTrafficPolicyDocument
          schema:
            $ref: '#/definitions/InvalidTrafficPolicyDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrafficPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstance:
    post:
      operationId: CreateTrafficPolicyInstance
      description: 'Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code> associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code> created.'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrafficPolicyInstanceResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: TooManyTrafficPolicyInstances
          schema:
            $ref: '#/definitions/TooManyTrafficPolicyInstances'
        '483':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '484':
          description: TrafficPolicyInstanceAlreadyExists
          schema:
            $ref: '#/definitions/TrafficPolicyInstanceAlreadyExists'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrafficPolicyInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicy/{Id}':
    post:
      operationId: CreateTrafficPolicyVersion
      description: 'Creates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version. You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). You can create a maximum of 1000 versions of a traffic policy. If you reach the limit and need to create another version, you''ll need to start a new traffic policy.'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrafficPolicyVersionResponse'
        '480':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: TooManyTrafficPolicyVersionsForCurrentPolicy
          schema:
            $ref: '#/definitions/TooManyTrafficPolicyVersionsForCurrentPolicy'
        '483':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
        '484':
          description: InvalidTrafficPolicyDocument
          schema:
            $ref: '#/definitions/InvalidTrafficPolicyDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrafficPolicyVersionRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/authorizevpcassociation':
    post:
      operationId: CreateVPCAssociationAuthorization
      description: '<p>Authorizes the AWS account that created a specified VPC to submit an <code>AssociateVPCWithHostedZone</code> request to associate the VPC with a specified hosted zone that was created by a different account. To submit a <code>CreateVPCAssociationAuthorization</code> request, you must use the account that created the hosted zone. After you authorize the association, use the account that created the VPC to submit an <code>AssociateVPCWithHostedZone</code> request.</p> <note> <p>If you want to associate multiple VPCs that you created by using one account with a hosted zone that you created by using a different account, you must submit one authorization request for each VPC.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateVPCAssociationAuthorizationResponse'
        '480':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
        '481':
          description: TooManyVPCAssociationAuthorizations
          schema:
            $ref: '#/definitions/TooManyVPCAssociationAuthorizations'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '483':
          description: InvalidVPCId
          schema:
            $ref: '#/definitions/InvalidVPCId'
        '484':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateVPCAssociationAuthorizationRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListVPCAssociationAuthorizations
      description: <p>Gets a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone because you've submitted one or more <code>CreateVPCAssociationAuthorization</code> requests. </p> <p>The response includes a <code>VPCs</code> element with a <code>VPC</code> child element for each VPC that can be associated with the hosted zone.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListVPCAssociationAuthorizationsResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: InvalidPaginationToken
          schema:
            $ref: '#/definitions/InvalidPaginationToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListVPCAssociationAuthorizationsRequest'
        - name: Id
          in: path
          type: string
          required: true
  '/2013-04-01/healthcheck/{HealthCheckId}':
    delete:
      operationId: DeleteHealthCheck
      description: '<p>Deletes a health check.</p> <important> <p>Amazon Route 53 does not prevent you from deleting a health check even if the health check is associated with one or more resource record sets. If you delete a health check and you don''t update the associated resource record sets, the future status of the health check can''t be predicted and may change. This will affect the routing of DNS queries for your DNS failover configuration. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html#health-checks-deleting.html">Replacing and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteHealthCheckResponse'
        '480':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '481':
          description: HealthCheckInUse
          schema:
            $ref: '#/definitions/HealthCheckInUse'
        '482':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteHealthCheckRequest'
        - name: HealthCheckId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetHealthCheck
      description: Gets information about a specified health check.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHealthCheckResponse'
        '480':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: IncompatibleVersion
          schema:
            $ref: '#/definitions/IncompatibleVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHealthCheckRequest'
        - name: HealthCheckId
          in: path
          type: string
          required: true
    post:
      operationId: UpdateHealthCheck
      description: '<p>Updates an existing health check. Note that some values can''t be updated. </p> <p>For more information about updating health checks, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html">Creating, Updating, and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateHealthCheckResponse'
        '480':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: HealthCheckVersionMismatch
          schema:
            $ref: '#/definitions/HealthCheckVersionMismatch'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateHealthCheckRequest'
        - name: HealthCheckId
          in: path
          type: string
          required: true
  '/2013-04-01/hostedzone/{Id}':
    delete:
      operationId: DeleteHostedZone
      description: '<p>Deletes a hosted zone.</p> <important> <p>If the name servers for the hosted zone are associated with a domain and if you want to make the domain unavailable on the Internet, we recommend that you delete the name servers from the domain to prevent future DNS queries from possibly being misrouted. If the domain is registered with Amazon Route 53, see <code>UpdateDomainNameservers</code>. If the domain is registered with another registrar, use the method provided by the registrar to delete name servers for the domain.</p> <p>Some domain registries don''t allow you to remove all of the name servers for a domain. If the registry for your domain requires one or more name servers, we recommend that you delete the hosted zone only if you transfer DNS service to another service provider, and you replace the name servers for the domain with name servers from the new provider.</p> </important> <p>You can delete a hosted zone only if it contains only the default SOA record and NS resource record sets. If the hosted zone contains other resource record sets, you must delete them before you can delete the hosted zone. If you try to delete a hosted zone that contains other resource record sets, the request fails, and Amazon Route 53 returns a <code>HostedZoneNotEmpty</code> error. For information about deleting records from your hosted zone, see <a>ChangeResourceRecordSets</a>.</p> <p>To verify that the hosted zone has been deleted, do one of the following:</p> <ul> <li> <p>Use the <code>GetHostedZone</code> action to request information about the hosted zone.</p> </li> <li> <p>Use the <code>ListHostedZones</code> action to get a list of the hosted zones associated with the current AWS account.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: HostedZoneNotEmpty
          schema:
            $ref: '#/definitions/HostedZoneNotEmpty'
        '482':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
        '483':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '484':
          description: InvalidDomainName
          schema:
            $ref: '#/definitions/InvalidDomainName'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteHostedZoneRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetHostedZone
      description: Gets information about a specified hosted zone including the four name servers assigned to the hosted zone.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHostedZoneRequest'
        - name: Id
          in: path
          type: string
          required: true
    post:
      operationId: UpdateHostedZoneComment
      description: Updates the comment for a specified hosted zone.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateHostedZoneCommentResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateHostedZoneCommentRequest'
        - name: Id
          in: path
          type: string
          required: true
  '/2013-04-01/queryloggingconfig/{Id}':
    delete:
      operationId: DeleteQueryLoggingConfig
      description: '<p>Deletes a configuration for DNS query logging. If you delete a configuration, Amazon Route 53 stops sending query logs to CloudWatch Logs. Amazon Route 53 doesn''t delete any logs that are already in CloudWatch Logs.</p> <p>For more information about DNS query logs, see <a>CreateQueryLoggingConfig</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteQueryLoggingConfigResponse'
        '480':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
        '481':
          description: NoSuchQueryLoggingConfig
          schema:
            $ref: '#/definitions/NoSuchQueryLoggingConfig'
        '482':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteQueryLoggingConfigRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetQueryLoggingConfig
      description: '<p>Gets information about a specified configuration for DNS query logging.</p> <p>For more information about DNS query logs, see <a>CreateQueryLoggingConfig</a> and <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging DNS Queries</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetQueryLoggingConfigResponse'
        '480':
          description: NoSuchQueryLoggingConfig
          schema:
            $ref: '#/definitions/NoSuchQueryLoggingConfig'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetQueryLoggingConfigRequest'
        - name: Id
          in: path
          type: string
          required: true
  '/2013-04-01/delegationset/{Id}':
    delete:
      operationId: DeleteReusableDelegationSet
      description: '<p>Deletes a reusable delegation set.</p> <important> <p>You can delete a reusable delegation set only if it isn''t associated with any hosted zones.</p> </important> <p>To verify that the reusable delegation set is not associated with any hosted zones, submit a <a>GetReusableDelegationSet</a> request and specify the ID of the reusable delegation set that you want to delete.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReusableDelegationSetResponse'
        '480':
          description: NoSuchDelegationSet
          schema:
            $ref: '#/definitions/NoSuchDelegationSet'
        '481':
          description: DelegationSetInUse
          schema:
            $ref: '#/definitions/DelegationSetInUse'
        '482':
          description: DelegationSetNotReusable
          schema:
            $ref: '#/definitions/DelegationSetNotReusable'
        '483':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteReusableDelegationSetRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetReusableDelegationSet
      description: 'Retrieves information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetReusableDelegationSetResponse'
        '480':
          description: NoSuchDelegationSet
          schema:
            $ref: '#/definitions/NoSuchDelegationSet'
        '481':
          description: DelegationSetNotReusable
          schema:
            $ref: '#/definitions/DelegationSetNotReusable'
        '482':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetReusableDelegationSetRequest'
        - name: Id
          in: path
          type: string
          required: true
  '/2013-04-01/trafficpolicy/{Id}/{Version}':
    delete:
      operationId: DeleteTrafficPolicy
      description: Deletes a traffic policy.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTrafficPolicyResponse'
        '480':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: TrafficPolicyInUse
          schema:
            $ref: '#/definitions/TrafficPolicyInUse'
        '483':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTrafficPolicyRequest'
        - name: Id
          in: path
          type: string
          required: true
        - name: Version
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTrafficPolicy
      description: Gets information about a specific traffic policy version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTrafficPolicyResponse'
        '480':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTrafficPolicyRequest'
        - name: Id
          in: path
          type: string
          required: true
        - name: Version
          in: path
          type: string
          required: true
    post:
      operationId: UpdateTrafficPolicyComment
      description: Updates the comment for a specified traffic policy version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTrafficPolicyCommentResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '482':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTrafficPolicyCommentRequest'
        - name: Id
          in: path
          type: string
          required: true
        - name: Version
          in: path
          type: string
          required: true
  '/2013-04-01/trafficpolicyinstance/{Id}':
    delete:
      operationId: DeleteTrafficPolicyInstance
      description: '<p>Deletes a traffic policy instance and all of the resource record sets that Amazon Route 53 created when you created the instance.</p> <note> <p>In the Amazon Route 53 console, traffic policy instances are known as policy records.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTrafficPolicyInstanceResponse'
        '480':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTrafficPolicyInstanceRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTrafficPolicyInstance
      description: '<p>Gets information about a specified traffic policy instance.</p> <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <note> <p>In the Amazon Route 53 console, traffic policy instances are known as policy records.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTrafficPolicyInstanceResponse'
        '480':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTrafficPolicyInstanceRequest'
        - name: Id
          in: path
          type: string
          required: true
    post:
      operationId: UpdateTrafficPolicyInstance
      description: '<p>Updates the resource record sets in a specified hosted zone that were created based on the settings in a specified traffic policy version.</p> <p>When you update a traffic policy instance, Amazon Route 53 continues to respond to DNS queries for the root resource record set name (such as example.com) while it replaces one group of resource record sets with another. Amazon Route 53 performs the following operations:</p> <ol> <li> <p>Amazon Route 53 creates a new group of resource record sets based on the specified traffic policy. This is true regardless of how significant the differences are between the existing resource record sets and the new resource record sets. </p> </li> <li> <p>When all of the new resource record sets have been created, Amazon Route 53 starts to respond to DNS queries for the root resource record set name (such as example.com) by using the new resource record sets.</p> </li> <li> <p>Amazon Route 53 deletes the old group of resource record sets that are associated with the root resource record set name.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTrafficPolicyInstanceResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
        '482':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
        '483':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
        '484':
          description: ConflictingTypes
          schema:
            $ref: '#/definitions/ConflictingTypes'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTrafficPolicyInstanceRequest'
        - name: Id
          in: path
          type: string
          required: true
  '/2013-04-01/hostedzone/{Id}/deauthorizevpcassociation':
    post:
      operationId: DeleteVPCAssociationAuthorization
      description: '<p>Removes authorization to submit an <code>AssociateVPCWithHostedZone</code> request to associate a specified VPC with a hosted zone that was created by a different account. You must use the account that created the hosted zone to submit a <code>DeleteVPCAssociationAuthorization</code> request.</p> <important> <p>Sending this request only prevents the AWS account that created the VPC from associating the VPC with the Amazon Route 53 hosted zone in the future. If the VPC is already associated with the hosted zone, <code>DeleteVPCAssociationAuthorization</code> won''t disassociate the VPC from the hosted zone. If you want to delete an existing association, use <code>DisassociateVPCFromHostedZone</code>.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteVPCAssociationAuthorizationResponse'
        '480':
          description: ConcurrentModification
          schema:
            $ref: '#/definitions/ConcurrentModification'
        '481':
          description: VPCAssociationAuthorizationNotFound
          schema:
            $ref: '#/definitions/VPCAssociationAuthorizationNotFound'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '483':
          description: InvalidVPCId
          schema:
            $ref: '#/definitions/InvalidVPCId'
        '484':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteVPCAssociationAuthorizationRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/disassociatevpc':
    post:
      operationId: DisassociateVPCFromHostedZone
      description: <p>Disassociates a VPC from a Amazon Route 53 private hosted zone. </p> <note> <p>You can't disassociate the last VPC from a private hosted zone.</p> </note> <important> <p>You can't disassociate a VPC from a private hosted zone when only one VPC is associated with the hosted zone. You also can't convert a private hosted zone into a public hosted zone.</p> </important>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateVPCFromHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidVPCId
          schema:
            $ref: '#/definitions/InvalidVPCId'
        '482':
          description: VPCAssociationNotFound
          schema:
            $ref: '#/definitions/VPCAssociationNotFound'
        '483':
          description: LastVPCAssociation
          schema:
            $ref: '#/definitions/LastVPCAssociation'
        '484':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateVPCFromHostedZoneRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/accountlimit/{Type}':
    get:
      operationId: GetAccountLimit
      description: '<p>Gets the specified limit for the current account, for example, the maximum number of health checks that you can create using the account.</p> <p>For the default limit, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open a case</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAccountLimitResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAccountLimitRequest'
        - name: Type
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/change/{Id}':
    get:
      operationId: GetChange
      description: '<p>Returns the current status of a change batch request. The status is one of the following values:</p> <ul> <li> <p> <code>PENDING</code> indicates that the changes in this request have not propagated to all Amazon Route 53 DNS servers. This is the initial status of all change batch requests.</p> </li> <li> <p> <code>INSYNC</code> indicates that the changes have propagated to all Amazon Route 53 DNS servers. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetChangeResponse'
        '480':
          description: NoSuchChange
          schema:
            $ref: '#/definitions/NoSuchChange'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetChangeRequest'
        - name: Id
          in: path
          type: string
          required: true
      x-waiters:
        - delay: 30
          maxAttempts: 60
          operation: GetChange
          acceptors:
            - matcher: path
              expected: INSYNC
              argument: ChangeInfo.Status
              state: success
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/checkeripranges:
    get:
      operationId: GetCheckerIpRanges
      description: ' <code>GetCheckerIpRanges</code> still works, but we recommend that you download ip-ranges.json, which includes IP address ranges for all AWS services. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/route-53-ip-addresses.html">IP Address Ranges of Amazon Route 53 Servers</a> in the <i>Amazon Route 53 Developer Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCheckerIpRangesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCheckerIpRangesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/geolocation:
    get:
      operationId: GetGeoLocation
      description: '<p>Gets information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets.</p> <p>Use the following syntax to determine whether a continent is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?ContinentCode=<i>two-letter abbreviation for a continent</i> </code> </p> <p>Use the following syntax to determine whether a country is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?CountryCode=<i>two-character country code</i> </code> </p> <p>Use the following syntax to determine whether a subdivision of a country is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?CountryCode=<i>two-character country code</i>&amp;SubdivisionCode=<i>subdivision code</i> </code> </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGeoLocationResponse'
        '480':
          description: NoSuchGeoLocation
          schema:
            $ref: '#/definitions/NoSuchGeoLocation'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGeoLocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/healthcheckcount:
    get:
      operationId: GetHealthCheckCount
      description: Retrieves the number of health checks that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHealthCheckCountResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHealthCheckCountRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/healthcheck/{HealthCheckId}/lastfailurereason':
    get:
      operationId: GetHealthCheckLastFailureReason
      description: Gets the reason that a specified health check failed most recently.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHealthCheckLastFailureReasonResponse'
        '480':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHealthCheckLastFailureReasonRequest'
        - name: HealthCheckId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/healthcheck/{HealthCheckId}/status':
    get:
      operationId: GetHealthCheckStatus
      description: 'Gets status of a specified health check. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHealthCheckStatusResponse'
        '480':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHealthCheckStatusRequest'
        - name: HealthCheckId
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/hostedzonecount:
    get:
      operationId: GetHostedZoneCount
      description: Retrieves the number of hosted zones that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHostedZoneCountResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHostedZoneCountRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzonelimit/{Id}/{Type}':
    get:
      operationId: GetHostedZoneLimit
      description: '<p>Gets the specified limit for a specified hosted zone, for example, the maximum number of records that you can create in the hosted zone. </p> <p>For the default limit, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open a case</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetHostedZoneLimitResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '482':
          description: HostedZoneNotPrivate
          schema:
            $ref: '#/definitions/HostedZoneNotPrivate'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetHostedZoneLimitRequest'
        - name: Id
          in: path
          type: string
          required: true
        - name: Type
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/reusabledelegationsetlimit/{Id}/{Type}':
    get:
      operationId: GetReusableDelegationSetLimit
      description: '<p>Gets the maximum number of hosted zones that you can associate with the specified reusable delegation set.</p> <p>For the default limit, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>. To request a higher limit, <a href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open a case</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetReusableDelegationSetLimitResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchDelegationSet
          schema:
            $ref: '#/definitions/NoSuchDelegationSet'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetReusableDelegationSetLimitRequest'
        - name: Id
          in: path
          type: string
          required: true
        - name: Type
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstancecount:
    get:
      operationId: GetTrafficPolicyInstanceCount
      description: Gets the number of traffic policy instances that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTrafficPolicyInstanceCountResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTrafficPolicyInstanceCountRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/geolocations:
    get:
      operationId: ListGeoLocations
      description: '<p>Retrieves a list of supported geo locations.</p> <p>Countries are listed first, and continents are listed last. If Amazon Route 53 supports subdivisions for a country (for example, states or provinces), the subdivisions for that country are listed in alphabetical order immediately after the corresponding country.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGeoLocationsResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGeoLocationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/hostedzonesbyname:
    get:
      operationId: ListHostedZonesByName
      description: '<p>Retrieves a list of your hosted zones in lexicographic order. The response includes a <code>HostedZones</code> child element for each hosted zone created by the current AWS account. </p> <p> <code>ListHostedZonesByName</code> sorts hosted zones by name with the labels reversed. For example:</p> <p> <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change the sort order in some circumstances.</p> <p>If the domain name includes escape characters or Punycode, <code>ListHostedZonesByName</code> alphabetizes the domain name using the escaped or Punycoded value, which is the format that Amazon Route 53 saves in its database. For example, to create a hosted zone for exämple.com, you specify ex\344mple.com for the domain name. <code>ListHostedZonesByName</code> alphabetizes it as:</p> <p> <code>com.ex\344mple.</code> </p> <p>The labels are reversed and alphabetized using the escaped value. For more information about valid domain name formats, including internationalized domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Amazon Route 53 returns up to 100 items in each response. If you have a lot of hosted zones, use the <code>MaxItems</code> parameter to list them in groups of up to 100. The response includes values that help navigate from one group of <code>MaxItems</code> hosted zones to the next:</p> <ul> <li> <p>The <code>DNSName</code> and <code>HostedZoneId</code> elements in the response contain the values, if any, specified for the <code>dnsname</code> and <code>hostedzoneid</code> parameters in the request that produced the current response.</p> </li> <li> <p>The <code>MaxItems</code> element in the response contains the value, if any, that you specified for the <code>maxitems</code> parameter in the request that produced the current response.</p> </li> <li> <p>If the value of <code>IsTruncated</code> in the response is true, there are more hosted zones associated with the current AWS account. </p> <p>If <code>IsTruncated</code> is false, this response includes the last hosted zone that is associated with the current account. The <code>NextDNSName</code> element and <code>NextHostedZoneId</code> elements are omitted from the response.</p> </li> <li> <p>The <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements in the response contain the domain name and the hosted zone ID of the next hosted zone that is associated with the current AWS account. If you want to list more hosted zones, make another call to <code>ListHostedZonesByName</code>, and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListHostedZonesByNameResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: InvalidDomainName
          schema:
            $ref: '#/definitions/InvalidDomainName'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListHostedZonesByNameRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/rrset':
    get:
      operationId: ListResourceRecordSets
      description: '<p>Lists the resource record sets in a specified hosted zone.</p> <p> <code>ListResourceRecordSets</code> returns up to 100 resource record sets at a time in ASCII order, beginning at a position specified by the <code>name</code> and <code>type</code> elements. The action sorts results first by DNS name with the labels reversed, for example:</p> <p> <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change the sort order in some circumstances.</p> <p>When multiple records have the same DNS name, the action sorts results by the record type.</p> <p>You can use the name and type elements to adjust the beginning position of the list of resource record sets returned:</p> <dl> <dt>If you do not specify Name or Type</dt> <dd> <p>The results begin with the first resource record set that the hosted zone contains.</p> </dd> <dt>If you specify Name but not Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>.</p> </dd> <dt>If you specify Type but not Name</dt> <dd> <p>Amazon Route 53 returns the <code>InvalidInput</code> error.</p> </dd> <dt>If you specify both Name and Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>, and whose type is greater than or equal to <code>Type</code>.</p> </dd> </dl> <p>This action returns the most current version of the records. This includes records that are <code>PENDING</code>, and that are not yet available on all Amazon Route 53 DNS servers.</p> <p>To ensure that you get an accurate listing of the resource record sets for a hosted zone at a point in time, do not submit a <code>ChangeResourceRecordSets</code> request while you''re paging through the results of a <code>ListResourceRecordSets</code> request. If you do, some pages may display results without the latest changes while other pages display results with the latest changes.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceRecordSetsResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceRecordSetsRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: StartRecordName
          type: string
          in: query
          description: Pagination token
          required: false
        - name: StartRecordType
          type: string
          in: query
          description: Pagination token
          required: false
        - name: StartRecordIdentifier
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/tags/{ResourceType}':
    post:
      operationId: ListTagsForResources
      description: '<p>Lists tags for up to 10 health checks or hosted zones.</p> <p>For information about using tags for cost allocation, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourcesResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchHealthCheck
          schema:
            $ref: '#/definitions/NoSuchHealthCheck'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '483':
          description: PriorRequestNotComplete
          schema:
            $ref: '#/definitions/PriorRequestNotComplete'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourcesRequest'
        - name: ResourceType
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicies:
    get:
      operationId: ListTrafficPolicies
      description: 'Gets information about the latest version for every traffic policy that is associated with the current AWS account. Policies are listed in the order in which they were created. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrafficPoliciesResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrafficPoliciesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances:
    get:
      operationId: ListTrafficPolicyInstances
      description: '<p>Gets information about the traffic policy instances that you created by using the current AWS account.</p> <note> <p>After you submit an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances/hostedzone:
    get:
      operationId: ListTrafficPolicyInstancesByHostedZone
      description: '<p>Gets information about the traffic policy instances that you created in a specified hosted zone.</p> <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesByHostedZoneResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
        '482':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesByHostedZoneRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances/trafficpolicy:
    get:
      operationId: ListTrafficPolicyInstancesByPolicy
      description: '<p>Gets information about the traffic policy instances that you created by using a specify traffic policy version.</p> <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesByPolicyResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicyInstance'
        '482':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrafficPolicyInstancesByPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicies/{Id}/versions':
    get:
      operationId: ListTrafficPolicyVersions
      description: <p>Gets information about all of the versions for a specified traffic policy.</p> <p>Traffic policy versions are listed in numerical order by <code>VersionNumber</code>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTrafficPolicyVersionsResponse'
        '480':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          schema:
            $ref: '#/definitions/NoSuchTrafficPolicy'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTrafficPolicyVersionsRequest'
        - name: Id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /2013-04-01/testdnsanswer:
    get:
      operationId: TestDNSAnswer
      description: 'Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestDNSAnswerResponse'
        '480':
          description: NoSuchHostedZone
          schema:
            $ref: '#/definitions/NoSuchHostedZone'
        '481':
          description: InvalidInput
          schema:
            $ref: '#/definitions/InvalidInput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TestDNSAnswerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AssociateVPCWithHostedZoneResponse:
    type: object
    required:
      - ChangeInfo
    example:
      ChangeInfo:
        Comment: ''
        Id: /change/C3HC6WDB2UANE2
        Status: INSYNC
        SubmittedAt: '2017-01-31T01:36:41.958Z'
    properties:
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: A complex type that describes the changes made to your hosted zone.
    description: A complex type that contains the response information for the <code>AssociateVPCWithHostedZone</code> request.
  AssociateVPCWithHostedZoneRequest:
    type: object
    required:
      - VPC
    example:
      Comment: ''
      HostedZoneId: Z3M3LMPEXAMPLE
      VPC:
        VPCId: vpc-1a2b3c4d
        VPCRegion: us-east-2
    properties:
      VPC:
        $ref: '#/definitions/VPC'
        description: A complex type that contains information about the VPC that you want to associate with a private hosted zone.
      Comment:
        $ref: '#/definitions/AssociateVPCComment'
        description: ' <i>Optional:</i> A comment about the association request.'
    description: A complex type that contains information about the request to associate a VPC with a private hosted zone.
  NoSuchHostedZone:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: No hosted zone exists with the ID that you specified.
  NotAuthorizedException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: Associating the specified VPC with the specified hosted zone has not been authorized.
  InvalidVPCId:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The VPC ID that you specified either isn't a valid ID or the current account is not authorized to access this VPC.
  InvalidInput:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The input is not valid.
  PublicZoneVPCAssociation:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: You're trying to associate a VPC with a public hosted zone. Amazon Route 53 doesn't support associating a VPC with a public hosted zone.
  ConflictingDomainExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: '<p>The cause of this error depends on whether you''re trying to create a public or a private hosted zone:</p> <ul> <li> <p> <b>Public hosted zone:</b> Two hosted zones that have the same name or that have a parent/child relationship (example.com and test.example.com) can''t have any common name servers. You tried to create a hosted zone that has the same name as an existing hosted zone or that''s the parent or child of an existing hosted zone, and you specified a delegation set that shares one or more name servers with the existing hosted zone. For more information, see <a>CreateReusableDelegationSet</a>.</p> </li> <li> <p> <b>Private hosted zone:</b> You specified an Amazon VPC that you''re already using for another hosted zone, and the domain that you specified for one of the hosted zones is a subdomain of the domain that you specified for the other hosted zone. For example, you can''t use the same Amazon VPC for the hosted zones for example.com and test.example.com.</p> </li> </ul>'
  LimitsExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'This operation can''t be completed either because the current account has reached the limit on reusable delegation sets that it can create or because you''ve reached the limit on the number of Amazon VPCs that you can associate with a private hosted zone. To get the current limit on the number of reusable delegation sets, see <a>GetAccountLimit</a>. To get the current limit on the number of Amazon VPCs that you can associate with a private hosted zone, see <a>GetHostedZoneLimit</a>. To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.'
  ChangeResourceRecordSetsResponse:
    type: object
    required:
      - ChangeInfo
    example:
      ChangeInfo:
        Comment: Geolocation alias configuration for example.com
        Id: /change/C2682N5HXP0BZ4
        Status: PENDING
        SubmittedAt: '2017-02-10T01:36:41.958Z'
    properties:
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: <p>A complex type that contains information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>
    description: A complex type containing the response for the request.
  ChangeResourceRecordSetsRequest:
    type: object
    required:
      - ChangeBatch
    example:
      ChangeBatch:
        Changes:
          - Action: CREATE
            ResourceRecordSet:
              AliasTarget:
                DNSName: 'example-com-123456789.us-east-2.elb.amazonaws.com '
                EvaluateTargetHealth: true
                HostedZoneId: Z3AADJGX6KTTL2
              GeoLocation:
                ContinentCode: NA
              Name: example.com
              SetIdentifier: North America
              Type: A
          - Action: CREATE
            ResourceRecordSet:
              AliasTarget:
                DNSName: 'example-com-234567890.sa-east-1.elb.amazonaws.com '
                EvaluateTargetHealth: true
                HostedZoneId: Z2P70J7HTTTPLU
              GeoLocation:
                ContinentCode: SA
              Name: example.com
              SetIdentifier: South America
              Type: A
          - Action: CREATE
            ResourceRecordSet:
              AliasTarget:
                DNSName: 'example-com-234567890.eu-central-1.elb.amazonaws.com '
                EvaluateTargetHealth: true
                HostedZoneId: Z215JYRZR1TBD5
              GeoLocation:
                ContinentCode: EU
              Name: example.com
              SetIdentifier: Europe
              Type: A
          - Action: CREATE
            ResourceRecordSet:
              AliasTarget:
                DNSName: 'example-com-234567890.ap-southeast-1.elb.amazonaws.com '
                EvaluateTargetHealth: true
                HostedZoneId: Z1LMS91P8CMLE5
              GeoLocation:
                CountryCode: '*'
              Name: example.com
              SetIdentifier: Other locations
              Type: A
        Comment: Geolocation alias configuration for example.com
      HostedZoneId: Z3M3LMPEXAMPLE
    properties:
      ChangeBatch:
        $ref: '#/definitions/ChangeBatch'
        description: A complex type that contains an optional comment and the <code>Changes</code> element.
    description: A complex type that contains change information for the resource record set.
  NoSuchHealthCheck:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: No health check exists with the ID that you specified in the <code>DeleteHealthCheck</code> request.
  InvalidChangeBatch:
    type: object
    properties:
      messages:
        $ref: '#/definitions/ErrorMessages'
        description: Descriptive message for the error response.
      message:
        $ref: '#/definitions/ErrorMessage'
    description: This exception contains a list of messages that might contain one or more error messages. Each error message indicates one error in the change batch.
  PriorRequestNotComplete:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: 'If Amazon Route 53 can''t process a request before the next request arrives, it will reject subsequent requests for the same hosted zone and return an <code>HTTP 400 error</code> (<code>Bad request</code>). If Amazon Route 53 returns this error repeatedly for the same request, we recommend that you wait, in intervals of increasing duration, before you try the request again.'
  ChangeTagsForResourceResponse:
    type: object
    example: {}
    properties: {}
    description: Empty response for the request.
  ChangeTagsForResourceRequest:
    type: object
    example:
      AddTags:
        - Key: apex
          Value: '3874'
        - Key: acme
          Value: '4938'
      RemoveTagKeys:
        - Nadir
      ResourceId: Z3M3LMPEXAMPLE
      ResourceType: hostedzone
    properties:
      AddTags:
        $ref: '#/definitions/TagList'
        description: <p>A complex type that contains a list of the tags that you want to add to the specified health check or hosted zone and/or the tags that you want to edit <code>Value</code> for.</p> <p>You can add a maximum of 10 tags to a health check or a hosted zone.</p>
      RemoveTagKeys:
        $ref: '#/definitions/TagKeyList'
        description: A complex type that contains a list of the tags that you want to delete from the specified health check or hosted zone. You can specify up to 10 keys.
    description: 'A complex type that contains information about the tags that you want to add, edit, or delete.'
  ThrottlingException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The limit on the number of requests per second was exceeded.
  CreateHealthCheckResponse:
    type: object
    required:
      - HealthCheck
    properties:
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
        description: A complex type that contains identifying information about the health check.
    description: A complex type containing the response information for the new health check.
  CreateHealthCheckRequest:
    type: object
    required:
      - CallerReference
      - HealthCheckConfig
    properties:
      CallerReference:
        $ref: '#/definitions/HealthCheckNonce'
        description: '<p>A unique string that identifies the request and that allows you to retry a failed <code>CreateHealthCheck</code> request without the risk of creating two identical health checks:</p> <ul> <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> and settings as a previous request, and if the health check doesn''t exist, Amazon Route 53 creates the health check. If the health check does exist, Amazon Route 53 returns the settings for the existing health check.</p> </li> <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as a deleted health check, regardless of the settings, Amazon Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p> </li> <li> <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as an existing health check but with different settings, Amazon Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p> </li> <li> <p>If you send a <code>CreateHealthCheck</code> request with a unique <code>CallerReference</code> but settings identical to an existing health check, Amazon Route 53 creates the health check.</p> </li> </ul>'
      HealthCheckConfig:
        $ref: '#/definitions/HealthCheckConfig'
        description: 'A complex type that contains the response to a <code>CreateHealthCheck</code> request. '
    description: A complex type that contains the health check request information.
  TooManyHealthChecks:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: '<p>This health check can''t be created because the current account has reached the limit on the number of active health checks.</p> <p>For information about default limits, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>For information about how to get the current limit for an account, see <a>GetAccountLimit</a>. To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.</p> <p>You have reached the maximum number of active health checks for an AWS account. To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.</p>'
  HealthCheckAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: '<p> The health check you''re attempting to create already exists. Amazon Route 53 returns this error when you submit a request that has the following values:</p> <ul> <li> <p>The same value for <code>CallerReference</code> as an existing health check, and one or more values that differ from the existing health check that has the same caller reference.</p> </li> <li> <p>The same value for <code>CallerReference</code> as a health check that you created and later deleted, regardless of the other settings in the request.</p> </li> </ul>'
  CreateHostedZoneResponse:
    type: object
    required:
      - HostedZone
      - ChangeInfo
      - DelegationSet
    properties:
      HostedZone:
        $ref: '#/definitions/HostedZone'
        description: A complex type that contains general information about the hosted zone.
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: A complex type that contains information about the <code>CreateHostedZone</code> request.
      DelegationSet:
        $ref: '#/definitions/DelegationSet'
        description: A complex type that describes the name servers for this hosted zone.
      VPC:
        $ref: '#/definitions/VPC'
        description: A complex type that contains information about an Amazon VPC that you associated with this hosted zone.
    description: A complex type containing the response information for the hosted zone.
  CreateHostedZoneRequest:
    type: object
    required:
      - Name
      - CallerReference
    properties:
      Name:
        $ref: '#/definitions/DNSName'
        description: '<p>The name of the domain. For resource record types that include a domain name, specify a fully qualified domain name, for example, <i>www.example.com</i>. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Amazon Route 53 treats <i>www.example.com</i> (without a trailing dot) and <i>www.example.com.</i> (with a trailing dot) as identical.</p> <p>If you''re creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Amazon Route 53, change the name servers for your domain to the set of <code>NameServers</code> that <code>CreateHostedZone</code> returns in <code>DelegationSet</code>.</p>'
      VPC:
        $ref: '#/definitions/VPC'
        description: '<p>(Private hosted zones only) A complex type that contains information about the Amazon VPC that you''re associating with this hosted zone.</p> <p>You can specify only one Amazon VPC when you create a private hosted zone. To associate additional Amazon VPCs with the hosted zone, use <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.</p>'
      CallerReference:
        $ref: '#/definitions/Nonce'
        description: 'A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you submit a <code>CreateHostedZone</code> request. <code>CallerReference</code> can be any unique string, for example, a date/time stamp.'
      HostedZoneConfig:
        $ref: '#/definitions/HostedZoneConfig'
        description: '<p>(Optional) A complex type that contains the following optional values:</p> <ul> <li> <p>For public and private hosted zones, an optional comment</p> </li> <li> <p>For private hosted zones, an optional <code>PrivateZone</code> element</p> </li> </ul> <p>If you don''t specify a comment or the <code>PrivateZone</code> element, omit <code>HostedZoneConfig</code> and the other elements.</p>'
      DelegationSetId:
        $ref: '#/definitions/ResourceId'
        description: 'If you want to associate a reusable delegation set with this hosted zone, the ID that Amazon Route 53 assigned to the reusable delegation set when you created it. For more information about reusable delegation sets, see <a>CreateReusableDelegationSet</a>.'
    description: A complex type that contains information about the request to create a hosted zone.
  InvalidDomainName:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The specified domain name is not valid.
  HostedZoneAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The hosted zone you're trying to create already exists. Amazon Route 53 returns this error when a hosted zone has already been created with the specified <code>CallerReference</code>.
  TooManyHostedZones:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: '<p>This operation can''t be completed either because the current account has reached the limit on the number of hosted zones or because you''ve reached the limit on the number of hosted zones that can be associated with a reusable delegation set.</p> <p>For information about default limits, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>To get the current limit on hosted zones that can be created by an account, see <a>GetAccountLimit</a>.</p> <p>To get the current limit on hosted zones that can be associated with a reusable delegation set, see <a>GetReusableDelegationSetLimit</a>.</p> <p>To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.</p>'
  DelegationSetNotAvailable:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'You can create a hosted zone that has the same name as an existing hosted zone (example.com is common), but there is a limit to the number of hosted zones that have the same name. If you get this error, Amazon Route 53 has reached that limit. If you own the domain name and Amazon Route 53 generates this error, contact Customer Support.'
  NoSuchDelegationSet:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: A reusable delegation set with the specified ID does not exist.
  DelegationSetNotReusable:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: A reusable delegation set with the specified ID does not exist.
  CreateQueryLoggingConfigResponse:
    type: object
    required:
      - QueryLoggingConfig
    properties:
      QueryLoggingConfig:
        $ref: '#/definitions/QueryLoggingConfig'
        description: 'A complex type that contains the ID for a query logging configuration, the ID of the hosted zone that you want to log queries for, and the ARN for the log group that you want Amazon Route 53 to send query logs to.'
  CreateQueryLoggingConfigRequest:
    type: object
    required:
      - HostedZoneId
      - CloudWatchLogsLogGroupArn
    properties:
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the hosted zone that you want to log queries for. You can log queries only for public hosted zones.
      CloudWatchLogsLogGroupArn:
        $ref: '#/definitions/CloudWatchLogsLogGroupArn'
        description: '<p>The Amazon Resource Name (ARN) for the log group that you want to Amazon Route 53 to send query logs to. This is the format of the ARN:</p> <p>arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i> </p> <p>To get the ARN for a log group, you can use the CloudWatch console, the <a href="http://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogGroups.html">DescribeLogGroups</a> API action, the <a href="http://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html">describe-log-groups</a> command, or the applicable command in one of the AWS SDKs.</p>'
  ConcurrentModification:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'Another user submitted a request to create, update, or delete the object at the same time that you did. Retry the request. '
  NoSuchCloudWatchLogsLogGroup:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: There is no CloudWatch Logs log group with the specified ARN.
  QueryLoggingConfigAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: 'You can create only one query logging configuration for a hosted zone, and a query logging configuration already exists for this hosted zone.'
  InsufficientCloudWatchLogsResourcePolicy:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: '<p>Amazon Route 53 doesn''t have the permissions required to create log streams and send query logs to log streams. Possible causes include the following:</p> <ul> <li> <p>There is no resource policy that specifies the log group ARN in the value for <code>Resource</code>.</p> </li> <li> <p>The resource policy that includes the log group ARN in the value for <code>Resource</code> doesn''t have the necessary permissions.</p> </li> <li> <p>The resource policy hasn''t finished propagating yet.</p> </li> </ul>'
  CreateReusableDelegationSetResponse:
    type: object
    required:
      - DelegationSet
    properties:
      DelegationSet:
        $ref: '#/definitions/DelegationSet'
        description: A complex type that contains name server information.
  CreateReusableDelegationSetRequest:
    type: object
    required:
      - CallerReference
    properties:
      CallerReference:
        $ref: '#/definitions/Nonce'
        description: 'A unique string that identifies the request, and that allows you to retry failed <code>CreateReusableDelegationSet</code> requests without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you submit a <code>CreateReusableDelegationSet</code> request. <code>CallerReference</code> can be any unique string, for example a date/time stamp.'
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: 'If you want to mark the delegation set for an existing hosted zone as reusable, the ID for that hosted zone.'
  DelegationSetAlreadyCreated:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: A delegation set with the same owner and caller reference combination has already been created.
  HostedZoneNotFound:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The specified HostedZone can't be found.
  InvalidArgument:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: Parameter name is invalid.
  DelegationSetAlreadyReusable:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The specified delegation set has already been marked as reusable.
  CreateTrafficPolicyResponse:
    type: object
    required:
      - TrafficPolicy
    properties:
      TrafficPolicy:
        $ref: '#/definitions/TrafficPolicy'
        description: A complex type that contains settings for the new traffic policy.
    description: A complex type that contains the response information for the <code>CreateTrafficPolicy</code> request.
  CreateTrafficPolicyRequest:
    type: object
    required:
      - Name
      - Document
    properties:
      Name:
        $ref: '#/definitions/TrafficPolicyName'
        description: The name of the traffic policy.
      Document:
        $ref: '#/definitions/TrafficPolicyDocument'
        description: 'The definition of this traffic policy in JSON format. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html">Traffic Policy Document Format</a>.'
      Comment:
        $ref: '#/definitions/TrafficPolicyComment'
        description: (Optional) Any comments that you want to include about the traffic policy.
    description: A complex type that contains information about the traffic policy that you want to create.
  TooManyTrafficPolicies:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: '<p>This traffic policy can''t be created because the current account has reached the limit on the number of traffic policies.</p> <p>For information about default limits, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>To get the current limit for an account, see <a>GetAccountLimit</a>. </p> <p>To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.</p>'
  TrafficPolicyAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: A traffic policy that has the same value for <code>Name</code> already exists.
  InvalidTrafficPolicyDocument:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The format of the traffic policy document that you specified in the <code>Document</code> element is invalid.
  CreateTrafficPolicyInstanceResponse:
    type: object
    required:
      - TrafficPolicyInstance
    properties:
      TrafficPolicyInstance:
        $ref: '#/definitions/TrafficPolicyInstance'
        description: A complex type that contains settings for the new traffic policy instance.
    description: A complex type that contains the response information for the <code>CreateTrafficPolicyInstance</code> request.
  CreateTrafficPolicyInstanceRequest:
    type: object
    required:
      - HostedZoneId
      - Name
      - TTL
      - TrafficPolicyId
      - TrafficPolicyVersion
    properties:
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the hosted zone in which you want Amazon Route 53 to create resource record sets by using the configuration in a traffic policy.
      Name:
        $ref: '#/definitions/DNSName'
        description: The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Amazon Route 53 creates for this traffic policy instance.
      TTL:
        $ref: '#/definitions/TTL'
        description: (Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.
      TrafficPolicyId:
        $ref: '#/definitions/TrafficPolicyId'
        description: The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
      TrafficPolicyVersion:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.
    description: A complex type that contains information about the resource record sets that you want to create based on a specified traffic policy.
  TooManyTrafficPolicyInstances:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: '<p>This traffic policy instance can''t be created because the current account has reached the limit on the number of traffic policy instances.</p> <p>For information about default limits, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>For information about how to get the current limit for an account, see <a>GetAccountLimit</a>.</p> <p>To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.</p>'
  NoSuchTrafficPolicy:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: No traffic policy exists with the specified ID.
  TrafficPolicyInstanceAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: There is already a traffic policy instance with the specified ID.
  CreateTrafficPolicyVersionResponse:
    type: object
    required:
      - TrafficPolicy
    properties:
      TrafficPolicy:
        $ref: '#/definitions/TrafficPolicy'
        description: A complex type that contains settings for the new version of the traffic policy.
    description: A complex type that contains the response information for the <code>CreateTrafficPolicyVersion</code> request.
  CreateTrafficPolicyVersionRequest:
    type: object
    required:
      - Document
    properties:
      Document:
        $ref: '#/definitions/TrafficPolicyDocument'
        description: 'The definition of this version of the traffic policy, in JSON format. You specified the JSON in the <code>CreateTrafficPolicyVersion</code> request. For more information about the JSON format, see <a>CreateTrafficPolicy</a>.'
      Comment:
        $ref: '#/definitions/TrafficPolicyComment'
        description: 'The comment that you specified in the <code>CreateTrafficPolicyVersion</code> request, if any.'
    description: A complex type that contains information about the traffic policy that you want to create a new version for.
  TooManyTrafficPolicyVersionsForCurrentPolicy:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: '<p>This traffic policy version can''t be created because you''ve reached the limit of 1000 on the number of versions that you can create for the current traffic policy.</p> <p>To create more traffic policy versions, you can use <a>GetTrafficPolicy</a> to get the traffic policy document for a specified traffic policy version, and then use <a>CreateTrafficPolicy</a> to create a new traffic policy using the traffic policy document.</p>'
  CreateVPCAssociationAuthorizationResponse:
    type: object
    required:
      - HostedZoneId
      - VPC
    properties:
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the hosted zone that you authorized associating a VPC with.
      VPC:
        $ref: '#/definitions/VPC'
        description: The VPC that you authorized associating with a hosted zone.
    description: A complex type that contains the response information from a <code>CreateVPCAssociationAuthorization</code> request.
  CreateVPCAssociationAuthorizationRequest:
    type: object
    required:
      - VPC
    properties:
      VPC:
        $ref: '#/definitions/VPC'
        description: A complex type that contains the VPC ID and region for the VPC that you want to authorize associating with your hosted zone.
    description: A complex type that contains information about the request to authorize associating a VPC with your private hosted zone. Authorization is only required when a private hosted zone and a VPC were created by using different accounts.
  TooManyVPCAssociationAuthorizations:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'You''ve created the maximum number of authorizations that can be created for the specified hosted zone. To authorize another VPC to be associated with the hosted zone, submit a <code>DeleteVPCAssociationAuthorization</code> request to remove an existing authorization. To get a list of existing authorizations, submit a <code>ListVPCAssociationAuthorizations</code> request.'
  DeleteHealthCheckResponse:
    type: object
    properties: {}
    description: An empty element.
  DeleteHealthCheckRequest:
    type: object
    properties: {}
    description: This action deletes a health check.
  HealthCheckInUse:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: This error code is not in use.
  DeleteHostedZoneResponse:
    type: object
    required:
      - ChangeInfo
    properties:
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: 'A complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.'
    description: A complex type that contains the response to a <code>DeleteHostedZone</code> request.
  DeleteHostedZoneRequest:
    type: object
    properties: {}
    description: A request to delete a hosted zone.
  HostedZoneNotEmpty:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The hosted zone contains resource records that are not SOA or NS records.
  DeleteQueryLoggingConfigResponse:
    type: object
    properties: {}
  DeleteQueryLoggingConfigRequest:
    type: object
    properties: {}
  NoSuchQueryLoggingConfig:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: There is no DNS query logging configuration with the specified ID.
  DeleteReusableDelegationSetResponse:
    type: object
    properties: {}
    description: An empty element.
  DeleteReusableDelegationSetRequest:
    type: object
    properties: {}
    description: A request to delete a reusable delegation set.
  DelegationSetInUse:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The specified delegation contains associated hosted zones which must be deleted before the reusable delegation set can be deleted.
  DeleteTrafficPolicyResponse:
    type: object
    properties: {}
    description: An empty element.
  DeleteTrafficPolicyRequest:
    type: object
    properties: {}
    description: A request to delete a specified traffic policy version.
  TrafficPolicyInUse:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: One or more traffic policy instances were created by using the specified traffic policy.
  DeleteTrafficPolicyInstanceResponse:
    type: object
    properties: {}
    description: An empty element.
  DeleteTrafficPolicyInstanceRequest:
    type: object
    properties: {}
    description: A request to delete a specified traffic policy instance.
  NoSuchTrafficPolicyInstance:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: No traffic policy instance exists with the specified ID.
  DeleteVPCAssociationAuthorizationResponse:
    type: object
    properties: {}
    description: Empty response for the request.
  DeleteVPCAssociationAuthorizationRequest:
    type: object
    required:
      - VPC
    properties:
      VPC:
        $ref: '#/definitions/VPC'
        description: 'When removing authorization to associate a VPC that was created by one AWS account with a hosted zone that was created with a different AWS account, a complex type that includes the ID and region of the VPC.'
    description: 'A complex type that contains information about the request to remove authorization to associate a VPC that was created by one AWS account with a hosted zone that was created with a different AWS account. '
  VPCAssociationAuthorizationNotFound:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The VPC that you specified is not authorized to be associated with the hosted zone.
  DisassociateVPCFromHostedZoneResponse:
    type: object
    required:
      - ChangeInfo
    properties:
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: A complex type that describes the changes made to the specified private hosted zone.
    description: A complex type that contains the response information for the disassociate request.
  DisassociateVPCFromHostedZoneRequest:
    type: object
    required:
      - VPC
    properties:
      VPC:
        $ref: '#/definitions/VPC'
        description: A complex type that contains information about the VPC that you're disassociating from the specified hosted zone.
      Comment:
        $ref: '#/definitions/DisassociateVPCComment'
        description: ' <i>Optional:</i> A comment about the disassociation request.'
    description: A complex type that contains information about the VPC that you want to disassociate from a specified private hosted zone.
  VPCAssociationNotFound:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The specified VPC and hosted zone are not currently associated.
  LastVPCAssociation:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: The VPC that you're trying to disassociate from the private hosted zone is the last VPC that is associated with the hosted zone. Amazon Route 53 doesn't support disassociating the last VPC from a hosted zone.
  GetAccountLimitResponse:
    type: object
    required:
      - Limit
      - Count
    properties:
      Limit:
        $ref: '#/definitions/AccountLimit'
        description: 'The current setting for the specified limit. For example, if you specified <code>MAX_HEALTH_CHECKS_BY_OWNER</code> for the value of <code>Type</code> in the request, the value of <code>Limit</code> is the maximum number of health checks that you can create using the current account.'
      Count:
        $ref: '#/definitions/UsageCount'
        description: 'The current number of entities that you have created of the specified type. For example, if you specified <code>MAX_HEALTH_CHECKS_BY_OWNER</code> for the value of <code>Type</code> in the request, the value of <code>Count</code> is the current number of health checks that you have created using the current account.'
    description: 'A complex type that contains the requested limit. '
  GetAccountLimitRequest:
    type: object
    properties: {}
    description: A complex type that contains information about the request to create a hosted zone.
  GetChangeResponse:
    type: object
    required:
      - ChangeInfo
    properties:
      ChangeInfo:
        $ref: '#/definitions/ChangeInfo'
        description: A complex type that contains information about the specified change batch.
    description: A complex type that contains the <code>ChangeInfo</code> element.
  GetChangeRequest:
    type: object
    properties: {}
    description: The input for a GetChange request.
  NoSuchChange:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: A change with the specified change ID does not exist.
  GetCheckerIpRangesResponse:
    type: object
    required:
      - CheckerIpRanges
    properties:
      CheckerIpRanges:
        $ref: '#/definitions/CheckerIpRanges'
  GetCheckerIpRangesRequest:
    type: object
    properties: {}
  GetGeoLocationResponse:
    type: object
    required:
      - GeoLocationDetails
    properties:
      GeoLocationDetails:
        $ref: '#/definitions/GeoLocationDetails'
        description: 'A complex type that contains the codes and full continent, country, and subdivision names for the specified geolocation code.'
    description: A complex type that contains the response information for the specified geolocation code.
  GetGeoLocationRequest:
    type: object
    properties: {}
    description: A request for information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets.
  NoSuchGeoLocation:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: Amazon Route 53 doesn't support the specified geolocation.
  GetHealthCheckResponse:
    type: object
    required:
      - HealthCheck
    properties:
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
        description: A complex type that contains information about one health check that is associated with the current AWS account.
    description: A complex type that contains the response to a <code>GetHealthCheck</code> request.
  GetHealthCheckRequest:
    type: object
    properties: {}
    description: 'A request to get information about a specified health check. '
  IncompatibleVersion:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The resource you're trying to access is unsupported on this Amazon Route 53 endpoint.
  GetHealthCheckCountResponse:
    type: object
    required:
      - HealthCheckCount
    properties:
      HealthCheckCount:
        $ref: '#/definitions/HealthCheckCount'
        description: The number of health checks associated with the current AWS account.
    description: A complex type that contains the response to a <code>GetHealthCheckCount</code> request.
  GetHealthCheckCountRequest:
    type: object
    properties: {}
    description: A request for the number of health checks that are associated with the current AWS account.
  GetHealthCheckLastFailureReasonResponse:
    type: object
    required:
      - HealthCheckObservations
    properties:
      HealthCheckObservations:
        $ref: '#/definitions/HealthCheckObservations'
        description: 'A list that contains one <code>Observation</code> element for each Amazon Route 53 health checker that is reporting a last failure reason. '
    description: A complex type that contains the response to a <code>GetHealthCheckLastFailureReason</code> request.
  GetHealthCheckLastFailureReasonRequest:
    type: object
    properties: {}
    description: A request for the reason that a health check failed most recently.
  GetHealthCheckStatusResponse:
    type: object
    required:
      - HealthCheckObservations
    properties:
      HealthCheckObservations:
        $ref: '#/definitions/HealthCheckObservations'
        description: A list that contains one <code>HealthCheckObservation</code> element for each Amazon Route 53 health checker that is reporting a status about the health check endpoint.
    description: A complex type that contains the response to a <code>GetHealthCheck</code> request.
  GetHealthCheckStatusRequest:
    type: object
    properties: {}
    description: A request to get the status for a health check.
  GetHostedZoneResponse:
    type: object
    required:
      - HostedZone
    example:
      DelegationSet:
        NameServers:
          - ns-2048.awsdns-64.com
          - ns-2049.awsdns-65.net
          - ns-2050.awsdns-66.org
          - ns-2051.awsdns-67.co.uk
      HostedZone:
        CallerReference: C741617D-04E4-F8DE-B9D7-0D150FC61C2E
        Config:
          PrivateZone: false
        Id: /hostedzone/Z3M3LMPEXAMPLE
        Name: myawsbucket.com.
        ResourceRecordSetCount: 8
    properties:
      HostedZone:
        $ref: '#/definitions/HostedZone'
        description: A complex type that contains general information about the specified hosted zone.
      DelegationSet:
        $ref: '#/definitions/DelegationSet'
        description: A complex type that lists the Amazon Route 53 name servers for the specified hosted zone.
      VPCs:
        $ref: '#/definitions/VPCs'
        description: A complex type that contains information about the VPCs that are associated with the specified hosted zone.
    description: A complex type that contain the response to a <code>GetHostedZone</code> request.
  GetHostedZoneRequest:
    type: object
    example:
      Id: Z3M3LMPEXAMPLE
    properties: {}
    description: 'A request to get information about a specified hosted zone. '
  GetHostedZoneCountResponse:
    type: object
    required:
      - HostedZoneCount
    properties:
      HostedZoneCount:
        $ref: '#/definitions/HostedZoneCount'
        description: The total number of public and private hosted zones that are associated with the current AWS account.
    description: A complex type that contains the response to a <code>GetHostedZoneCount</code> request.
  GetHostedZoneCountRequest:
    type: object
    properties: {}
    description: A request to retrieve a count of all the hosted zones that are associated with the current AWS account.
  GetHostedZoneLimitResponse:
    type: object
    required:
      - Limit
      - Count
    properties:
      Limit:
        $ref: '#/definitions/HostedZoneLimit'
        description: 'The current setting for the specified limit. For example, if you specified <code>MAX_RRSETS_BY_ZONE</code> for the value of <code>Type</code> in the request, the value of <code>Limit</code> is the maximum number of records that you can create in the specified hosted zone.'
      Count:
        $ref: '#/definitions/UsageCount'
        description: 'The current number of entities that you have created of the specified type. For example, if you specified <code>MAX_RRSETS_BY_ZONE</code> for the value of <code>Type</code> in the request, the value of <code>Count</code> is the current number of records that you have created in the specified hosted zone.'
    description: 'A complex type that contains the requested limit. '
  GetHostedZoneLimitRequest:
    type: object
    properties: {}
    description: A complex type that contains information about the request to create a hosted zone.
  HostedZoneNotPrivate:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'The specified hosted zone is a public hosted zone, not a private hosted zone.'
  GetQueryLoggingConfigResponse:
    type: object
    required:
      - QueryLoggingConfig
    properties:
      QueryLoggingConfig:
        $ref: '#/definitions/QueryLoggingConfig'
        description: A complex type that contains information about the query logging configuration that you specified in a <a>GetQueryLoggingConfig</a> request.
  GetQueryLoggingConfigRequest:
    type: object
    properties: {}
  GetReusableDelegationSetResponse:
    type: object
    required:
      - DelegationSet
    properties:
      DelegationSet:
        $ref: '#/definitions/DelegationSet'
        description: A complex type that contains information about the reusable delegation set.
    description: A complex type that contains the response to the <code>GetReusableDelegationSet</code> request.
  GetReusableDelegationSetRequest:
    type: object
    properties: {}
    description: A request to get information about a specified reusable delegation set.
  GetReusableDelegationSetLimitResponse:
    type: object
    required:
      - Limit
      - Count
    properties:
      Limit:
        $ref: '#/definitions/ReusableDelegationSetLimit'
        description: The current setting for the limit on hosted zones that you can associate with the specified reusable delegation set.
      Count:
        $ref: '#/definitions/UsageCount'
        description: The current number of hosted zones that you can associate with the specified reusable delegation set.
    description: 'A complex type that contains the requested limit. '
  GetReusableDelegationSetLimitRequest:
    type: object
    properties: {}
    description: A complex type that contains information about the request to create a hosted zone.
  GetTrafficPolicyResponse:
    type: object
    required:
      - TrafficPolicy
    properties:
      TrafficPolicy:
        $ref: '#/definitions/TrafficPolicy'
        description: A complex type that contains settings for the specified traffic policy.
    description: A complex type that contains the response information for the request.
  GetTrafficPolicyRequest:
    type: object
    properties: {}
    description: Gets information about a specific traffic policy version.
  GetTrafficPolicyInstanceResponse:
    type: object
    required:
      - TrafficPolicyInstance
    properties:
      TrafficPolicyInstance:
        $ref: '#/definitions/TrafficPolicyInstance'
        description: A complex type that contains settings for the traffic policy instance.
    description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
  GetTrafficPolicyInstanceRequest:
    type: object
    properties: {}
    description: Gets information about a specified traffic policy instance.
  GetTrafficPolicyInstanceCountResponse:
    type: object
    required:
      - TrafficPolicyInstanceCount
    properties:
      TrafficPolicyInstanceCount:
        $ref: '#/definitions/TrafficPolicyInstanceCount'
        description: The number of traffic policy instances that are associated with the current AWS account.
    description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
  GetTrafficPolicyInstanceCountRequest:
    type: object
    properties: {}
    description: Request to get the number of traffic policy instances that are associated with the current AWS account.
  ListGeoLocationsResponse:
    type: object
    required:
      - GeoLocationDetailsList
      - IsTruncated
      - MaxItems
    properties:
      GeoLocationDetailsList:
        $ref: '#/definitions/GeoLocationDetailsList'
        description: A complex type that contains one <code>GeoLocationDetails</code> element for each location that Amazon Route 53 supports for geolocation.
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A value that indicates whether more locations remain to be listed after the last location in this response. If so, the value of <code>IsTruncated</code> is <code>true</code>. To get more values, submit another request and include the values of <code>NextContinentCode</code>, <code>NextCountryCode</code>, and <code>NextSubdivisionCode</code> in the <code>StartContinentCode</code>, <code>StartCountryCode</code>, and <code>StartSubdivisionCode</code>, as applicable.'
      NextContinentCode:
        $ref: '#/definitions/GeoLocationContinentCode'
        description: 'If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextContinentCode</code> in the <code>StartContinentCode</code> parameter in another <code>ListGeoLocations</code> request.'
      NextCountryCode:
        $ref: '#/definitions/GeoLocationCountryCode'
        description: 'If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextCountryCode</code> in the <code>StartCountryCode</code> parameter in another <code>ListGeoLocations</code> request.'
      NextSubdivisionCode:
        $ref: '#/definitions/GeoLocationSubdivisionCode'
        description: 'If <code>IsTruncated</code> is <code>true</code>, you can make a follow-up request to display more locations. Enter the value of <code>NextSubdivisionCode</code> in the <code>StartSubdivisionCode</code> parameter in another <code>ListGeoLocations</code> request.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for <code>MaxItems</code> in the request.
    description: A complex type containing the response information for the request.
  ListGeoLocationsRequest:
    type: object
    properties: {}
    description: 'A request to get a list of geographic locations that Amazon Route 53 supports for geolocation resource record sets. '
  ListHealthChecksResponse:
    type: object
    required:
      - HealthChecks
      - Marker
      - IsTruncated
      - MaxItems
    properties:
      HealthChecks:
        $ref: '#/definitions/HealthChecks'
        description: A complex type that contains one <code>HealthCheck</code> element for each health check that is associated with the current AWS account.
      Marker:
        $ref: '#/definitions/PageMarker'
        description: 'For the second and subsequent calls to <code>ListHealthChecks</code>, <code>Marker</code> is the value that you specified for the <code>marker</code> parameter in the previous request.'
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more health checks to be listed. If the response was truncated, you can get the next group of health checks by submitting another <code>ListHealthChecks</code> request and specifying the value of <code>NextMarker</code> in the <code>marker</code> parameter.'
      NextMarker:
        $ref: '#/definitions/PageMarker'
        description: 'If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first health check that Amazon Route 53 returns if you submit another <code>ListHealthChecks</code> request and specify the value of <code>NextMarker</code> in the <code>marker</code> parameter.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHealthChecks</code> that produced the current response.
    description: A complex type that contains the response to a <code>ListHealthChecks</code> request.
  ListHealthChecksRequest:
    type: object
    properties: {}
    description: A request to retrieve a list of the health checks that are associated with the current AWS account.
  ListHostedZonesResponse:
    type: object
    required:
      - HostedZones
      - Marker
      - IsTruncated
      - MaxItems
    properties:
      HostedZones:
        $ref: '#/definitions/HostedZones'
        description: A complex type that contains general information about the hosted zone.
      Marker:
        $ref: '#/definitions/PageMarker'
        description: 'For the second and subsequent calls to <code>ListHostedZones</code>, <code>Marker</code> is the value that you specified for the <code>marker</code> parameter in the request that produced the current response.'
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag indicating whether there are more hosted zones to be listed. If the response was truncated, you can get more hosted zones by submitting another <code>ListHostedZones</code> request and specifying the value of <code>NextMarker</code> in the <code>marker</code> parameter.'
      NextMarker:
        $ref: '#/definitions/PageMarker'
        description: '<p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first hosted zone in the next group of hosted zones. Submit another <code>ListHostedZones</code> request, and specify the value of <code>NextMarker</code> from the response in the <code>marker</code> parameter.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZones</code> that produced the current response.
  ListHostedZonesRequest:
    type: object
    properties: {}
    description: A request to retrieve a list of the public and private hosted zones that are associated with the current AWS account.
  ListHostedZonesByNameResponse:
    type: object
    required:
      - HostedZones
      - IsTruncated
      - MaxItems
    properties:
      HostedZones:
        $ref: '#/definitions/HostedZones'
        description: A complex type that contains general information about the hosted zone.
      DNSName:
        $ref: '#/definitions/DNSName'
        description: 'For the second and subsequent calls to <code>ListHostedZonesByName</code>, <code>DNSName</code> is the value that you specified for the <code>dnsname</code> parameter in the request that produced the current response.'
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID that Amazon Route 53 assigned to the hosted zone when you created it.
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more hosted zones to be listed. If the response was truncated, you can get the next group of <code>maxitems</code> hosted zones by calling <code>ListHostedZonesByName</code> again and specifying the values of <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements in the <code>dnsname</code> and <code>hostedzoneid</code> parameters.'
      NextDNSName:
        $ref: '#/definitions/DNSName'
        description: '<p>If <code>IsTruncated</code> is true, the value of <code>NextDNSName</code> is the name of the first hosted zone in the next group of <code>maxitems</code> hosted zones. Call <code>ListHostedZonesByName</code> again and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>'
      NextHostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: '<p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextHostedZoneId</code> identifies the first hosted zone in the next group of <code>maxitems</code> hosted zones. Call <code>ListHostedZonesByName</code> again and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZonesByName</code> that produced the current response.
    description: A complex type that contains the response information for the request.
  ListHostedZonesByNameRequest:
    type: object
    properties: {}
    description: 'Retrieves a list of the public and private hosted zones that are associated with the current AWS account in ASCII order by domain name. '
  ListQueryLoggingConfigsResponse:
    type: object
    required:
      - QueryLoggingConfigs
    properties:
      QueryLoggingConfigs:
        $ref: '#/definitions/QueryLoggingConfigs'
        description: An array that contains one <a>QueryLoggingConfig</a> element for each configuration for DNS query logging that is associated with the current AWS account.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: '<p>If a response includes the last of the query logging configurations that are associated with the current AWS account, <code>NextToken</code> doesn''t appear in the response.</p> <p>If a response doesn''t include the last of the configurations, you can get more configurations by submitting another <a>ListQueryLoggingConfigs</a> request. Get the value of <code>NextToken</code> that Amazon Route 53 returned in the previous response and include it in <code>NextToken</code> in the next request.</p>'
  ListQueryLoggingConfigsRequest:
    type: object
    properties: {}
  InvalidPaginationToken:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The value that you specified to get the second or subsequent page of results is invalid.
  ListResourceRecordSetsResponse:
    type: object
    required:
      - ResourceRecordSets
      - IsTruncated
      - MaxItems
    properties:
      ResourceRecordSets:
        $ref: '#/definitions/ResourceRecordSets'
        description: Information about multiple resource record sets.
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether more resource record sets remain to be listed. If your results were truncated, you can make a follow-up pagination request by using the <code>NextRecordName</code> element.'
      NextRecordName:
        $ref: '#/definitions/DNSName'
        description: '<p>If the results were truncated, the name of the next record in the list.</p> <p>This element is present only if <code>IsTruncated</code> is true. </p>'
      NextRecordType:
        $ref: '#/definitions/RRType'
        description: '<p>If the results were truncated, the type of the next record in the list.</p> <p>This element is present only if <code>IsTruncated</code> is true. </p>'
      NextRecordIdentifier:
        $ref: '#/definitions/ResourceRecordSetIdentifier'
        description: ' <i>Weighted, latency, geolocation, and failover resource record sets only</i>: If results were truncated for a given DNS name and type, the value of <code>SetIdentifier</code> for the next resource record set that has the current DNS name and type.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The maximum number of records you requested.
    description: A complex type that contains list information for the resource record set.
  ListResourceRecordSetsRequest:
    type: object
    properties: {}
    description: A request for the resource record sets that are associated with a specified hosted zone.
  ListReusableDelegationSetsResponse:
    type: object
    required:
      - DelegationSets
      - Marker
      - IsTruncated
      - MaxItems
    properties:
      DelegationSets:
        $ref: '#/definitions/DelegationSets'
        description: A complex type that contains one <code>DelegationSet</code> element for each reusable delegation set that was created by the current AWS account.
      Marker:
        $ref: '#/definitions/PageMarker'
        description: 'For the second and subsequent calls to <code>ListReusableDelegationSets</code>, <code>Marker</code> is the value that you specified for the <code>marker</code> parameter in the request that produced the current response.'
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: A flag that indicates whether there are more reusable delegation sets to be listed.
      NextMarker:
        $ref: '#/definitions/PageMarker'
        description: 'If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the next reusable delegation set that Amazon Route 53 will return if you submit another <code>ListReusableDelegationSets</code> request and specify the value of <code>NextMarker</code> in the <code>marker</code> parameter.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListReusableDelegationSets</code> that produced the current response.
    description: A complex type that contains information about the reusable delegation sets that are associated with the current AWS account.
  ListReusableDelegationSetsRequest:
    type: object
    properties: {}
    description: A request to get a list of the reusable delegation sets that are associated with the current AWS account.
  ListTagsForResourceResponse:
    type: object
    required:
      - ResourceTagSet
    properties:
      ResourceTagSet:
        $ref: '#/definitions/ResourceTagSet'
        description: A <code>ResourceTagSet</code> containing tags associated with the specified resource.
    description: A complex type that contains information about the health checks or hosted zones for which you want to list tags.
  ListTagsForResourceRequest:
    type: object
    properties: {}
    description: A complex type containing information about a request for a list of the tags that are associated with an individual resource.
  ListTagsForResourcesResponse:
    type: object
    required:
      - ResourceTagSets
    properties:
      ResourceTagSets:
        $ref: '#/definitions/ResourceTagSetList'
        description: A list of <code>ResourceTagSet</code>s containing tags associated with the specified resources.
    description: A complex type containing tags for the specified resources.
  ListTagsForResourcesRequest:
    type: object
    required:
      - ResourceIds
    properties:
      ResourceIds:
        $ref: '#/definitions/TagResourceIdList'
        description: A complex type that contains the ResourceId element for each resource for which you want to get a list of tags.
    description: A complex type that contains information about the health checks or hosted zones for which you want to list tags.
  ListTrafficPoliciesResponse:
    type: object
    required:
      - TrafficPolicySummaries
      - IsTruncated
      - TrafficPolicyIdMarker
      - MaxItems
    properties:
      TrafficPolicySummaries:
        $ref: '#/definitions/TrafficPolicySummaries'
        description: A list that contains one <code>TrafficPolicySummary</code> element for each traffic policy that was created by the current AWS account.
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another <code>ListTrafficPolicies</code> request and specifying the value of <code>TrafficPolicyIdMarker</code> in the <code>TrafficPolicyIdMarker</code> request parameter.'
      TrafficPolicyIdMarker:
        $ref: '#/definitions/TrafficPolicyId'
        description: 'If the value of <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyIdMarker</code> is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>MaxItems</code> parameter in the <code>ListTrafficPolicies</code> request that produced the current response.
    description: A complex type that contains the response information for the request.
  ListTrafficPoliciesRequest:
    type: object
    properties: {}
    description: A complex type that contains the information about the request to list the traffic policies that are associated with the current AWS account.
  ListTrafficPolicyInstancesResponse:
    type: object
    required:
      - TrafficPolicyInstances
      - IsTruncated
      - MaxItems
    properties:
      TrafficPolicyInstances:
        $ref: '#/definitions/TrafficPolicyInstances'
        description: A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.
      HostedZoneIdMarker:
        $ref: '#/definitions/ResourceId'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance that Amazon Route 53 will return if you submit another <code>ListTrafficPolicyInstances</code> request. '
      TrafficPolicyInstanceNameMarker:
        $ref: '#/definitions/DNSName'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance that Amazon Route 53 will return if you submit another <code>ListTrafficPolicyInstances</code> request. '
      TrafficPolicyInstanceTypeMarker:
        $ref: '#/definitions/RRType'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance that Amazon Route 53 will return if you submit another <code>ListTrafficPolicyInstances</code> request. '
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get more traffic policy instances by calling <code>ListTrafficPolicyInstances</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> in the corresponding request parameters.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstances</code> that produced the current response.
    description: A complex type that contains the response information for the request.
  ListTrafficPolicyInstancesRequest:
    type: object
    properties: {}
    description: A request to get information about the traffic policy instances that you created by using the current AWS account.
  ListTrafficPolicyInstancesByHostedZoneResponse:
    type: object
    required:
      - TrafficPolicyInstances
      - IsTruncated
      - MaxItems
    properties:
      TrafficPolicyInstances:
        $ref: '#/definitions/TrafficPolicyInstances'
        description: 'A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request. '
      TrafficPolicyInstanceNameMarker:
        $ref: '#/definitions/DNSName'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of traffic policy instances.'
      TrafficPolicyInstanceTypeMarker:
        $ref: '#/definitions/RRType'
        description: 'If <code>IsTruncated</code> is true, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of traffic policy instances.'
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by submitting another <code>ListTrafficPolicyInstancesByHostedZone</code> request and specifying the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> in the corresponding request parameters.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>MaxItems</code> parameter in the <code>ListTrafficPolicyInstancesByHostedZone</code> request that produced the current response.
    description: A complex type that contains the response information for the request.
  ListTrafficPolicyInstancesByHostedZoneRequest:
    type: object
    properties: {}
    description: A request for the traffic policy instances that you created in a specified hosted zone.
  ListTrafficPolicyInstancesByPolicyResponse:
    type: object
    required:
      - TrafficPolicyInstances
      - IsTruncated
      - MaxItems
    properties:
      TrafficPolicyInstances:
        $ref: '#/definitions/TrafficPolicyInstances'
        description: A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.
      HostedZoneIdMarker:
        $ref: '#/definitions/ResourceId'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance in the next group of traffic policy instances.'
      TrafficPolicyInstanceNameMarker:
        $ref: '#/definitions/DNSName'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.'
      TrafficPolicyInstanceTypeMarker:
        $ref: '#/definitions/RRType'
        description: 'If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.'
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by calling <code>ListTrafficPolicyInstancesByPolicy</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstancesByPolicy</code> that produced the current response.
    description: A complex type that contains the response information for the request.
  ListTrafficPolicyInstancesByPolicyRequest:
    type: object
    properties: {}
    description: A complex type that contains the information about the request to list your traffic policy instances.
  ListTrafficPolicyVersionsResponse:
    type: object
    required:
      - TrafficPolicies
      - IsTruncated
      - TrafficPolicyVersionMarker
      - MaxItems
    properties:
      TrafficPolicies:
        $ref: '#/definitions/TrafficPolicies'
        description: A list that contains one <code>TrafficPolicy</code> element for each traffic policy version that is associated with the specified traffic policy.
      IsTruncated:
        $ref: '#/definitions/PageTruncated'
        description: 'A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another <code>ListTrafficPolicyVersions</code> request and specifying the value of <code>NextMarker</code> in the <code>marker</code> parameter.'
      TrafficPolicyVersionMarker:
        $ref: '#/definitions/TrafficPolicyVersionMarker'
        description: '<p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>TrafficPolicyVersionMarker</code> identifies the first traffic policy that Amazon Route 53 will return if you submit another request. Call <code>ListTrafficPolicyVersions</code> again and specify the value of <code>TrafficPolicyVersionMarker</code> in the <code>TrafficPolicyVersionMarker</code> request parameter.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>'
      MaxItems:
        $ref: '#/definitions/PageMaxItems'
        description: The value that you specified for the <code>maxitems</code> parameter in the <code>ListTrafficPolicyVersions</code> request that produced the current response.
    description: A complex type that contains the response information for the request.
  ListTrafficPolicyVersionsRequest:
    type: object
    properties: {}
    description: A complex type that contains the information about the request to list your traffic policies.
  ListVPCAssociationAuthorizationsResponse:
    type: object
    required:
      - HostedZoneId
      - VPCs
    properties:
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the hosted zone that you can associate the listed VPCs with.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'When the response includes a <code>NextToken</code> element, there are more VPCs that can be associated with the specified hosted zone. To get the next page of VPCs, submit another <code>ListVPCAssociationAuthorizations</code> request, and include the value of the <code>NextToken</code> element from the response in the <code>nexttoken</code> request parameter.'
      VPCs:
        $ref: '#/definitions/VPCs'
        description: The list of VPCs that are authorized to be associated with the specified hosted zone.
    description: A complex type that contains the response information for the request.
  ListVPCAssociationAuthorizationsRequest:
    type: object
    properties: {}
    description: A complex type that contains information about that can be associated with your hosted zone.
  TestDNSAnswerResponse:
    type: object
    required:
      - Nameserver
      - RecordName
      - RecordType
      - RecordData
      - ResponseCode
      - Protocol
    properties:
      Nameserver:
        $ref: '#/definitions/Nameserver'
        description: The Amazon Route 53 name server used to respond to the request.
      RecordName:
        $ref: '#/definitions/DNSName'
        description: The name of the resource record set that you submitted a request for.
      RecordType:
        $ref: '#/definitions/RRType'
        description: The type of the resource record set that you submitted a request for.
      RecordData:
        $ref: '#/definitions/RecordData'
        description: A list that contains values that Amazon Route 53 returned for this resource record set.
      ResponseCode:
        $ref: '#/definitions/DNSRCode'
        description: 'A code that indicates whether the request is valid or not. The most common response code is <code>NOERROR</code>, meaning that the request is valid. If the response is not valid, Amazon Route 53 returns a response code that describes the error. For a list of possible response codes, see <a href="http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6">DNS RCODES</a> on the IANA website. '
      Protocol:
        $ref: '#/definitions/TransportProtocol'
        description: 'The protocol that Amazon Route 53 used to respond to the request, either <code>UDP</code> or <code>TCP</code>. '
    description: 'A complex type that contains the response to a <code>TestDNSAnswer</code> request. '
  TestDNSAnswerRequest:
    type: object
    properties: {}
    description: 'Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. '
  UpdateHealthCheckResponse:
    type: object
    required:
      - HealthCheck
    properties:
      HealthCheck:
        $ref: '#/definitions/HealthCheck'
  UpdateHealthCheckRequest:
    type: object
    properties:
      HealthCheckVersion:
        $ref: '#/definitions/HealthCheckVersion'
        description: '<p>A sequential counter that Amazon Route 53 sets to <code>1</code> when you create a health check and increments by 1 each time you update settings for the health check.</p> <p>We recommend that you use <code>GetHealthCheck</code> or <code>ListHealthChecks</code> to get the current value of <code>HealthCheckVersion</code> for the health check that you want to update, and that you include that value in your <code>UpdateHealthCheck</code> request. This prevents Amazon Route 53 from overwriting an intervening update:</p> <ul> <li> <p>If the value in the <code>UpdateHealthCheck</code> request matches the value of <code>HealthCheckVersion</code> in the health check, Amazon Route 53 updates the health check with the new settings.</p> </li> <li> <p>If the value of <code>HealthCheckVersion</code> in the health check is greater, the health check was changed after you got the version number. Amazon Route 53 does not update the health check, and it returns a <code>HealthCheckVersionMismatch</code> error.</p> </li> </ul>'
      IPAddress:
        $ref: '#/definitions/IPAddress'
        description: '<p>The IPv4 or IPv6 IP address for the endpoint that you want Amazon Route 53 to perform health checks on. If you don''t specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to resolve the domain name that you specify in <code>FullyQualifiedDomainName</code> at the interval that you specify in <code>RequestInterval</code>. Using an IP address that is returned by DNS, Amazon Route 53 then checks the health of the endpoint.</p> <p>Use one of the following formats for the value of <code>IPAddress</code>: </p> <ul> <li> <p> <b>IPv4 address</b>: four values between 0 and 255, separated by periods (.), for example, <code>192.0.2.44</code>.</p> </li> <li> <p> <b>IPv6 address</b>: eight groups of four hexadecimal values, separated by colons (:), for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>. You can also shorten IPv6 addresses as described in RFC 5952, for example, <code>2001:db8:85a3::abcd:1:2345</code>.</p> </li> </ul> <p>If the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for <code>IPAddress</code>. This ensures that the IP address of your instance never changes. For more information, see the applicable documentation:</p> <ul> <li> <p>Linux: <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User Guide for Linux Instances</i> </p> </li> <li> <p>Windows: <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-ip-addresses-eip.html">Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User Guide for Windows Instances</i> </p> </li> </ul> <note> <p>If a health check already has a value for <code>IPAddress</code>, you can change the value. However, you can''t update an existing health check to add or remove the value of <code>IPAddress</code>. </p> </note> <p>For more information, see <a>UpdateHealthCheckRequest$FullyQualifiedDomainName</a>.</p> <p>Constraints: Amazon Route 53 can''t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can''t create health checks, see the following documents:</p> <ul> <li> <p> <a href="https://tools.ietf.org/html/rfc5735">RFC 5735, Special Use IPv4 Addresses</a> </p> </li> <li> <p> <a href="https://tools.ietf.org/html/rfc6598">RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space</a> </p> </li> <li> <p> <a href="https://tools.ietf.org/html/rfc5156">RFC 5156, Special-Use IPv6 Addresses</a> </p> </li> </ul>'
      Port:
        $ref: '#/definitions/Port'
        description: The port on the endpoint on which you want Amazon Route 53 to perform health checks.
      ResourcePath:
        $ref: '#/definitions/ResourcePath'
        description: '<p>The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. </p> <p>Specify this value only if you want to change it.</p>'
      FullyQualifiedDomainName:
        $ref: '#/definitions/FullyQualifiedDomainName'
        description: '<p>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</p> <note> <p>If a health check already has a value for <code>IPAddress</code>, you can change the value. However, you can''t update an existing health check to add or remove the value of <code>IPAddress</code>. </p> </note> <p> <b>If you specify a value for</b> <code>IPAddress</code>:</p> <p>Amazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Amazon Route 53 to perform health checks.</p> <p>When Amazon Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code> header:</p> <ul> <li> <p>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code> or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</p> </li> <li> <p>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</p> </li> <li> <p>If you specify another value for <code>Port</code> and any value except <code>TCP</code> for <code>Type</code>, Amazon Route 53 passes <i> <code>FullyQualifiedDomainName</code>:<code>Port</code> </i> to the endpoint in the <code>Host</code> header.</p> </li> </ul> <p>If you don''t specify a value for <code>FullyQualifiedDomainName</code>, Amazon Route 53 substitutes the value of <code>IPAddress</code> in the <code>Host</code> header in each of the above cases.</p> <p> <b>If you don''t specify a value for</b> <code>IPAddress</code>:</p> <p>If you don''t specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to the domain that you specify in <code>FullyQualifiedDomainName</code> at the interval you specify in <code>RequestInterval</code>. Using an IPv4 address that is returned by DNS, Amazon Route 53 then checks the health of the endpoint.</p> <note> <p>If you don''t specify a value for <code>IPAddress</code>, Amazon Route 53 uses only IPv4 to send health checks to the endpoint. If there''s no resource record set with a type of A for the name that you specify for <code>FullyQualifiedDomainName</code>, the health check fails with a "DNS resolution failed" error.</p> </note> <p>If you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-2-www.example.com</code>), not the name of the resource record sets (www.example.com).</p> <important> <p>In this configuration, if the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>In addition, if the value of <code>Type</code> is <code>HTTP</code>, <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header, as it does when you specify a value for <code>IPAddress</code>. If the value of <code>Type</code> is <code>TCP</code>, Amazon Route 53 doesn''t pass a <code>Host</code> header.</p>'
      SearchString:
        $ref: '#/definitions/SearchString'
        description: 'If the value of <code>Type</code> is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy. (You can''t change the value of <code>Type</code> when you update a health check.)'
      FailureThreshold:
        $ref: '#/definitions/FailureThreshold'
        description: '<p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>If you don''t specify a value for <code>FailureThreshold</code>, the default value is three health checks.</p>'
      Inverted:
        $ref: '#/definitions/Inverted'
        description: 'Specify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.'
      HealthThreshold:
        $ref: '#/definitions/HealthThreshold'
        description: '<p>The number of child health checks that are associated with a <code>CALCULATED</code> health that Amazon Route 53 must consider healthy for the <code>CALCULATED</code> health check to be considered healthy. To specify the child health checks that you want to associate with a <code>CALCULATED</code> health check, use the <code>ChildHealthChecks</code> and <code>ChildHealthCheck</code> elements.</p> <p>Note the following:</p> <ul> <li> <p>If you specify a number greater than the number of child health checks, Amazon Route 53 always considers this health check to be unhealthy.</p> </li> <li> <p>If you specify <code>0</code>, Amazon Route 53 always considers this health check to be healthy.</p> </li> </ul>'
      ChildHealthChecks:
        $ref: '#/definitions/ChildHealthCheckList'
        description: A complex type that contains one <code>ChildHealthCheck</code> element for each health check that you want to associate with a <code>CALCULATED</code> health check.
      EnableSNI:
        $ref: '#/definitions/EnableSNI'
        description: '<p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during <code>TLS</code> negotiation. This allows the endpoint to respond to <code>HTTPS</code> health check requests with the applicable SSL/TLS certificate.</p> <p>Some endpoints require that HTTPS requests include the host name in the <code>client_hello</code> message. If you don''t enable SNI, the status of the health check will be SSL alert <code>handshake_failure</code>. A health check can also have that status for other reasons. If SNI is enabled and you''re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.</p> <p>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common Name</code> field and possibly several more in the <code>Subject Alternative Names</code> field. One of the domain names in the certificate should match the value that you specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the <code>client_hello</code> message with a certificate that does not include the domain name that you specified in <code>FullyQualifiedDomainName</code>, a health checker will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code> from the <code>client_hello</code> message.</p>'
      Regions:
        $ref: '#/definitions/HealthCheckRegionList'
        description: A complex type that contains one <code>Region</code> element for each region that you want Amazon Route 53 health checkers to check the specified endpoint from.
      AlarmIdentifier:
        $ref: '#/definitions/AlarmIdentifier'
      InsufficientDataHealthStatus:
        $ref: '#/definitions/InsufficientDataHealthStatus'
        description: '<p>When CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:</p> <ul> <li> <p> <code>Healthy</code>: Amazon Route 53 considers the health check to be healthy.</p> </li> <li> <p> <code>Unhealthy</code>: Amazon Route 53 considers the health check to be unhealthy.</p> </li> <li> <p> <code>LastKnownStatus</code>: Amazon Route 53 uses the status of the health check from the last time CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.</p> </li> </ul>'
      ResetElements:
        $ref: '#/definitions/ResettableElementNameList'
        description: '<p>A complex type that contains one <code>ResettableElementName</code> element for each element that you want to reset to the default value. Valid values for <code>ResettableElementName</code> include the following:</p> <ul> <li> <p> <code>ChildHealthChecks</code>: Amazon Route 53 resets <a>HealthCheckConfig$ChildHealthChecks</a> to null.</p> </li> <li> <p> <code>FullyQualifiedDomainName</code>: Amazon Route 53 resets <a>HealthCheckConfig$FullyQualifiedDomainName</a> to null.</p> </li> <li> <p> <code>Regions</code>: Amazon Route 53 resets the <a>HealthCheckConfig$Regions</a> list to the default set of regions. </p> </li> <li> <p> <code>ResourcePath</code>: Amazon Route 53 resets <a>HealthCheckConfig$ResourcePath</a> to null.</p> </li> </ul>'
    description: A complex type that contains information about a request to update a health check.
  HealthCheckVersionMismatch:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The value of <code>HealthCheckVersion</code> in the request doesn't match the value of <code>HealthCheckVersion</code> in the health check.
  UpdateHostedZoneCommentResponse:
    type: object
    required:
      - HostedZone
    properties:
      HostedZone:
        $ref: '#/definitions/HostedZone'
    description: A complex type that contains the response to the <code>UpdateHostedZoneComment</code> request.
  UpdateHostedZoneCommentRequest:
    type: object
    properties:
      Comment:
        $ref: '#/definitions/ResourceDescription'
        description: 'The new comment for the hosted zone. If you don''t specify a value for <code>Comment</code>, Amazon Route 53 deletes the existing value of the <code>Comment</code> element, if any.'
    description: A request to update the comment for a hosted zone.
  UpdateTrafficPolicyCommentResponse:
    type: object
    required:
      - TrafficPolicy
    properties:
      TrafficPolicy:
        $ref: '#/definitions/TrafficPolicy'
        description: A complex type that contains settings for the specified traffic policy.
    description: A complex type that contains the response information for the traffic policy.
  UpdateTrafficPolicyCommentRequest:
    type: object
    required:
      - Comment
    properties:
      Comment:
        $ref: '#/definitions/TrafficPolicyComment'
        description: The new comment for the specified traffic policy and version.
    description: A complex type that contains information about the traffic policy that you want to update the comment for.
  UpdateTrafficPolicyInstanceResponse:
    type: object
    required:
      - TrafficPolicyInstance
    properties:
      TrafficPolicyInstance:
        $ref: '#/definitions/TrafficPolicyInstance'
        description: A complex type that contains settings for the updated traffic policy instance.
    description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
  UpdateTrafficPolicyInstanceRequest:
    type: object
    required:
      - TTL
      - TrafficPolicyId
      - TrafficPolicyVersion
    properties:
      TTL:
        $ref: '#/definitions/TTL'
        description: The TTL that you want Amazon Route 53 to assign to all of the updated resource record sets.
      TrafficPolicyId:
        $ref: '#/definitions/TrafficPolicyId'
        description: The ID of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.
      TrafficPolicyVersion:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: The version of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.
    description: A complex type that contains information about the resource record sets that you want to update based on a specified traffic policy instance.
  ConflictingTypes:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
        description: Descriptive message for the error response.
    description: 'You tried to update a traffic policy instance by using a traffic policy version that has a different DNS type than the current type for the instance. You specified the type in the JSON document in the <code>CreateTrafficPolicy</code> or <code>CreateTrafficPolicyVersion</code>request. '
  AccountLimitType:
    type: string
    enum:
      - MAX_HEALTH_CHECKS_BY_OWNER
      - MAX_HOSTED_ZONES_BY_OWNER
      - MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER
      - MAX_REUSABLE_DELEGATION_SETS_BY_OWNER
      - MAX_TRAFFIC_POLICIES_BY_OWNER
  LimitValue:
    type: integer
    minimum: 1
  AccountLimit:
    type: object
    required:
      - Type
      - Value
    properties:
      Type:
        $ref: '#/definitions/AccountLimitType'
        description: '<p>The limit that you requested. Valid values include the following:</p> <ul> <li> <p> <b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health checks that you can create using the current account.</p> </li> <li> <p> <b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted zones that you can create using the current account.</p> </li> <li> <p> <b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number of reusable delegation sets that you can create using the current account.</p> </li> <li> <p> <b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of traffic policies that you can create using the current account.</p> </li> <li> <p> <b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number of traffic policy instances that you can create using the current account. (Traffic policy instances are referred to as traffic flow policy records in the Amazon Route 53 console.)</p> </li> </ul>'
      Value:
        $ref: '#/definitions/LimitValue'
        description: The current value for the limit that is specified by <a>AccountLimit$Type</a>.
    description: A complex type that contains the type of limit that you specified in the request and the current value for that limit.
  CloudWatchRegion:
    type: string
    enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - sa-east-1
    minLength: 1
    maxLength: 64
  AlarmName:
    type: string
    minLength: 1
    maxLength: 256
  AlarmIdentifier:
    type: object
    required:
      - Region
      - Name
    properties:
      Region:
        $ref: '#/definitions/CloudWatchRegion'
        description: '<p>A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.</p> <p>For the current list of CloudWatch regions, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#cw_region">Amazon CloudWatch</a> in the <i>AWS Regions and Endpoints</i> chapter of the <i>Amazon Web Services General Reference</i>.</p>'
      Name:
        $ref: '#/definitions/AlarmName'
        description: The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
    description: A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
  AliasHealthEnabled:
    type: boolean
  ResourceId:
    type: string
    maxLength: 32
  DNSName:
    type: string
    maxLength: 1024
  AliasTarget:
    type: object
    required:
      - HostedZoneId
      - DNSName
      - EvaluateTargetHealth
    properties:
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: '<p> <i>Alias resource records sets only</i>: The value used depends on where you want to route traffic:</p> <dl> <dt>CloudFront distribution</dt> <dd> <p>Specify <code>Z2FDTNDATAQYW2</code>.</p> <note> <p>Alias resource record sets for CloudFront can''t be created in a private zone.</p> </note> </dd> <dt>Elastic Beanstalk environment</dt> <dd> <p>Specify the hosted zone ID for the region in which you created the environment. The environment must have a regionalized subdomain. For a list of regions and the corresponding hosted zone IDs, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region">AWS Elastic Beanstalk</a> in the "AWS Regions and Endpoints" chapter of the <i>Amazon Web Services General Reference</i>.</p> </dd> <dt>ELB load balancer</dt> <dd> <p>Specify the value of the hosted zone ID for the load balancer. Use the following methods to get the hosted zone ID:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#elb_region">Elastic Load Balancing</a> table in the "AWS Regions and Endpoints" chapter of the <i>Amazon Web Services General Reference</i>: Use the value that corresponds with the region that you created your load balancer in. Note that there are separate columns for Application and Classic Load Balancers and for Network Load Balancers.</p> </li> <li> <p> <b>AWS Management Console</b>: Go to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation pane, select the load balancer, and get the value of the <b>Hosted zone</b> field on the <b>Description</b> tab.</p> </li> <li> <p> <b>Elastic Load Balancing API</b>: Use <code>DescribeLoadBalancers</code> to get the applicable value. For more information, see the applicable guide:</p> <ul> <li> <p>Classic Load Balancers: Use <a href="http://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> to get the value of <code>CanonicalHostedZoneNameId</code>.</p> </li> <li> <p>Application and Network Load Balancers: Use <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> to get the value of <code>CanonicalHostedZoneId</code>.</p> </li> </ul> </li> <li> <p> <b>AWS CLI</b>: Use <code>describe-load-balancers</code> to get the applicable value. For more information, see the applicable guide:</p> <ul> <li> <p>Classic Load Balancers: Use <a href="http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html">describe-load-balancers</a> to get the value of <code>CanonicalHostedZoneNameId</code>.</p> </li> <li> <p>Application and Network Load Balancers: Use <a href="http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html">describe-load-balancers</a> to get the value of <code>CanonicalHostedZoneId</code>.</p> </li> </ul> </li> </ul> </dd> <dt>An Amazon S3 bucket configured as a static website</dt> <dd> <p>Specify the hosted zone ID for the region that you created the bucket in. For more information about valid values, see the <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Amazon Simple Storage Service Website Endpoints</a> table in the "AWS Regions and Endpoints" chapter of the <i>Amazon Web Services General Reference</i>.</p> </dd> <dt>Another Amazon Route 53 resource record set in your hosted zone</dt> <dd> <p>Specify the hosted zone ID of your hosted zone. (An alias resource record set can''t reference a resource record set in a different hosted zone.)</p> </dd> </dl>'
      DNSName:
        $ref: '#/definitions/DNSName'
        description: '<p> <i>Alias resource record sets only:</i> The value that you specify depends on where you want to route queries:</p> <dl> <dt>CloudFront distribution</dt> <dd> <p>Specify the domain name that CloudFront assigned when you created your distribution.</p> <p>Your CloudFront distribution must include an alternate domain name that matches the name of the resource record set. For example, if the name of the resource record set is <i>acme.example.com</i>, your CloudFront distribution must include <i>acme.example.com</i> as one of the alternate domain names. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html">Using Alternate Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer Guide</i>.</p> </dd> <dt>Elastic Beanstalk environment</dt> <dd> <p>Specify the <code>CNAME</code> attribute for the environment. (The environment must have a regionalized domain name.) You can use the following methods to get the value of the CNAME attribute:</p> <ul> <li> <p> <i>AWS Management Console</i>: For information about how to get the value by using the console, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customdomains.html">Using Custom Domains with AWS Elastic Beanstalk</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p> </li> <li> <p> <i>Elastic Beanstalk API</i>: Use the <code>DescribeEnvironments</code> action to get the value of the <code>CNAME</code> attribute. For more information, see <a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeEnvironments.html">DescribeEnvironments</a> in the <i>AWS Elastic Beanstalk API Reference</i>.</p> </li> <li> <p> <i>AWS CLI</i>: Use the <code>describe-environments</code> command to get the value of the <code>CNAME</code> attribute. For more information, see <a href="http://docs.aws.amazon.com/cli/latest/reference/elasticbeanstalk/describe-environments.html">describe-environments</a> in the <i>AWS Command Line Interface Reference</i>.</p> </li> </ul> </dd> <dt>ELB load balancer</dt> <dd> <p>Specify the DNS name that is associated with the load balancer. Get the DNS name by using the AWS Management Console, the ELB API, or the AWS CLI. </p> <ul> <li> <p> <b>AWS Management Console</b>: Go to the EC2 page, choose <b>Load Balancers</b> in the navigation pane, choose the load balancer, choose the <b>Description</b> tab, and get the value of the <b>DNS name</b> field. (If you''re routing traffic to a Classic Load Balancer, get the value that begins with <b>dualstack</b>.) </p> </li> <li> <p> <b>Elastic Load Balancing API</b>: Use <code>DescribeLoadBalancers</code> to get the value of <code>DNSName</code>. For more information, see the applicable guide:</p> <ul> <li> <p>Classic Load Balancers: <a href="http://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> </p> </li> <li> <p>Application and Network Load Balancers: <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html">DescribeLoadBalancers</a> </p> </li> </ul> </li> <li> <p> <b>AWS CLI</b>: Use <code>describe-load-balancers</code> to get the value of <code>DNSName</code>. For more information, see the applicable guide:</p> <ul> <li> <p>Classic Load Balancers: <a href="http://docs.aws.amazon.com/cli/latest/reference/elb/describe-load-balancers.html">describe-load-balancers</a> </p> </li> <li> <p>Application and Network Load Balancers: <a href="http://docs.aws.amazon.com/cli/latest/reference/elbv2/describe-load-balancers.html">describe-load-balancers</a> </p> </li> </ul> </li> </ul> </dd> <dt>Amazon S3 bucket that is configured as a static website</dt> <dd> <p>Specify the domain name of the Amazon S3 website endpoint in which you created the bucket, for example, <code>s3-website-us-east-2.amazonaws.com</code>. For more information about valid values, see the table <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Amazon Simple Storage Service (S3) Website Endpoints</a> in the <i>Amazon Web Services General Reference</i>. For more information about using S3 buckets for websites, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/getting-started.html">Getting Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer Guide.</i> </p> </dd> <dt>Another Amazon Route 53 resource record set</dt> <dd> <p>Specify the value of the <code>Name</code> element for a resource record set in the current hosted zone.</p> </dd> </dl>'
      EvaluateTargetHealth:
        $ref: '#/definitions/AliasHealthEnabled'
        description: '<p> <i>Applies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets:</i> When <code>EvaluateTargetHealth</code> is <code>true</code>, an alias resource record set inherits the health of the referenced AWS resource, such as an ELB load balancer, or the referenced resource record set.</p> <p>Note the following:</p> <ul> <li> <p>You can''t set <code>EvaluateTargetHealth</code> to <code>true</code> when the alias target is a CloudFront distribution.</p> </li> <li> <p>If the AWS resource that you specify in <code>AliasTarget</code> is a resource record set or a group of resource record sets (for example, a group of weighted resource record sets), but it is not another alias resource record set, we recommend that you associate a health check with all of the resource record sets in the alias target. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html#dns-failover-complex-configs-hc-omitting">What Happens When You Omit Health Checks?</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> <li> <p>If you specify an Elastic Beanstalk environment in <code>HostedZoneId</code> and <code>DNSName</code>, and if the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. (An environment automatically contains an ELB load balancer if it includes more than one EC2 instance.) If you set <code>EvaluateTargetHealth</code> to <code>true</code> and either no EC2 instances are healthy or the load balancer itself is unhealthy, Amazon Route 53 routes queries to other available resources that are healthy, if any.</p> <p>If the environment contains a single EC2 instance, there are no special requirements.</p> </li> <li> <p>If you specify an ELB load balancer in <code> <a>AliasTarget</a> </code>, ELB routes queries only to the healthy EC2 instances that are registered with the load balancer. If no EC2 instances are healthy or if the load balancer itself is unhealthy, and if <code>EvaluateTargetHealth</code> is true for the corresponding alias resource record set, Amazon Route 53 routes queries to other resources. When you create a load balancer, you configure settings for ELB health checks; they''re not Amazon Route 53 health checks, but they perform a similar function. Do not create Amazon Route 53 health checks for the EC2 instances that you register with an ELB load balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html">How Health Checks Work in More Complex Amazon Route 53 Configurations</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> <li> <p>We recommend that you set <code>EvaluateTargetHealth</code> to true only when you have enough idle capacity to handle the failure of one or more endpoints.</p> </li> </ul> <p>For more information and examples, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
    description: '<p> <i>Alias resource record sets only:</i> Information about the CloudFront distribution, Elastic Beanstalk environment, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set that you''re redirecting queries to. An Elastic Beanstalk environment must have a regionalized subdomain.</p> <p>When creating resource record sets for a private hosted zone, note the following:</p> <ul> <li> <p>Resource record sets can''t be created for CloudFront distributions in a private hosted zone.</p> </li> <li> <p>Creating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.</p> </li> <li> <p>For information about creating failover resource record sets in a private hosted zone, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a>.</p> </li> </ul>'
  AssociateVPCComment:
    type: string
  VPC:
    type: object
    properties:
      VPCRegion:
        $ref: '#/definitions/VPCRegion'
        description: (Private hosted zones only) The region in which you created an Amazon VPC.
      VPCId:
        $ref: '#/definitions/VPCId'
    description: (Private hosted zones only) A complex type that contains information about an Amazon VPC.
  ChangeInfo:
    type: object
    required:
      - Id
      - Status
      - SubmittedAt
    properties:
      Id:
        $ref: '#/definitions/ResourceId'
        description: The ID of the request.
      Status:
        $ref: '#/definitions/ChangeStatus'
        description: The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.
      SubmittedAt:
        $ref: '#/definitions/TimeStamp'
        description: 'The date and time that the change request was submitted in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> and Coordinated Universal Time (UTC). For example, the value <code>2017-03-27T17:48:16.751Z</code> represents March 27, 2017 at 17:48:16.751 UTC.'
      Comment:
        $ref: '#/definitions/ResourceDescription'
        description: <p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>
    description: A complex type that describes change information about changes made to your hosted zone.
  ChangeAction:
    type: string
    enum:
      - CREATE
      - DELETE
      - UPSERT
  ResourceRecordSet:
    type: object
    required:
      - Name
      - Type
    properties:
      Name:
        $ref: '#/definitions/DNSName'
        description: '<p>The name of the domain you want to perform the action on.</p> <p>Enter a fully qualified domain name, for example, <code>www.example.com</code>. You can optionally include a trailing dot. If you omit the trailing dot, Amazon Route 53 still assumes that the domain name that you specify is fully qualified. This means that Amazon Route 53 treats <code>www.example.com</code> (without a trailing dot) and <code>www.example.com.</code> (with a trailing dot) as identical.</p> <p>For information about how to specify characters other than <code>a-z</code>, <code>0-9</code>, and <code>-</code> (hyphen) and how to specify internationalized domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can use the asterisk (*) wildcard to replace the leftmost label in a domain name, for example, <code>*.example.com</code>. Note the following:</p> <ul> <li> <p>The * must replace the entire label. For example, you can''t specify <code>*prod.example.com</code> or <code>prod*.example.com</code>.</p> </li> <li> <p>The * can''t replace any of the middle labels, for example, marketing.*.example.com.</p> </li> <li> <p>If you include * in any position other than the leftmost label in a domain name, DNS treats it as an * character (ASCII 42), not as a wildcard.</p> <important> <p>You can''t use the * wildcard for resource records sets that have a type of NS.</p> </important> </li> </ul> <p>You can use the * wildcard as the leftmost label in a domain name, for example, <code>*.example.com</code>. You can''t use an * for one of the middle labels, for example, <code>marketing.*.example.com</code>. In addition, the * must replace the entire label; for example, you can''t specify <code>prod*.example.com</code>.</p>'
      Type:
        $ref: '#/definitions/RRType'
        description: '<p>The DNS record type. For information about different record types and how data is encoded for them, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html">Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Valid values for basic resource record sets: <code>A</code> | <code>AAAA</code> | <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p> <p>Values for weighted, latency, geolocation, and failover resource record sets: <code>A</code> | <code>AAAA</code> | <code>CAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code>. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group.</p> <p>Valid values for multivalue answer resource record sets: <code>A</code> | <code>AAAA</code> | <code>MX</code> | <code>NAPTR</code> | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p> <note> <p>SPF records were formerly used to verify the identity of the sender of email messages. However, we no longer recommend that you create resource record sets for which the value of <code>Type</code> is <code>SPF</code>. RFC 7208, <i>Sender Policy Framework (SPF) for Authorizing Use of Domains in Email, Version 1</i>, has been updated to say, "...[I]ts existence and mechanism defined in [RFC4408] have led to some interoperability issues. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it." In RFC 7208, see section 14.1, <a href="http://tools.ietf.org/html/rfc7208#section-14.1">The SPF DNS Record Type</a>.</p> </note> <p>Values for alias resource record sets:</p> <ul> <li> <p> <b>CloudFront distributions:</b> <code>A</code> </p> <p>If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of <code>A</code> and one with a value of <code>AAAA</code>. </p> </li> <li> <p> <b>AWS Elastic Beanstalk environment that has a regionalized subdomain</b>: <code>A</code> </p> </li> <li> <p> <b>ELB load balancers:</b> <code>A</code> | <code>AAAA</code> </p> </li> <li> <p> <b>Amazon S3 buckets:</b> <code>A</code> </p> </li> <li> <p> <b>Another resource record set in this hosted zone:</b> Specify the type of the resource record set that you''re creating the alias for. All values are supported except <code>NS</code> and <code>SOA</code>.</p> </li> </ul>'
      SetIdentifier:
        $ref: '#/definitions/ResourceRecordSetIdentifier'
        description: ' <i>Weighted, Latency, Geo, and Failover resource record sets only:</i> An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type. The value of <code>SetIdentifier</code> must be unique for each resource record set that has the same combination of DNS name and type. Omit <code>SetIdentifier</code> for any other types of record sets.'
      Weight:
        $ref: '#/definitions/ResourceRecordSetWeight'
        description: '<p> <i>Weighted resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Amazon Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Amazon Route 53 then responds to queries based on the ratio of a resource''s weight to the total. Note the following:</p> <ul> <li> <p>You must specify a value for the <code>Weight</code> element for every weighted resource record set.</p> </li> <li> <p>You can only specify one <code>ResourceRecord</code> per weighted resource record set.</p> </li> <li> <p>You can''t create latency, failover, or geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as weighted resource record sets.</p> </li> <li> <p>You can create a maximum of 100 weighted resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</p> </li> <li> <p>For weighted (but not weighted alias) resource record sets, if you set <code>Weight</code> to <code>0</code> for a resource record set, Amazon Route 53 never responds to queries with the applicable value for that resource record set. However, if you set <code>Weight</code> to <code>0</code> for all resource record sets that have the same combination of DNS name and type, traffic is routed to all resources with equal probability.</p> <p>The effect of setting <code>Weight</code> to <code>0</code> is different when you associate health checks with weighted resource record sets. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html">Options for Configuring Amazon Route 53 Active-Active and Active-Passive Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul>'
      Region:
        $ref: '#/definitions/ResourceRecordSetRegion'
        description: '<p> <i>Latency-based resource record sets only:</i> The Amazon EC2 Region where you created the resource that this resource record set refers to. The resource typically is an AWS resource, such as an EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.</p> <note> <p>Creating latency and latency alias resource record sets in private hosted zones is not supported.</p> </note> <p>When Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Amazon Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 Region. Amazon Route 53 then returns the value that is associated with the selected resource record set.</p> <p>Note the following:</p> <ul> <li> <p>You can only specify one <code>ResourceRecord</code> per latency resource record set.</p> </li> <li> <p>You can only create one latency resource record set for each Amazon EC2 Region.</p> </li> <li> <p>You aren''t required to create latency resource record sets for all Amazon EC2 Regions. Amazon Route 53 will choose the region with the best latency from among the regions that you create latency resource record sets for.</p> </li> <li> <p>You can''t create non-latency resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as latency resource record sets.</p> </li> </ul>'
      GeoLocation:
        $ref: '#/definitions/GeoLocation'
        description: '<p> <i>Geo location resource record sets only:</i> A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of <code>192.0.2.111</code>, create a resource record set with a <code>Type</code> of <code>A</code> and a <code>ContinentCode</code> of <code>AF</code>.</p> <note> <p>Creating geolocation and geolocation alias resource record sets in private hosted zones is not supported.</p> </note> <p>If you create separate resource record sets for overlapping geographic regions (for example, one resource record set for a continent and one for a country on the same continent), priority goes to the smallest geographic region. This allows you to route most queries for a continent to one resource and to route queries for a country on that continent to a different resource.</p> <p>You can''t create two geolocation resource record sets that specify the same geographic location.</p> <p>The value <code>*</code> in the <code>CountryCode</code> element matches all geographic locations that aren''t specified in other geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</p> <important> <p>Geolocation works by mapping IP addresses to locations. However, some IP addresses aren''t mapped to geographic locations, so even if you create geolocation resource record sets that cover all seven continents, Amazon Route 53 will receive some DNS queries from locations that it can''t identify. We recommend that you create a resource record set for which the value of <code>CountryCode</code> is <code>*</code>, which handles both queries that come from locations for which you haven''t created geolocation resource record sets and queries from IP addresses that aren''t mapped to a location. If you don''t create a <code>*</code> resource record set, Amazon Route 53 returns a "no answer" response for queries from those locations.</p> </important> <p>You can''t create non-geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as geolocation resource record sets.</p>'
      Failover:
        $ref: '#/definitions/ResourceRecordSetFailover'
        description: '<p> <i>Failover resource record sets only:</i> To configure failover, you add the <code>Failover</code> element to two resource record sets. For one resource record set, you specify <code>PRIMARY</code> as the value for <code>Failover</code>; for the other resource record set, you specify <code>SECONDARY</code>. In addition, you include the <code>HealthCheckId</code> element and specify the health check that you want Amazon Route 53 to perform for each resource record set.</p> <p>Except where noted, the following failover behaviors assume that you have included the <code>HealthCheckId</code> element in both resource record sets:</p> <ul> <li> <p>When the primary resource record set is healthy, Amazon Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set.</p> </li> <li> <p>When the primary resource record set is unhealthy and the secondary resource record set is healthy, Amazon Route 53 responds to DNS queries with the applicable value from the secondary resource record set.</p> </li> <li> <p>When the secondary resource record set is unhealthy, Amazon Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set.</p> </li> <li> <p>If you omit the <code>HealthCheckId</code> element for the secondary resource record set, and if the primary resource record set is unhealthy, Amazon Route 53 always responds to DNS queries with the applicable value from the secondary resource record set. This is true regardless of the health of the associated endpoint.</p> </li> </ul> <p>You can''t create non-failover resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as failover resource record sets.</p> <p>For failover alias resource record sets, you must also include the <code>EvaluateTargetHealth</code> element and set the value to true.</p> <p>For more information about configuring failover for Amazon Route 53, see the following topics in the <i>Amazon Route 53 Developer Guide</i>: </p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a> </p> </li> </ul>'
      MultiValueAnswer:
        $ref: '#/definitions/ResourceRecordSetMultiValueAnswer'
        description: '<p> <i>Multivalue answer resource record sets only</i>: To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify <code>true</code> for <code>MultiValueAnswer</code>. Note the following:</p> <ul> <li> <p>If you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy.</p> </li> <li> <p>If you don''t associate a health check with a multivalue answer record, Amazon Route 53 always considers the record to be healthy.</p> </li> <li> <p>Amazon Route 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Amazon Route 53 responds to all DNS queries with all the healthy records.</p> </li> <li> <p>If you have more than eight healthy records, Amazon Route 53 responds to different DNS resolvers with different combinations of healthy records.</p> </li> <li> <p>When all records are unhealthy, Amazon Route 53 responds to DNS queries with up to eight unhealthy records.</p> </li> <li> <p>If a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response.</p> </li> </ul> <p>You can''t create multivalue answer alias records.</p>'
      TTL:
        $ref: '#/definitions/TTL'
        description: '<p>The resource record cache time to live (TTL), in seconds. Note the following:</p> <ul> <li> <p>If you''re creating or updating an alias resource record set, omit <code>TTL</code>. Amazon Route 53 uses the value of <code>TTL</code> for the alias target. </p> </li> <li> <p>If you''re associating this resource record set with a health check (if you''re adding a <code>HealthCheckId</code> element), we recommend that you specify a <code>TTL</code> of 60 seconds or less so clients respond quickly to changes in health status.</p> </li> <li> <p>All of the resource record sets in a group of weighted resource record sets must have the same value for <code>TTL</code>.</p> </li> <li> <p>If a group of weighted resource record sets includes one or more weighted alias resource record sets for which the alias target is an ELB load balancer, we recommend that you specify a <code>TTL</code> of 60 seconds for all of the non-alias weighted resource record sets that have the same name and type. Values other than 60 seconds (the TTL for load balancers) will change the effect of the values that you specify for <code>Weight</code>.</p> </li> </ul>'
      ResourceRecords:
        $ref: '#/definitions/ResourceRecords'
        description: '<p>Information about the resource records to act upon.</p> <note> <p>If you''re creating an alias resource record set, omit <code>ResourceRecords</code>.</p> </note>'
      AliasTarget:
        $ref: '#/definitions/AliasTarget'
        description: '<p> <i>Alias resource record sets only:</i> Information about the CloudFront distribution, AWS Elastic Beanstalk environment, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set to which you''re redirecting queries. The AWS Elastic Beanstalk environment must have a regionalized subdomain.</p> <p>If you''re creating resource records sets for a private hosted zone, note the following:</p> <ul> <li> <p>You can''t create alias resource record sets for CloudFront distributions in a private hosted zone.</p> </li> <li> <p>Creating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.</p> </li> <li> <p>For information about creating failover resource record sets in a private hosted zone, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul>'
      HealthCheckId:
        $ref: '#/definitions/HealthCheckId'
        description: '<p>If you want Amazon Route 53 to return this resource record set in response to a DNS query only when a health check is passing, include the <code>HealthCheckId</code> element and specify the ID of the applicable health check.</p> <p>Amazon Route 53 determines whether a resource record set is healthy based on one of the following:</p> <ul> <li> <p>By periodically sending a request to the endpoint that is specified in the health check</p> </li> <li> <p>By aggregating the status of a specified group of health checks (calculated health checks)</p> </li> <li> <p>By determining the current state of a CloudWatch alarm (CloudWatch metric health checks)</p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>.</p> <p>The <code>HealthCheckId</code> element is only useful when Amazon Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Amazon Route 53 to base the choice in part on the status of a health check. Configuring health checks only makes sense in the following configurations:</p> <ul> <li> <p>You''re checking the health of the resource record sets in a group of weighted, latency, geolocation, or failover resource record sets, and you specify health check IDs for all of the resource record sets. If the health check for one resource record set specifies an endpoint that is not healthy, Amazon Route 53 stops responding to queries using the value for that resource record set.</p> </li> <li> <p>You set <code>EvaluateTargetHealth</code> to true for the resource record sets in a group of alias, weighted alias, latency alias, geolocation alias, or failover alias resource record sets, and you specify health check IDs for all of the resource record sets that are referenced by the alias resource record sets.</p> </li> </ul> <important> <p>Amazon Route 53 doesn''t check the health of the endpoint specified in the resource record set, for example, the endpoint specified by the IP address in the <code>Value</code> element. When you add a <code>HealthCheckId</code> element to a resource record set, Amazon Route 53 checks the health of the endpoint that you specified in the health check. </p> </important> <p>For geolocation resource record sets, if an endpoint is unhealthy, Amazon Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the United States, for North America, and for all locations. If the endpoint for the state resource record set is unhealthy, Amazon Route 53 checks the resource record sets for the United States, for North America, and for all locations (a resource record set for which the value of <code>CountryCode</code> is <code>*</code>), in that order, until it finds a resource record set for which the endpoint is healthy. </p> <p>If your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each <code>HTTP</code> server that is serving content for <code>www.example.com</code>. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-2-www.example.com</code>), not the name of the resource record sets (example.com).</p> <important> <p>n this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>For more information, see the following topics in the <i>Amazon Route 53 Developer Guide</i>:</p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html">Amazon Route 53 Health Checks and DNS Failover</a> </p> </li> <li> <p> <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a> </p> </li> </ul>'
      TrafficPolicyInstanceId:
        $ref: '#/definitions/TrafficPolicyInstanceId'
        description: '<p>When you create a traffic policy instance, Amazon Route 53 automatically creates a resource record set. <code>TrafficPolicyInstanceId</code> is the ID of the traffic policy instance that Amazon Route 53 created this resource record set for.</p> <important> <p>To delete the resource record set that is associated with a traffic policy instance, use <code>DeleteTrafficPolicyInstance</code>. Amazon Route 53 will delete the resource record set automatically. If you delete the resource record set by using <code>ChangeResourceRecordSets</code>, Amazon Route 53 doesn''t automatically delete the traffic policy instance, and you''ll continue to be charged for it even though it''s no longer in use. </p> </important>'
    description: Information about the resource record set to create or delete.
  Change:
    type: object
    required:
      - Action
      - ResourceRecordSet
    properties:
      Action:
        $ref: '#/definitions/ChangeAction'
        description: '<p>The action to perform:</p> <ul> <li> <p> <code>CREATE</code>: Creates a resource record set that has the specified values.</p> </li> <li> <p> <code>DELETE</code>: Deletes a existing resource record set.</p> <important> <p>To delete the resource record set that is associated with a traffic policy instance, use <code> <a>DeleteTrafficPolicyInstance</a> </code>. Amazon Route 53 will delete the resource record set automatically. If you delete the resource record set by using <code>ChangeResourceRecordSets</code>, Amazon Route 53 doesn''t automatically delete the traffic policy instance, and you''ll continue to be charged for it even though it''s no longer in use. </p> </important> </li> <li> <p> <code>UPSERT</code>: If a resource record set doesn''t already exist, Amazon Route 53 creates it. If a resource record set does exist, Amazon Route 53 updates it with the values in the request.</p> </li> </ul>'
      ResourceRecordSet:
        $ref: '#/definitions/ResourceRecordSet'
        description: 'Information about the resource record set to create, delete, or update.'
    description: The information for each resource record set that you want to change.
  ResourceDescription:
    type: string
    maxLength: 256
  Changes:
    type: array
    items:
      $ref: '#/definitions/Change'
    minItems: 1
  ChangeBatch:
    type: object
    required:
      - Changes
    properties:
      Comment:
        $ref: '#/definitions/ResourceDescription'
        description: ' <i>Optional:</i> Any comments you want to include about a change batch request.'
      Changes:
        $ref: '#/definitions/Changes'
        description: Information about the changes to make to the record sets.
    description: The information for a change request.
  ChangeStatus:
    type: string
    enum:
      - PENDING
      - INSYNC
  TimeStamp:
    type: string
    format: date-time
  TagResourceType:
    type: string
    enum:
      - healthcheck
      - hostedzone
  TagResourceId:
    type: string
    maxLength: 64
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 10
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 10
  IPAddressCidr:
    type: string
  CheckerIpRanges:
    type: array
    items:
      $ref: '#/definitions/IPAddressCidr'
  HealthCheckId:
    type: string
    maxLength: 64
  ChildHealthCheckList:
    type: array
    items:
      $ref: '#/definitions/HealthCheckId'
    maxItems: 256
  EvaluationPeriods:
    type: integer
    minimum: 1
  Threshold:
    type: number
    format: double
  ComparisonOperator:
    type: string
    enum:
      - GreaterThanOrEqualToThreshold
      - GreaterThanThreshold
      - LessThanThreshold
      - LessThanOrEqualToThreshold
  Period:
    type: integer
    minimum: 60
  MetricName:
    type: string
    minLength: 1
    maxLength: 255
  Namespace:
    type: string
    minLength: 1
    maxLength: 255
  Statistic:
    type: string
    enum:
      - Average
      - Sum
      - SampleCount
      - Maximum
      - Minimum
  DimensionList:
    type: array
    items:
      $ref: '#/definitions/Dimension'
    maxItems: 10
  CloudWatchAlarmConfiguration:
    type: object
    required:
      - EvaluationPeriods
      - Threshold
      - ComparisonOperator
      - Period
      - MetricName
      - Namespace
      - Statistic
    properties:
      EvaluationPeriods:
        $ref: '#/definitions/EvaluationPeriods'
        description: 'For the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.'
      Threshold:
        $ref: '#/definitions/Threshold'
        description: 'For the metric that the CloudWatch alarm is associated with, the value the metric is compared with.'
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: 'For the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.'
      Period:
        $ref: '#/definitions/Period'
        description: 'For the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the CloudWatch metric that the alarm is associated with.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: 'The namespace of the metric that the alarm is associated with. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.'
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'For the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.'
      Dimensions:
        $ref: '#/definitions/DimensionList'
        description: 'For the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric. For information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.'
    description: A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.
  CloudWatchLogsLogGroupArn:
    type: string
  ErrorMessage:
    type: string
  HealthCheckNonce:
    type: string
    minLength: 1
    maxLength: 64
  HealthCheckConfig:
    type: object
    required:
      - Type
    properties:
      IPAddress:
        $ref: '#/definitions/IPAddress'
        description: '<p>The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don''t specify a value for <code>IPAddress</code>, Amazon Route 53 sends a DNS request to resolve the domain name that you specify in <code>FullyQualifiedDomainName</code> at the interval that you specify in <code>RequestInterval</code>. Using an IP address returned by DNS, Amazon Route 53 then checks the health of the endpoint.</p> <p>Use one of the following formats for the value of <code>IPAddress</code>: </p> <ul> <li> <p> <b>IPv4 address</b>: four values between 0 and 255, separated by periods (.), for example, <code>192.0.2.44</code>.</p> </li> <li> <p> <b>IPv6 address</b>: eight groups of four hexadecimal values, separated by colons (:), for example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>. You can also shorten IPv6 addresses as described in RFC 5952, for example, <code>2001:db8:85a3::abcd:1:2345</code>.</p> </li> </ul> <p>If the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for <code>IPAddress</code>. This ensures that the IP address of your instance will never change.</p> <p>For more information, see <a>HealthCheckConfig$FullyQualifiedDomainName</a>.</p> <p>Constraints: Amazon Route 53 can''t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can''t create health checks, see the following documents:</p> <ul> <li> <p> <a href="https://tools.ietf.org/html/rfc5735">RFC 5735, Special Use IPv4 Addresses</a> </p> </li> <li> <p> <a href="https://tools.ietf.org/html/rfc6598">RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space</a> </p> </li> <li> <p> <a href="https://tools.ietf.org/html/rfc5156">RFC 5156, Special-Use IPv6 Addresses</a> </p> </li> </ul> <p>When the value of <code>Type</code> is <code>CALCULATED</code> or <code>CLOUDWATCH_METRIC</code>, omit <code>IPAddress</code>.</p>'
      Port:
        $ref: '#/definitions/Port'
        description: The port on the endpoint on which you want Amazon Route 53 to perform health checks. Specify a value for <code>Port</code> only when you specify a value for <code>IPAddress</code>.
      Type:
        $ref: '#/definitions/HealthCheckType'
        description: '<p>The type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.</p> <important> <p>You can''t change the value of <code>Type</code> after you create a health check.</p> </important> <p>You can create the following types of health checks:</p> <ul> <li> <p> <b>HTTP</b>: Amazon Route 53 tries to establish a TCP connection. If successful, Amazon Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.</p> </li> <li> <p> <b>HTTPS</b>: Amazon Route 53 tries to establish a TCP connection. If successful, Amazon Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.</p> <important> <p>If you specify <code>HTTPS</code> for the value of <code>Type</code>, the endpoint must support TLS v1.0 or later.</p> </important> </li> <li> <p> <b>HTTP_STR_MATCH</b>: Amazon Route 53 tries to establish a TCP connection. If successful, Amazon Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in <code>SearchString</code>.</p> </li> <li> <p> <b>HTTPS_STR_MATCH</b>: Amazon Route 53 tries to establish a TCP connection. If successful, Amazon Route 53 submits an <code>HTTPS</code> request and searches the first 5,120 bytes of the response body for the string that you specify in <code>SearchString</code>.</p> </li> <li> <p> <b>TCP</b>: Amazon Route 53 tries to establish a TCP connection.</p> </li> <li> <p> <b>CLOUDWATCH_METRIC</b>: The health check is associated with a CloudWatch alarm. If the state of the alarm is <code>OK</code>, the health check is considered healthy. If the state is <code>ALARM</code>, the health check is considered unhealthy. If CloudWatch doesn''t have sufficient data to determine whether the state is <code>OK</code> or <code>ALARM</code>, the health check status depends on the setting for <code>InsufficientDataHealthStatus</code>: <code>Healthy</code>, <code>Unhealthy</code>, or <code>LastKnownStatus</code>. </p> </li> <li> <p> <b>CALCULATED</b>: For health checks that monitor the status of other health checks, Amazon Route 53 adds up the number of health checks that Amazon Route 53 health checkers consider to be healthy and compares that number with the value of <code>HealthThreshold</code>. </p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      ResourcePath:
        $ref: '#/definitions/ResourcePath'
        description: 'The path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. '
      FullyQualifiedDomainName:
        $ref: '#/definitions/FullyQualifiedDomainName'
        description: '<p>Amazon Route 53 behavior depends on whether you specify a value for <code>IPAddress</code>.</p> <p> <b>If you specify a value for</b> <code>IPAddress</code>:</p> <p>Amazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Amazon Route 53 to perform health checks.</p> <p>When Amazon Route 53 checks the health of an endpoint, here is how it constructs the <code>Host</code> header:</p> <ul> <li> <p>If you specify a value of <code>80</code> for <code>Port</code> and <code>HTTP</code> or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the Host header. </p> </li> <li> <p>If you specify a value of <code>443</code> for <code>Port</code> and <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>Host</code> header.</p> </li> <li> <p>If you specify another value for <code>Port</code> and any value except <code>TCP</code> for <code>Type</code>, Amazon Route 53 passes <code>FullyQualifiedDomainName:Port</code> to the endpoint in the <code>Host</code> header.</p> </li> </ul> <p>If you don''t specify a value for <code>FullyQualifiedDomainName</code>, Amazon Route 53 substitutes the value of <code>IPAddress</code> in the <code>Host</code> header in each of the preceding cases.</p> <p> <b>If you don''t specify a value for <code>IPAddress</code> </b>:</p> <p>Amazon Route 53 sends a DNS request to the domain that you specify for <code>FullyQualifiedDomainName</code> at the interval that you specify for <code>RequestInterval</code>. Using an IPv4 address that DNS returns, Amazon Route 53 then checks the health of the endpoint.</p> <note> <p>If you don''t specify a value for <code>IPAddress</code>, Amazon Route 53 uses only IPv4 to send health checks to the endpoint. If there''s no resource record set with a type of A for the name that you specify for <code>FullyQualifiedDomainName</code>, the health check fails with a "DNS resolution failed" error.</p> </note> <p>If you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by <code>FullyQualifiedDomainName</code>, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).</p> <important> <p>In this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.</p> </important> <p>In addition, if the value that you specify for <code>Type</code> is <code>HTTP</code>, <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or <code>HTTPS_STR_MATCH</code>, Amazon Route 53 passes the value of <code>FullyQualifiedDomainName</code> in the <code>Host</code> header, as it does when you specify a value for <code>IPAddress</code>. If the value of <code>Type</code> is <code>TCP</code>, Amazon Route 53 doesn''t pass a <code>Host</code> header.</p>'
      SearchString:
        $ref: '#/definitions/SearchString'
        description: '<p>If the value of Type is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy.</p> <p>Amazon Route 53 considers case when searching for <code>SearchString</code> in the response body. </p>'
      RequestInterval:
        $ref: '#/definitions/RequestInterval'
        description: '<p>The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Amazon Route 53 health checker makes requests at this interval.</p> <important> <p>You can''t change the value of <code>RequestInterval</code> after you create a health check.</p> </important> <p>If you don''t specify a value for <code>RequestInterval</code>, the default value is <code>30</code> seconds.</p>'
      FailureThreshold:
        $ref: '#/definitions/FailureThreshold'
        description: '<p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>If you don''t specify a value for <code>FailureThreshold</code>, the default value is three health checks.</p>'
      MeasureLatency:
        $ref: '#/definitions/MeasureLatency'
        description: '<p>Specify whether you want Amazon Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint, and to display CloudWatch latency graphs on the <b>Health Checks</b> page in the Amazon Route 53 console.</p> <important> <p>You can''t change the value of <code>MeasureLatency</code> after you create a health check.</p> </important>'
      Inverted:
        $ref: '#/definitions/Inverted'
        description: 'Specify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.'
      HealthThreshold:
        $ref: '#/definitions/HealthThreshold'
        description: '<p>The number of child health checks that are associated with a <code>CALCULATED</code> health that Amazon Route 53 must consider healthy for the <code>CALCULATED</code> health check to be considered healthy. To specify the child health checks that you want to associate with a <code>CALCULATED</code> health check, use the <a>HealthCheckConfig$ChildHealthChecks</a> and <a>HealthCheckConfig$ChildHealthChecks</a> elements.</p> <p>Note the following:</p> <ul> <li> <p>If you specify a number greater than the number of child health checks, Amazon Route 53 always considers this health check to be unhealthy.</p> </li> <li> <p>If you specify <code>0</code>, Amazon Route 53 always considers this health check to be healthy.</p> </li> </ul>'
      ChildHealthChecks:
        $ref: '#/definitions/ChildHealthCheckList'
        description: (CALCULATED Health Checks Only) A complex type that contains one <code>ChildHealthCheck</code> element for each health check that you want to associate with a <code>CALCULATED</code> health check.
      EnableSNI:
        $ref: '#/definitions/EnableSNI'
        description: '<p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during TLS negotiation. This allows the endpoint to respond to <code>HTTPS</code> health check requests with the applicable SSL/TLS certificate.</p> <p>Some endpoints require that <code>HTTPS</code> requests include the host name in the <code>client_hello</code> message. If you don''t enable SNI, the status of the health check will be <code>SSL alert handshake_failure</code>. A health check can also have that status for other reasons. If SNI is enabled and you''re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.</p> <p>The SSL/TLS certificate on your endpoint includes a domain name in the <code>Common Name</code> field and possibly several more in the <code>Subject Alternative Names</code> field. One of the domain names in the certificate should match the value that you specify for <code>FullyQualifiedDomainName</code>. If the endpoint responds to the <code>client_hello</code> message with a certificate that does not include the domain name that you specified in <code>FullyQualifiedDomainName</code>, a health checker will retry the handshake. In the second attempt, the health checker will omit <code>FullyQualifiedDomainName</code> from the <code>client_hello</code> message.</p>'
      Regions:
        $ref: '#/definitions/HealthCheckRegionList'
        description: '<p>A complex type that contains one <code>Region</code> element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.</p> <p>If you don''t specify any regions, Amazon Route 53 health checkers automatically performs checks from all of the regions that are listed under <b>Valid Values</b>.</p> <p>If you update a health check to remove a region that has been performing health checks, Amazon Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions). </p>'
      AlarmIdentifier:
        $ref: '#/definitions/AlarmIdentifier'
        description: A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
      InsufficientDataHealthStatus:
        $ref: '#/definitions/InsufficientDataHealthStatus'
        description: '<p>When CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:</p> <ul> <li> <p> <code>Healthy</code>: Amazon Route 53 considers the health check to be healthy.</p> </li> <li> <p> <code>Unhealthy</code>: Amazon Route 53 considers the health check to be unhealthy.</p> </li> <li> <p> <code>LastKnownStatus</code>: Amazon Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.</p> </li> </ul>'
    description: A complex type that contains information about the health check.
  HealthCheck:
    type: object
    required:
      - Id
      - CallerReference
      - HealthCheckConfig
      - HealthCheckVersion
    properties:
      Id:
        $ref: '#/definitions/HealthCheckId'
        description: 'The identifier that Amazon Route 53assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long. '
      CallerReference:
        $ref: '#/definitions/HealthCheckNonce'
        description: A unique string that you specified when you created the health check.
      LinkedService:
        $ref: '#/definitions/LinkedService'
        description: 'If the health check was created by another service, the service that created the health check. When a health check is created by another service, you can''t edit or delete it using Amazon Route 53. '
      HealthCheckConfig:
        $ref: '#/definitions/HealthCheckConfig'
        description: A complex type that contains detailed information about one health check.
      HealthCheckVersion:
        $ref: '#/definitions/HealthCheckVersion'
        description: The version of the health check. You can optionally pass this value in a call to <code>UpdateHealthCheck</code> to prevent overwriting another change to the health check.
      CloudWatchAlarmConfiguration:
        $ref: '#/definitions/CloudWatchAlarmConfiguration'
        description: A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.
    description: A complex type that contains information about one health check that is associated with the current AWS account.
  ResourceURI:
    type: string
    maxLength: 1024
  Nonce:
    type: string
    minLength: 1
    maxLength: 128
  HostedZoneConfig:
    type: object
    properties:
      Comment:
        $ref: '#/definitions/ResourceDescription'
        description: Any comments that you want to include about the hosted zone.
      PrivateZone:
        $ref: '#/definitions/IsPrivateZone'
        description: A value that indicates whether this is a private hosted zone.
    description: 'A complex type that contains an optional comment about your hosted zone. If you don''t want to specify a comment, omit both the <code>HostedZoneConfig</code> and <code>Comment</code> elements.'
  HostedZone:
    type: object
    required:
      - Id
      - Name
      - CallerReference
    properties:
      Id:
        $ref: '#/definitions/ResourceId'
        description: The ID that Amazon Route 53 assigned to the hosted zone when you created it.
      Name:
        $ref: '#/definitions/DNSName'
        description: '<p>The name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.</p> <p>For information about how to specify characters other than <code>a-z</code>, <code>0-9</code>, and <code>-</code> (hyphen) and how to specify internationalized domain names, see <a>CreateHostedZone</a>.</p>'
      CallerReference:
        $ref: '#/definitions/Nonce'
        description: The value that you specified for <code>CallerReference</code> when you created the hosted zone.
      Config:
        $ref: '#/definitions/HostedZoneConfig'
        description: 'A complex type that includes the <code>Comment</code> and <code>PrivateZone</code> elements. If you omitted the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the request, the <code>Config</code> and <code>Comment</code> elements don''t appear in the response.'
      ResourceRecordSetCount:
        $ref: '#/definitions/HostedZoneRRSetCount'
        description: The number of resource record sets in the hosted zone.
      LinkedService:
        $ref: '#/definitions/LinkedService'
        description: 'If the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can''t edit or delete it using Amazon Route 53. '
    description: A complex type that contains general information about the hosted zone.
  DelegationSet:
    type: object
    required:
      - NameServers
    properties:
      Id:
        $ref: '#/definitions/ResourceId'
        description: The ID that Amazon Route 53 assigns to a reusable delegation set.
      CallerReference:
        $ref: '#/definitions/Nonce'
        description: The value that you specified for <code>CallerReference</code> when you created the reusable delegation set.
      NameServers:
        $ref: '#/definitions/DelegationSetNameServers'
        description: A complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.
    description: 'A complex type that lists the name servers in a delegation set, as well as the <code>CallerReference</code> and the <code>ID</code> for the delegation set.'
  QueryLoggingConfig:
    type: object
    required:
      - Id
      - HostedZoneId
      - CloudWatchLogsLogGroupArn
    properties:
      Id:
        $ref: '#/definitions/QueryLoggingConfigId'
        description: The ID for a configuration for DNS query logging.
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: 'The ID of the hosted zone that CloudWatch Logs is logging queries for. '
      CloudWatchLogsLogGroupArn:
        $ref: '#/definitions/CloudWatchLogsLogGroupArn'
        description: The Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
    description: A complex type that contains information about a configuration for DNS query logging.
  TTL:
    type: integer
    minimum: 0
    maximum: 2147483647
  TrafficPolicyId:
    type: string
    minLength: 1
    maxLength: 36
  TrafficPolicyVersion:
    type: integer
    minimum: 1
    maximum: 1000
  TrafficPolicyInstance:
    type: object
    required:
      - Id
      - HostedZoneId
      - Name
      - TTL
      - State
      - Message
      - TrafficPolicyId
      - TrafficPolicyVersion
      - TrafficPolicyType
    properties:
      Id:
        $ref: '#/definitions/TrafficPolicyInstanceId'
        description: The ID that Amazon Route 53 assigned to the new traffic policy instance.
      HostedZoneId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the hosted zone that Amazon Route 53 created resource record sets in.
      Name:
        $ref: '#/definitions/DNSName'
        description: 'The DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance. '
      TTL:
        $ref: '#/definitions/TTL'
        description: The TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.
      State:
        $ref: '#/definitions/TrafficPolicyInstanceState'
        description: '<p>The value of <code>State</code> is one of the following values:</p> <dl> <dt>Applied</dt> <dd> <p>Amazon Route 53 has finished creating resource record sets, and changes have propagated to all Amazon Route 53 edge locations.</p> </dd> <dt>Creating</dt> <dd> <p>Amazon Route 53 is creating the resource record sets. Use <code>GetTrafficPolicyInstance</code> to confirm that the <code>CreateTrafficPolicyInstance</code> request completed successfully.</p> </dd> <dt>Failed</dt> <dd> <p>Amazon Route 53 wasn''t able to create or update the resource record sets. When the value of <code>State</code> is <code>Failed</code>, see <code>Message</code> for an explanation of what caused the request to fail.</p> </dd> </dl>'
      Message:
        $ref: '#/definitions/Message'
        description: 'If <code>State</code> is <code>Failed</code>, an explanation of the reason for the failure. If <code>State</code> is another value, <code>Message</code> is empty.'
      TrafficPolicyId:
        $ref: '#/definitions/TrafficPolicyId'
        description: The ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.
      TrafficPolicyVersion:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: The version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.
      TrafficPolicyType:
        $ref: '#/definitions/RRType'
        description: 'The DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance. '
    description: A complex type that contains settings for the new traffic policy instance.
  TrafficPolicyName:
    type: string
    maxLength: 512
  TrafficPolicyDocument:
    type: string
    maxLength: 102400
  TrafficPolicyComment:
    type: string
    maxLength: 1024
  TrafficPolicy:
    type: object
    required:
      - Id
      - Version
      - Name
      - Type
      - Document
    properties:
      Id:
        $ref: '#/definitions/TrafficPolicyId'
        description: The ID that Amazon Route 53 assigned to a traffic policy when you created it.
      Version:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: 'The version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of <code>Version</code> is always 1.'
      Name:
        $ref: '#/definitions/TrafficPolicyName'
        description: The name that you specified when you created the traffic policy.
      Type:
        $ref: '#/definitions/RRType'
        description: The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
      Document:
        $ref: '#/definitions/TrafficPolicyDocument'
        description: 'The definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the <code>CreateTrafficPolicy</code> request. For more information about the JSON format, see <a href="http://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html">Traffic Policy Document Format</a>.'
      Comment:
        $ref: '#/definitions/TrafficPolicyComment'
        description: 'The comment that you specify in the <code>CreateTrafficPolicy</code> request, if any.'
    description: A complex type that contains settings for a traffic policy.
  DNSRCode:
    type: string
  DelegationSetNameServers:
    type: array
    items:
      $ref: '#/definitions/DNSName'
    minItems: 1
  DelegationSets:
    type: array
    items:
      $ref: '#/definitions/DelegationSet'
  QueryLoggingConfigId:
    type: string
    minLength: 1
    maxLength: 36
  TrafficPolicyInstanceId:
    type: string
    minLength: 1
    maxLength: 36
  DimensionField:
    type: string
    minLength: 1
    maxLength: 255
  Dimension:
    type: object
    required:
      - Name
      - Value
    properties:
      Name:
        $ref: '#/definitions/DimensionField'
        description: 'For the metric that the CloudWatch alarm is associated with, the name of one dimension.'
      Value:
        $ref: '#/definitions/DimensionField'
        description: 'For the metric that the CloudWatch alarm is associated with, the value of one dimension.'
    description: 'For the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.'
  DisassociateVPCComment:
    type: string
  EnableSNI:
    type: boolean
  ErrorMessages:
    type: array
    items:
      $ref: '#/definitions/ErrorMessage'
  FailureThreshold:
    type: integer
    minimum: 1
    maximum: 10
  FullyQualifiedDomainName:
    type: string
    maxLength: 255
  GeoLocationContinentCode:
    type: string
    minLength: 2
    maxLength: 2
  GeoLocationCountryCode:
    type: string
    minLength: 1
    maxLength: 2
  GeoLocationSubdivisionCode:
    type: string
    minLength: 1
    maxLength: 3
  GeoLocation:
    type: object
    properties:
      ContinentCode:
        $ref: '#/definitions/GeoLocationContinentCode'
        description: '<p>The two-letter code for the continent.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code> </p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <code>InvalidInput</code> error.</p>'
      CountryCode:
        $ref: '#/definitions/GeoLocationCountryCode'
        description: The two-letter code for the country.
      SubdivisionCode:
        $ref: '#/definitions/GeoLocationSubdivisionCode'
        description: 'The code for the subdivision, for example, a state in the United States or a province in Canada.'
    description: A complex type that contains information about a geo location.
  GeoLocationContinentName:
    type: string
    minLength: 1
    maxLength: 32
  GeoLocationCountryName:
    type: string
    minLength: 1
    maxLength: 64
  GeoLocationSubdivisionName:
    type: string
    minLength: 1
    maxLength: 64
  GeoLocationDetails:
    type: object
    properties:
      ContinentCode:
        $ref: '#/definitions/GeoLocationContinentCode'
        description: The two-letter code for the continent.
      ContinentName:
        $ref: '#/definitions/GeoLocationContinentName'
        description: The full name of the continent.
      CountryCode:
        $ref: '#/definitions/GeoLocationCountryCode'
        description: The two-letter code for the country.
      CountryName:
        $ref: '#/definitions/GeoLocationCountryName'
        description: The name of the country.
      SubdivisionCode:
        $ref: '#/definitions/GeoLocationSubdivisionCode'
        description: 'The code for the subdivision, for example, a state in the United States or a province in Canada.'
      SubdivisionName:
        $ref: '#/definitions/GeoLocationSubdivisionName'
        description: 'The full name of the subdivision, for example, a state in the United States or a province in Canada.'
    description: 'A complex type that contains the codes and full continent, country, and subdivision names for the specified <code>geolocation</code> code.'
  GeoLocationDetailsList:
    type: array
    items:
      $ref: '#/definitions/GeoLocationDetails'
  UsageCount:
    type: integer
    minimum: 0
  HealthCheckCount:
    type: integer
  HealthCheckObservations:
    type: array
    items:
      $ref: '#/definitions/HealthCheckObservation'
  HostedZoneCount:
    type: integer
  HostedZoneLimitType:
    type: string
    enum:
      - MAX_RRSETS_BY_ZONE
      - MAX_VPCS_ASSOCIATED_BY_ZONE
  HostedZoneLimit:
    type: object
    required:
      - Type
      - Value
    properties:
      Type:
        $ref: '#/definitions/HostedZoneLimitType'
        description: '<p>The limit that you requested. Valid values include the following:</p> <ul> <li> <p> <b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you can create in the specified hosted zone.</p> </li> <li> <p> <b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon VPCs that you can associate with the specified private hosted zone.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/LimitValue'
        description: The current value for the limit that is specified by <code>Type</code>.
    description: A complex type that contains the type of limit that you specified in the request and the current value for that limit.
  VPCs:
    type: array
    description: (Private hosted zones only) A list of <code>VPC</code> elements.
    items:
      $ref: '#/definitions/VPC'
    minItems: 1
  ReusableDelegationSetLimitType:
    type: string
    enum:
      - MAX_ZONES_BY_REUSABLE_DELEGATION_SET
  ReusableDelegationSetLimit:
    type: object
    required:
      - Type
      - Value
    properties:
      Type:
        $ref: '#/definitions/ReusableDelegationSetLimitType'
        description: 'The limit that you requested: <code>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</code>, the maximum number of hosted zones that you can associate with the specified reusable delegation set.'
      Value:
        $ref: '#/definitions/LimitValue'
        description: The current value for the <code>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</code> limit.
    description: A complex type that contains the type of limit that you specified in the request and the current value for that limit.
  TrafficPolicyInstanceCount:
    type: integer
  LinkedService:
    type: object
    properties:
      ServicePrincipal:
        $ref: '#/definitions/ServicePrincipal'
        description: 'If the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can''t edit or delete it using Amazon Route 53. '
      Description:
        $ref: '#/definitions/ResourceDescription'
        description: 'If the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can''t edit or delete it using Amazon Route 53. '
    description: 'If a health check or hosted zone was created by another service, <code>LinkedService</code> is a complex type that describes the service that created the resource. When a resource is created by another service, you can''t edit or delete it using Amazon Route 53. '
  HealthCheckVersion:
    type: integer
    minimum: 1
  IPAddress:
    type: string
    pattern: '(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)'
    maxLength: 45
  Port:
    type: integer
    minimum: 1
    maximum: 65535
  HealthCheckType:
    type: string
    enum:
      - HTTP
      - HTTPS
      - HTTP_STR_MATCH
      - HTTPS_STR_MATCH
      - TCP
      - CALCULATED
      - CLOUDWATCH_METRIC
  ResourcePath:
    type: string
    maxLength: 255
  SearchString:
    type: string
    maxLength: 255
  RequestInterval:
    type: integer
    minimum: 10
    maximum: 30
  MeasureLatency:
    type: boolean
  Inverted:
    type: boolean
  HealthThreshold:
    type: integer
    minimum: 0
    maximum: 256
  HealthCheckRegionList:
    type: array
    items:
      $ref: '#/definitions/HealthCheckRegion'
    minItems: 3
    maxItems: 64
  InsufficientDataHealthStatus:
    type: string
    enum:
      - Healthy
      - Unhealthy
      - LastKnownStatus
  HealthCheckRegion:
    type: string
    enum:
      - us-east-1
      - us-west-1
      - us-west-2
      - eu-west-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - sa-east-1
    minLength: 1
    maxLength: 64
  StatusReport:
    type: object
    properties:
      Status:
        $ref: '#/definitions/Status'
        description: A description of the status of the health check endpoint as reported by one of the Amazon Route 53 health checkers.
      CheckedTime:
        $ref: '#/definitions/TimeStamp'
        description: 'The date and time that the health checker performed the health check in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> and Coordinated Universal Time (UTC). For example, the value <code>2017-03-27T17:48:16.751Z</code> represents March 27, 2017 at 17:48:16.751 UTC.'
    description: A complex type that contains the status that one Amazon Route 53 health checker reports and the time of the health check.
  HealthCheckObservation:
    type: object
    properties:
      Region:
        $ref: '#/definitions/HealthCheckRegion'
        description: The region of the Amazon Route 53 health checker that provided the status in <code>StatusReport</code>.
      IPAddress:
        $ref: '#/definitions/IPAddress'
        description: The IP address of the Amazon Route 53 health checker that provided the failure reason in <code>StatusReport</code>.
      StatusReport:
        $ref: '#/definitions/StatusReport'
        description: A complex type that contains the last failure reason as reported by one Amazon Route 53 health checker and the time of the failed health check.
    description: A complex type that contains the last failure reason as reported by one Amazon Route 53 health checker.
  HealthChecks:
    type: array
    items:
      $ref: '#/definitions/HealthCheck'
  HostedZoneRRSetCount:
    type: integer
  IsPrivateZone:
    type: boolean
  HostedZones:
    type: array
    items:
      $ref: '#/definitions/HostedZone'
  ServicePrincipal:
    type: string
    maxLength: 128
  PageMaxItems:
    type: string
  PageTruncated:
    type: boolean
  PageMarker:
    type: string
    maxLength: 64
  PaginationToken:
    type: string
    maxLength: 256
  MaxResults:
    type: string
  QueryLoggingConfigs:
    type: array
    items:
      $ref: '#/definitions/QueryLoggingConfig'
  RRType:
    type: string
    enum:
      - SOA
      - A
      - TXT
      - NS
      - CNAME
      - MX
      - NAPTR
      - PTR
      - SRV
      - SPF
      - AAAA
      - CAA
  ResourceRecordSetIdentifier:
    type: string
    minLength: 1
    maxLength: 128
  ResourceRecordSets:
    type: array
    items:
      $ref: '#/definitions/ResourceRecordSet'
  ResourceTagSet:
    type: object
    properties:
      ResourceType:
        $ref: '#/definitions/TagResourceType'
        description: <p>The type of the resource.</p> <ul> <li> <p>The resource type for health checks is <code>healthcheck</code>.</p> </li> <li> <p>The resource type for hosted zones is <code>hostedzone</code>.</p> </li> </ul>
      ResourceId:
        $ref: '#/definitions/TagResourceId'
        description: The ID for the specified resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags associated with the specified resource.
    description: A complex type containing a resource and its associated tags.
  TagResourceIdList:
    type: array
    items:
      $ref: '#/definitions/TagResourceId'
    minItems: 1
    maxItems: 10
  ResourceTagSetList:
    type: array
    items:
      $ref: '#/definitions/ResourceTagSet'
  TrafficPolicySummaries:
    type: array
    items:
      $ref: '#/definitions/TrafficPolicySummary'
  TrafficPolicyInstances:
    type: array
    items:
      $ref: '#/definitions/TrafficPolicyInstance'
  TrafficPolicyVersionMarker:
    type: string
    maxLength: 4
  TrafficPolicies:
    type: array
    items:
      $ref: '#/definitions/TrafficPolicy'
  Message:
    type: string
    maxLength: 1024
  Nameserver:
    type: string
    minLength: 0
    maxLength: 255
  RData:
    type: string
    maxLength: 4000
  RecordDataEntry:
    type: string
    description: '<p>A value that Amazon Route 53 returned for this resource record set. A <code>RecordDataEntry</code> element is one of the following:</p> <ul> <li> <p>For non-alias resource record sets, a <code>RecordDataEntry</code> element contains one value in the resource record set. If the resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> <li> <p>For multiple resource record sets that have the same name and type, which includes weighted, latency, geolocation, and failover, a <code>RecordDataEntry</code> element contains the value from the appropriate resource record set based on the request.</p> </li> <li> <p>For alias resource record sets that refer to AWS resources other than another resource record set, the <code>RecordDataEntry</code> element contains an IP address or a domain name for the AWS resource, depending on the type of resource.</p> </li> <li> <p>For alias resource record sets that refer to other resource record sets, a <code>RecordDataEntry</code> element contains one value from the referenced resource record set. If the referenced resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> </ul>'
    minLength: 0
    maxLength: 512
  RecordData:
    type: array
    items:
      $ref: '#/definitions/RecordDataEntry'
  ResettableElementName:
    type: string
    enum:
      - FullyQualifiedDomainName
      - Regions
      - ResourcePath
      - ChildHealthChecks
    minLength: 1
    maxLength: 64
  ResettableElementNameList:
    type: array
    items:
      $ref: '#/definitions/ResettableElementName'
    maxItems: 64
  ResourceRecord:
    type: object
    required:
      - Value
    properties:
      Value:
        $ref: '#/definitions/RData'
        description: '<p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html">Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p> <note> <p>If you''re creating an alias resource record set, omit <code>Value</code>.</p> </note>'
    description: '<p>Information specific to the resource record.</p> <note> <p>If you''re creating an alias resource record set, omit <code>ResourceRecord</code>.</p> </note>'
  ResourceRecordSetWeight:
    type: integer
    minimum: 0
    maximum: 255
  ResourceRecordSetRegion:
    type: string
    enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - sa-east-1
      - cn-north-1
      - cn-northwest-1
      - ap-south-1
    minLength: 1
    maxLength: 64
  ResourceRecordSetFailover:
    type: string
    enum:
      - PRIMARY
      - SECONDARY
  ResourceRecordSetMultiValueAnswer:
    type: boolean
  ResourceRecords:
    type: array
    items:
      $ref: '#/definitions/ResourceRecord'
    minItems: 1
  Status:
    type: string
  SubnetMask:
    type: string
    minLength: 0
    maxLength: 3
  TagKey:
    type: string
    maxLength: 128
  TagValue:
    type: string
    maxLength: 256
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: '<p>The value of <code>Key</code> depends on the operation that you want to perform:</p> <ul> <li> <p> <b>Add a tag to a health check or hosted zone</b>: <code>Key</code> is the name that you want to give the new tag.</p> </li> <li> <p> <b>Edit a tag</b>: <code>Key</code> is the name of the tag that you want to change the <code>Value</code> for.</p> </li> <li> <p> <b> Delete a key</b>: <code>Key</code> is the name of the tag you want to remove.</p> </li> <li> <p> <b>Give a name to a health check</b>: Edit the default <code>Name</code> tag. In the Amazon Route 53 console, the list of your health checks includes a <b>Name</b> column that lets you see the name that you''ve given to each health check.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/TagValue'
        description: '<p>The value of <code>Value</code> depends on the operation that you want to perform:</p> <ul> <li> <p> <b>Add a tag to a health check or hosted zone</b>: <code>Value</code> is the value that you want to give the new tag.</p> </li> <li> <p> <b>Edit a tag</b>: <code>Value</code> is the new value that you want to assign the tag.</p> </li> </ul>'
    description: A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
  TransportProtocol:
    type: string
  TrafficPolicyInstanceState:
    type: string
  TrafficPolicySummary:
    type: object
    required:
      - Id
      - Name
      - Type
      - LatestVersion
      - TrafficPolicyCount
    properties:
      Id:
        $ref: '#/definitions/TrafficPolicyId'
        description: The ID that Amazon Route 53 assigned to the traffic policy when you created it.
      Name:
        $ref: '#/definitions/TrafficPolicyName'
        description: The name that you specified for the traffic policy when you created it.
      Type:
        $ref: '#/definitions/RRType'
        description: The DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
      LatestVersion:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: The version number of the latest version of the traffic policy.
      TrafficPolicyCount:
        $ref: '#/definitions/TrafficPolicyVersion'
        description: The number of traffic policies that are associated with the current AWS account.
    description: A complex type that contains information about the latest version of one traffic policy that is associated with the current AWS account.
  VPCRegion:
    type: string
    enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - sa-east-1
      - ca-central-1
      - cn-north-1
    minLength: 1
    maxLength: 64
  VPCId:
    type: string
    description: '(Private hosted zones only) The ID of an Amazon VPC. '
    maxLength: 1024
