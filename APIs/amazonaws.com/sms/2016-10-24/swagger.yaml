swagger: '2.0'
info:
  version: '2016-10-24'
  x-release: v4
  title: AWS Server Migration Service
  description: Amazon Server Migration Service automates the process of migrating servers to EC2.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sms
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/sms/'
host: sms.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateReplicationJob
      description: 'The CreateReplicationJob API is used to create a ReplicationJob to replicate a server on AWS. Call this API to first create a ReplicationJob, which will then schedule periodic ReplicationRuns to replicate your server to AWS. Each ReplicationRun will result in the creation of an AWS AMI.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: ServerCannotBeReplicatedException
          schema:
            $ref: '#/definitions/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobAlreadyExistsException
          schema:
            $ref: '#/definitions/ReplicationJobAlreadyExistsException'
        '486':
          description: NoConnectorsAvailableException
          schema:
            $ref: '#/definitions/NoConnectorsAvailableException'
        '487':
          description: InternalError
          schema:
            $ref: '#/definitions/InternalError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReplicationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteReplicationJob':
    post:
      operationId: DeleteReplicationJob
      description: 'The DeleteReplicationJob API is used to delete a ReplicationJob, resulting in no further ReplicationRuns. This will delete the contents of the S3 bucket used to store SMS artifacts, but will not delete any AMIs created by the SMS service.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteReplicationJobResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: ReplicationJobNotFoundException
          schema:
            $ref: '#/definitions/ReplicationJobNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteReplicationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteServerCatalog':
    post:
      operationId: DeleteServerCatalog
      description: The DeleteServerCatalog API clears all servers from your server catalog. This means that these servers will no longer be accessible to the Server Migration Service.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteServerCatalogRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateConnector':
    post:
      operationId: DisassociateConnector
      description: 'The DisassociateConnector API will disassociate a connector from the Server Migration Service, rendering it unavailable to support replication jobs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateConnectorResponse'
        '480':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '481':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateConnectorRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetConnectors':
    post:
      operationId: GetConnectors
      description: The GetConnectors API returns a list of connectors that are registered with the Server Migration Service.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetConnectorsResponse'
        '480':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetConnectorsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetReplicationJobs':
    post:
      operationId: GetReplicationJobs
      description: 'The GetReplicationJobs API will return all of your ReplicationJobs and their details. This API returns a paginated list, that may be consecutively called with nextToken to retrieve all ReplicationJobs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetReplicationJobsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetReplicationJobsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetReplicationRuns':
    post:
      operationId: GetReplicationRuns
      description: 'The GetReplicationRuns API will return all ReplicationRuns for a given ReplicationJob. This API returns a paginated list, that may be consecutively called with nextToken to retrieve all ReplicationRuns for a ReplicationJob.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetReplicationRunsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetReplicationRunsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetServers':
    post:
      operationId: GetServers
      description: 'The GetServers API returns a list of all servers in your server catalog. For this call to succeed, you must previously have called ImportServerCatalog.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServersResponse'
        '480':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServersRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ImportServerCatalog':
    post:
      operationId: ImportServerCatalog
      description: 'The ImportServerCatalog API is used to gather the complete list of on-premises servers on your premises. This API call requires connectors to be installed and monitoring all servers you would like imported. This API call returns immediately, but may take some time to retrieve all of the servers.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '484':
          description: NoConnectorsAvailableException
          schema:
            $ref: '#/definitions/NoConnectorsAvailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportServerCatalogRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartOnDemandReplicationRun':
    post:
      operationId: StartOnDemandReplicationRun
      description: The StartOnDemandReplicationRun API is used to start a ReplicationRun on demand (in addition to those that are scheduled based on your frequency). This ReplicationRun will start immediately. StartOnDemandReplicationRun is subject to limits on how many on demand ReplicationRuns you may call per 24-hour period.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartOnDemandReplicationRunResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: ReplicationRunLimitExceededException
          schema:
            $ref: '#/definitions/ReplicationRunLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartOnDemandReplicationRunRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateReplicationJob':
    post:
      operationId: UpdateReplicationJob
      description: The UpdateReplicationJob API is used to change the settings of your existing ReplicationJob created using CreateReplicationJob. Calling this API will affect the next scheduled ReplicationRun.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: UnauthorizedOperationException
          schema:
            $ref: '#/definitions/UnauthorizedOperationException'
        '484':
          description: ServerCannotBeReplicatedException
          schema:
            $ref: '#/definitions/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobNotFoundException
          schema:
            $ref: '#/definitions/ReplicationJobNotFoundException'
        '486':
          description: InternalError
          schema:
            $ref: '#/definitions/InternalError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateReplicationJobRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateReplicationJobResponse:
    type: object
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
  CreateReplicationJobRequest:
    type: object
    required:
      - serverId
      - seedReplicationTime
      - frequency
    properties:
      serverId:
        $ref: '#/definitions/ServerId'
      seedReplicationTime:
        $ref: '#/definitions/Timestamp'
      frequency:
        $ref: '#/definitions/Frequency'
      licenseType:
        $ref: '#/definitions/LicenseType'
      roleName:
        $ref: '#/definitions/RoleName'
      description:
        $ref: '#/definitions/Description'
  InvalidParameterException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: 'A parameter specified in the request is not valid, is unsupported, or cannot be used.'
  MissingRequiredParameterException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The request is missing a required parameter. Ensure that you have supplied all the required parameters for the request.
  UnauthorizedOperationException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: This user does not have permissions to perform this operation.
  OperationNotPermittedException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: 'The specified operation is not allowed. This error can occur for a number of reasons; for example, you might be trying to start a Replication Run before seed Replication Run.'
  ServerCannotBeReplicatedException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The provided server cannot be replicated.
  ReplicationJobAlreadyExistsException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: An active Replication Job already exists for the specified server.
  NoConnectorsAvailableException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: No connectors are available to handle this request. Please associate connector(s) and verify any existing connectors are healthy and can respond to requests.
  InternalError:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: An internal error has occured.
  DeleteReplicationJobResponse:
    type: object
    properties: {}
  DeleteReplicationJobRequest:
    type: object
    required:
      - replicationJobId
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
  ReplicationJobNotFoundException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: The specified Replication Job cannot be found.
  DeleteServerCatalogResponse:
    type: object
    properties: {}
  DeleteServerCatalogRequest:
    type: object
    properties: {}
  DisassociateConnectorResponse:
    type: object
    properties: {}
  DisassociateConnectorRequest:
    type: object
    required:
      - connectorId
    properties:
      connectorId:
        $ref: '#/definitions/ConnectorId'
  GetConnectorsResponse:
    type: object
    properties:
      connectorList:
        $ref: '#/definitions/ConnectorList'
      nextToken:
        $ref: '#/definitions/NextToken'
  GetConnectorsRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
      maxResults:
        $ref: '#/definitions/MaxResults'
  GetReplicationJobsResponse:
    type: object
    properties:
      replicationJobList:
        $ref: '#/definitions/ReplicationJobList'
      nextToken:
        $ref: '#/definitions/NextToken'
  GetReplicationJobsRequest:
    type: object
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      nextToken:
        $ref: '#/definitions/NextToken'
      maxResults:
        $ref: '#/definitions/MaxResults'
  GetReplicationRunsResponse:
    type: object
    properties:
      replicationJob:
        $ref: '#/definitions/ReplicationJob'
      replicationRunList:
        $ref: '#/definitions/ReplicationRunList'
      nextToken:
        $ref: '#/definitions/NextToken'
  GetReplicationRunsRequest:
    type: object
    required:
      - replicationJobId
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      nextToken:
        $ref: '#/definitions/NextToken'
      maxResults:
        $ref: '#/definitions/MaxResults'
  GetServersResponse:
    type: object
    properties:
      lastModifiedOn:
        $ref: '#/definitions/Timestamp'
      serverCatalogStatus:
        $ref: '#/definitions/ServerCatalogStatus'
      serverList:
        $ref: '#/definitions/ServerList'
      nextToken:
        $ref: '#/definitions/NextToken'
  GetServersRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
      maxResults:
        $ref: '#/definitions/MaxResults'
  ImportServerCatalogResponse:
    type: object
    properties: {}
  ImportServerCatalogRequest:
    type: object
    properties: {}
  StartOnDemandReplicationRunResponse:
    type: object
    properties:
      replicationRunId:
        $ref: '#/definitions/ReplicationRunId'
  StartOnDemandReplicationRunRequest:
    type: object
    required:
      - replicationJobId
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      description:
        $ref: '#/definitions/Description'
  ReplicationRunLimitExceededException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ErrorMessage'
    description: This user has exceeded the maximum allowed Replication Run limit.
  UpdateReplicationJobResponse:
    type: object
    properties: {}
  UpdateReplicationJobRequest:
    type: object
    required:
      - replicationJobId
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      frequency:
        $ref: '#/definitions/Frequency'
      nextReplicationRunStartTime:
        $ref: '#/definitions/Timestamp'
      licenseType:
        $ref: '#/definitions/LicenseType'
      roleName:
        $ref: '#/definitions/RoleName'
      description:
        $ref: '#/definitions/Description'
  AmiId:
    type: string
    description: The AMI id for the image resulting from a Replication Run.
  ConnectorId:
    type: string
    description: Unique Identifier for Connector
  ConnectorVersion:
    type: string
    description: Connector version string
  ConnectorStatus:
    type: string
    enum:
      - HEALTHY
      - UNHEALTHY
    description: Status of on-premise Connector
  ConnectorCapabilityList:
    type: array
    description: List of Connector Capabilities
    items:
      $ref: '#/definitions/ConnectorCapability'
  VmManagerName:
    type: string
    description: VM Manager Name
  VmManagerType:
    type: string
    enum:
      - VSPHERE
    description: VM Management Product
  VmManagerId:
    type: string
    description: Unique Identifier for VM Manager
  IpAddress:
    type: string
    description: Internet Protocol (IP) Address
  MacAddress:
    type: string
    description: Hardware (MAC) address
  Timestamp:
    type: string
    description: Timestamp of an operation
    format: date-time
  Connector:
    type: object
    properties:
      connectorId:
        $ref: '#/definitions/ConnectorId'
      version:
        $ref: '#/definitions/ConnectorVersion'
      status:
        $ref: '#/definitions/ConnectorStatus'
      capabilityList:
        $ref: '#/definitions/ConnectorCapabilityList'
      vmManagerName:
        $ref: '#/definitions/VmManagerName'
      vmManagerType:
        $ref: '#/definitions/VmManagerType'
      vmManagerId:
        $ref: '#/definitions/VmManagerId'
      ipAddress:
        $ref: '#/definitions/IpAddress'
      macAddress:
        $ref: '#/definitions/MacAddress'
      associatedOn:
        $ref: '#/definitions/Timestamp'
    description: Object representing a Connector
  ConnectorCapability:
    type: string
    enum:
      - VSPHERE
    description: Capabilities for a Connector
  ConnectorList:
    type: array
    description: List of connectors
    items:
      $ref: '#/definitions/Connector'
  ServerId:
    type: string
    description: Unique Identifier for a server
  Frequency:
    type: integer
    description: 'Interval between Replication Runs. This value is specified in hours, and represents the time between consecutive Replication Runs.'
  LicenseType:
    type: string
    enum:
      - AWS
      - BYOL
    description: The license type to be used for the Amazon Machine Image (AMI) created after a successful ReplicationRun.
  RoleName:
    type: string
    description: Name of service role in customer's account to be used by SMS service.
  Description:
    type: string
    description: The description for a Replication Job/Run.
  ReplicationJobId:
    type: string
    description: The unique identifier for a Replication Job.
  ErrorMessage:
    type: string
    description: Error Message string
  NextToken:
    type: string
    description: Pagination token to pass as input to API call
  MaxResults:
    type: integer
    description: 'The maximum number of results to return in one API call. If left empty, this will default to 50.'
  ReplicationJobList:
    type: array
    description: List of Replication Jobs
    items:
      $ref: '#/definitions/ReplicationJob'
  ReplicationJob:
    type: object
    properties:
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      serverId:
        $ref: '#/definitions/ServerId'
      serverType:
        $ref: '#/definitions/ServerType'
      vmServer:
        $ref: '#/definitions/VmServer'
      seedReplicationTime:
        $ref: '#/definitions/Timestamp'
      frequency:
        $ref: '#/definitions/Frequency'
      nextReplicationRunStartTime:
        $ref: '#/definitions/Timestamp'
      licenseType:
        $ref: '#/definitions/LicenseType'
      roleName:
        $ref: '#/definitions/RoleName'
      latestAmiId:
        $ref: '#/definitions/AmiId'
      state:
        $ref: '#/definitions/ReplicationJobState'
      statusMessage:
        $ref: '#/definitions/ReplicationJobStatusMessage'
      description:
        $ref: '#/definitions/Description'
      replicationRunList:
        $ref: '#/definitions/ReplicationRunList'
    description: Object representing a Replication Job
  ReplicationRunList:
    type: array
    description: List of Replication Runs
    items:
      $ref: '#/definitions/ReplicationRun'
  ServerCatalogStatus:
    type: string
    enum:
      - NOT_IMPORTED
      - IMPORTING
      - AVAILABLE
      - DELETED
      - EXPIRED
    description: Status of Server catalog
  ServerList:
    type: array
    description: List of servers from catalog
    items:
      $ref: '#/definitions/Server'
  ServerType:
    type: string
    enum:
      - VIRTUAL_MACHINE
    description: Type of server.
  VmServer:
    type: object
    properties:
      vmServerAddress:
        $ref: '#/definitions/VmServerAddress'
      vmName:
        $ref: '#/definitions/VmName'
      vmManagerName:
        $ref: '#/definitions/VmManagerName'
      vmManagerType:
        $ref: '#/definitions/VmManagerType'
      vmPath:
        $ref: '#/definitions/VmPath'
    description: Object representing a VM server
  ReplicationJobState:
    type: string
    enum:
      - PENDING
      - ACTIVE
      - FAILED
      - DELETING
      - DELETED
    description: Current state of Replication Job
  ReplicationJobStatusMessage:
    type: string
    description: String describing current status of Replication Job
  ReplicationJobTerminated:
    type: boolean
    description: An indicator of the Replication Job being deleted or failed.
  ReplicationRunId:
    type: string
    description: The unique identifier for a Replication Run.
  ReplicationRunState:
    type: string
    enum:
      - PENDING
      - MISSED
      - ACTIVE
      - FAILED
      - COMPLETED
      - DELETING
      - DELETED
    description: Current state of Replication Run
  ReplicationRunType:
    type: string
    enum:
      - ON_DEMAND
      - AUTOMATIC
    description: Type of Replication Run
  ReplicationRunStatusMessage:
    type: string
    description: String describing current status of Replication Run
  ReplicationRun:
    type: object
    properties:
      replicationRunId:
        $ref: '#/definitions/ReplicationRunId'
      state:
        $ref: '#/definitions/ReplicationRunState'
      type:
        $ref: '#/definitions/ReplicationRunType'
      statusMessage:
        $ref: '#/definitions/ReplicationRunStatusMessage'
      amiId:
        $ref: '#/definitions/AmiId'
      scheduledStartTime:
        $ref: '#/definitions/Timestamp'
      completedTime:
        $ref: '#/definitions/Timestamp'
      description:
        $ref: '#/definitions/Description'
    description: Object representing a Replication Run
  Server:
    type: object
    properties:
      serverId:
        $ref: '#/definitions/ServerId'
      serverType:
        $ref: '#/definitions/ServerType'
      vmServer:
        $ref: '#/definitions/VmServer'
      replicationJobId:
        $ref: '#/definitions/ReplicationJobId'
      replicationJobTerminated:
        $ref: '#/definitions/ReplicationJobTerminated'
    description: Object representing a server
  VmId:
    type: string
    description: Unique Identifier for a VM
  VmName:
    type: string
    description: Name of Virtual Machine
  VmPath:
    type: string
    description: Path to VM
  VmServerAddress:
    type: object
    properties:
      vmManagerId:
        $ref: '#/definitions/VmManagerId'
      vmId:
        $ref: '#/definitions/VmId'
    description: Object representing a server's location
