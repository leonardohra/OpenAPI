swagger: '2.0'
info:
  version: '2016-10-20'
  x-release: v4
  title: AWS Budgets
  description: '<p>Budgets enable you to plan your service usage, service costs, and your RI utilization. You can also track how close your plan is to your budgeted amount or to the free tier limits. Budgets provide you with a quick way to see your usage-to-date and current estimated charges from AWS and to see how much your predicted usage accrues in charges by the end of the month. Budgets also compare current estimates and charges to the amount that you indicated you want to use or spend and lets you see how much of your budget has been used. AWS updates your budget status several times a day. Budgets track your unblended costs, subscriptions, and refunds. You can create the following types of budgets:</p> <ul> <li> <p>Cost budgets allow you to say how much you want to spend on a service.</p> </li> <li> <p>Usage budgets allow you to say how many hours you want to use for one or more services.</p> </li> <li> <p>RI utilization budgets allow you to define a utilization threshold and receive alerts when RIs are tracking below that threshold.</p> </li> </ul> <p>You can create up to 20,000 budgets per AWS master account. Your first two budgets are free of charge. Each additional budget costs $0.02 per day. You can set up optional notifications that warn you if you exceed, or are forecasted to exceed, your budgeted amount. You can have notifications sent to an Amazon SNS topic, to an email address, or to both. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-sns-policy.html">Creating an Amazon SNS Topic for Budget Notifications</a>. AWS Free Tier usage alerts via AWS Budgets are provided for you, and do not count toward your budget limits.</p> <p>Service Endpoint</p> <p>The AWS Budgets API provides the following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li> </ul> <p>For information about costs associated with the AWS Budgets API, see <a href="https://aws.amazon.com/aws-cost-management/pricing/">AWS Cost Management Pricing</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: budgets
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/budgets/'
host: budgets.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateBudget
      description: 'Creates a budget and, if included, notifications and subscribers. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBudgetResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '482':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBudgetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateNotification':
    post:
      operationId: CreateNotification
      description: Creates a notification. You must create the budget before you create the associated notification.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '484':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateNotificationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateSubscriber':
    post:
      operationId: CreateSubscriber
      description: Creates a subscriber. You must create the associated budget and notification before you create the subscriber.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: CreationLimitExceededException
          schema:
            $ref: '#/definitions/CreationLimitExceededException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
        '484':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSubscriberRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteBudget':
    post:
      operationId: DeleteBudget
      description: <p>Deletes a budget. You can delete your budget at any time.</p> <p> <b>Deleting a budget also deletes the notifications and subscribers associated with that budget.</b> </p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBudgetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteNotification':
    post:
      operationId: DeleteNotification
      description: <p>Deletes a notification.</p> <p> <b>Deleting a notification also deletes the subscribers associated with the notification.</b> </p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNotificationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNotificationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteSubscriber':
    post:
      operationId: DeleteSubscriber
      description: <p>Deletes a subscriber.</p> <p> <b>Deleting the last subscriber to a notification also deletes the notification.</b> </p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSubscriberRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeBudget':
    post:
      operationId: DescribeBudget
      description: Describes a budget.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBudgetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeBudgets':
    post:
      operationId: DescribeBudgets
      description: Lists the budgets associated with an account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBudgetsResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBudgetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeNotificationsForBudget':
    post:
      operationId: DescribeNotificationsForBudget
      description: Lists the notifications associated with a budget.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotificationsForBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeNotificationsForBudgetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSubscribersForNotification':
    post:
      operationId: DescribeSubscribersForNotification
      description: Lists the subscribers associated with a notification.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSubscribersForNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ExpiredNextTokenException
          schema:
            $ref: '#/definitions/ExpiredNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSubscribersForNotificationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateBudget':
    post:
      operationId: UpdateBudget
      description: 'Updates a budget. You can change every part of a budget except for the <code>budgetName</code> and the <code>calculatedSpend</code>. When a budget is modified, the <code>calculatedSpend</code> drops to zero until AWS has new usage data to use for forecasting.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBudgetResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBudgetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateNotification':
    post:
      operationId: UpdateNotification
      description: Updates a notification.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotificationResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNotificationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateSubscriber':
    post:
      operationId: UpdateSubscriber
      description: Updates a subscriber.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSubscriberResponse'
        '480':
          description: InternalErrorException
          schema:
            $ref: '#/definitions/InternalErrorException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: DuplicateRecordException
          schema:
            $ref: '#/definitions/DuplicateRecordException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriberRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateBudgetResponse:
    type: object
    properties: {}
    description: ' Response of CreateBudget '
  CreateBudgetRequest:
    type: object
    required:
      - AccountId
      - Budget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget.
      Budget:
        $ref: '#/definitions/Budget'
        description: The budget object that you want to create.
      NotificationsWithSubscribers:
        $ref: '#/definitions/NotificationWithSubscribersList'
        description: 'A notification that you want to associate with a budget. A budget can have up to five notifications, and each notification can have one SNS subscriber and up to ten email subscribers. If you include notifications and subscribers in your <code>CreateBudget</code> call, AWS creates the notifications and subscribers for you.'
    description: ' Request of CreateBudget '
  InvalidParameterException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: 'An error on the client occurred. Typically, the cause is an invalid input value.'
  InternalErrorException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: An error on the server occurred during the processing of your request. Try again later.
  CreationLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: You've exceeded the notification or subscriber limit.
  DuplicateRecordException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: The budget name already exists. Budget names must be unique within an account.
  CreateNotificationResponse:
    type: object
    properties: {}
    description: ' Response of CreateNotification '
  CreateNotificationRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscribers
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget that you want to create a notification for.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget that you want AWS to notified you about. Budget names must be unique within an account.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification that you want to create.
      Subscribers:
        $ref: '#/definitions/Subscribers'
        description: A list of subscribers that you want to associate with the notification. Each notification can have one SNS subscriber and up to ten email subscribers.
    description: ' Request of CreateNotification '
  NotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: We can’t locate the resource that you specified.
  CreateSubscriberResponse:
    type: object
    properties: {}
    description: ' Response of CreateSubscriber '
  CreateSubscriberRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> associated with the budget that you want to create a subscriber for.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget that you want to subscribe to. Budget names must be unique within an account.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification that you want to create a subscriber for.
      Subscriber:
        $ref: '#/definitions/Subscriber'
        description: The subscriber that you want to associate with a budget notification.
    description: ' Request of CreateSubscriber '
  DeleteBudgetResponse:
    type: object
    properties: {}
    description: ' Response of DeleteBudget '
  DeleteBudgetRequest:
    type: object
    required:
      - AccountId
      - BudgetName
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget that you want to delete.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget that you want to delete.
    description: ' Request of DeleteBudget '
  DeleteNotificationResponse:
    type: object
    properties: {}
    description: ' Response of DeleteNotification '
  DeleteNotificationRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose notification you want to delete.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose notification you want to delete.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification that you want to delete.
    description: ' Request of DeleteNotification '
  DeleteSubscriberResponse:
    type: object
    properties: {}
    description: ' Response of DeleteSubscriber '
  DeleteSubscriberRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
      - Subscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose subscriber you want to delete.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose subscriber you want to delete.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification whose subscriber you want to delete.
      Subscriber:
        $ref: '#/definitions/Subscriber'
        description: The subscriber that you want to delete.
    description: ' Request of DeleteSubscriber '
  DescribeBudgetResponse:
    type: object
    properties:
      Budget:
        $ref: '#/definitions/Budget'
        description: The description of the budget.
    description: ' Response of DescribeBudget '
  DescribeBudgetRequest:
    type: object
    required:
      - AccountId
      - BudgetName
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget that you want a description of.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget that you want a description of.
    description: ' Request of DescribeBudget '
  DescribeBudgetsResponse:
    type: object
    properties:
      Budgets:
        $ref: '#/definitions/Budgets'
        description: A list of budgets.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results that you can retrieve.
    description: ' Response of DescribeBudgets '
  DescribeBudgetsRequest:
    type: object
    required:
      - AccountId
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budgets that you want descriptions of.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: Optional integer. Specifies the maximum number of results to return in response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results to retrieve.
    description: ' Request of DescribeBudgets '
  InvalidNextTokenException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: The pagination token is invalid.
  ExpiredNextTokenException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/errorMessage'
    description: The pagination token expired.
  DescribeNotificationsForBudgetResponse:
    type: object
    properties:
      Notifications:
        $ref: '#/definitions/Notifications'
        description: A list of notifications associated with a budget.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results that you can retrieve.
    description: ' Response of GetNotificationsForBudget '
  DescribeNotificationsForBudgetRequest:
    type: object
    required:
      - AccountId
      - BudgetName
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose notifications you want descriptions of.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose notifications you want descriptions of.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: Optional integer. Specifies the maximum number of results to return in response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results to retrieve.
    description: ' Request of DescribeNotificationsForBudget '
  DescribeSubscribersForNotificationResponse:
    type: object
    properties:
      Subscribers:
        $ref: '#/definitions/Subscribers'
        description: A list of subscribers associated with a notification.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results that you can retrieve.
    description: ' Response of DescribeSubscribersForNotification '
  DescribeSubscribersForNotificationRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose subscribers you want descriptions of.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose subscribers you want descriptions of.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification whose subscribers you want to list.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: Optional integer. Specifies the maximum number of results to return in response.
      NextToken:
        $ref: '#/definitions/GenericString'
        description: The pagination token that indicates the next set of results to retrieve.
    description: ' Request of DescribeSubscribersForNotification '
  UpdateBudgetResponse:
    type: object
    properties: {}
    description: ' Response of UpdateBudget '
  UpdateBudgetRequest:
    type: object
    required:
      - AccountId
      - NewBudget
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget that you want to update.
      NewBudget:
        $ref: '#/definitions/Budget'
        description: The budget that you want to update your budget to.
    description: ' Request of UpdateBudget '
  UpdateNotificationResponse:
    type: object
    properties: {}
    description: ' Response of UpdateNotification '
  UpdateNotificationRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - OldNotification
      - NewNotification
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose notification you want to update.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose notification you want to update.
      OldNotification:
        $ref: '#/definitions/Notification'
        description: The previous notification associated with a budget.
      NewNotification:
        $ref: '#/definitions/Notification'
        description: The updated notification to be associated with a budget.
    description: ' Request of UpdateNotification '
  UpdateSubscriberResponse:
    type: object
    properties: {}
    description: ' Response of UpdateSubscriber '
  UpdateSubscriberRequest:
    type: object
    required:
      - AccountId
      - BudgetName
      - Notification
      - OldSubscriber
      - NewSubscriber
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The <code>accountId</code> that is associated with the budget whose subscriber you want to update.
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: The name of the budget whose subscriber you want to update.
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification whose subscriber you want to update.
      OldSubscriber:
        $ref: '#/definitions/Subscriber'
        description: The previous subscriber associated with a budget notification.
      NewSubscriber:
        $ref: '#/definitions/Subscriber'
        description: The updated subscriber associated with a budget notification.
    description: ' Request of UpdateSubscriber '
  AccountId:
    type: string
    description: The account ID of the customer. It should be a 12 digit number.
    minLength: 12
    maxLength: 12
  BudgetName:
    type: string
    pattern: '[^:\\]+'
    description: ' A string represents the budget name. No ":" and "\" character is allowed.'
    maxLength: 100
  Spend:
    type: object
    required:
      - Amount
      - Unit
    properties:
      Amount:
        $ref: '#/definitions/NumericValue'
        description: 'The cost or usage amount associated with a budget forecast, actual spend, or budget threshold.'
      Unit:
        $ref: '#/definitions/UnitValue'
        description: 'The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB.'
    description: '<p>The amount of cost or usage being measured for a budget.</p> <p>For example, a <code>Spend</code> for <code>3 GB</code> of S3 usage would have the following parameters:</p> <ul> <li> <p>An <code>Amount</code> of <code>3</code> </p> </li> <li> <p>A <code>unit</code> of <code>GB</code> </p> </li> </ul>'
  CostFilters:
    type: array
    description: ' A map that represents the cost filters applied to the budget.'
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/GenericString'
        value:
          $ref: '#/definitions/DimensionValues'
  CostTypes:
    type: object
    properties:
      IncludeTax:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes taxes.</p> <p>The default value is <code>true</code>.</p>
      IncludeSubscription:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes subscriptions.</p> <p>The default value is <code>true</code>.</p>
      UseBlended:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget uses blended rate.</p> <p>The default value is <code>false</code>.</p>
      IncludeRefund:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes refunds.</p> <p>The default value is <code>true</code>.</p>
      IncludeCredit:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes credits.</p> <p>The default value is <code>true</code>.</p>
      IncludeUpfront:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes upfront RI costs.</p> <p>The default value is <code>true</code>.</p>
      IncludeRecurring:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p> <p>The default value is <code>true</code>.</p>
      IncludeOtherSubscription:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes non-RI subscription costs.</p> <p>The default value is <code>true</code>.</p>
      IncludeSupport:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes support subscription fees.</p> <p>The default value is <code>true</code>.</p>
      IncludeDiscount:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget includes discounts.</p> <p>The default value is <code>true</code>.</p>
      UseAmortized:
        $ref: '#/definitions/NullableBoolean'
        description: <p>Specifies whether a budget uses the amortized rate.</p> <p>The default value is <code>false</code>.</p>
    description: 'The types of cost included in a budget, such as tax and subscriptions.'
  TimeUnit:
    type: string
    enum:
      - DAILY
      - MONTHLY
      - QUARTERLY
      - ANNUALLY
    description: ' The time unit of the budget. e.g. MONTHLY, QUARTERLY, etc.'
  TimePeriod:
    type: object
    properties:
      Start:
        $ref: '#/definitions/GenericTimestamp'
        description: '<p>The start date for a budget. If you created your budget and didn''t specify a start date, AWS defaults to the start of your chosen time period (i.e. DAILY, MONTHLY, QUARTERLY, ANNUALLY). For example, if you created your budget on January 24th 2018, chose <code>DAILY</code>, and didn''t set a start date, AWS set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API.</p> <p>You can change your start date with the <code>UpdateBudget</code> operation.</p>'
      End:
        $ref: '#/definitions/GenericTimestamp'
        description: '<p>The end date for a budget. If you didn''t specify an end date, AWS set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API.</p> <p>After the end date, AWS deletes the budget and all associated notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> operation.</p>'
    description: 'The period of time covered by a budget. Has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date. '
  CalculatedSpend:
    type: object
    required:
      - ActualSpend
    properties:
      ActualSpend:
        $ref: '#/definitions/Spend'
        description: 'The amount of cost, usage, or RI units that you have used.'
      ForecastedSpend:
        $ref: '#/definitions/Spend'
        description: 'The amount of cost, usage, or RI units that you are forecasted to use.'
    description: '<p>The spend objects associated with this budget. The <code>actualSpend</code> tracks how much you''ve used, cost, usage, or RI units, and the <code>forecastedSpend</code> tracks how much you are predicted to spend if your current usage remains steady.</p> <p>For example, if it is the 20th of the month and you have spent <code>50</code> dollars on Amazon EC2, your <code>actualSpend</code> is <code>50 USD</code>, and your <code>forecastedSpend</code> is <code>75 USD</code>.</p>'
  BudgetType:
    type: string
    enum:
      - USAGE
      - COST
      - RI_UTILIZATION
      - RI_COVERAGE
    description: ' The type of a budget. It should be COST, USAGE, or RI_UTILIZATION.'
  Budget:
    type: object
    required:
      - BudgetName
      - TimeUnit
      - BudgetType
    properties:
      BudgetName:
        $ref: '#/definitions/BudgetName'
        description: 'The name of a budget. Unique within accounts. <code>:</code> and <code>\</code> characters are not allowed in the <code>BudgetName</code>.'
      BudgetLimit:
        $ref: '#/definitions/Spend'
        description: '<p>The total amount of cost, usage, or RI utilization that you want to track with your budget.</p> <p> <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI utilization budgets. RI utilization budgets default to the only valid value for RI utilization budgets, which is <code>100</code>.</p>'
      CostFilters:
        $ref: '#/definitions/CostFilters'
        description: 'The cost filters applied to a budget, such as service or region.'
      CostTypes:
        $ref: '#/definitions/CostTypes'
        description: The types of costs included in this budget.
      TimeUnit:
        $ref: '#/definitions/TimeUnit'
        description: The length of time until a budget resets the actual and forecasted spend.
      TimePeriod:
        $ref: '#/definitions/TimePeriod'
        description: '<p>The period of time covered by a budget. Has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date. </p> <p>If you created your budget and didn''t specify a start date, AWS defaults to the start of your chosen time period (i.e. DAILY, MONTHLY, QUARTERLY, ANNUALLY). For example, if you created your budget on January 24th 2018, chose <code>DAILY</code>, and didn''t set a start date, AWS set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to <code>01/01/18 00:00 UTC</code>. If you didn''t specify an end date, AWS set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost Management console and the API. </p> <p>You can change either date with the <code>UpdateBudget</code> operation.</p> <p>After the end date, AWS deletes the budget and all associated notifications and subscribers.</p>'
      CalculatedSpend:
        $ref: '#/definitions/CalculatedSpend'
        description: The actual and forecasted cost or usage being tracked by a budget.
      BudgetType:
        $ref: '#/definitions/BudgetType'
        description: 'Whether this budget tracks monetary costs, usage, or RI utilization.'
    description: '<p>Represents the output of the <code>CreateBudget</code> operation. The content consists of the detailed metadata and data file information, and the current status of the <code>budget</code>.</p> <p>The ARN pattern for a budget is: <code>arn:aws:budgetservice::AccountId:budget/budgetName</code> </p>'
  Budgets:
    type: array
    description: ' A list of budgets'
    items:
      $ref: '#/definitions/Budget'
  ComparisonOperator:
    type: string
    enum:
      - GREATER_THAN
      - LESS_THAN
      - EQUAL_TO
    description: ' The comparison operator of a notification. Currently we support less than, equal to and greater than.'
  GenericString:
    type: string
    description: ' A generic String.'
  DimensionValues:
    type: array
    items:
      $ref: '#/definitions/GenericString'
  NullableBoolean:
    type: boolean
  NotificationWithSubscribersList:
    type: array
    description: ' A list of Notifications, each with a list of subscribers.'
    items:
      $ref: '#/definitions/NotificationWithSubscribers'
    maxItems: 5
  Notification:
    type: object
    required:
      - NotificationType
      - ComparisonOperator
      - Threshold
    properties:
      NotificationType:
        $ref: '#/definitions/NotificationType'
        description: Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for how much you are forecasted to spend (<code>FORECASTED</code>).
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: The comparison used for this notification.
      Threshold:
        $ref: '#/definitions/NotificationThreshold'
        description: The threshold associated with a notification. Thresholds are always a percentage.
      ThresholdType:
        $ref: '#/definitions/ThresholdType'
        description: 'The type of threshold for a notification. For <code>ACTUAL</code> thresholds, AWS notifies you when you go over the threshold, and for <code>FORECASTED</code> thresholds AWS notifies you when you are forecasted to go over the threshold.'
    description: '<p>A notification associated with a budget. A budget can have up to five notifications. </p> <p>Each notification must have at least one subscriber. A notification can have one SNS subscriber and up to ten email subscribers, for a total of 11 subscribers.</p> <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160 dollars, create a notification with the following parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A comparisonOperator of <code>GREATER_THAN</code> </p> </li> <li> <p>A notification threshold of <code>80</code> </p> </li> </ul>'
  Subscribers:
    type: array
    description: ' A list of subscribers.'
    items:
      $ref: '#/definitions/Subscriber'
    minItems: 1
    maxItems: 11
  Subscriber:
    type: object
    required:
      - SubscriptionType
      - Address
    properties:
      SubscriptionType:
        $ref: '#/definitions/SubscriptionType'
        description: The type of notification that AWS sends to a subscriber.
      Address:
        $ref: '#/definitions/SubscriberAddress'
        description: 'The address that AWS sends budget notifications to, either an SNS topic or an email.'
    description: '<p>The subscriber to a budget notification. The subscriber consists of a subscription type and either an Amazon Simple Notification Service topic or an email address.</p> <p>For example, an email subscriber would have the following parameters:</p> <ul> <li> <p>A <code>subscriptionType</code> of <code>EMAIL</code> </p> </li> <li> <p>An <code>address</code> of <code>example@example.com</code> </p> </li> </ul>'
  errorMessage:
    type: string
    description: The error message the exception carries.
  MaxResults:
    type: integer
    description: ' An integer to represent how many entries a paginated response contains. Maximum is set to 100.'
    minimum: 1
    maximum: 100
  Notifications:
    type: array
    description: ' A list of notifications.'
    items:
      $ref: '#/definitions/Notification'
  GenericTimestamp:
    type: string
    description: ' A generic timestamp. In Java it is transformed to a Date object.'
    format: date-time
  NotificationType:
    type: string
    enum:
      - ACTUAL
      - FORECASTED
    description: ' The type of a notification. It should be ACTUAL or FORECASTED.'
  NotificationThreshold:
    type: number
    description: ' The threshold of a notification. It should be a number between 0 and 1,000,000,000.'
    format: double
    minimum: 0.1
    maximum: 1000000000
  ThresholdType:
    type: string
    enum:
      - PERCENTAGE
      - ABSOLUTE_VALUE
    description: ' The type of threshold for a notification. It can be PERCENTAGE or ABSOLUTE_VALUE.'
  NotificationWithSubscribers:
    type: object
    required:
      - Notification
      - Subscribers
    properties:
      Notification:
        $ref: '#/definitions/Notification'
        description: The notification associated with a budget.
      Subscribers:
        $ref: '#/definitions/Subscribers'
        description: A list of subscribers who are subscribed to this notification.
    description: 'A notification with subscribers. A notification can have one SNS subscriber and up to ten email subscribers, for a total of 11 subscribers.'
  NumericValue:
    type: string
    pattern: '([0-9]*\.)?[0-9]+'
    description: ' A string to represent NumericValue.'
  UnitValue:
    type: string
    description: ' A string to represent budget spend unit. It should be not null and not empty.'
    minLength: 1
  SubscriptionType:
    type: string
    enum:
      - SNS
      - EMAIL
    description: ' The subscription type of the subscriber. It can be SMS or EMAIL.'
  SubscriberAddress:
    type: string
    description: ' String containing email or sns topic for the subscriber address.'
    minLength: 1
