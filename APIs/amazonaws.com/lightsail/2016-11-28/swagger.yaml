swagger: '2.0'
info:
  version: '2016-11-28'
  x-release: v4
  title: Amazon Lightsail
  description: '<p>Amazon Lightsail is the easiest way to get started with AWS for developers who just need virtual private servers. Lightsail includes everything you need to launch your project quickly - a virtual machine, SSD-based storage, data transfer, DNS management, and a static IP - for a low, predictable price. You manage those Lightsail servers through the Lightsail console or by using the API or command-line interface (CLI).</p> <p>For more information about Lightsail concepts and tasks, see the <a href="https://lightsail.aws.amazon.com/ls/docs/all">Lightsail Dev Guide</a>.</p> <p>To use the Lightsail API or the CLI, you will need to use AWS Identity and Access Management (IAM) to generate access keys. For details about how to set this up, see the <a href="http://lightsail.aws.amazon.com/ls/docs/how-to/article/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli">Lightsail Dev Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: lightsail
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lightsail-2016-11-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/lightsail/'
host: lightsail.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AllocateStaticIp
      description: Allocates a static IP address.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AllocateStaticIpResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AllocateStaticIpRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachDisk':
    post:
      operationId: AttachDisk
      description: Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachDiskResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachDiskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachInstancesToLoadBalancer':
    post:
      operationId: AttachInstancesToLoadBalancer
      description: '<p>Attaches one or more Lightsail instances to a load balancer.</p> <p>After some time, the instances are attached to the load balancer and the health check status is available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachInstancesToLoadBalancerResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachInstancesToLoadBalancerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachLoadBalancerTlsCertificate':
    post:
      operationId: AttachLoadBalancerTlsCertificate
      description: '<p>Attaches a Transport Layer Security (TLS) certificate to your load balancer. TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>Once you create and validate your certificate, you can attach it to your load balancer. You can also use this API to rotate the certificates on your account. Use the <code>AttachLoadBalancerTlsCertificate</code> operation with the non-attached certificate, and it will replace the existing one and become the attached certificate.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachLoadBalancerTlsCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AttachStaticIp':
    post:
      operationId: AttachStaticIp
      description: Attaches a static IP address to a specific Amazon Lightsail instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachStaticIpResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachStaticIpRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CloseInstancePublicPorts':
    post:
      operationId: CloseInstancePublicPorts
      description: Closes the public ports on a specific Amazon Lightsail instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CloseInstancePublicPortsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CloseInstancePublicPortsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDisk':
    post:
      operationId: CreateDisk
      description: 'Creates a block storage disk that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail">Regions and Availability Zones in Lightsail</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDiskResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDiskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDiskFromSnapshot':
    post:
      operationId: CreateDiskFromSnapshot
      description: 'Creates a block storage disk from a disk snapshot that can be attached to a Lightsail instance in the same Availability Zone (e.g., <code>us-east-2a</code>). The disk is created in the regional endpoint that you send the HTTP request to. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail">Regions and Availability Zones in Lightsail</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDiskFromSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDiskFromSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDiskSnapshot':
    post:
      operationId: CreateDiskSnapshot
      description: '<p>Creates a snapshot of a block storage disk. You can use snapshots for backups, to make copies of disks, and to save data before shutting down a Lightsail instance.</p> <p>You can take a snapshot of an attached disk that is in use; however, snapshots only capture data that has been written to your disk at the time the snapshot command is issued. This may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the disk long enough to take a snapshot, your snapshot should be complete. Nevertheless, if you cannot pause all file writes to the disk, you should unmount the disk from within the Lightsail instance, issue the create disk snapshot command, and then remount the disk to ensure a consistent and complete snapshot. You may remount and use your disk while the snapshot status is pending.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDiskSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDiskSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDomain':
    post:
      operationId: CreateDomain
      description: 'Creates a domain resource for the specified domain (e.g., example.com).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDomainResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDomainRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDomainEntry':
    post:
      operationId: CreateDomainEntry
      description: 'Creates one of the following entry records associated with the domain: A record, CNAME record, TXT record, or MX record.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDomainEntryResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDomainEntryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateInstanceSnapshot':
    post:
      operationId: CreateInstanceSnapshot
      description: 'Creates a snapshot of a specific virtual private server, or <i>instance</i>. You can use a snapshot to create a new instance that is based on that snapshot.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInstanceSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInstanceSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateInstances':
    post:
      operationId: CreateInstances
      description: 'Creates one or more Amazon Lightsail virtual private servers, or <i>instances</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInstancesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInstancesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateInstancesFromSnapshot':
    post:
      operationId: CreateInstancesFromSnapshot
      description: Uses a specific snapshot as a blueprint for creating one or more new instances that are based on that identical configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInstancesFromSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInstancesFromSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateKeyPair':
    post:
      operationId: CreateKeyPair
      description: Creates sn SSH key pair.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateKeyPairResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeyPairRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLoadBalancer':
    post:
      operationId: CreateLoadBalancer
      description: '<p>Creates a Lightsail load balancer. To learn more about deciding whether to load balance your application, see <a href="https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing">Configure your Lightsail instances for load balancing</a>. You can create up to 5 load balancers per AWS Region in your account.</p> <p>When you create a load balancer, you can specify a unique name and port settings. To change additional load balancer settings, use the <code>UpdateLoadBalancerAttribute</code> operation.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLoadBalancerTlsCertificate':
    post:
      operationId: CreateLoadBalancerTlsCertificate
      description: '<p>Creates a Lightsail load balancer TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerTlsCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDisk':
    post:
      operationId: DeleteDisk
      description: <p>Deletes the specified block storage disk. The disk must be in the <code>available</code> state (not attached to a Lightsail instance).</p> <note> <p>The disk may remain in the <code>deleting</code> state for several minutes.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDiskResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDiskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDiskSnapshot':
    post:
      operationId: DeleteDiskSnapshot
      description: '<p>Deletes the specified disk snapshot.</p> <p>When you make periodic snapshots of a disk, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the disk.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDiskSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDiskSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDomain':
    post:
      operationId: DeleteDomain
      description: Deletes the specified domain recordset and all of its domain records.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDomainResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDomainRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDomainEntry':
    post:
      operationId: DeleteDomainEntry
      description: Deletes a specific domain entry.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDomainEntryResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDomainEntryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteInstance':
    post:
      operationId: DeleteInstance
      description: 'Deletes a specific Amazon Lightsail virtual private server, or <i>instance</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInstanceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteInstanceSnapshot':
    post:
      operationId: DeleteInstanceSnapshot
      description: Deletes a specific snapshot of a virtual private server (or <i>instance</i>).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInstanceSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteInstanceSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteKeyPair':
    post:
      operationId: DeleteKeyPair
      description: Deletes a specific SSH key pair.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteKeyPairResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteKeyPairRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteLoadBalancer':
    post:
      operationId: DeleteLoadBalancer
      description: 'Deletes a Lightsail load balancer and all its associated SSL/TLS certificates. Once the load balancer is deleted, you will need to create a new load balancer, create a new certificate, and verify domain ownership again.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteLoadBalancerTlsCertificate':
    post:
      operationId: DeleteLoadBalancerTlsCertificate
      description: Deletes an SSL/TLS certificate associated with a Lightsail load balancer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerTlsCertificateResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerTlsCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachDisk':
    post:
      operationId: DetachDisk
      description: Detaches a stopped block storage disk from a Lightsail instance. Make sure to unmount any file systems on the device within your operating system before stopping the instance and detaching the disk.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachDiskResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachDiskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachInstancesFromLoadBalancer':
    post:
      operationId: DetachInstancesFromLoadBalancer
      description: <p>Detaches the specified instances from a Lightsail load balancer.</p> <p>This operation waits until the instances are no longer needed before they are detached from the load balancer.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachInstancesFromLoadBalancerResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachInstancesFromLoadBalancerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DetachStaticIp':
    post:
      operationId: DetachStaticIp
      description: Detaches a static IP from the Amazon Lightsail instance to which it is attached.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachStaticIpResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachStaticIpRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DownloadDefaultKeyPair':
    post:
      operationId: DownloadDefaultKeyPair
      description: Downloads the default SSH key pair from the user's account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DownloadDefaultKeyPairResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DownloadDefaultKeyPairRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetActiveNames':
    post:
      operationId: GetActiveNames
      description: Returns the names of all active (not deleted) resources.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetActiveNamesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetActiveNamesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetBlueprints':
    post:
      operationId: GetBlueprints
      description: 'Returns the list of available instance images, or <i>blueprints</i>. You can use a blueprint to create a new virtual private server already running a specific operating system, as well as a preinstalled app or development stack. The software each instance is running depends on the blueprint image you choose.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBlueprintsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBlueprintsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetBundles':
    post:
      operationId: GetBundles
      description: Returns the list of bundles that are available for purchase. A bundle describes the specs for your virtual private server (or <i>instance</i>).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBundlesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBundlesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDisk':
    post:
      operationId: GetDisk
      description: Returns information about a specific block storage disk.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiskResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDiskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDiskSnapshot':
    post:
      operationId: GetDiskSnapshot
      description: Returns information about a specific block storage disk snapshot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiskSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDiskSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDiskSnapshots':
    post:
      operationId: GetDiskSnapshots
      description: '<p>Returns information about all block storage disk snapshots in your AWS account and region.</p> <p>If you are describing a long list of disk snapshots, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDiskSnapshotsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDiskSnapshotsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDisks':
    post:
      operationId: GetDisks
      description: '<p>Returns information about all block storage disks in your AWS account and region.</p> <p>If you are describing a long list of disks, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDisksResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDisksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDomain':
    post:
      operationId: GetDomain
      description: Returns information about a specific domain recordset.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDomainResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDomainRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDomains':
    post:
      operationId: GetDomains
      description: Returns a list of all domains in the user's account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDomainsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDomainsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstance':
    post:
      operationId: GetInstance
      description: 'Returns information about a specific Amazon Lightsail instance, which is a virtual private server.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceAccessDetails':
    post:
      operationId: GetInstanceAccessDetails
      description: 'Returns temporary SSH keys you can use to connect to a specific virtual private server, or <i>instance</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceAccessDetailsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceAccessDetailsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceMetricData':
    post:
      operationId: GetInstanceMetricData
      description: 'Returns the data points for the specified Amazon Lightsail instance metric, given an instance name.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceMetricDataResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceMetricDataRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstancePortStates':
    post:
      operationId: GetInstancePortStates
      description: 'Returns the port states for a specific virtual private server, or <i>instance</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstancePortStatesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstancePortStatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceSnapshot':
    post:
      operationId: GetInstanceSnapshot
      description: Returns information about a specific instance snapshot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceSnapshotResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceSnapshotRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceSnapshots':
    post:
      operationId: GetInstanceSnapshots
      description: Returns all instance snapshots for the user's account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceSnapshotsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceSnapshotsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceState':
    post:
      operationId: GetInstanceState
      description: Returns the state of a specific instance. Works on one instance at a time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceStateResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceStateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstances':
    post:
      operationId: GetInstances
      description: 'Returns information about all Amazon Lightsail virtual private servers, or <i>instances</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstancesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstancesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetKeyPair':
    post:
      operationId: GetKeyPair
      description: Returns information about a specific key pair.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetKeyPairResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetKeyPairRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetKeyPairs':
    post:
      operationId: GetKeyPairs
      description: Returns information about all key pairs in the user's account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetKeyPairsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetKeyPairsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetLoadBalancer':
    post:
      operationId: GetLoadBalancer
      description: Returns information about the specified Lightsail load balancer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoadBalancerResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoadBalancerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetLoadBalancerMetricData':
    post:
      operationId: GetLoadBalancerMetricData
      description: Returns information about health metrics for your Lightsail load balancer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoadBalancerMetricDataResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoadBalancerMetricDataRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetLoadBalancerTlsCertificates':
    post:
      operationId: GetLoadBalancerTlsCertificates
      description: '<p>Returns information about the TLS certificates that are associated with the specified Lightsail load balancer.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p> <p>You can have a maximum of 2 certificates associated with a Lightsail load balancer. One is active and the other is inactive.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoadBalancerTlsCertificatesResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoadBalancerTlsCertificatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetLoadBalancers':
    post:
      operationId: GetLoadBalancers
      description: '<p>Returns information about all load balancers in an account.</p> <p>If you are describing a long list of load balancers, you can paginate the output to make the list more manageable. You can use the pageToken and nextPageToken values to retrieve the next items in the list.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoadBalancersResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLoadBalancersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetOperation':
    post:
      operationId: GetOperation
      description: 'Returns information about a specific operation. Operations include events such as when you create an instance, allocate a static IP, attach a static IP, and so on.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOperationResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOperationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetOperations':
    post:
      operationId: GetOperations
      description: '<p>Returns information about all operations.</p> <p>Results are returned from oldest to newest, up to a maximum of 200. Results can be paged by making each subsequent call to <code>GetOperations</code> use the maximum (last) <code>statusChangedAt</code> value from the previous request.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOperationsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOperationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetOperationsForResource':
    post:
      operationId: GetOperationsForResource
      description: 'Gets operations for a specific resource (e.g., an instance or a static IP).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOperationsForResourceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetOperationsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetRegions':
    post:
      operationId: GetRegions
      description: Returns a list of all valid regions for Amazon Lightsail. Use the <code>include availability zones</code> parameter to also return the availability zones in a region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRegionsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetRegionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetStaticIp':
    post:
      operationId: GetStaticIp
      description: Returns information about a specific static IP.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStaticIpResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetStaticIpRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetStaticIps':
    post:
      operationId: GetStaticIps
      description: Returns information about all static IPs in the user's account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStaticIpsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetStaticIpsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ImportKeyPair':
    post:
      operationId: ImportKeyPair
      description: Imports a public SSH key from a specific key pair.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportKeyPairResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportKeyPairRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#IsVpcPeered':
    post:
      operationId: IsVpcPeered
      description: Returns a Boolean value indicating whether your Lightsail VPC is peered.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IsVpcPeeredResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/IsVpcPeeredRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#OpenInstancePublicPorts':
    post:
      operationId: OpenInstancePublicPorts
      description: Adds public ports to an Amazon Lightsail instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OpenInstancePublicPortsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OpenInstancePublicPortsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PeerVpc':
    post:
      operationId: PeerVpc
      description: Tries to peer the Lightsail VPC with the user's default VPC.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PeerVpcResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PeerVpcRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutInstancePublicPorts':
    post:
      operationId: PutInstancePublicPorts
      description: 'Sets the specified open ports for an Amazon Lightsail instance, and closes all ports for every protocol not included in the current request.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInstancePublicPortsResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutInstancePublicPortsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RebootInstance':
    post:
      operationId: RebootInstance
      description: 'Restarts a specific instance. When your Amazon Lightsail instance is finished rebooting, Lightsail assigns a new public IP address. To use the same IP address after restarting, create a static IP address and attach it to the instance.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootInstanceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebootInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ReleaseStaticIp':
    post:
      operationId: ReleaseStaticIp
      description: Deletes a specific static IP from your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReleaseStaticIpResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReleaseStaticIpRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartInstance':
    post:
      operationId: StartInstance
      description: 'Starts a specific Amazon Lightsail instance from a stopped state. To restart an instance, use the reboot instance operation.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartInstanceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopInstance':
    post:
      operationId: StopInstance
      description: Stops a specific Amazon Lightsail instance that is currently running.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopInstanceResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UnpeerVpc':
    post:
      operationId: UnpeerVpc
      description: Attempts to unpeer the Lightsail VPC from the user's default VPC.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnpeerVpcResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnpeerVpcRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDomainEntry':
    post:
      operationId: UpdateDomainEntry
      description: Updates a domain recordset after it is created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDomainEntryResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDomainEntryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateLoadBalancerAttribute':
    post:
      operationId: UpdateLoadBalancerAttribute
      description: Updates the specified attribute for a load balancer. You can only update one attribute at a time.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLoadBalancerAttributeResult'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: OperationFailureException
          schema:
            $ref: '#/definitions/OperationFailureException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: AccountSetupInProgressException
          schema:
            $ref: '#/definitions/AccountSetupInProgressException'
        '486':
          description: UnauthenticatedException
          schema:
            $ref: '#/definitions/UnauthenticatedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLoadBalancerAttributeRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AllocateStaticIpResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the static IP address you allocated.
  AllocateStaticIpRequest:
    type: object
    required:
      - staticIpName
    properties:
      staticIpName:
        $ref: '#/definitions/ResourceName'
        description: The name of the static IP address.
  ServiceException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: A general service exception.
  InvalidInputException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: '<p>Lightsail throws this exception when user input does not conform to the validation rules of an input field.</p> <note> <p>Domain-related APIs are only available in the N. Virginia (us-east-1) Region. Please set your AWS Region configuration to us-east-1 to create, view, or edit these resources.</p> </note>'
  NotFoundException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: Lightsail throws this exception when it cannot find a resource.
  OperationFailureException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: Lightsail throws this exception when an operation fails to execute.
  AccessDeniedException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: Lightsail throws this exception when the user cannot be authenticated or uses invalid credentials to access a resource.
  AccountSetupInProgressException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: Lightsail throws this exception when an account is still in the setup in progress state.
  UnauthenticatedException:
    type: object
    properties:
      code:
        $ref: '#/definitions/string'
      docs:
        $ref: '#/definitions/string'
      message:
        $ref: '#/definitions/string'
      tip:
        $ref: '#/definitions/string'
    description: Lightsail throws this exception when the user has not been authenticated.
  AttachDiskResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  AttachDiskRequest:
    type: object
    required:
      - diskName
      - instanceName
      - diskPath
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the Lightsail instance where you want to utilize the storage disk.
      diskPath:
        $ref: '#/definitions/NonEmptyString'
        description: 'The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).'
  AttachInstancesToLoadBalancerResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object representing the API operations.
  AttachInstancesToLoadBalancerRequest:
    type: object
    required:
      - loadBalancerName
      - instanceNames
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer.
      instanceNames:
        $ref: '#/definitions/ResourceNameList'
        description: '<p>An array of strings representing the instance name(s) you want to attach to your load balancer.</p> <p>An instance must be <code>running</code> before you can attach it to your load balancer.</p> <p>There are no additional limits on the number of instances you can attach to your load balancer, aside from the limit of Lightsail instances you can create in your account (20).</p>'
  AttachLoadBalancerTlsCertificateResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: <p>An object representing the API operations.</p> <p>These SSL/TLS certificates are only usable by Lightsail load balancers. You can't get the certificate and use it for another purpose.</p>
  AttachLoadBalancerTlsCertificateRequest:
    type: object
    required:
      - loadBalancerName
      - certificateName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer to which you want to associate the SSL/TLS certificate.
      certificateName:
        $ref: '#/definitions/ResourceName'
        description: The name of your SSL/TLS certificate.
  AttachStaticIpResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about your API operations.
  AttachStaticIpRequest:
    type: object
    required:
      - staticIpName
      - instanceName
    properties:
      staticIpName:
        $ref: '#/definitions/ResourceName'
        description: The name of the static IP.
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The instance name to which you want to attach the static IP address.
  CloseInstancePublicPortsResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs that contains information about the operation.
  CloseInstancePublicPortsRequest:
    type: object
    required:
      - portInfo
      - instanceName
    properties:
      portInfo:
        $ref: '#/definitions/PortInfo'
        description: Information about the public port you are trying to close.
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance on which you're attempting to close the public ports.
  CreateDiskResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  CreateDiskRequest:
    type: object
    required:
      - diskName
      - availabilityZone
      - sizeInGb
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
      availabilityZone:
        $ref: '#/definitions/NonEmptyString'
        description: '<p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</p> <p>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</p>'
      sizeInGb:
        $ref: '#/definitions/integer'
        description: 'The size of the disk in GB (e.g., <code>32</code>).'
  CreateDiskFromSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  CreateDiskFromSnapshotRequest:
    type: object
    required:
      - diskName
      - diskSnapshotName
      - availabilityZone
      - sizeInGb
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique Lightsail disk name (e.g., <code>my-disk</code>).'
      diskSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the disk snapshot (e.g., <code>my-snapshot</code>) from which to create the new storage disk.'
      availabilityZone:
        $ref: '#/definitions/NonEmptyString'
        description: '<p>The Availability Zone where you want to create the disk (e.g., <code>us-east-2a</code>). Choose the same Availability Zone as the Lightsail instance where you want to create the disk.</p> <p>Use the GetRegions operation to list the Availability Zones where Lightsail is currently available.</p>'
      sizeInGb:
        $ref: '#/definitions/integer'
        description: 'The size of the disk in GB (e.g., <code>32</code>).'
  CreateDiskSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  CreateDiskSnapshotRequest:
    type: object
    required:
      - diskName
      - diskSnapshotName
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique name of the source disk (e.g., <code>my-source-disk</code>).'
      diskSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the destination disk snapshot (e.g., <code>my-disk-snapshot</code>) based on the source disk.'
  CreateDomainResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the domain resource you created.
  CreateDomainRequest:
    type: object
    required:
      - domainName
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: '<p>The domain name to manage (e.g., <code>example.com</code>).</p> <note> <p>You cannot register a new domain name using Lightsail. You must register a domain name using Amazon Route 53 or another domain name registrar. If you have already registered your domain, you can enter its name in this parameter to manage the DNS records for that domain.</p> </note>'
  CreateDomainEntryResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the operation.
  CreateDomainEntryRequest:
    type: object
    required:
      - domainName
      - domainEntry
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: 'The domain name (e.g., <code>example.com</code>) for which you want to create the domain entry.'
      domainEntry:
        $ref: '#/definitions/DomainEntry'
        description: An array of key-value pairs containing information about the domain entry request.
  CreateInstanceSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your create instances snapshot request.
  CreateInstanceSnapshotRequest:
    type: object
    required:
      - instanceSnapshotName
      - instanceName
    properties:
      instanceSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: The name for your new snapshot.
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The Lightsail instance on which to base your snapshot.
  CreateInstancesResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your create instances request.
  CreateInstancesRequest:
    type: object
    required:
      - instanceNames
      - availabilityZone
      - blueprintId
      - bundleId
    properties:
      instanceNames:
        $ref: '#/definitions/StringList'
        description: 'The names to use for your new Lightsail instances. Separate multiple values using quotation marks and commas, for example: <code>["MyFirstInstance","MySecondInstance"]</code> '
      availabilityZone:
        $ref: '#/definitions/string'
        description: 'The Availability Zone in which to create your instance. Use the following format: <code>us-east-2a</code> (case sensitive). You can get a list of availability zones by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get regions</a> operation. Be sure to add the <code>include availability zones</code> parameter to your request.'
      customImageName:
        $ref: '#/definitions/ResourceName'
        description: '<p>(Deprecated) The name for your custom image.</p> <note> <p>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.</p> </note>'
      blueprintId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>). Use the get blueprints operation to return a list of available images (or <i>blueprints</i>).'
      bundleId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The bundle of specification information for your virtual private server (or <i>instance</i>), including the pricing plan (e.g., <code>micro_1_0</code>).'
      userData:
        $ref: '#/definitions/string'
        description: '<p>A launch script you can create that configures a server with additional user data. For example, you might want to run <code>apt-get -y update</code>.</p> <note> <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev Guide</a>.</p> </note>'
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name of your key pair.
  CreateInstancesFromSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your create instances from snapshot request.
  CreateInstancesFromSnapshotRequest:
    type: object
    required:
      - instanceNames
      - availabilityZone
      - instanceSnapshotName
      - bundleId
    properties:
      instanceNames:
        $ref: '#/definitions/StringList'
        description: The names for your new instances.
      attachedDiskMapping:
        $ref: '#/definitions/AttachedDiskMap'
        description: An object containing information about one or more disk mappings.
      availabilityZone:
        $ref: '#/definitions/string'
        description: 'The Availability Zone where you want to create your instances. Use the following formatting: <code>us-east-2a</code> (case sensitive). You can get a list of availability zones by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get regions</a> operation. Be sure to add the <code>include availability zones</code> parameter to your request.'
      instanceSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance snapshot on which you are basing your new instances. Use the get instance snapshots operation to return information about your existing snapshots.
      bundleId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The bundle of specification information for your virtual private server (or <i>instance</i>), including the pricing plan (e.g., <code>micro_1_0</code>).'
      userData:
        $ref: '#/definitions/string'
        description: '<p>You can create a launch script that configures a server with additional user data. For example, <code>apt-get -y update</code>.</p> <note> <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="http://lightsail.aws.amazon.com/ls/docs/getting-started/articles/pre-installed-apps">Dev Guide</a>.</p> </note>'
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name for your key pair.
  CreateKeyPairResult:
    type: object
    properties:
      keyPair:
        $ref: '#/definitions/KeyPair'
        description: An array of key-value pairs containing information about the new key pair you just created.
      publicKeyBase64:
        $ref: '#/definitions/Base64'
        description: A base64-encoded public key of the <code>ssh-rsa</code> type.
      privateKeyBase64:
        $ref: '#/definitions/Base64'
        description: A base64-encoded RSA private key.
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the results of your create key pair request.
  CreateKeyPairRequest:
    type: object
    required:
      - keyPairName
    properties:
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name for your new key pair.
  CreateLoadBalancerResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object containing information about the API operations.
  CreateLoadBalancerRequest:
    type: object
    required:
      - loadBalancerName
      - instancePort
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of your load balancer.
      instancePort:
        $ref: '#/definitions/Port'
        description: The instance port where you're creating your load balancer.
      healthCheckPath:
        $ref: '#/definitions/string'
        description: '<p>The path you provided to perform the load balancer health check. If you didn''t specify a health check path, Lightsail uses the root path of your website (e.g., <code>"/"</code>).</p> <p>You may want to specify a custom health check path other than the root of your application if your home page loads slowly or has a lot of media or scripting on it.</p>'
      certificateName:
        $ref: '#/definitions/ResourceName'
        description: '<p>The name of the SSL/TLS certificate.</p> <p>If you specify <code>certificateName</code>, then <code>certificateDomainName</code> is required (and vice-versa).</p>'
      certificateDomainName:
        $ref: '#/definitions/DomainName'
        description: '<p>The domain name with which your certificate is associated (e.g., <code>example.com</code>).</p> <p>If you specify <code>certificateDomainName</code>, then <code>certificateName</code> is required (and vice-versa).</p>'
      certificateAlternativeNames:
        $ref: '#/definitions/DomainNameList'
        description: 'The optional alternative domains and subdomains to use with your SSL/TLS certificate (e.g., <code>www.example.com</code>, <code>example.com</code>, <code>m.example.com</code>, <code>blog.example.com</code>).'
  CreateLoadBalancerTlsCertificateResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object containing information about the API operations.
  CreateLoadBalancerTlsCertificateRequest:
    type: object
    required:
      - loadBalancerName
      - certificateName
      - certificateDomainName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The load balancer name where you want to create the SSL/TLS certificate.
      certificateName:
        $ref: '#/definitions/ResourceName'
        description: '<p>The SSL/TLS certificate name.</p> <p>You can have up to 10 certificates in your account at one time. Each Lightsail load balancer can have up to 2 certificates associated with it at one time. There is also an overall limit to the number of certificates that can be issue in a 365-day period. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>.</p>'
      certificateDomainName:
        $ref: '#/definitions/DomainName'
        description: 'The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.'
      certificateAlternativeNames:
        $ref: '#/definitions/DomainNameList'
        description: 'An array of strings listing alternative domains and subdomains for your SSL/TLS certificate. Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).'
  DeleteDiskResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DeleteDiskRequest:
    type: object
    required:
      - diskName
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique name of the disk you want to delete (e.g., <code>my-disk</code>).'
  DeleteDiskSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DeleteDiskSnapshotRequest:
    type: object
    required:
      - diskSnapshotName
    properties:
      diskSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the disk snapshot you want to delete (e.g., <code>my-disk-snapshot</code>).'
  DeleteDomainResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the results of your delete domain request.
  DeleteDomainRequest:
    type: object
    required:
      - domainName
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The specific domain name to delete.
  DeleteDomainEntryResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the results of your delete domain entry request.
  DeleteDomainEntryRequest:
    type: object
    required:
      - domainName
      - domainEntry
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The name of the domain entry to delete.
      domainEntry:
        $ref: '#/definitions/DomainEntry'
        description: An array of key-value pairs containing information about your domain entries.
  DeleteInstanceResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your delete instance request.
  DeleteInstanceRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance to delete.
  DeleteInstanceSnapshotResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your delete instance snapshot request.
  DeleteInstanceSnapshotRequest:
    type: object
    required:
      - instanceSnapshotName
    properties:
      instanceSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: The name of the snapshot to delete.
  DeleteKeyPairResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the results of your delete key pair request.
  DeleteKeyPairRequest:
    type: object
    required:
      - keyPairName
    properties:
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name of the key pair to delete.
  DeleteLoadBalancerResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DeleteLoadBalancerRequest:
    type: object
    required:
      - loadBalancerName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer you want to delete.
  DeleteLoadBalancerTlsCertificateResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DeleteLoadBalancerTlsCertificateRequest:
    type: object
    required:
      - loadBalancerName
      - certificateName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The load balancer name.
      certificateName:
        $ref: '#/definitions/ResourceName'
        description: The SSL/TLS certificate name.
      force:
        $ref: '#/definitions/boolean'
        description: '<p>When <code>true</code>, forces the deletion of an SSL/TLS certificate.</p> <p>There can be two certificates associated with a Lightsail load balancer: the primary and the backup. The force parameter is required when the primary SSL/TLS certificate is in use by an instance attached to the load balancer.</p>'
  DetachDiskResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DetachDiskRequest:
    type: object
    required:
      - diskName
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The unique name of the disk you want to detach from your instance (e.g., <code>my-disk</code>).'
  DetachInstancesFromLoadBalancerResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  DetachInstancesFromLoadBalancerRequest:
    type: object
    required:
      - loadBalancerName
      - instanceNames
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the Lightsail load balancer.
      instanceNames:
        $ref: '#/definitions/ResourceNameList'
        description: An array of strings containing the names of the instances you want to detach from the load balancer.
  DetachStaticIpResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your detach static IP request.
  DetachStaticIpRequest:
    type: object
    required:
      - staticIpName
    properties:
      staticIpName:
        $ref: '#/definitions/ResourceName'
        description: The name of the static IP to detach from the instance.
  DownloadDefaultKeyPairResult:
    type: object
    properties:
      publicKeyBase64:
        $ref: '#/definitions/Base64'
        description: A base64-encoded public key of the <code>ssh-rsa</code> type.
      privateKeyBase64:
        $ref: '#/definitions/Base64'
        description: A base64-encoded RSA private key.
  DownloadDefaultKeyPairRequest:
    type: object
    properties: {}
  GetActiveNamesResult:
    type: object
    properties:
      activeNames:
        $ref: '#/definitions/StringList'
        description: The list of active names returned by the get active names request.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get active names request.
  GetActiveNamesRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for paginating results from your get active names request.
  GetBlueprintsResult:
    type: object
    properties:
      blueprints:
        $ref: '#/definitions/BlueprintList'
        description: An array of key-value pairs that contains information about the available blueprints.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get blueprints request.
  GetBlueprintsRequest:
    type: object
    properties:
      includeInactive:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether to include inactive results in your request.
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get blueprints request.
  GetBundlesResult:
    type: object
    properties:
      bundles:
        $ref: '#/definitions/BundleList'
        description: An array of key-value pairs that contains information about the available bundles.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get active names request.
  GetBundlesRequest:
    type: object
    properties:
      includeInactive:
        $ref: '#/definitions/boolean'
        description: A Boolean value that indicates whether to include inactive bundle results in your request.
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get bundles request.
  GetDiskResult:
    type: object
    properties:
      disk:
        $ref: '#/definitions/Disk'
        description: An object containing information about the disk.
  GetDiskRequest:
    type: object
    required:
      - diskName
    properties:
      diskName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the disk (e.g., <code>my-disk</code>).'
  GetDiskSnapshotResult:
    type: object
    properties:
      diskSnapshot:
        $ref: '#/definitions/DiskSnapshot'
        description: An object containing information about the disk snapshot.
  GetDiskSnapshotRequest:
    type: object
    required:
      - diskSnapshotName
    properties:
      diskSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).'
  GetDiskSnapshotsResult:
    type: object
    properties:
      diskSnapshots:
        $ref: '#/definitions/DiskSnapshotList'
        description: An array of objects containing information about all block storage disk snapshots.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your GetDiskSnapshots request.
  GetDiskSnapshotsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your GetDiskSnapshots request.
  GetDisksResult:
    type: object
    properties:
      disks:
        $ref: '#/definitions/DiskList'
        description: An array of objects containing information about all block storage disks.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your GetDisks request.
  GetDisksRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your GetDisks request.
  GetDomainResult:
    type: object
    properties:
      domain:
        $ref: '#/definitions/Domain'
        description: An array of key-value pairs containing information about your get domain request.
  GetDomainRequest:
    type: object
    required:
      - domainName
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The domain name for which your want to return information about.
  GetDomainsResult:
    type: object
    properties:
      domains:
        $ref: '#/definitions/DomainList'
        description: An array of key-value pairs containing information about each of the domain entries in the user's account.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get active names request.
  GetDomainsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get domains request.
  GetInstanceResult:
    type: object
    properties:
      instance:
        $ref: '#/definitions/Instance'
        description: An array of key-value pairs containing information about the specified instance.
  GetInstanceRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance.
  GetInstanceAccessDetailsResult:
    type: object
    properties:
      accessDetails:
        $ref: '#/definitions/InstanceAccessDetails'
        description: An array of key-value pairs containing information about a get instance access request.
  GetInstanceAccessDetailsRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance to access.
      protocol:
        $ref: '#/definitions/InstanceAccessProtocol'
        description: The protocol to use to connect to your instance. Defaults to <code>ssh</code>.
  GetInstanceMetricDataResult:
    type: object
    properties:
      metricName:
        $ref: '#/definitions/InstanceMetricName'
        description: The metric name to return data for.
      metricData:
        $ref: '#/definitions/MetricDatapointList'
        description: An array of key-value pairs containing information about the results of your get instance metric data request.
  GetInstanceMetricDataRequest:
    type: object
    required:
      - instanceName
      - metricName
      - period
      - startTime
      - endTime
      - unit
      - statistics
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance for which you want to get metrics data.
      metricName:
        $ref: '#/definitions/InstanceMetricName'
        description: 'The metric name to get data about. '
      period:
        $ref: '#/definitions/MetricPeriod'
        description: The time period for which you are requesting data.
      startTime:
        $ref: '#/definitions/timestamp'
        description: The start time of the time period.
      endTime:
        $ref: '#/definitions/timestamp'
        description: The end time of the time period.
      unit:
        $ref: '#/definitions/MetricUnit'
        description: The unit. The list of valid values is below.
      statistics:
        $ref: '#/definitions/MetricStatisticList'
        description: 'The instance statistics. '
  GetInstancePortStatesResult:
    type: object
    properties:
      portStates:
        $ref: '#/definitions/InstancePortStateList'
        description: Information about the port states resulting from your request.
  GetInstancePortStatesRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance.
  GetInstanceSnapshotResult:
    type: object
    properties:
      instanceSnapshot:
        $ref: '#/definitions/InstanceSnapshot'
        description: An array of key-value pairs containing information about the results of your get instance snapshot request.
  GetInstanceSnapshotRequest:
    type: object
    required:
      - instanceSnapshotName
    properties:
      instanceSnapshotName:
        $ref: '#/definitions/ResourceName'
        description: The name of the snapshot for which you are requesting information.
  GetInstanceSnapshotsResult:
    type: object
    properties:
      instanceSnapshots:
        $ref: '#/definitions/InstanceSnapshotList'
        description: An array of key-value pairs containing information about the results of your get instance snapshots request.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get instance snapshots request.
  GetInstanceSnapshotsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get instance snapshots request.
  GetInstanceStateResult:
    type: object
    properties:
      state:
        $ref: '#/definitions/InstanceState'
        description: The state of the instance.
  GetInstanceStateRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance to get state information about.
  GetInstancesResult:
    type: object
    properties:
      instances:
        $ref: '#/definitions/InstanceList'
        description: An array of key-value pairs containing information about your instances.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get instances request.
  GetInstancesRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get instances request.
  GetKeyPairResult:
    type: object
    properties:
      keyPair:
        $ref: '#/definitions/KeyPair'
        description: An array of key-value pairs containing information about the key pair.
  GetKeyPairRequest:
    type: object
    required:
      - keyPairName
    properties:
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name of the key pair for which you are requesting information.
  GetKeyPairsResult:
    type: object
    properties:
      keyPairs:
        $ref: '#/definitions/KeyPairList'
        description: An array of key-value pairs containing information about the key pairs.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get key pairs request.
  GetKeyPairsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get key pairs request.
  GetLoadBalancerResult:
    type: object
    properties:
      loadBalancer:
        $ref: '#/definitions/LoadBalancer'
        description: An object containing information about your load balancer.
  GetLoadBalancerRequest:
    type: object
    required:
      - loadBalancerName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer.
  GetLoadBalancerMetricDataResult:
    type: object
    properties:
      metricName:
        $ref: '#/definitions/LoadBalancerMetricName'
        description: '<p>The metric about which you are receiving information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</p> <ul> <li> <p> <b> <code>ClientTLSNegotiationErrorCount</code> </b> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>HealthyHostCount</code> </b> - The number of target instances that are considered healthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>UnhealthyHostCount</code> </b> - The number of target instances that are considered unhealthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_4XX_Count</code> </b> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_5XX_Count</code> </b> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_2XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_3XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_4XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_5XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>InstanceResponseTime</code> </b> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> </li> <li> <p> <b> <code>RejectedConnectionCount</code> </b> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>RequestCount</code> </b> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> </ul>'
      metricData:
        $ref: '#/definitions/MetricDatapointList'
        description: An array of metric datapoint objects.
  GetLoadBalancerMetricDataRequest:
    type: object
    required:
      - loadBalancerName
      - metricName
      - period
      - startTime
      - endTime
      - unit
      - statistics
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer.
      metricName:
        $ref: '#/definitions/LoadBalancerMetricName'
        description: '<p>The metric about which you want to return information. Valid values are listed below, along with the most useful <code>statistics</code> to include in your request.</p> <ul> <li> <p> <b> <code>ClientTLSNegotiationErrorCount</code> </b> - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>HealthyHostCount</code> </b> - The number of target instances that are considered healthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>UnhealthyHostCount</code> </b> - The number of target instances that are considered unhealthy.</p> <p> <code>Statistics</code>: The most useful statistic are <code>Average</code>, <code>Minimum</code>, and <code>Maximum</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_4XX_Count</code> </b> - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_LB_5XX_Count</code> </b> - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_2XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_3XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer. </p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_4XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>HTTPCode_Instance_5XX_Count</code> </b> - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> <li> <p> <b> <code>InstanceResponseTime</code> </b> - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Average</code>.</p> </li> <li> <p> <b> <code>RejectedConnectionCount</code> </b> - The number of connections that were rejected because the load balancer had reached its maximum number of connections.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>.</p> </li> <li> <p> <b> <code>RequestCount</code> </b> - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.</p> <p> <code>Statistics</code>: The most useful statistic is <code>Sum</code>. Note that <code>Minimum</code>, <code>Maximum</code>, and <code>Average</code> all return <code>1</code>.</p> </li> </ul>'
      period:
        $ref: '#/definitions/MetricPeriod'
        description: The time period duration for your health data request.
      startTime:
        $ref: '#/definitions/timestamp'
        description: The start time of the period.
      endTime:
        $ref: '#/definitions/timestamp'
        description: The end time of the period.
      unit:
        $ref: '#/definitions/MetricUnit'
        description: The unit for the time period request. Valid values are listed below.
      statistics:
        $ref: '#/definitions/MetricStatisticList'
        description: '<p>An array of statistics that you want to request metrics for. Valid values are listed below.</p> <ul> <li> <p> <b> <code>SampleCount</code> </b> - The count (number) of data points used for the statistical calculation.</p> </li> <li> <p> <b> <code>Average</code> </b> - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum. This comparison helps you to know when to increase or decrease your resources as needed.</p> </li> <li> <p> <b> <code>Sum</code> </b> - All values submitted for the matching metric added together. This statistic can be useful for determining the total volume of a metric.</p> </li> <li> <p> <b> <code>Minimum</code> </b> - The lowest value observed during the specified period. You can use this value to determine low volumes of activity for your application.</p> </li> <li> <p> <b> <code>Maximum</code> </b> - The highest value observed during the specified period. You can use this value to determine high volumes of activity for your application.</p> </li> </ul>'
  GetLoadBalancerTlsCertificatesResult:
    type: object
    properties:
      tlsCertificates:
        $ref: '#/definitions/LoadBalancerTlsCertificateList'
        description: An array of LoadBalancerTlsCertificate objects describing your SSL/TLS certificates.
  GetLoadBalancerTlsCertificatesRequest:
    type: object
    required:
      - loadBalancerName
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The name of the load balancer you associated with your SSL/TLS certificate.
  GetLoadBalancersResult:
    type: object
    properties:
      loadBalancers:
        $ref: '#/definitions/LoadBalancerList'
        description: An array of LoadBalancer objects describing your load balancers.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your GetLoadBalancers request.
  GetLoadBalancersRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for paginating the results from your GetLoadBalancers request.
  GetOperationResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the results of your get operation request.
  GetOperationRequest:
    type: object
    required:
      - operationId
    properties:
      operationId:
        $ref: '#/definitions/NonEmptyString'
        description: A GUID used to identify the operation.
  GetOperationsResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your get operations request.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get operations request.
  GetOperationsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get operations request.
  GetOperationsForResourceResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the results of your get operations for resource request.
      nextPageCount:
        $ref: '#/definitions/string'
        description: '<p>(Deprecated) Returns the number of pages of results that remain.</p> <note> <p>In releases prior to June 12, 2017, this parameter returned <code>null</code> by the API. It is now deprecated, and the API returns the <code>nextPageToken</code> parameter instead.</p> </note>'
      nextPageToken:
        $ref: '#/definitions/string'
        description: 'An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.'
  GetOperationsForResourceRequest:
    type: object
    required:
      - resourceName
    properties:
      resourceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the resource for which you are requesting information.
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get operations for resource request.
  GetRegionsResult:
    type: object
    properties:
      regions:
        $ref: '#/definitions/RegionList'
        description: An array of key-value pairs containing information about your get regions request.
  GetRegionsRequest:
    type: object
    properties:
      includeAvailabilityZones:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value indicating whether to also include Availability Zones in your get regions request. Availability Zones are indicated with a letter: e.g., <code>us-east-2a</code>.'
  GetStaticIpResult:
    type: object
    properties:
      staticIp:
        $ref: '#/definitions/StaticIp'
        description: An array of key-value pairs containing information about the requested static IP.
  GetStaticIpRequest:
    type: object
    required:
      - staticIpName
    properties:
      staticIpName:
        $ref: '#/definitions/ResourceName'
        description: The name of the static IP in Lightsail.
  GetStaticIpsResult:
    type: object
    properties:
      staticIps:
        $ref: '#/definitions/StaticIpList'
        description: An array of key-value pairs containing information about your get static IPs request.
      nextPageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get static IPs request.
  GetStaticIpsRequest:
    type: object
    properties:
      pageToken:
        $ref: '#/definitions/string'
        description: A token used for advancing to the next page of results from your get static IPs request.
  ImportKeyPairResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the request operation.
  ImportKeyPairRequest:
    type: object
    required:
      - keyPairName
      - publicKeyBase64
    properties:
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: The name of the key pair for which you want to import the public key.
      publicKeyBase64:
        $ref: '#/definitions/Base64'
        description: A base64-encoded public key of the <code>ssh-rsa</code> type.
  IsVpcPeeredResult:
    type: object
    properties:
      isPeered:
        $ref: '#/definitions/boolean'
        description: 'Returns <code>true</code> if the Lightsail VPC is peered; otherwise, <code>false</code>.'
  IsVpcPeeredRequest:
    type: object
    properties: {}
  OpenInstancePublicPortsResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the request operation.
  OpenInstancePublicPortsRequest:
    type: object
    required:
      - portInfo
      - instanceName
    properties:
      portInfo:
        $ref: '#/definitions/PortInfo'
        description: An array of key-value pairs containing information about the port mappings.
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance for which you want to open the public ports.
  PeerVpcResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the request operation.
  PeerVpcRequest:
    type: object
    properties: {}
  PutInstancePublicPortsResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: Describes metadata about the operation you just executed.
  PutInstancePublicPortsRequest:
    type: object
    required:
      - portInfos
      - instanceName
    properties:
      portInfos:
        $ref: '#/definitions/PortInfoList'
        description: Specifies information about the public port(s).
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The Lightsail instance name of the public port(s) you are setting.
  RebootInstanceResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the request operations.
  RebootInstanceRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance to reboot.
  ReleaseStaticIpResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the request operation.
  ReleaseStaticIpRequest:
    type: object
    required:
      - staticIpName
    properties:
      staticIpName:
        $ref: '#/definitions/ResourceName'
        description: The name of the static IP to delete.
  StartInstanceResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the request operation.
  StartInstanceRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance (a virtual private server) to start.
  StopInstanceResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the request operation.
  StopInstanceRequest:
    type: object
    required:
      - instanceName
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the instance (a virtual private server) to stop.
      force:
        $ref: '#/definitions/boolean'
        description: '<p>When set to <code>True</code>, forces a Lightsail instance that is stuck in a <code>stopping</code> state to stop.</p> <important> <p>Only use the <code>force</code> parameter if your instance is stuck in the <code>stopping</code> state. In any other state, your instance should stop normally without adding this parameter to your API request.</p> </important>'
  UnpeerVpcResult:
    type: object
    properties:
      operation:
        $ref: '#/definitions/Operation'
        description: An array of key-value pairs containing information about the request operation.
  UnpeerVpcRequest:
    type: object
    properties: {}
  UpdateDomainEntryResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An array of key-value pairs containing information about the request operation.
  UpdateDomainEntryRequest:
    type: object
    required:
      - domainName
      - domainEntry
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The name of the domain recordset to update.
      domainEntry:
        $ref: '#/definitions/DomainEntry'
        description: An array of key-value pairs containing information about the domain entry.
  UpdateLoadBalancerAttributeResult:
    type: object
    properties:
      operations:
        $ref: '#/definitions/OperationList'
        description: An object describing the API operations.
  UpdateLoadBalancerAttributeRequest:
    type: object
    required:
      - loadBalancerName
      - attributeName
      - attributeValue
    properties:
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.'
      attributeName:
        $ref: '#/definitions/LoadBalancerAttributeName'
        description: The name of the attribute you want to update. Valid values are below.
      attributeValue:
        $ref: '#/definitions/StringMax256'
        description: The value that you want to specify for the attribute name.
  string:
    type: string
  AccessDirection:
    type: string
    enum:
      - inbound
      - outbound
  ResourceName:
    type: string
    pattern: '\w[\w\-]*\w'
  OperationList:
    type: array
    items:
      $ref: '#/definitions/Operation'
  NonEmptyString:
    type: string
    pattern: .*\S.*
  ResourceNameList:
    type: array
    items:
      $ref: '#/definitions/ResourceName'
  DiskMapList:
    type: array
    items:
      $ref: '#/definitions/DiskMap'
  AttachedDiskMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ResourceName'
        value:
          $ref: '#/definitions/DiskMapList'
  AvailabilityZone:
    type: object
    properties:
      zoneName:
        $ref: '#/definitions/NonEmptyString'
        description: The name of the Availability Zone. The format is <code>us-east-2a</code> (case-sensitive).
      state:
        $ref: '#/definitions/NonEmptyString'
        description: The state of the Availability Zone.
    description: Describes an Availability Zone.
  AvailabilityZoneList:
    type: array
    items:
      $ref: '#/definitions/AvailabilityZone'
  Base64:
    type: string
  BlueprintType:
    type: string
    enum:
      - os
      - app
  boolean:
    type: boolean
  integer:
    type: integer
  InstancePlatform:
    type: string
    enum:
      - LINUX_UNIX
      - WINDOWS
  Blueprint:
    type: object
    properties:
      blueprintId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The ID for the virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>).'
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).'
      group:
        $ref: '#/definitions/NonEmptyString'
        description: 'The group name of the blueprint (e.g., <code>amazon-linux</code>).'
      type:
        $ref: '#/definitions/BlueprintType'
        description: 'The type of the blueprint (e.g., <code>os</code> or <code>app</code>).'
      description:
        $ref: '#/definitions/string'
        description: The description of the blueprint.
      isActive:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value indicating whether the blueprint is active. When you update your blueprints, you will inactivate old blueprints and keep the most recent versions active.'
      minPower:
        $ref: '#/definitions/integer'
        description: 'The minimum bundle power required to run this blueprint. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500. <code>0</code> indicates that the blueprint runs on all instance sizes. '
      version:
        $ref: '#/definitions/string'
        description: 'The version number of the operating system, application, or stack (e.g., <code>2016.03.0</code>).'
      versionCode:
        $ref: '#/definitions/string'
        description: The version code.
      productUrl:
        $ref: '#/definitions/string'
        description: The product URL to learn more about the image or blueprint.
      licenseUrl:
        $ref: '#/definitions/string'
        description: The end-user license agreement URL for the image or blueprint.
      platform:
        $ref: '#/definitions/InstancePlatform'
        description: The operating system platform (either Linux/Unix-based or Windows Server-based) of the blueprint.
    description: Describes a blueprint (a virtual private server image).
  BlueprintList:
    type: array
    items:
      $ref: '#/definitions/Blueprint'
  float:
    type: number
    format: float
  InstancePlatformList:
    type: array
    items:
      $ref: '#/definitions/InstancePlatform'
  Bundle:
    type: object
    properties:
      price:
        $ref: '#/definitions/float'
        description: 'The price in US dollars (e.g., <code>5.0</code>).'
      cpuCount:
        $ref: '#/definitions/integer'
        description: 'The number of vCPUs included in the bundle (e.g., <code>2</code>).'
      diskSizeInGb:
        $ref: '#/definitions/integer'
        description: 'The size of the SSD (e.g., <code>30</code>).'
      bundleId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The bundle ID (e.g., <code>micro_1_0</code>).'
      instanceType:
        $ref: '#/definitions/string'
        description: 'The Amazon EC2 instance type (e.g., <code>t2.micro</code>).'
      isActive:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether the bundle is active.
      name:
        $ref: '#/definitions/string'
        description: 'A friendly name for the bundle (e.g., <code>Micro</code>).'
      power:
        $ref: '#/definitions/integer'
        description: 'A numeric value that represents the power of the bundle (e.g., <code>500</code>). You can use the bundle''s power value in conjunction with a blueprint''s minimum power value to determine whether the blueprint will run on the bundle. For example, you need a bundle with a power value of 500 or more to create an instance that uses a blueprint with a minimum power value of 500.'
      ramSizeInGb:
        $ref: '#/definitions/float'
        description: 'The amount of RAM in GB (e.g., <code>2.0</code>).'
      transferPerMonthInGb:
        $ref: '#/definitions/integer'
        description: 'The data transfer rate per month in GB (e.g., <code>2000</code>).'
      supportedPlatforms:
        $ref: '#/definitions/InstancePlatformList'
        description: The operating system platform (Linux/Unix-based or Windows Server-based) that the bundle supports. You can only launch a <code>WINDOWS</code> bundle on a blueprint that supports the <code>WINDOWS</code> platform. <code>LINUX_UNIX</code> blueprints require a <code>LINUX_UNIX</code> bundle.
    description: 'Describes a bundle, which is a set of specs describing your virtual private server (or <i>instance</i>).'
  BundleList:
    type: array
    items:
      $ref: '#/definitions/Bundle'
  PortInfo:
    type: object
    properties:
      fromPort:
        $ref: '#/definitions/Port'
        description: The first port in the range.
      toPort:
        $ref: '#/definitions/Port'
        description: The last port in the range.
      protocol:
        $ref: '#/definitions/NetworkProtocol'
        description: 'The protocol. '
    description: Describes information about the ports on your virtual private server (or <i>instance</i>).
  Operation:
    type: object
    properties:
      id:
        $ref: '#/definitions/NonEmptyString'
        description: The ID of the operation.
      resourceName:
        $ref: '#/definitions/ResourceName'
        description: The resource name.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The resource type. '
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the operation was initialized (e.g., <code>1479816991.349</code>).'
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The region and Availability Zone.
      isTerminal:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether the operation is terminal.
      operationDetails:
        $ref: '#/definitions/string'
        description: 'Details about the operation (e.g., <code>Debian-1GB-Ohio-1</code>).'
      operationType:
        $ref: '#/definitions/OperationType'
        description: 'The type of operation. '
      status:
        $ref: '#/definitions/OperationStatus'
        description: 'The status of the operation. '
      statusChangedAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the status was changed (e.g., <code>1479816991.349</code>).'
      errorCode:
        $ref: '#/definitions/string'
        description: The error code.
      errorDetails:
        $ref: '#/definitions/string'
        description: The error details.
    description: Describes the API operation.
  DomainName:
    type: string
  DomainEntry:
    type: object
    properties:
      id:
        $ref: '#/definitions/NonEmptyString'
        description: The ID of the domain recordset entry.
      name:
        $ref: '#/definitions/DomainName'
        description: The name of the domain.
      target:
        $ref: '#/definitions/string'
        description: '<p>The target AWS name server (e.g., <code>ns-111.awsdns-22.com.</code>).</p> <p>For Lightsail load balancers, the value looks like <code>ab1234c56789c6b86aba6fb203d443bc-123456789.us-east-2.elb.amazonaws.com</code>. Be sure to also set <code>isAlias</code> to <code>true</code> when setting up an A record for a load balancer.</p>'
      isAlias:
        $ref: '#/definitions/boolean'
        description: 'When <code>true</code>, specifies whether the domain entry is an alias used by the Lightsail load balancer. You can include an alias (A type) record in your request, which points to a load balancer DNS name and routes traffic to your load balancer'
      type:
        $ref: '#/definitions/DomainEntryType'
        description: 'The type of domain entry (e.g., <code>SOA</code> or <code>NS</code>).'
      options:
        $ref: '#/definitions/DomainEntryOptions'
        description: '<p>(Deprecated) The options for the domain entry.</p> <note> <p>In releases prior to November 29, 2017, this parameter was not included in the API response. It is now deprecated.</p> </note>'
    description: Describes a domain recordset entry.
  StringList:
    type: array
    items:
      $ref: '#/definitions/string'
  KeyPair:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The friendly name of the SSH key pair.
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the key pair (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:KeyPair/05859e3d-331d-48ba-9034-12345EXAMPLE</code>).'
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the key pair was created (e.g., <code>1479816991.349</code>).'
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The region name and Availability Zone where the key pair was created.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The resource type (usually <code>KeyPair</code>).
      fingerprint:
        $ref: '#/definitions/Base64'
        description: The RSA fingerprint of the key pair.
    description: Describes the SSH key pair.
  Port:
    type: integer
    minimum: 0
    maximum: 65535
  DomainNameList:
    type: array
    items:
      $ref: '#/definitions/DomainName'
  IsoDate:
    type: string
    format: date-time
  ResourceLocation:
    type: object
    properties:
      availabilityZone:
        $ref: '#/definitions/string'
        description: The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).
      regionName:
        $ref: '#/definitions/RegionName'
        description: The AWS Region name.
    description: Describes the resource location.
  ResourceType:
    type: string
    enum:
      - Instance
      - StaticIp
      - KeyPair
      - InstanceSnapshot
      - Domain
      - PeeredVpc
      - LoadBalancer
      - LoadBalancerTlsCertificate
      - Disk
      - DiskSnapshot
  DiskState:
    type: string
    enum:
      - pending
      - error
      - available
      - in-use
      - unknown
  Disk:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The unique name of the disk.
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon Resource Name (ARN) of the disk.
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: The date when the disk was created.
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The AWS Region and Availability Zone where the disk is located.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The Lightsail resource type (e.g., <code>Disk</code>).'
      sizeInGb:
        $ref: '#/definitions/integer'
        description: The size of the disk in GB.
      isSystemDisk:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether this disk is a system disk (has an operating system loaded on it).
      iops:
        $ref: '#/definitions/integer'
        description: The input/output operations per second (IOPS) of the disk.
      path:
        $ref: '#/definitions/string'
        description: The disk path.
      state:
        $ref: '#/definitions/DiskState'
        description: Describes the status of the disk.
      attachedTo:
        $ref: '#/definitions/ResourceName'
        description: The resources to which the disk is attached.
      isAttached:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether the disk is attached.
      attachmentState:
        $ref: '#/definitions/string'
        description: '<p>(Deprecated) The attachment state of the disk.</p> <note> <p>In releases prior to November 14, 2017, this parameter returned <code>attached</code> for system disks in the API response. It is now deprecated, but still included in the response. Use <code>isAttached</code> instead.</p> </note>'
      gbInUse:
        $ref: '#/definitions/integer'
        description: '<p>(Deprecated) The number of GB in use by the disk.</p> <note> <p>In releases prior to November 14, 2017, this parameter was not included in the API response. It is now deprecated.</p> </note>'
    description: Describes a system disk or an block storage disk.
  DiskList:
    type: array
    items:
      $ref: '#/definitions/Disk'
  DiskMap:
    type: object
    properties:
      originalDiskPath:
        $ref: '#/definitions/NonEmptyString'
        description: 'The original disk path exposed to the instance (for example, <code>/dev/sdh</code>).'
      newDiskName:
        $ref: '#/definitions/ResourceName'
        description: 'The new disk name (e.g., <code>my-new-disk</code>).'
    description: Describes a block storage disk mapping.
  DiskSnapshotState:
    type: string
    enum:
      - pending
      - completed
      - error
      - unknown
  DiskSnapshot:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the disk snapshot (e.g., <code>my-disk-snapshot</code>).'
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon Resource Name (ARN) of the disk snapshot.
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: The date when the disk snapshot was created.
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The AWS Region and Availability Zone where the disk snapshot was created.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The Lightsail resource type (e.g., <code>DiskSnapshot</code>).'
      sizeInGb:
        $ref: '#/definitions/integer'
        description: The size of the disk in GB.
      state:
        $ref: '#/definitions/DiskSnapshotState'
        description: The status of the disk snapshot operation.
      progress:
        $ref: '#/definitions/string'
        description: The progress of the disk snapshot operation.
      fromDiskName:
        $ref: '#/definitions/ResourceName'
        description: The unique name of the source disk from which you are creating the disk snapshot.
      fromDiskArn:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon Resource Name (ARN) of the source disk from which you are creating the disk snapshot.
    description: Describes a block storage disk snapshot.
  DiskSnapshotList:
    type: array
    items:
      $ref: '#/definitions/DiskSnapshot'
  DomainEntryList:
    type: array
    items:
      $ref: '#/definitions/DomainEntry'
  Domain:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the domain.
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the domain recordset (e.g., <code>arn:aws:lightsail:global:123456789101:Domain/824cede0-abc7-4f84-8dbc-12345EXAMPLE</code>).'
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: The date when the domain recordset was created.
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The AWS Region and Availability Zones where the domain recordset was created.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The resource type. '
      domainEntries:
        $ref: '#/definitions/DomainEntryList'
        description: An array of key-value pairs containing information about the domain entries.
    description: Describes a domain where you are storing recordsets in Lightsail.
  DomainEntryType:
    type: string
  DomainEntryOptions:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/DomainEntryOptionsKeys'
        value:
          $ref: '#/definitions/string'
  DomainEntryOptionsKeys:
    type: string
  DomainList:
    type: array
    items:
      $ref: '#/definitions/Domain'
  InstanceAccessProtocol:
    type: string
    enum:
      - ssh
      - rdp
  InstanceAccessDetails:
    type: object
    properties:
      certKey:
        $ref: '#/definitions/string'
        description: 'For SSH access, the public key to use when accessing your instance For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey-cert.pub</code>.'
      expiresAt:
        $ref: '#/definitions/IsoDate'
        description: 'For SSH access, the date on which the temporary keys expire.'
      ipAddress:
        $ref: '#/definitions/IpAddress'
        description: The public IP address of the Amazon Lightsail instance.
      password:
        $ref: '#/definitions/string'
        description: '<p>For RDP access, the password for your Amazon Lightsail instance. Password will be an empty string if the password for your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</p> <note> <p>If you create an instance using any key pair other than the default (<code>LightsailDefaultKeyPair</code>), <code>password</code> will always be an empty string.</p> <p>If you change the Administrator password on the instance, Lightsail will continue to return the original password value. When accessing the instance using RDP, you need to manually enter the Administrator password after changing it from the default.</p> </note>'
      passwordData:
        $ref: '#/definitions/PasswordData'
        description: 'For a Windows Server-based instance, an object with the data you can use to retrieve your password. This is only needed if <code>password</code> is empty and the instance is not new (and therefore the password is not ready yet). When you create an instance, it can take up to 15 minutes for the instance to be ready.'
      privateKey:
        $ref: '#/definitions/string'
        description: 'For SSH access, the temporary private key. For OpenSSH clients (e.g., command line SSH), you should save this value to <code>tempkey</code>).'
      protocol:
        $ref: '#/definitions/InstanceAccessProtocol'
        description: The protocol for these Amazon Lightsail instance access details.
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of this Amazon Lightsail instance.
      username:
        $ref: '#/definitions/string'
        description: The user name to use when logging in to the Amazon Lightsail instance.
    description: The parameters for gaining temporary access to one of your Amazon Lightsail instances.
  InstanceMetricName:
    type: string
    enum:
      - CPUUtilization
      - NetworkIn
      - NetworkOut
      - StatusCheckFailed
      - StatusCheckFailed_Instance
      - StatusCheckFailed_System
  MetricPeriod:
    type: integer
    minimum: 60
    maximum: 86400
  timestamp:
    type: string
    format: date-time
  MetricUnit:
    type: string
    enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
  MetricStatisticList:
    type: array
    items:
      $ref: '#/definitions/MetricStatistic'
  MetricDatapointList:
    type: array
    items:
      $ref: '#/definitions/MetricDatapoint'
  InstancePortStateList:
    type: array
    items:
      $ref: '#/definitions/InstancePortState'
  Instance:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The name the user gave the instance (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).'
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the instance (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/244ad76f-8aad-4741-809f-12345EXAMPLE</code>).'
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the instance was created (e.g., <code>1479734909.17</code>).'
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The region name and availability zone where the instance is located.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of resource (usually <code>Instance</code>).
      blueprintId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The blueprint ID (e.g., <code>os_amlinux_2016_03</code>).'
      blueprintName:
        $ref: '#/definitions/NonEmptyString'
        description: 'The friendly name of the blueprint (e.g., <code>Amazon Linux</code>).'
      bundleId:
        $ref: '#/definitions/NonEmptyString'
        description: 'The bundle for the instance (e.g., <code>micro_1_0</code>).'
      isStaticIp:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether this instance has a static IP assigned to it.
      privateIpAddress:
        $ref: '#/definitions/IpAddress'
        description: The private IP address of the instance.
      publicIpAddress:
        $ref: '#/definitions/IpAddress'
        description: The public IP address of the instance.
      ipv6Address:
        $ref: '#/definitions/IpV6Address'
        description: The IPv6 address of the instance.
      hardware:
        $ref: '#/definitions/InstanceHardware'
        description: The size of the vCPU and the amount of RAM for the instance.
      networking:
        $ref: '#/definitions/InstanceNetworking'
        description: Information about the public ports and monthly data transfer rates for the instance.
      state:
        $ref: '#/definitions/InstanceState'
        description: 'The status code and the state (e.g., <code>running</code>) for the instance.'
      username:
        $ref: '#/definitions/NonEmptyString'
        description: 'The user name for connecting to the instance (e.g., <code>ec2-user</code>).'
      sshKeyName:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the SSH key being used to connect to the instance (e.g., <code>LightsailDefaultKeyPair</code>).'
    description: Describes an instance (a virtual private server).
  InstanceSnapshot:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the snapshot.
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the snapshot (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:InstanceSnapshot/d23b5706-3322-4d83-81e5-12345EXAMPLE</code>).'
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the snapshot was created (e.g., <code>1479907467.024</code>).'
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The region name and availability zone where you created the snapshot.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of resource (usually <code>InstanceSnapshot</code>).
      state:
        $ref: '#/definitions/InstanceSnapshotState'
        description: The state the snapshot is in.
      progress:
        $ref: '#/definitions/string'
        description: The progress of the snapshot.
      fromAttachedDisks:
        $ref: '#/definitions/DiskList'
        description: An array of disk objects containing information about all block storage disks.
      fromInstanceName:
        $ref: '#/definitions/ResourceName'
        description: The instance from which the snapshot was created.
      fromInstanceArn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the instance from which the snapshot was created (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:Instance/64b8404c-ccb1-430b-8daf-12345EXAMPLE</code>).'
      fromBlueprintId:
        $ref: '#/definitions/string'
        description: 'The blueprint ID from which you created the snapshot (e.g., <code>os_debian_8_3</code>). A blueprint is a virtual private server (or <i>instance</i>) image used to create instances quickly.'
      fromBundleId:
        $ref: '#/definitions/string'
        description: 'The bundle ID from which you created the snapshot (e.g., <code>micro_1_0</code>).'
      sizeInGb:
        $ref: '#/definitions/integer'
        description: The size in GB of the SSD.
    description: 'Describes the snapshot of the virtual private server, or <i>instance</i>.'
  InstanceSnapshotList:
    type: array
    items:
      $ref: '#/definitions/InstanceSnapshot'
  InstanceState:
    type: object
    properties:
      code:
        $ref: '#/definitions/integer'
        description: The status code for the instance.
      name:
        $ref: '#/definitions/string'
        description: 'The state of the instance (e.g., <code>running</code> or <code>pending</code>).'
    description: Describes the virtual private server (or <i>instance</i>) status.
  InstanceList:
    type: array
    items:
      $ref: '#/definitions/Instance'
  KeyPairList:
    type: array
    items:
      $ref: '#/definitions/KeyPair'
  LoadBalancerMetricName:
    type: string
    enum:
      - ClientTLSNegotiationErrorCount
      - HealthyHostCount
      - UnhealthyHostCount
      - HTTPCode_LB_4XX_Count
      - HTTPCode_LB_5XX_Count
      - HTTPCode_Instance_2XX_Count
      - HTTPCode_Instance_3XX_Count
      - HTTPCode_Instance_4XX_Count
      - HTTPCode_Instance_5XX_Count
      - InstanceResponseTime
      - RejectedConnectionCount
      - RequestCount
  LoadBalancer:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the load balancer (e.g., <code>my-load-balancer</code>).'
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon Resource Name (ARN) of the load balancer.
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about your Lightsail load balancer. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: The date when your load balancer was created.
      location:
        $ref: '#/definitions/ResourceLocation'
        description: 'The AWS Region where your load balancer was created (e.g., <code>us-east-2a</code>). Lightsail automatically creates your load balancer across Availability Zones.'
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The resource type (e.g., <code>LoadBalancer</code>.'
      dnsName:
        $ref: '#/definitions/NonEmptyString'
        description: The DNS name of your Lightsail load balancer.
      state:
        $ref: '#/definitions/LoadBalancerState'
        description: The status of your load balancer. Valid values are below.
      protocol:
        $ref: '#/definitions/LoadBalancerProtocol'
        description: '<p>The protocol you have enabled for your load balancer. Valid values are below.</p> <p>You can''t just have <code>HTTP_HTTPS</code>, but you can have just <code>HTTP</code>.</p>'
      publicPorts:
        $ref: '#/definitions/PortList'
        description: 'An array of public port settings for your load balancer. For HTTP, use port 80. For HTTPS, use port 443.'
      healthCheckPath:
        $ref: '#/definitions/NonEmptyString'
        description: 'The path you specified to perform your health checks. If no path is specified, the load balancer tries to make a request to the default (root) page.'
      instancePort:
        $ref: '#/definitions/integer'
        description: 'The port where the load balancer will direct traffic to your Lightsail instances. For HTTP traffic, it''s port 80. For HTTPS traffic, it''s port 443.'
      instanceHealthSummary:
        $ref: '#/definitions/InstanceHealthSummaryList'
        description: An array of InstanceHealthSummary objects describing the health of the load balancer.
      tlsCertificateSummaries:
        $ref: '#/definitions/LoadBalancerTlsCertificateSummaryList'
        description: 'An array of LoadBalancerTlsCertificateSummary objects that provide additional information about the SSL/TLS certificates. For example, if <code>true</code>, the certificate is attached to the load balancer.'
      configurationOptions:
        $ref: '#/definitions/LoadBalancerConfigurationOptions'
        description: A string to string map of the configuration options for your load balancer. Valid values are listed below.
    description: Describes the Lightsail load balancer.
  LoadBalancerTlsCertificateList:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerTlsCertificate'
  LoadBalancerList:
    type: array
    items:
      $ref: '#/definitions/LoadBalancer'
  RegionList:
    type: array
    items:
      $ref: '#/definitions/Region'
  StaticIp:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the static IP (e.g., <code>StaticIP-Ohio-EXAMPLE</code>).'
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: 'The Amazon Resource Name (ARN) of the static IP (e.g., <code>arn:aws:lightsail:us-east-2:123456789101:StaticIp/9cbb4a9e-f8e3-4dfe-b57e-12345EXAMPLE</code>).'
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: 'The timestamp when the static IP was created (e.g., <code>1479735304.222</code>).'
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The region and Availability Zone where the static IP was created.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The resource type (usually <code>StaticIp</code>).
      ipAddress:
        $ref: '#/definitions/IpAddress'
        description: The static IP address.
      attachedTo:
        $ref: '#/definitions/ResourceName'
        description: 'The instance where the static IP is attached (e.g., <code>Amazon_Linux-1GB-Ohio-1</code>).'
      isAttached:
        $ref: '#/definitions/boolean'
        description: A Boolean value indicating whether the static IP is attached.
    description: Describes the static IP.
  StaticIpList:
    type: array
    items:
      $ref: '#/definitions/StaticIp'
  IpAddress:
    type: string
    pattern: '([0-9]{1,3}\.){3}[0-9]{1,3}'
  IpV6Address:
    type: string
    pattern: '([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}'
  InstanceHardware:
    type: object
    properties:
      cpuCount:
        $ref: '#/definitions/integer'
        description: The number of vCPUs the instance has.
      disks:
        $ref: '#/definitions/DiskList'
        description: The disks attached to the instance.
      ramSizeInGb:
        $ref: '#/definitions/float'
        description: 'The amount of RAM in GB on the instance (e.g., <code>1.0</code>).'
    description: Describes the hardware for the instance.
  InstanceNetworking:
    type: object
    properties:
      monthlyTransfer:
        $ref: '#/definitions/MonthlyTransfer'
        description: The amount of data in GB allocated for monthly data transfers.
      ports:
        $ref: '#/definitions/InstancePortInfoList'
        description: An array of key-value pairs containing information about the ports on the instance.
    description: Describes monthly data transfer rates and port information for an instance.
  PasswordData:
    type: object
    properties:
      ciphertext:
        $ref: '#/definitions/string'
        description: '<p>The encrypted password. Ciphertext will be an empty string if access to your new instance is not ready yet. When you create an instance, it can take up to 15 minutes for the instance to be ready.</p> <note> <p>If you use the default key pair (<code>LightsailDefaultKeyPair</code>), the decrypted password will be available in the password field.</p> <p>If you are using a custom key pair, you need to use your own means of decryption.</p> <p>If you change the Administrator password on the instance, Lightsail will continue to return the original ciphertext value. When accessing the instance using RDP, you need to manually enter the Administrator password after changing it from the default.</p> </note>'
      keyPairName:
        $ref: '#/definitions/ResourceName'
        description: '<p>The name of the key pair that you used when creating your instance. If no key pair name was specified when creating the instance, Lightsail uses the default key pair (<code>LightsailDefaultKeyPair</code>).</p> <p>If you are using a custom key pair, you need to use your own means of decrypting your password using the <code>ciphertext</code>. Lightsail creates the ciphertext by encrypting your password with the public key part of this key pair.</p>'
    description: 'The password data for the Windows Server-based instance, including the ciphertext and the key pair name.'
  InstanceHealthReason:
    type: string
    enum:
      - Lb.RegistrationInProgress
      - Lb.InitialHealthChecking
      - Lb.InternalError
      - Instance.ResponseCodeMismatch
      - Instance.Timeout
      - Instance.FailedHealthChecks
      - Instance.NotRegistered
      - Instance.NotInUse
      - Instance.DeregistrationInProgress
      - Instance.InvalidState
      - Instance.IpUnusable
  InstanceHealthState:
    type: string
    enum:
      - initial
      - healthy
      - unhealthy
      - unused
      - draining
      - unavailable
  InstanceHealthSummary:
    type: object
    properties:
      instanceName:
        $ref: '#/definitions/ResourceName'
        description: The name of the Lightsail instance for which you are requesting health check data.
      instanceHealth:
        $ref: '#/definitions/InstanceHealthState'
        description: Describes the overall instance health. Valid values are below.
      instanceHealthReason:
        $ref: '#/definitions/InstanceHealthReason'
        description: '<p>More information about the instance health. If the <code>instanceHealth</code> is <code>healthy</code>, then an <code>instanceHealthReason</code> value is not provided.</p> <p>If <b> <code>instanceHealth</code> </b> is <code>initial</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Lb.RegistrationInProgress</code> </b> - The target instance is in the process of being registered with the load balancer.</p> </li> <li> <p> <b> <code>Lb.InitialHealthChecking</code> </b> - The Lightsail load balancer is still sending the target instance the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>unhealthy</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.ResponseCodeMismatch</code> </b> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <b> <code>Instance.Timeout</code> </b> - The health check requests timed out.</p> </li> <li> <p> <b> <code>Instance.FailedHealthChecks</code> </b> - The health checks failed because the connection to the target instance timed out, the target instance response was malformed, or the target instance failed the health check for an unknown reason.</p> </li> <li> <p> <b> <code>Lb.InternalError</code> </b> - The health checks failed due to an internal error.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>unused</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.NotRegistered</code> </b> - The target instance is not registered with the target group.</p> </li> <li> <p> <b> <code>Instance.NotInUse</code> </b> - The target group is not used by any load balancer, or the target instance is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <b> <code>Instance.IpUnusable</code> </b> - The target IP address is reserved for use by a Lightsail load balancer.</p> </li> <li> <p> <b> <code>Instance.InvalidState</code> </b> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If <b> <code>instanceHealth</code> </b> is <code>draining</code>, the <b> <code>instanceHealthReason</code> </b> value can be one of the following:</p> <ul> <li> <p> <b> <code>Instance.DeregistrationInProgress</code> </b> - The target instance is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul>'
    description: Describes information about the health of the instance.
  InstanceHealthSummaryList:
    type: array
    items:
      $ref: '#/definitions/InstanceHealthSummary'
  MonthlyTransfer:
    type: object
    properties:
      gbPerMonthAllocated:
        $ref: '#/definitions/integer'
        description: The amount allocated per month (in GB).
    description: Describes the monthly data transfer in and out of your virtual private server (or <i>instance</i>).
  InstancePortInfoList:
    type: array
    items:
      $ref: '#/definitions/InstancePortInfo'
  NetworkProtocol:
    type: string
    enum:
      - tcp
      - all
      - udp
  PortAccessType:
    type: string
    enum:
      - Public
      - Private
  InstancePortInfo:
    type: object
    properties:
      fromPort:
        $ref: '#/definitions/Port'
        description: The first port in the range.
      toPort:
        $ref: '#/definitions/Port'
        description: The last port in the range.
      protocol:
        $ref: '#/definitions/NetworkProtocol'
        description: '<p>The protocol being used. Can be one of the following.</p> <ul> <li> <p> <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn''t require reliable data stream service, use UDP instead.</p> </li> <li> <p> <code>all</code> - All transport layer protocol types. For more general information, see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on Wikipedia.</p> </li> <li> <p> <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don''t require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p> </li> </ul>'
      accessFrom:
        $ref: '#/definitions/string'
        description: 'The location from which access is allowed (e.g., <code>Anywhere (0.0.0.0/0)</code>).'
      accessType:
        $ref: '#/definitions/PortAccessType'
        description: The type of access (<code>Public</code> or <code>Private</code>).
      commonName:
        $ref: '#/definitions/string'
        description: The common name.
      accessDirection:
        $ref: '#/definitions/AccessDirection'
        description: The access direction (<code>inbound</code> or <code>outbound</code>).
    description: Describes information about the instance ports.
  PortState:
    type: string
    enum:
      - open
      - closed
  InstancePortState:
    type: object
    properties:
      fromPort:
        $ref: '#/definitions/Port'
        description: The first port in the range.
      toPort:
        $ref: '#/definitions/Port'
        description: The last port in the range.
      protocol:
        $ref: '#/definitions/NetworkProtocol'
        description: '<p>The protocol being used. Can be one of the following.</p> <ul> <li> <p> <code>tcp</code> - Transmission Control Protocol (TCP) provides reliable, ordered, and error-checked delivery of streamed data between applications running on hosts communicating by an IP network. If you have an application that doesn''t require reliable data stream service, use UDP instead.</p> </li> <li> <p> <code>all</code> - All transport layer protocol types. For more general information, see <a href="https://en.wikipedia.org/wiki/Transport_layer">Transport layer</a> on Wikipedia.</p> </li> <li> <p> <code>udp</code> - With User Datagram Protocol (UDP), computer applications can send messages (or datagrams) to other hosts on an Internet Protocol (IP) network. Prior communications are not required to set up transmission channels or data paths. Applications that don''t require reliable data stream service can use UDP, which provides a connectionless datagram service that emphasizes reduced latency over reliability. If you do require reliable data stream service, use TCP instead.</p> </li> </ul>'
      state:
        $ref: '#/definitions/PortState'
        description: Specifies whether the instance port is <code>open</code> or <code>closed</code>.
    description: Describes the port state.
  InstanceSnapshotState:
    type: string
    enum:
      - pending
      - error
      - available
  LoadBalancerState:
    type: string
    enum:
      - active
      - provisioning
      - active_impaired
      - failed
      - unknown
  LoadBalancerProtocol:
    type: string
    enum:
      - HTTP_HTTPS
      - HTTP
  PortList:
    type: array
    items:
      $ref: '#/definitions/Port'
  LoadBalancerTlsCertificateSummaryList:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerTlsCertificateSummary'
  LoadBalancerConfigurationOptions:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/LoadBalancerAttributeName'
        value:
          $ref: '#/definitions/string'
  LoadBalancerAttributeName:
    type: string
    enum:
      - HealthCheckPath
      - SessionStickinessEnabled
      - SessionStickiness_LB_CookieDurationSeconds
  LoadBalancerTlsCertificateStatus:
    type: string
    enum:
      - PENDING_VALIDATION
      - ISSUED
      - INACTIVE
      - EXPIRED
      - VALIDATION_TIMED_OUT
      - REVOKED
      - FAILED
      - UNKNOWN
  LoadBalancerTlsCertificateDomainValidationRecordList:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerTlsCertificateDomainValidationRecord'
  LoadBalancerTlsCertificateFailureReason:
    type: string
    enum:
      - NO_AVAILABLE_CONTACTS
      - ADDITIONAL_VERIFICATION_REQUIRED
      - DOMAIN_NOT_ALLOWED
      - INVALID_PUBLIC_DOMAIN
      - OTHER
  LoadBalancerTlsCertificateRenewalSummary:
    type: object
    properties:
      renewalStatus:
        $ref: '#/definitions/LoadBalancerTlsCertificateRenewalStatus'
        description: The status of Lightsail's managed renewal of the certificate. Valid values are listed below.
      domainValidationOptions:
        $ref: '#/definitions/LoadBalancerTlsCertificateDomainValidationOptionList'
        description: 'Contains information about the validation of each domain name in the certificate, as it pertains to Lightsail''s managed renewal. This is different from the initial validation that occurs as a result of the RequestCertificate request.'
    description: Contains information about the status of Lightsail's managed renewal for the certificate.
  LoadBalancerTlsCertificateRevocationReason:
    type: string
    enum:
      - UNSPECIFIED
      - KEY_COMPROMISE
      - CA_COMPROMISE
      - AFFILIATION_CHANGED
      - SUPERCEDED
      - CESSATION_OF_OPERATION
      - CERTIFICATE_HOLD
      - REMOVE_FROM_CRL
      - PRIVILEGE_WITHDRAWN
      - A_A_COMPROMISE
  LoadBalancerTlsCertificate:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: 'The name of the SSL/TLS certificate (e.g., <code>my-certificate</code>).'
      arn:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon Resource Name (ARN) of the SSL/TLS certificate.
      supportCode:
        $ref: '#/definitions/string'
        description: The support code. Include this code in your email to support when you have questions about your Lightsail load balancer or SSL/TLS certificate. This code enables our support team to look up your Lightsail information more easily.
      createdAt:
        $ref: '#/definitions/IsoDate'
        description: The time when you created your SSL/TLS certificate.
      location:
        $ref: '#/definitions/ResourceLocation'
        description: The AWS Region and Availability Zone where you created your certificate.
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: '<p>The resource type (e.g., <code>LoadBalancerTlsCertificate</code>).</p> <ul> <li> <p> <b> <code>Instance</code> </b> - A Lightsail instance (a virtual private server)</p> </li> <li> <p> <b> <code>StaticIp</code> </b> - A static IP address</p> </li> <li> <p> <b> <code>KeyPair</code> </b> - The key pair used to connect to a Lightsail instance</p> </li> <li> <p> <b> <code>InstanceSnapshot</code> </b> - A Lightsail instance snapshot</p> </li> <li> <p> <b> <code>Domain</code> </b> - A DNS zone</p> </li> <li> <p> <b> <code>PeeredVpc</code> </b> - A peered VPC</p> </li> <li> <p> <b> <code>LoadBalancer</code> </b> - A Lightsail load balancer</p> </li> <li> <p> <b> <code>LoadBalancerTlsCertificate</code> </b> - An SSL/TLS certificate associated with a Lightsail load balancer</p> </li> <li> <p> <b> <code>Disk</code> </b> - A Lightsail block storage disk</p> </li> <li> <p> <b> <code>DiskSnapshot</code> </b> - A block storage disk snapshot</p> </li> </ul>'
      loadBalancerName:
        $ref: '#/definitions/ResourceName'
        description: The load balancer name where your SSL/TLS certificate is attached.
      isAttached:
        $ref: '#/definitions/boolean'
        description: 'When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.'
      status:
        $ref: '#/definitions/LoadBalancerTlsCertificateStatus'
        description: The status of the SSL/TLS certificate. Valid values are below.
      domainName:
        $ref: '#/definitions/DomainName'
        description: The domain name for your SSL/TLS certificate.
      domainValidationRecords:
        $ref: '#/definitions/LoadBalancerTlsCertificateDomainValidationRecordList'
        description: An array of LoadBalancerTlsCertificateDomainValidationRecord objects describing the records.
      failureReason:
        $ref: '#/definitions/LoadBalancerTlsCertificateFailureReason'
        description: The reason for the SSL/TLS certificate validation failure.
      issuedAt:
        $ref: '#/definitions/IsoDate'
        description: The time when the SSL/TLS certificate was issued.
      issuer:
        $ref: '#/definitions/NonEmptyString'
        description: The issuer of the certificate.
      keyAlgorithm:
        $ref: '#/definitions/NonEmptyString'
        description: The algorithm that was used to generate the key pair (the public and private key).
      notAfter:
        $ref: '#/definitions/IsoDate'
        description: The timestamp when the SSL/TLS certificate expires.
      notBefore:
        $ref: '#/definitions/IsoDate'
        description: The timestamp when the SSL/TLS certificate is first valid.
      renewalSummary:
        $ref: '#/definitions/LoadBalancerTlsCertificateRenewalSummary'
        description: An object containing information about the status of Lightsail's managed renewal for the certificate.
      revocationReason:
        $ref: '#/definitions/LoadBalancerTlsCertificateRevocationReason'
        description: The reason the certificate was revoked. Valid values are below.
      revokedAt:
        $ref: '#/definitions/IsoDate'
        description: The timestamp when the SSL/TLS certificate was revoked.
      serial:
        $ref: '#/definitions/NonEmptyString'
        description: The serial number of the certificate.
      signatureAlgorithm:
        $ref: '#/definitions/NonEmptyString'
        description: The algorithm that was used to sign the certificate.
      subject:
        $ref: '#/definitions/NonEmptyString'
        description: The name of the entity that is associated with the public key contained in the certificate.
      subjectAlternativeNames:
        $ref: '#/definitions/StringList'
        description: 'One or more domains or subdomains included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CNAME) of the certificate and additional domain names that can be used to connect to the website, such as <code>example.com</code>, <code>www.example.com</code>, or <code>m.example.com</code>.'
    description: '<p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>'
  LoadBalancerTlsCertificateDomainStatus:
    type: string
    enum:
      - PENDING_VALIDATION
      - FAILED
      - SUCCESS
  LoadBalancerTlsCertificateDomainValidationOption:
    type: object
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The fully qualified domain name in the certificate request.
      validationStatus:
        $ref: '#/definitions/LoadBalancerTlsCertificateDomainStatus'
        description: The status of the domain validation. Valid values are listed below.
    description: Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.
  LoadBalancerTlsCertificateDomainValidationOptionList:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerTlsCertificateDomainValidationOption'
  LoadBalancerTlsCertificateDomainValidationRecord:
    type: object
    properties:
      name:
        $ref: '#/definitions/NonEmptyString'
        description: 'A fully qualified domain name in the certificate. For example, <code>example.com</code>.'
      type:
        $ref: '#/definitions/NonEmptyString'
        description: 'The type of validation record. For example, <code>CNAME</code> for domain validation.'
      value:
        $ref: '#/definitions/NonEmptyString'
        description: The value for that type.
      validationStatus:
        $ref: '#/definitions/LoadBalancerTlsCertificateDomainStatus'
        description: The validation status. Valid values are listed below.
      domainName:
        $ref: '#/definitions/DomainName'
        description: The domain name against which your SSL/TLS certificate was validated.
    description: Describes the validation record of each domain name in the SSL/TLS certificate.
  LoadBalancerTlsCertificateRenewalStatus:
    type: string
    enum:
      - PENDING_AUTO_RENEWAL
      - PENDING_VALIDATION
      - SUCCESS
      - FAILED
  LoadBalancerTlsCertificateSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the SSL/TLS certificate.
      isAttached:
        $ref: '#/definitions/boolean'
        description: 'When <code>true</code>, the SSL/TLS certificate is attached to the Lightsail load balancer.'
    description: Provides a summary of SSL/TLS certificate metadata.
  double:
    type: number
    format: double
  MetricDatapoint:
    type: object
    properties:
      average:
        $ref: '#/definitions/double'
        description: The average.
      maximum:
        $ref: '#/definitions/double'
        description: The maximum.
      minimum:
        $ref: '#/definitions/double'
        description: The minimum.
      sampleCount:
        $ref: '#/definitions/double'
        description: The sample count.
      sum:
        $ref: '#/definitions/double'
        description: The sum.
      timestamp:
        $ref: '#/definitions/timestamp'
        description: 'The timestamp (e.g., <code>1479816991.349</code>).'
      unit:
        $ref: '#/definitions/MetricUnit'
        description: 'The unit. '
    description: Describes the metric data point.
  MetricStatistic:
    type: string
    enum:
      - Minimum
      - Maximum
      - Sum
      - Average
      - SampleCount
  OperationType:
    type: string
    enum:
      - DeleteInstance
      - CreateInstance
      - StopInstance
      - StartInstance
      - RebootInstance
      - OpenInstancePublicPorts
      - PutInstancePublicPorts
      - CloseInstancePublicPorts
      - AllocateStaticIp
      - ReleaseStaticIp
      - AttachStaticIp
      - DetachStaticIp
      - UpdateDomainEntry
      - DeleteDomainEntry
      - CreateDomain
      - DeleteDomain
      - CreateInstanceSnapshot
      - DeleteInstanceSnapshot
      - CreateInstancesFromSnapshot
      - CreateLoadBalancer
      - DeleteLoadBalancer
      - AttachInstancesToLoadBalancer
      - DetachInstancesFromLoadBalancer
      - UpdateLoadBalancerAttribute
      - CreateLoadBalancerTlsCertificate
      - DeleteLoadBalancerTlsCertificate
      - AttachLoadBalancerTlsCertificate
      - CreateDisk
      - DeleteDisk
      - AttachDisk
      - DetachDisk
      - CreateDiskSnapshot
      - DeleteDiskSnapshot
      - CreateDiskFromSnapshot
  OperationStatus:
    type: string
    enum:
      - NotStarted
      - Started
      - Failed
      - Completed
      - Succeeded
  PortInfoList:
    type: array
    items:
      $ref: '#/definitions/PortInfo'
  RegionName:
    type: string
    enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - ap-northeast-2
  Region:
    type: object
    properties:
      continentCode:
        $ref: '#/definitions/string'
        description: 'The continent code (e.g., <code>NA</code>, meaning North America).'
      description:
        $ref: '#/definitions/string'
        description: 'The description of the AWS Region (e.g., <code>This region is recommended to serve users in the eastern United States and eastern Canada</code>).'
      displayName:
        $ref: '#/definitions/string'
        description: 'The display name (e.g., <code>Ohio</code>).'
      name:
        $ref: '#/definitions/RegionName'
        description: 'The region name (e.g., <code>us-east-2</code>).'
      availabilityZones:
        $ref: '#/definitions/AvailabilityZoneList'
        description: The Availability Zones. Follows the format <code>us-east-2a</code> (case-sensitive).
    description: Describes the AWS Region.
  StringMax256:
    type: string
    minLength: 1
    maxLength: 256
