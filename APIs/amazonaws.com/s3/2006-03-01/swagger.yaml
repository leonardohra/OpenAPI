swagger: '2.0'
info:
  version: '2006-03-01'
  x-release: s3
  title: Amazon Simple Storage Service
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: s3
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/s3/'
host: s3.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  x-amz-security-token:
    name: x-amz-security-token
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon S3 signature
    x-amazon-apigateway-authtype: awsS3
security:
  - hmac: []
paths:
  '/{Bucket}/{Key}':
    delete:
      operationId: AbortMultipartUpload
      description: '<p>Aborts a multipart upload.</p> <p>To verify that all parts have been removed, so you don''t get charged for the part storage, you should call the List Parts operation and ensure the parts list is empty.</p><p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AbortMultipartUploadOutput'
        '480':
          description: NoSuchUpload
          schema:
            $ref: '#/definitions/NoSuchUpload'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AbortMultipartUploadRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    post:
      operationId: CompleteMultipartUpload
      description: 'Completes a multipart upload by assembling previously uploaded parts.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompleteMultipartUploadOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CompleteMultipartUploadRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
    put:
      operationId: CopyObject
      description: 'Creates a copy of an object that is already stored in Amazon S3.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyObjectOutput'
        '480':
          description: ObjectNotInActiveTierError
          schema:
            $ref: '#/definitions/ObjectNotInActiveTierError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CopyObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
  '/{Bucket}':
    put:
      operationId: CreateBucket
      description: 'Creates a new bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBucketOutput'
        '480':
          description: BucketAlreadyExists
          schema:
            $ref: '#/definitions/BucketAlreadyExists'
        '481':
          description: BucketAlreadyOwnedByYou
          schema:
            $ref: '#/definitions/BucketAlreadyOwnedByYou'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBucketRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
    delete:
      operationId: DeleteBucket
      description: 'Deletes the bucket. All objects (including all object versions and Delete Markers) in the bucket must be deleted before the bucket itself can be deleted.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketRequest'
        - name: Bucket
          in: path
          type: string
          required: true
  '/{Bucket}/{Key}?uploads':
    post:
      operationId: CreateMultipartUpload
      description: '<p>Initiates a multipart upload and returns an upload ID.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p><p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMultipartUploadOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMultipartUploadRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: array
          required: true
          items:
            type: string
          collectionFormat: csv
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?analytics':
    delete:
      operationId: DeleteBucketAnalyticsConfiguration
      description: Deletes an analytics configuration for the bucket (specified by the analytics configuration ID).
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketAnalyticsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?cors':
    delete:
      operationId: DeleteBucketCors
      description: 'Deletes the cors configuration information set for the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketCorsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?encryption':
    delete:
      operationId: DeleteBucketEncryption
      description: Deletes the server-side encryption configuration from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketEncryptionRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?inventory':
    delete:
      operationId: DeleteBucketInventoryConfiguration
      description: Deletes an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketInventoryConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?lifecycle':
    delete:
      operationId: DeleteBucketLifecycle
      description: 'Deletes the lifecycle configuration from the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketLifecycleRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?metrics':
    delete:
      operationId: DeleteBucketMetricsConfiguration
      description: Deletes a metrics configuration (specified by the metrics configuration ID) from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketMetricsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?policy':
    delete:
      operationId: DeleteBucketPolicy
      description: 'Deletes the policy from the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketPolicyRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?replication':
    delete:
      operationId: DeleteBucketReplication
      description: Deletes the replication configuration from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketReplicationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?tagging':
    delete:
      operationId: DeleteBucketTagging
      description: 'Deletes the tags from the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?website':
    delete:
      operationId: DeleteBucketWebsite
      description: 'This operation removes the website configuration from the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBucketWebsiteRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#DeleteObject':
    delete:
      operationId: DeleteObject
      description: 'Removes the null version (if there is one) of an object and inserts a delete marker, which becomes the latest version of the object. If there isn''t a null version, Amazon S3 does not remove any objects.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?tagging#DeleteObjectTagging':
    delete:
      operationId: DeleteObjectTagging
      description: Removes the tag-set from an existing object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectTaggingOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?delete#DeleteObjects':
    post:
      operationId: DeleteObjects
      description: 'This operation enables you to delete multiple objects from a bucket using a single HTTP request. You may specify up to 1000 keys.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?accelerate#GetBucketAccelerateConfiguration':
    get:
      operationId: GetBucketAccelerateConfiguration
      description: Returns the accelerate configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAccelerateConfigurationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketAccelerateConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?acl#GetBucketAcl':
    get:
      operationId: GetBucketAcl
      description: 'Gets the access control policy for the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAclOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketAclRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?analytics#GetBucketAnalyticsConfiguration':
    get:
      operationId: GetBucketAnalyticsConfiguration
      description: Gets an analytics configuration for the bucket (specified by the analytics configuration ID).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketAnalyticsConfigurationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketAnalyticsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?cors#GetBucketCors':
    get:
      operationId: GetBucketCors
      description: 'Returns the cors configuration for the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketCorsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketCorsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?encryption#GetBucketEncryption':
    get:
      operationId: GetBucketEncryption
      description: Returns the server-side encryption configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketEncryptionOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketEncryptionRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?inventory#GetBucketInventoryConfiguration':
    get:
      operationId: GetBucketInventoryConfiguration
      description: Returns an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketInventoryConfigurationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketInventoryConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?lifecycle#GetBucketLifecycle':
    get:
      operationId: GetBucketLifecycle
      description: 'Deprecated, see the GetBucketLifecycleConfiguration operation.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketLifecycleRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?lifecycle#GetBucketLifecycleConfiguration':
    get:
      operationId: GetBucketLifecycleConfiguration
      description: Returns the lifecycle configuration information set on the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLifecycleConfigurationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketLifecycleConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?location#GetBucketLocation':
    get:
      operationId: GetBucketLocation
      description: 'Returns the region the bucket resides in.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLocationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketLocationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?logging#GetBucketLogging':
    get:
      operationId: GetBucketLogging
      description: 'Returns the logging status of a bucket and the permissions users have to view and modify that status. To use GET, you must be the bucket owner.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketLoggingOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketLoggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?metrics#GetBucketMetricsConfiguration':
    get:
      operationId: GetBucketMetricsConfiguration
      description: Gets a metrics configuration (specified by the metrics configuration ID) from the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketMetricsConfigurationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketMetricsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?notification#GetBucketNotification':
    get:
      operationId: GetBucketNotification
      description: 'Deprecated, see the GetBucketNotificationConfiguration operation.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfigurationDeprecated'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketNotificationConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?notification#GetBucketNotificationConfiguration':
    get:
      operationId: GetBucketNotificationConfiguration
      description: Returns the notification configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/NotificationConfiguration'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketNotificationConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?policy#GetBucketPolicy':
    get:
      operationId: GetBucketPolicy
      description: 'Returns the policy of a specified bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketPolicyOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketPolicyRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?replication#GetBucketReplication':
    get:
      operationId: GetBucketReplication
      description: Returns the replication configuration of a bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketReplicationOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketReplicationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?requestPayment#GetBucketRequestPayment':
    get:
      operationId: GetBucketRequestPayment
      description: 'Returns the request payment configuration of a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketRequestPaymentOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketRequestPaymentRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?tagging#GetBucketTagging':
    get:
      operationId: GetBucketTagging
      description: 'Returns the tag set associated with the bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketTaggingOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?versioning#GetBucketVersioning':
    get:
      operationId: GetBucketVersioning
      description: 'Returns the versioning state of a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketVersioningOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketVersioningRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?website#GetBucketWebsite':
    get:
      operationId: GetBucketWebsite
      description: 'Returns the website configuration for a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBucketWebsiteOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetBucketWebsiteRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#GetObject':
    get:
      operationId: GetObject
      description: 'Retrieves objects from Amazon S3.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?acl#GetObjectAcl':
    get:
      operationId: GetObjectAcl
      description: 'Returns the access control list (ACL) of an object.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectAclRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?tagging#GetObjectTagging':
    get:
      operationId: GetObjectTagging
      description: Returns the tag-set of an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTaggingOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?torrent#GetObjectTorrent':
    get:
      operationId: GetObjectTorrent
      description: 'Return torrent files from a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectTorrentOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectTorrentRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#HeadBucket':
    head:
      operationId: HeadBucket
      description: 'This operation is useful to determine if a bucket exists and you have permission to access it.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/HeadBucketRequest'
        - name: Bucket
          in: path
          type: string
          required: true
      x-waiters:
        - delay: 5
          operation: HeadBucket
          maxAttempts: 20
          acceptors:
            - expected: 200
              matcher: status
              state: success
            - expected: 301
              matcher: status
              state: success
            - expected: 403
              matcher: status
              state: success
            - expected: 404
              matcher: status
              state: retry
        - delay: 5
          operation: HeadBucket
          maxAttempts: 20
          acceptors:
            - expected: 404
              matcher: status
              state: success
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#HeadObject':
    head:
      operationId: HeadObject
      description: 'The HEAD operation retrieves metadata from an object without returning the object itself. This operation is useful if you''re only interested in an object''s metadata. To use HEAD, you must have READ access to the object.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/HeadObjectOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/HeadObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
      x-waiters:
        - delay: 5
          operation: HeadObject
          maxAttempts: 20
          acceptors:
            - expected: 200
              matcher: status
              state: success
            - expected: 404
              matcher: status
              state: retry
        - delay: 5
          operation: HeadObject
          maxAttempts: 20
          acceptors:
            - expected: 404
              matcher: status
              state: success
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?analytics#ListBucketAnalyticsConfigurations':
    get:
      operationId: ListBucketAnalyticsConfigurations
      description: Lists the analytics configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketAnalyticsConfigurationsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBucketAnalyticsConfigurationsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?inventory#ListBucketInventoryConfigurations':
    get:
      operationId: ListBucketInventoryConfigurations
      description: Returns a list of inventory configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketInventoryConfigurationsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBucketInventoryConfigurationsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?metrics#ListBucketMetricsConfigurations':
    get:
      operationId: ListBucketMetricsConfigurations
      description: Lists the metrics configurations for the bucket.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketMetricsConfigurationsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBucketMetricsConfigurationsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/#ListBuckets':
    get:
      operationId: ListBuckets
      description: 'Returns a list of all buckets owned by the authenticated sender of the request.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBucketsOutput'
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?uploads#ListMultipartUploads':
    get:
      operationId: ListMultipartUploads
      description: 'This operation lists in-progress multipart uploads.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMultipartUploadsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMultipartUploadsRequest'
        - name: MaxUploads
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: KeyMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: UploadIdMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?versions#ListObjectVersions':
    get:
      operationId: ListObjectVersions
      description: 'Returns metadata about all of the versions of objects in a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectVersionsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectVersionsRequest'
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: KeyMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: VersionIdMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}#ListObjects':
    get:
      operationId: ListObjects
      description: 'Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsOutput'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectsRequest'
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?list-type=2#ListObjectsV2':
    get:
      operationId: ListObjectsV2
      description: 'Returns some or all (up to 1000) of the objects in a bucket. You can use the request parameters as selection criteria to return a subset of the objects in a bucket. Note: ListObjectsV2 is the revised List Objects API and we recommend you use this revised API for new application development.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectsV2Output'
        '480':
          description: NoSuchBucket
          schema:
            $ref: '#/definitions/NoSuchBucket'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectsV2Request'
        - name: MaxKeys
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: ContinuationToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#ListParts':
    get:
      operationId: ListParts
      description: 'Lists the parts that have been uploaded for a specific multipart upload.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPartsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPartsRequest'
        - name: MaxParts
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: PartNumberMarker
          type: string
          in: query
          description: Pagination token
          required: false
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?accelerate#PutBucketAccelerateConfiguration':
    put:
      operationId: PutBucketAccelerateConfiguration
      description: Sets the accelerate configuration of an existing bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketAccelerateConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?acl#PutBucketAcl':
    put:
      operationId: PutBucketAcl
      description: 'Sets the permissions on a bucket using access control lists (ACL).<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketAclRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?analytics#PutBucketAnalyticsConfiguration':
    put:
      operationId: PutBucketAnalyticsConfiguration
      description: Sets an analytics configuration for the bucket (specified by the analytics configuration ID).
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketAnalyticsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?cors#PutBucketCors':
    put:
      operationId: PutBucketCors
      description: 'Sets the cors configuration for a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketCorsRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?encryption#PutBucketEncryption':
    put:
      operationId: PutBucketEncryption
      description: 'Creates a new server-side encryption configuration (or replaces an existing one, if present).'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketEncryptionRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?inventory#PutBucketInventoryConfiguration':
    put:
      operationId: PutBucketInventoryConfiguration
      description: Adds an inventory configuration (identified by the inventory ID) from the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketInventoryConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?lifecycle#PutBucketLifecycle':
    put:
      operationId: PutBucketLifecycle
      description: 'Deprecated, see the PutBucketLifecycleConfiguration operation.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketLifecycleRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?lifecycle#PutBucketLifecycleConfiguration':
    put:
      operationId: PutBucketLifecycleConfiguration
      description: 'Sets lifecycle configuration for your bucket. If a lifecycle configuration exists, it replaces it.'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketLifecycleConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?logging#PutBucketLogging':
    put:
      operationId: PutBucketLogging
      description: 'Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. To set the logging status of a bucket, you must be the bucket owner.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketLoggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?metrics#PutBucketMetricsConfiguration':
    put:
      operationId: PutBucketMetricsConfiguration
      description: Sets a metrics configuration (specified by the metrics configuration ID) for the bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketMetricsConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?notification#PutBucketNotification':
    put:
      operationId: PutBucketNotification
      description: 'Deprecated, see the PutBucketNotificationConfiguraiton operation.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketNotificationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?notification#PutBucketNotificationConfiguration':
    put:
      operationId: PutBucketNotificationConfiguration
      description: Enables notifications of specified events for a bucket.
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketNotificationConfigurationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?policy#PutBucketPolicy':
    put:
      operationId: PutBucketPolicy
      description: 'Replaces a policy on a bucket. If the bucket already has a policy, the one in this request completely replaces it.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketPolicyRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?replication#PutBucketReplication':
    put:
      operationId: PutBucketReplication
      description: ' Creates a new replication configuration (or replaces an existing one, if present). For more information, see <a href=" https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the Amazon S3 Developer Guide. '
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketReplicationRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?requestPayment#PutBucketRequestPayment':
    put:
      operationId: PutBucketRequestPayment
      description: 'Sets the request payment configuration for a bucket. By default, the bucket owner pays for downloads from the bucket. This configuration parameter enables the bucket owner (only) to specify that the person requesting the download will be charged for the download. Documentation on requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketRequestPaymentRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?tagging#PutBucketTagging':
    put:
      operationId: PutBucketTagging
      description: 'Sets the tags for a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?versioning#PutBucketVersioning':
    put:
      operationId: PutBucketVersioning
      description: 'Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketVersioningRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}?website#PutBucketWebsite':
    put:
      operationId: PutBucketWebsite
      description: 'Set the website configuration for a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html</p>'
      responses:
        '200':
          description: Success
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutBucketWebsiteRequest'
        - name: Bucket
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#PutObject':
    put:
      operationId: PutObject
      description: 'Adds an object to a bucket.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?acl#PutObjectAcl':
    put:
      operationId: PutObjectAcl
      description: 'uses the acl subresource to set the access control list (ACL) permissions for an object that already exists in a bucket<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectAclOutput'
        '480':
          description: NoSuchKey
          schema:
            $ref: '#/definitions/NoSuchKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutObjectAclRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?tagging#PutObjectTagging':
    put:
      operationId: PutObjectTagging
      description: Sets the supplied tag-set to an object that already exists in a bucket
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutObjectTaggingOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutObjectTaggingRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?restore#RestoreObject':
    post:
      operationId: RestoreObject
      description: 'Restores an archived copy of an object back into Amazon S3<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreObjectOutput'
        '480':
          description: ObjectAlreadyInActiveTierError
          schema:
            $ref: '#/definitions/ObjectAlreadyInActiveTierError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreObjectRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}?select&select-type=2#SelectObjectContent':
    post:
      operationId: SelectObjectContent
      description: 'This operation filters the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must also specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records, and returns only records that match the specified SQL expression. You must also specify the data serialization format for the response.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SelectObjectContentOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SelectObjectContentRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#UploadPart':
    put:
      operationId: UploadPart
      description: '<p>Uploads a part in a multipart upload.</p> <p> <b>Note:</b> After you initiate multipart upload and upload one or more parts, you must either complete or abort multipart upload in order to stop getting charged for storage of the uploaded parts. Only after you either complete or abort multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts storage.</p><p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadPartRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
  '/{Bucket}/{Key}#UploadPartCopy':
    put:
      operationId: UploadPartCopy
      description: 'Uploads a part by copying data from an existing object as data source.<p>http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UploadPartCopyOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UploadPartCopyRequest'
        - name: Bucket
          in: path
          type: string
          required: true
        - name: Key
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/x-amz-security-token'
definitions:
  AbortMultipartUploadOutput:
    type: object
    example: {}
    properties: {}
  AbortMultipartUploadRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: bigobject
      UploadId: xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--
    properties: {}
  NoSuchUpload: {}
  CompleteMultipartUploadOutput:
    type: object
    example:
      Bucket: acexamplebucket
      ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
      Key: bigobject
      Location: 'https://examplebucket.s3.amazonaws.com/bigobject'
    properties:
      Location:
        $ref: '#/definitions/Location'
      Bucket:
        $ref: '#/definitions/BucketName'
      Key:
        $ref: '#/definitions/ObjectKey'
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
  CompleteMultipartUploadRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: bigobject
      MultipartUpload:
        Parts:
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            PartNumber: '1'
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            PartNumber: '2'
      UploadId: 7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--
    properties:
      MultipartUpload:
        $ref: '#/definitions/CompletedMultipartUpload'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  CopyObjectOutput:
    type: object
    example:
      CopyObjectResult:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: '2016-12-15T17:38:53.000Z'
    properties:
      CopyObjectResult:
        $ref: '#/definitions/CopyObjectResult'
  CopyObjectRequest:
    type: object
    example:
      Bucket: destinationbucket
      CopySource: /sourcebucket/HappyFacejpg
      Key: HappyFaceCopyjpg
    properties: {}
  ObjectNotInActiveTierError: {}
  CreateBucketOutput:
    type: object
    example:
      Location: /examplebucket
    properties: {}
  CreateBucketRequest:
    type: object
    example:
      Bucket: examplebucket
    properties:
      CreateBucketConfiguration:
        $ref: '#/definitions/CreateBucketConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  BucketAlreadyExists: {}
  BucketAlreadyOwnedByYou: {}
  CreateMultipartUploadOutput:
    type: object
    example:
      Bucket: examplebucket
      Key: largeobject
      UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: ID for the initiated multipart upload.
  CreateMultipartUploadRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: largeobject
    properties: {}
  DeleteBucketRequest:
    type: object
    example:
      Bucket: forrandall2
    properties: {}
  DeleteBucketAnalyticsConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketCorsRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  DeleteBucketEncryptionRequest:
    type: object
    properties: {}
  DeleteBucketInventoryConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketLifecycleRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  DeleteBucketMetricsConfigurationRequest:
    type: object
    properties: {}
  DeleteBucketPolicyRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  DeleteBucketReplicationRequest:
    type: object
    example:
      Bucket: example
    properties: {}
  DeleteBucketTaggingRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  DeleteBucketWebsiteRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  DeleteObjectOutput:
    type: object
    example: {}
    properties: {}
  DeleteObjectRequest:
    type: object
    example:
      Bucket: ExampleBucket
      Key: HappyFace.jpg
    properties: {}
  DeleteObjectTaggingOutput:
    type: object
    example:
      VersionId: 'null'
    properties: {}
  DeleteObjectTaggingRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: HappyFace.jpg
    properties: {}
  DeleteObjectsOutput:
    type: object
    example:
      Deleted:
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F
          Key: objectkey1
        - DeleteMarker: 'true'
          DeleteMarkerVersionId: iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt
          Key: objectkey2
    properties:
      Deleted:
        $ref: '#/definitions/DeletedObjects'
      Errors:
        $ref: '#/definitions/Errors'
  DeleteObjectsRequest:
    type: object
    required:
      - Delete
    example:
      Bucket: examplebucket
      Delete:
        Objects:
          - Key: objectkey1
          - Key: objectkey2
        Quiet: false
    properties:
      Delete:
        $ref: '#/definitions/Delete'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  GetBucketAccelerateConfigurationOutput:
    type: object
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: The accelerate configuration of the bucket.
  GetBucketAccelerateConfigurationRequest:
    type: object
    properties: {}
  GetBucketAclOutput:
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Owner'
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
  GetBucketAclRequest:
    type: object
    properties: {}
  GetBucketAnalyticsConfigurationOutput:
    type: object
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
  GetBucketAnalyticsConfigurationRequest:
    type: object
    properties: {}
  GetBucketCorsOutput:
    type: object
    example:
      CORSRules:
        - AllowedHeaders:
            - Authorization
          AllowedMethods:
            - GET
          AllowedOrigins:
            - '*'
          MaxAgeSeconds: 3000
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
  GetBucketCorsRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketEncryptionOutput:
    type: object
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
  GetBucketEncryptionRequest:
    type: object
    properties: {}
  GetBucketInventoryConfigurationOutput:
    type: object
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
  GetBucketInventoryConfigurationRequest:
    type: object
    properties: {}
  GetBucketLifecycleOutput:
    type: object
    example:
      Rules:
        - Expiration:
            Days: 1
          ID: delete logs
          Prefix: 123/
          Status: Enabled
    properties:
      Rules:
        $ref: '#/definitions/Rules'
  GetBucketLifecycleRequest:
    type: object
    example:
      Bucket: acl1
    properties: {}
  GetBucketLifecycleConfigurationOutput:
    type: object
    example:
      Rules:
        - ID: Rule for TaxDocs/
          Prefix: TaxDocs
          Status: Enabled
          Transitions:
            - Days: 365
              StorageClass: STANDARD_IA
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
  GetBucketLifecycleConfigurationRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketLocationOutput:
    type: object
    example:
      LocationConstraint: us-west-2
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
  GetBucketLocationRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketLoggingOutput:
    type: object
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
  GetBucketLoggingRequest:
    type: object
    properties: {}
  GetBucketMetricsConfigurationOutput:
    type: object
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
  GetBucketMetricsConfigurationRequest:
    type: object
    properties: {}
  NotificationConfigurationDeprecated:
    type: object
    example:
      QueueConfiguration:
        Event: 's3:ObjectCreated:Put'
        Events:
          - 's3:ObjectCreated:Put'
        Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
        Queue: 'arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue'
      TopicConfiguration:
        Event: 's3:ObjectCreated:Copy'
        Events:
          - 's3:ObjectCreated:Copy'
        Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
        Topic: 'arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic'
    properties:
      TopicConfiguration:
        $ref: '#/definitions/TopicConfigurationDeprecated'
      QueueConfiguration:
        $ref: '#/definitions/QueueConfigurationDeprecated'
      CloudFunctionConfiguration:
        $ref: '#/definitions/CloudFunctionConfiguration'
  GetBucketNotificationConfigurationRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  NotificationConfiguration:
    type: object
    properties:
      TopicConfigurations:
        $ref: '#/definitions/TopicConfigurationList'
      QueueConfigurations:
        $ref: '#/definitions/QueueConfigurationList'
      LambdaFunctionConfigurations:
        $ref: '#/definitions/LambdaFunctionConfigurationList'
    description: 'Container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off on the bucket.'
  GetBucketPolicyOutput:
    type: object
    example:
      Policy: '{"Version":"2008-10-17","Id":"LogPolicy","Statement":[{"Sid":"Enables the log delivery group to publish logs to your bucket ","Effect":"Allow","Principal":{"AWS":"111122223333"},"Action":["s3:GetBucketAcl","s3:GetObjectAcl","s3:PutObject"],"Resource":["arn:aws:s3:::policytest1/*","arn:aws:s3:::policytest1"]}]}'
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
  GetBucketPolicyRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketReplicationOutput:
    type: object
    example:
      ReplicationConfiguration:
        Role: 'arn:aws:iam::acct-id:role/example-role'
        Rules:
          - Destination:
              Bucket: 'arn:aws:s3:::destination-bucket'
            ID: MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy
            Prefix: Tax
            Status: Enabled
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
  GetBucketReplicationRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketRequestPaymentOutput:
    type: object
    example:
      Payer: BucketOwner
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
  GetBucketRequestPaymentRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketTaggingOutput:
    type: object
    required:
      - TagSet
    example:
      TagSet:
        - Key: key1
          Value: value1
        - Key: key2
          Value: value2
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
  GetBucketTaggingRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketVersioningOutput:
    type: object
    example:
      MFADelete: Disabled
      Status: Enabled
    properties:
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
      MFADelete:
        $ref: '#/definitions/MFADeleteStatus'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
  GetBucketVersioningRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetBucketWebsiteOutput:
    type: object
    example:
      ErrorDocument:
        Key: error.html
      IndexDocument:
        Suffix: index.html
    properties:
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
  GetBucketWebsiteRequest:
    type: object
    example:
      Bucket: examplebucket
    properties: {}
  GetObjectOutput:
    type: object
    example:
      AcceptRanges: bytes
      ContentLength: '10'
      ContentRange: bytes 0-9/43
      ContentType: text/plain
      ETag: '"0d94420ffd0bc68cd3d152506b97a9cc"'
      LastModified: 'Thu, 09 Oct 2014 22:57:28 GMT'
      Metadata: {}
      VersionId: 'null'
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
  GetObjectRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: SampleFile.txt
      Range: bytes=0-9
    properties: {}
  NoSuchKey: {}
  GetObjectAclOutput:
    type: object
    example:
      Grants:
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE_ACP
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ
        - Grantee:
            DisplayName: owner-display-name
            ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ_ACP
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
    properties:
      Owner:
        $ref: '#/definitions/Owner'
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
  GetObjectAclRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: HappyFace.jpg
    properties: {}
  GetObjectTaggingOutput:
    type: object
    required:
      - TagSet
    example:
      TagSet:
        - Key: Key1
          Value: Value1
      VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
  GetObjectTaggingRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: exampleobject
      VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
    properties: {}
  GetObjectTorrentOutput:
    type: object
    example: {}
    properties:
      Body:
        $ref: '#/definitions/Body'
  GetObjectTorrentRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: HappyFace.jpg
    properties: {}
  HeadBucketRequest:
    type: object
    example:
      Bucket: acl1
    properties: {}
  NoSuchBucket: {}
  HeadObjectOutput:
    type: object
    example:
      AcceptRanges: bytes
      ContentLength: '3191'
      ContentType: image/jpeg
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      LastModified: 'Thu, 15 Dec 2016 01:19:41 GMT'
      Metadata: {}
      VersionId: 'null'
    properties: {}
  HeadObjectRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: HappyFace.jpg
    properties: {}
  ListBucketAnalyticsConfigurationsOutput:
    type: object
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The ContinuationToken that represents where this request began.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: 'NextContinuationToken is sent when isTruncated is true, which indicates that there are more analytics configurations to list. The next request must include this NextContinuationToken. The token is obfuscated and is not a usable value.'
      AnalyticsConfigurationList:
        $ref: '#/definitions/AnalyticsConfigurationList'
        description: The list of analytics configurations for a bucket.
  ListBucketAnalyticsConfigurationsRequest:
    type: object
    properties: {}
  ListBucketInventoryConfigurationsOutput:
    type: object
    properties:
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: 'If sent in the request, the marker that is used as a starting point for this inventory configuration list response.'
      InventoryConfigurationList:
        $ref: '#/definitions/InventoryConfigurationList'
        description: The list of inventory configurations for a bucket.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of inventory configurations is truncated in this response. A value of true indicates that the list is truncated.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue this inventory configuration listing. Use the NextContinuationToken from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.
  ListBucketInventoryConfigurationsRequest:
    type: object
    properties: {}
  ListBucketMetricsConfigurationsOutput:
    type: object
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request.
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: The marker used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.
      MetricsConfigurationList:
        $ref: '#/definitions/MetricsConfigurationList'
        description: The list of metrics configurations for a bucket.
  ListBucketMetricsConfigurationsRequest:
    type: object
    properties: {}
  ListBucketsOutput:
    type: object
    example:
      Buckets:
        - CreationDate: '2012-02-15T21: 03: 02.000Z'
          Name: examplebucket
        - CreationDate: '2011-07-24T19: 33: 50.000Z'
          Name: examplebucket2
        - CreationDate: '2010-12-17T00: 56: 49.000Z'
          Name: examplebucket3
      Owner:
        DisplayName: own-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
    properties:
      Buckets:
        $ref: '#/definitions/Buckets'
      Owner:
        $ref: '#/definitions/Owner'
  ListMultipartUploadsOutput:
    type: object
    example:
      Bucket: acl1
      IsTruncated: true
      KeyMarker: ''
      MaxUploads: '2'
      NextKeyMarker: someobjectkey
      NextUploadIdMarker: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
      UploadIdMarker: ''
      Uploads:
        - Initiated: '2014-05-01T05:40:58.000Z'
          Initiator:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: mohanataws
            ID: 852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
        - Initiated: '2014-05-01T05:41:27.000Z'
          Initiator:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: The key at or after which the listing began.
      UploadIdMarker:
        $ref: '#/definitions/UploadIdMarker'
        description: Upload ID after which listing began.
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.'
      Delimiter:
        $ref: '#/definitions/Delimiter'
      NextUploadIdMarker:
        $ref: '#/definitions/NextUploadIdMarker'
        description: 'When a list is truncated, this element specifies the value that should be used for the upload-id-marker request parameter in a subsequent request.'
      MaxUploads:
        $ref: '#/definitions/MaxUploads'
        description: Maximum number of multipart uploads that could have been included in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.
      Uploads:
        $ref: '#/definitions/MultipartUploadList'
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListMultipartUploadsRequest:
    type: object
    example:
      Bucket: examplebucket
      KeyMarker: nextkeyfrompreviousresponse
      MaxUploads: '2'
      UploadIdMarker: valuefrompreviousresponse
    properties: {}
  ListObjectVersionsOutput:
    type: object
    example:
      Versions:
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: true
          Key: HappyFace.jpg
          LastModified: '2016-12-15T01:19:41.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: 'null'
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: false
          Key: HappyFace.jpg
          LastModified: '2016-12-13T00:58:26.000Z'
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: 'A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.'
      KeyMarker:
        $ref: '#/definitions/KeyMarker'
        description: Marks the last Key returned in a truncated response.
      VersionIdMarker:
        $ref: '#/definitions/VersionIdMarker'
      NextKeyMarker:
        $ref: '#/definitions/NextKeyMarker'
        description: Use this value for the key marker request parameter in a subsequent request.
      NextVersionIdMarker:
        $ref: '#/definitions/NextVersionIdMarker'
        description: Use this value for the next version id marker parameter in a subsequent request.
      Versions:
        $ref: '#/definitions/ObjectVersionList'
      DeleteMarkers:
        $ref: '#/definitions/DeleteMarkers'
      Name:
        $ref: '#/definitions/BucketName'
      Prefix:
        $ref: '#/definitions/Prefix'
      Delimiter:
        $ref: '#/definitions/Delimiter'
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListObjectVersionsRequest:
    type: object
    example:
      Bucket: examplebucket
      Prefix: HappyFace.jpg
    properties: {}
  ListObjectsOutput:
    type: object
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: example1.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 11
          StorageClass: STANDARD
        - ETag: '"9c8af9a76df052144598c115ef33e511"'
          Key: example2.jpg
          LastModified: '2013-11-15T01:10:49.000Z'
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 713193
          StorageClass: STANDARD
      NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      Marker:
        $ref: '#/definitions/Marker'
      NextMarker:
        $ref: '#/definitions/NextMarker'
        description: 'When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMaker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.'
      Contents:
        $ref: '#/definitions/ObjectList'
      Name:
        $ref: '#/definitions/BucketName'
      Prefix:
        $ref: '#/definitions/Prefix'
      Delimiter:
        $ref: '#/definitions/Delimiter'
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
  ListObjectsRequest:
    type: object
    example:
      Bucket: examplebucket
      MaxKeys: '2'
    properties: {}
  ListObjectsV2Output:
    type: object
    example:
      Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: happyface.jpg
          LastModified: '2014-11-21T19:40:05.000Z'
          Size: 11
          StorageClass: STANDARD
        - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
          Key: test.jpg
          LastModified: '2014-05-02T04:51:50.000Z'
          Size: 4192256
          StorageClass: STANDARD
      IsTruncated: true
      KeyCount: '2'
      MaxKeys: '2'
      Name: examplebucket
      NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
      Prefix: ''
    properties:
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: A flag that indicates whether or not Amazon S3 returned all of the results that satisfied the search criteria.
      Contents:
        $ref: '#/definitions/ObjectList'
        description: Metadata about each object returned.
      Name:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to list.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Limits the response to keys that begin with the specified prefix.
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: A delimiter is a character you use to group keys.
      MaxKeys:
        $ref: '#/definitions/MaxKeys'
        description: Sets the maximum number of keys returned in the response. The response might contain fewer keys but will never contain more.
      CommonPrefixes:
        $ref: '#/definitions/CommonPrefixList'
        description: CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by delimiter
      EncodingType:
        $ref: '#/definitions/EncodingType'
        description: Encoding type used by Amazon S3 to encode object keys in the response.
      KeyCount:
        $ref: '#/definitions/KeyCount'
        description: 'KeyCount is the number of keys returned with this request. KeyCount will always be less than equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys '
      ContinuationToken:
        $ref: '#/definitions/Token'
        description: ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key
      NextContinuationToken:
        $ref: '#/definitions/NextToken'
        description: NextContinuationToken is sent when isTruncated is true which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this NextContinuationToken. NextContinuationToken is obfuscated and is not a real key
      StartAfter:
        $ref: '#/definitions/StartAfter'
        description: StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket
  ListObjectsV2Request:
    type: object
    example:
      Bucket: examplebucket
      MaxKeys: '2'
    properties: {}
  ListPartsOutput:
    type: object
    example:
      Initiator:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Owner:
        DisplayName: owner-display-name
        ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      Parts:
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:11:42.000Z'
          PartNumber: '1'
          Size: 26246026
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: '2016-12-16T00:15:01.000Z'
          PartNumber: '2'
          Size: 26246026
      StorageClass: STANDARD
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: Name of the bucket to which the multipart upload was initiated.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Object key for which the multipart upload was initiated.
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID identifying the multipart upload whose parts are being listed.
      PartNumberMarker:
        $ref: '#/definitions/PartNumberMarker'
        description: Part number after which listing begins.
      NextPartNumberMarker:
        $ref: '#/definitions/NextPartNumberMarker'
        description: 'When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.'
      MaxParts:
        $ref: '#/definitions/MaxParts'
        description: Maximum number of parts that were allowed in the response.
      IsTruncated:
        $ref: '#/definitions/IsTruncated'
        description: Indicates whether the returned list of parts is truncated.
      Parts:
        $ref: '#/definitions/Parts'
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
      Owner:
        $ref: '#/definitions/Owner'
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
  ListPartsRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: bigobject
      UploadId: example7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--
    properties: {}
  PutBucketAccelerateConfigurationRequest:
    type: object
    required:
      - AccelerateConfiguration
    properties:
      AccelerateConfiguration:
        $ref: '#/definitions/AccelerateConfiguration'
        description: Specifies the Accelerate Configuration you want to set for the bucket.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAclRequest:
    type: object
    example:
      Bucket: examplebucket
      GrantFullControl: id=examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484
      GrantWrite: 'uri=http://acs.amazonaws.com/groups/s3/LogDelivery'
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketAnalyticsConfigurationRequest:
    type: object
    required:
      - AnalyticsConfiguration
    properties:
      AnalyticsConfiguration:
        $ref: '#/definitions/AnalyticsConfiguration'
        description: The configuration and any analyses for the analytics filter.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketCorsRequest:
    type: object
    required:
      - CORSConfiguration
    example:
      Bucket: ''
      CORSConfiguration:
        CORSRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - 'http://www.example.com'
            ExposeHeaders:
              - x-amz-server-side-encryption
            MaxAgeSeconds: 3000
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            MaxAgeSeconds: 3000
      ContentMD5: ''
    properties:
      CORSConfiguration:
        $ref: '#/definitions/CORSConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketEncryptionRequest:
    type: object
    required:
      - ServerSideEncryptionConfiguration
    properties:
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketInventoryConfigurationRequest:
    type: object
    required:
      - InventoryConfiguration
    properties:
      InventoryConfiguration:
        $ref: '#/definitions/InventoryConfiguration'
        description: Specifies the inventory configuration.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleRequest:
    type: object
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/LifecycleConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLifecycleConfigurationRequest:
    type: object
    example:
      Bucket: examplebucket
      LifecycleConfiguration:
        Rules:
          - Expiration:
              Days: 3650
            Filter:
              Prefix: documents/
            ID: TestOnly
            Status: Enabled
            Transitions:
              - Days: 365
                StorageClass: GLACIER
    properties:
      LifecycleConfiguration:
        $ref: '#/definitions/BucketLifecycleConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketLoggingRequest:
    type: object
    required:
      - BucketLoggingStatus
    example:
      Bucket: sourcebucket
      BucketLoggingStatus:
        LoggingEnabled:
          TargetBucket: targetbucket
          TargetGrants:
            - Grantee:
                Type: Group
                URI: 'http://acs.amazonaws.com/groups/global/AllUsers'
              Permission: READ
          TargetPrefix: MyBucketLogs/
    properties:
      BucketLoggingStatus:
        $ref: '#/definitions/BucketLoggingStatus'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketMetricsConfigurationRequest:
    type: object
    required:
      - MetricsConfiguration
    properties:
      MetricsConfiguration:
        $ref: '#/definitions/MetricsConfiguration'
        description: Specifies the metrics configuration.
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationRequest:
    type: object
    required:
      - NotificationConfiguration
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfigurationDeprecated'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketNotificationConfigurationRequest:
    type: object
    required:
      - NotificationConfiguration
    example:
      Bucket: examplebucket
      NotificationConfiguration:
        TopicConfigurations:
          - Events:
              - 's3:ObjectCreated:*'
            TopicArn: 'arn:aws:sns:us-west-2:123456789012:s3-notification-topic'
    properties:
      NotificationConfiguration:
        $ref: '#/definitions/NotificationConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketPolicyRequest:
    type: object
    required:
      - Policy
    example:
      Bucket: examplebucket
      Policy: '{"Version": "2012-10-17", "Statement": [{ "Sid": "id-1","Effect": "Allow","Principal": {"AWS": "arn:aws:iam::123456789012:root"}, "Action": [ "s3:PutObject","s3:PutObjectAcl"], "Resource": ["arn:aws:s3:::acl3/*" ] } ]}'
    properties:
      Policy:
        $ref: '#/definitions/Policy'
        description: The bucket policy as a JSON document.
  PutBucketReplicationRequest:
    type: object
    required:
      - ReplicationConfiguration
    example:
      Bucket: examplebucket
      ReplicationConfiguration:
        Role: 'arn:aws:iam::123456789012:role/examplerole'
        Rules:
          - Destination:
              Bucket: 'arn:aws:s3:::destinationbucket'
              StorageClass: STANDARD
            Prefix: ''
            Status: Enabled
    properties:
      ReplicationConfiguration:
        $ref: '#/definitions/ReplicationConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketRequestPaymentRequest:
    type: object
    required:
      - RequestPaymentConfiguration
    example:
      Bucket: examplebucket
      RequestPaymentConfiguration:
        Payer: Requester
    properties:
      RequestPaymentConfiguration:
        $ref: '#/definitions/RequestPaymentConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketTaggingRequest:
    type: object
    required:
      - Tagging
    example:
      Bucket: examplebucket
      Tagging:
        TagSet:
          - Key: Key1
            Value: Value1
          - Key: Key2
            Value: Value2
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketVersioningRequest:
    type: object
    required:
      - VersioningConfiguration
    example:
      Bucket: examplebucket
      VersioningConfiguration:
        MFADelete: Disabled
        Status: Enabled
    properties:
      VersioningConfiguration:
        $ref: '#/definitions/VersioningConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutBucketWebsiteRequest:
    type: object
    required:
      - WebsiteConfiguration
    example:
      Bucket: examplebucket
      ContentMD5: ''
      WebsiteConfiguration:
        ErrorDocument:
          Key: error.html
        IndexDocument:
          Suffix: index.html
    properties:
      WebsiteConfiguration:
        $ref: '#/definitions/WebsiteConfiguration'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectOutput:
    type: object
    example:
      ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
      ServerSideEncryption: AES256
      VersionId: Ri.vC6qVlA4dEnjgRV4ZHsHoFIjqEMNt
    properties: {}
  PutObjectRequest:
    type: object
    example:
      Body: filetoupload
      Bucket: examplebucket
      Key: exampleobject
      ServerSideEncryption: AES256
      Tagging: key1=value1&key2=value2
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
  PutObjectAclOutput:
    type: object
    example: {}
    properties: {}
  PutObjectAclRequest:
    type: object
    example:
      AccessControlPolicy: {}
      Bucket: examplebucket
      GrantFullControl: 'emailaddress=user1@example.com,emailaddress=user2@example.com'
      GrantRead: 'uri=http://acs.amazonaws.com/groups/global/AllUsers'
      Key: HappyFace.jpg
    properties:
      AccessControlPolicy:
        $ref: '#/definitions/AccessControlPolicy'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  PutObjectTaggingOutput:
    type: object
    example:
      VersionId: 'null'
    properties: {}
  PutObjectTaggingRequest:
    type: object
    required:
      - Tagging
    example:
      Bucket: examplebucket
      Key: HappyFace.jpg
      Tagging:
        TagSet:
          - Key: Key3
            Value: Value3
          - Key: Key4
            Value: Value4
    properties:
      Tagging:
        $ref: '#/definitions/Tagging'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  RestoreObjectOutput:
    type: object
    example: {}
    properties: {}
  RestoreObjectRequest:
    type: object
    example:
      Bucket: examplebucket
      Key: archivedobjectkey
      RestoreRequest:
        Days: 1
        GlacierJobParameters:
          Tier: Expedited
    properties:
      RestoreRequest:
        $ref: '#/definitions/RestoreRequest'
    xml:
      namespace: 'http://s3.amazonaws.com/doc/2006-03-01/'
  ObjectAlreadyInActiveTierError: {}
  SelectObjectContentOutput:
    type: object
    properties:
      Payload:
        $ref: '#/definitions/SelectObjectContentEventStream'
  SelectObjectContentRequest:
    type: object
    required:
      - Expression
      - ExpressionType
      - InputSerialization
      - OutputSerialization
    properties:
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (e.g., SQL).'
      RequestProgress:
        $ref: '#/definitions/RequestProgress'
        description: Specifies if periodic request progress information should be enabled.
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the format of the data in the object that is being queried.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes the format of the data that you want Amazon S3 to return in response.
    description: 'Request to filter the contents of an Amazon S3 object based on a simple Structured Query Language (SQL) statement. In the request, along with the SQL expression, you must also specify a data serialization format (JSON or CSV) of the object. Amazon S3 uses this to parse object data into records, and returns only records that match the specified SQL expression. You must also specify the data serialization format for the response. For more information, go to <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select API Documentation</a>.'
  UploadPartOutput:
    type: object
    example:
      ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
    properties: {}
  UploadPartRequest:
    type: object
    example:
      Body: fileToUpload
      Bucket: examplebucket
      Key: examplelargeobject
      PartNumber: '1'
      UploadId: xadcOB_7YPBOJuoFiQ9cz4P3Pe6FIZwO4f7wN93uHsNBEw97pl5eNwzExg0LAT2dUN91cOmrEQHDsP3WA60CEg--
    properties:
      Body:
        $ref: '#/definitions/Body'
        description: Object data.
  UploadPartCopyOutput:
    type: object
    example:
      CopyPartResult:
        ETag: '"65d16d19e65a7508a51f043180edcc36"'
        LastModified: '2016-12-29T21:44:28.000Z'
    properties:
      CopyPartResult:
        $ref: '#/definitions/CopyPartResult'
  UploadPartCopyRequest:
    type: object
    example:
      Bucket: examplebucket
      CopySource: /bucketname/sourceobjectkey
      CopySourceRange: bytes=1-100000
      Key: examplelargeobject
      PartNumber: '2'
      UploadId: exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--
    properties: {}
  AbortDate:
    type: string
    format: date-time
  DaysAfterInitiation:
    type: integer
  AbortIncompleteMultipartUpload:
    type: object
    properties:
      DaysAfterInitiation:
        $ref: '#/definitions/DaysAfterInitiation'
        description: Indicates the number of days that must pass since initiation for Lifecycle to abort an Incomplete Multipart Upload.
    description: Specifies the days since the initiation of an Incomplete Multipart Upload that Lifecycle will wait before permanently removing all parts of the upload.
  RequestCharged:
    type: string
    enum:
      - requester
    description: 'If present, indicates that the requester was successfully charged for the request.'
  BucketName:
    type: string
  ObjectKey:
    type: string
    minLength: 1
  MultipartUploadId:
    type: string
  RequestPayer:
    type: string
    enum:
      - requester
    description: 'Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html'
  AbortRuleId:
    type: string
  BucketAccelerateStatus:
    type: string
    enum:
      - Enabled
      - Suspended
  AccelerateConfiguration:
    type: object
    properties:
      Status:
        $ref: '#/definitions/BucketAccelerateStatus'
        description: The accelerate configuration of the bucket.
  AcceptRanges:
    type: string
  Grants:
    type: array
    items:
      $ref: '#/definitions/Grant'
  Owner:
    type: object
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
      ID:
        $ref: '#/definitions/ID'
  AccessControlPolicy:
    type: object
    properties:
      Grants:
        $ref: '#/definitions/Grants'
        description: A list of grants.
      Owner:
        $ref: '#/definitions/Owner'
  OwnerOverride:
    type: string
    enum:
      - Destination
  AccessControlTranslation:
    type: object
    required:
      - Owner
    properties:
      Owner:
        $ref: '#/definitions/OwnerOverride'
        description: The override value for the owner of the replica object.
    description: Container for information regarding the access control for replicas.
  AccountId:
    type: string
  AllowQuotedRecordDelimiter:
    type: boolean
  AllowedHeader:
    type: string
  AllowedHeaders:
    type: array
    items:
      $ref: '#/definitions/AllowedHeader'
    xml:
      wrapped: false
  AllowedMethod:
    type: string
  AllowedMethods:
    type: array
    items:
      $ref: '#/definitions/AllowedMethod'
    xml:
      wrapped: false
  AllowedOrigin:
    type: string
  AllowedOrigins:
    type: array
    items:
      $ref: '#/definitions/AllowedOrigin'
    xml:
      wrapped: false
  Prefix:
    type: string
  TagSet:
    type: array
    items:
      $ref: '#/definitions/Tag'
  AnalyticsAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when evaluating an AND predicate.
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags to use when evaluating an AND predicate.
    xml:
      wrapped: false
  AnalyticsId:
    type: string
  AnalyticsFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when evaluating an analytics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag to use when evaluating an analytics filter.
      And:
        $ref: '#/definitions/AnalyticsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating an analytics filter. The operator must have at least two predicates.'
  StorageClassAnalysis:
    type: object
    properties:
      DataExport:
        $ref: '#/definitions/StorageClassAnalysisDataExport'
        description: A container used to describe how data related to the storage class analysis should be exported.
  AnalyticsConfiguration:
    type: object
    required:
      - Id
      - StorageClassAnalysis
    properties:
      Id:
        $ref: '#/definitions/AnalyticsId'
        description: The identifier used to represent an analytics configuration.
      Filter:
        $ref: '#/definitions/AnalyticsFilter'
        description: 'The filter used to describe a set of objects for analyses. A filter must have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided, all objects will be considered in any analysis.'
      StorageClassAnalysis:
        $ref: '#/definitions/StorageClassAnalysis'
        description: 'If present, it indicates that data related to access patterns will be collected and made available to analyze the tradeoffs between different storage classes.'
  AnalyticsConfigurationList:
    type: array
    items:
      $ref: '#/definitions/AnalyticsConfiguration'
    xml:
      wrapped: false
  AnalyticsS3BucketDestination:
    type: object
    required:
      - Format
      - Bucket
    properties:
      Format:
        $ref: '#/definitions/AnalyticsS3ExportFileFormat'
        description: The file format used when exporting data to Amazon S3.
      BucketAccountId:
        $ref: '#/definitions/AccountId'
        description: 'The account ID that owns the destination bucket. If no account ID is provided, the owner will not be validated prior to exporting data.'
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon resource name (ARN) of the bucket to which data is exported.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix to use when exporting data. The exported data begins with this prefix.
  AnalyticsExportDestination:
    type: object
    required:
      - S3BucketDestination
    properties:
      S3BucketDestination:
        $ref: '#/definitions/AnalyticsS3BucketDestination'
        description: A destination signifying output to an S3 bucket.
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Name of the tag.
      Value:
        $ref: '#/definitions/Value'
        description: Value of the tag.
  AnalyticsS3ExportFileFormat:
    type: string
    enum:
      - CSV
  Body:
    type: string
  CreationDate:
    type: string
    format: date-time
  Bucket:
    type: object
    properties:
      Name:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket.
      CreationDate:
        $ref: '#/definitions/CreationDate'
        description: Date the bucket was created.
  BucketCannedACL:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
  LifecycleRules:
    type: array
    items:
      $ref: '#/definitions/LifecycleRule'
    xml:
      wrapped: false
  BucketLifecycleConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/LifecycleRules'
  BucketLocationConstraint:
    type: string
    enum:
      - EU
      - eu-west-1
      - us-west-1
      - us-west-2
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1
      - sa-east-1
      - cn-north-1
      - eu-central-1
  LoggingEnabled:
    type: object
    required:
      - TargetBucket
      - TargetPrefix
    properties:
      TargetBucket:
        $ref: '#/definitions/TargetBucket'
        description: 'Specifies the bucket where you want Amazon S3 to store server access logs. You can have your logs delivered to any bucket that you own, including the same bucket that is being logged. You can also configure multiple buckets to deliver their logs to the same target bucket. In this case you should choose a different TargetPrefix for each source bucket so that the delivered log files can be distinguished by key.'
      TargetGrants:
        $ref: '#/definitions/TargetGrants'
      TargetPrefix:
        $ref: '#/definitions/TargetPrefix'
        description: This element lets you specify a prefix for the keys that the log files will be stored under.
    description: Container for logging information. Presence of this element indicates that logging is enabled. Parameters TargetBucket and TargetPrefix are required in this case.
  BucketLoggingStatus:
    type: object
    properties:
      LoggingEnabled:
        $ref: '#/definitions/LoggingEnabled'
  BucketLogsPermission:
    type: string
    enum:
      - FULL_CONTROL
      - READ
      - WRITE
  BucketVersioningStatus:
    type: string
    enum:
      - Enabled
      - Suspended
  Buckets:
    type: array
    items:
      $ref: '#/definitions/Bucket'
  BytesProcessed:
    type: integer
  BytesReturned:
    type: integer
  BytesScanned:
    type: integer
  CORSRules:
    type: array
    items:
      $ref: '#/definitions/CORSRule'
    xml:
      wrapped: false
  CORSConfiguration:
    type: object
    required:
      - CORSRules
    properties:
      CORSRules:
        $ref: '#/definitions/CORSRules'
  ExposeHeaders:
    type: array
    items:
      $ref: '#/definitions/ExposeHeader'
    xml:
      wrapped: false
  MaxAgeSeconds:
    type: integer
  CORSRule:
    type: object
    required:
      - AllowedMethods
      - AllowedOrigins
    properties:
      AllowedHeaders:
        $ref: '#/definitions/AllowedHeaders'
        description: Specifies which headers are allowed in a pre-flight OPTIONS request.
      AllowedMethods:
        $ref: '#/definitions/AllowedMethods'
        description: Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.
      AllowedOrigins:
        $ref: '#/definitions/AllowedOrigins'
        description: One or more origins you want customers to be able to access the bucket from.
      ExposeHeaders:
        $ref: '#/definitions/ExposeHeaders'
        description: 'One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).'
      MaxAgeSeconds:
        $ref: '#/definitions/MaxAgeSeconds'
        description: The time in seconds that your browser is to cache the preflight response for the specified resource.
  FileHeaderInfo:
    type: string
    enum:
      - USE
      - IGNORE
      - NONE
  Comments:
    type: string
  QuoteEscapeCharacter:
    type: string
  RecordDelimiter:
    type: string
  FieldDelimiter:
    type: string
  QuoteCharacter:
    type: string
  CSVInput:
    type: object
    properties:
      FileHeaderInfo:
        $ref: '#/definitions/FileHeaderInfo'
        description: 'Describes the first line of input. Valid values: None, Ignore, Use.'
      Comments:
        $ref: '#/definitions/Comments'
        description: Single character used to indicate a row should be ignored when present at the start of a row.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: Single character used for escaping the quote character inside an already escaped value.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: Value used to separate individual records.
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: Value used to separate individual fields in a record.
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: Value used for escaping where the field delimiter is part of the value.
      AllowQuotedRecordDelimiter:
        $ref: '#/definitions/AllowQuotedRecordDelimiter'
        description: Specifies that CSV field values may contain quoted record delimiters and such records should be allowed. Default value is FALSE. Setting this value to TRUE may lower performance.
    description: Describes how a CSV-formatted input object is formatted.
  QuoteFields:
    type: string
    enum:
      - ALWAYS
      - ASNEEDED
  CSVOutput:
    type: object
    properties:
      QuoteFields:
        $ref: '#/definitions/QuoteFields'
        description: Indicates whether or not all output fields should be quoted.
      QuoteEscapeCharacter:
        $ref: '#/definitions/QuoteEscapeCharacter'
        description: Single character used for escaping the quote character inside an already escaped value.
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: Value used to separate individual records.
      FieldDelimiter:
        $ref: '#/definitions/FieldDelimiter'
        description: Value used to separate individual fields in a record.
      QuoteCharacter:
        $ref: '#/definitions/QuoteCharacter'
        description: Value used for escaping where the field delimiter is part of the value.
    description: Describes how CSV-formatted results are formatted.
  CacheControl:
    type: string
  CloudFunction:
    type: string
  NotificationId:
    type: string
    description: 'Optional unique identifier for configurations in a notification configuration. If you don''t provide one, Amazon S3 will assign an ID.'
  Event:
    type: string
    enum:
      - 's3:ReducedRedundancyLostObject'
      - 's3:ObjectCreated:*'
      - 's3:ObjectCreated:Put'
      - 's3:ObjectCreated:Post'
      - 's3:ObjectCreated:Copy'
      - 's3:ObjectCreated:CompleteMultipartUpload'
      - 's3:ObjectRemoved:*'
      - 's3:ObjectRemoved:Delete'
      - 's3:ObjectRemoved:DeleteMarkerCreated'
    description: Bucket event for which to send notifications.
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
    xml:
      wrapped: false
  CloudFunctionInvocationRole:
    type: string
  CloudFunctionConfiguration:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
      CloudFunction:
        $ref: '#/definitions/CloudFunction'
      InvocationRole:
        $ref: '#/definitions/CloudFunctionInvocationRole'
  Code:
    type: string
  CommonPrefix:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
  CommonPrefixList:
    type: array
    items:
      $ref: '#/definitions/CommonPrefix'
    xml:
      wrapped: false
  Location:
    type: string
  Expiration:
    type: string
  ETag:
    type: string
  ServerSideEncryption:
    type: string
    enum:
      - AES256
      - 'aws:kms'
  ObjectVersionId:
    type: string
  SSEKMSKeyId:
    type: string
    format: password
  CompletedMultipartUpload:
    type: object
    properties:
      Parts:
        $ref: '#/definitions/CompletedPartList'
  CompletedPartList:
    type: array
    items:
      $ref: '#/definitions/CompletedPart'
    xml:
      wrapped: false
  PartNumber:
    type: integer
  CompletedPart:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number that identifies the part. This is a positive integer between 1 and 10,000.'
  CompressionType:
    type: string
    enum:
      - NONE
      - GZIP
      - BZIP2
  HttpErrorCodeReturnedEquals:
    type: string
  KeyPrefixEquals:
    type: string
  Condition:
    type: object
    properties:
      HttpErrorCodeReturnedEquals:
        $ref: '#/definitions/HttpErrorCodeReturnedEquals'
        description: 'The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.'
      KeyPrefixEquals:
        $ref: '#/definitions/KeyPrefixEquals'
        description: 'The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.'
  ConfirmRemoveSelfBucketAccess:
    type: boolean
  ContentDisposition:
    type: string
  ContentEncoding:
    type: string
  ContentLanguage:
    type: string
  ContentLength:
    type: integer
  ContentMD5:
    type: string
  ContentRange:
    type: string
  ContentType:
    type: string
  ContinuationEvent:
    type: object
    properties: {}
  CopyObjectResult:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
      LastModified:
        $ref: '#/definitions/LastModified'
  CopySourceVersionId:
    type: string
  SSECustomerAlgorithm:
    type: string
  SSECustomerKeyMD5:
    type: string
  ObjectCannedACL:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
      - aws-exec-read
      - bucket-owner-read
      - bucket-owner-full-control
  CopySource:
    type: string
    pattern: \/.+\/.+
  CopySourceIfMatch:
    type: string
  CopySourceIfModifiedSince:
    type: string
    format: date-time
  CopySourceIfNoneMatch:
    type: string
  CopySourceIfUnmodifiedSince:
    type: string
    format: date-time
  Expires:
    type: string
    format: date-time
  GrantFullControl:
    type: string
  GrantRead:
    type: string
  GrantReadACP:
    type: string
  GrantWriteACP:
    type: string
  Metadata:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/MetadataKey'
        value:
          $ref: '#/definitions/MetadataValue'
  MetadataDirective:
    type: string
    enum:
      - COPY
      - REPLACE
  TaggingDirective:
    type: string
    enum:
      - COPY
      - REPLACE
  StorageClass:
    type: string
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
  WebsiteRedirectLocation:
    type: string
  SSECustomerKey:
    type: string
    format: password
  CopySourceSSECustomerAlgorithm:
    type: string
  CopySourceSSECustomerKey:
    type: string
    format: password
  CopySourceSSECustomerKeyMD5:
    type: string
  TaggingHeader:
    type: string
  LastModified:
    type: string
    format: date-time
  CopyPartResult:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag of the object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the object was uploaded.
  CopySourceRange:
    type: string
  CreateBucketConfiguration:
    type: object
    properties:
      LocationConstraint:
        $ref: '#/definitions/BucketLocationConstraint'
        description: 'Specifies the region where the bucket will be created. If you don''t specify a region, the bucket will be created in US Standard.'
  GrantWrite:
    type: string
  Date:
    type: string
    format: date-time
  Days:
    type: integer
  ObjectIdentifierList:
    type: array
    items:
      $ref: '#/definitions/ObjectIdentifier'
    xml:
      wrapped: false
  Quiet:
    type: boolean
  Delete:
    type: object
    required:
      - Objects
    properties:
      Objects:
        $ref: '#/definitions/ObjectIdentifierList'
      Quiet:
        $ref: '#/definitions/Quiet'
        description: 'Element to enable quiet mode for the request. When you add this element, you must set its value to true.'
  InventoryId:
    type: string
  MetricsId:
    type: string
  DeleteMarker:
    type: boolean
  IsLatest:
    type: boolean
  DeleteMarkerEntry:
    type: object
    properties:
      Owner:
        $ref: '#/definitions/Owner'
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
  DeleteMarkerReplicationStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  DeleteMarkerReplication:
    type: object
    properties:
      Status:
        $ref: '#/definitions/DeleteMarkerReplicationStatus'
        description: '<p>The status of the delete marker replication.</p> <note> <p> In the current implementation, Amazon S3 does not replicate the delete markers. Therefore, the status must be <code>Disabled</code>. </p> </note>'
    description: Specifies whether Amazon S3 should replicate delete makers.
  DeleteMarkerVersionId:
    type: string
  DeleteMarkers:
    type: array
    items:
      $ref: '#/definitions/DeleteMarkerEntry'
    xml:
      wrapped: false
  MFA:
    type: string
  DeletedObjects:
    type: array
    items:
      $ref: '#/definitions/DeletedObject'
    xml:
      wrapped: false
  Errors:
    type: array
    items:
      $ref: '#/definitions/Error'
    xml:
      wrapped: false
  DeletedObject:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
      DeleteMarker:
        $ref: '#/definitions/DeleteMarker'
      DeleteMarkerVersionId:
        $ref: '#/definitions/DeleteMarkerVersionId'
  Delimiter:
    type: string
  Description:
    type: string
  EncryptionConfiguration:
    type: object
    properties:
      ReplicaKmsKeyID:
        $ref: '#/definitions/ReplicaKmsKeyID'
        description: ' The ID of the AWS KMS key for the region where the destination bucket resides. Amazon S3 uses this key to encrypt the replica object. '
    description: Container for information regarding encryption based configuration for replicas.
  Destination:
    type: object
    required:
      - Bucket
    properties:
      Bucket:
        $ref: '#/definitions/BucketName'
        description: '<p> Amazon resource name (ARN) of the bucket where you want Amazon S3 to store replicas of the object identified by the rule. </p> <p> If you have multiple rules in your replication configuration, all rules must specify the same bucket as the destination. A replication configuration can replicate objects only to one destination bucket. </p>'
      Account:
        $ref: '#/definitions/AccountId'
        description: '<p> Account ID of the destination bucket. Currently Amazon S3 verifies this value only if Access Control Translation is enabled. </p> <p> In a cross-account scenario, if you tell Amazon S3 to change replica ownership to the AWS account that owns the destination bucket by adding the <code>AccessControlTranslation</code> element, this is the account ID of the destination bucket owner. </p>'
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
      AccessControlTranslation:
        $ref: '#/definitions/AccessControlTranslation'
        description: '<p> Container for information regarding the access control for replicas. </p> <p> Use only in a cross-account scenario, where source and destination bucket owners are not the same, when you want to change replica ownership to the AWS account that owns the destination bucket. If you don''t add this element to the replication configuration, the replicas are owned by same AWS account that owns the source object. </p>'
      EncryptionConfiguration:
        $ref: '#/definitions/EncryptionConfiguration'
        description: ' Container that provides encryption-related information. You must specify this element if the <code>SourceSelectionCriteria</code> is specified. '
    description: Container for replication destination information.
  DisplayName:
    type: string
  EmailAddress:
    type: string
  EnableRequestProgress:
    type: boolean
  EncodingType:
    type: string
    enum:
      - url
    description: 'Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.'
  KMSContext:
    type: string
  Encryption:
    type: object
    required:
      - EncryptionType
    properties:
      EncryptionType:
        $ref: '#/definitions/ServerSideEncryption'
        description: 'The server-side encryption algorithm used when storing job results in Amazon S3 (e.g., AES256, aws:kms).'
      KMSKeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'If the encryption type is aws:kms, this optional value specifies the AWS KMS key ID to use for encryption of job results.'
      KMSContext:
        $ref: '#/definitions/KMSContext'
        description: 'If the encryption type is aws:kms, this optional value can be used to specify the encryption context for the restore results.'
    description: Describes the server-side encryption that will be applied to the restore results.
  ReplicaKmsKeyID:
    type: string
  EndEvent:
    type: object
    properties: {}
  Message:
    type: string
  Error:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
      Code:
        $ref: '#/definitions/Code'
      Message:
        $ref: '#/definitions/Message'
  ErrorDocument:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key name to use when a 4XX class error occurs.
  ExpirationStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  ExpiredObjectDeleteMarker:
    type: boolean
  ExposeHeader:
    type: string
  Expression:
    type: string
  ExpressionType:
    type: string
    enum:
      - SQL
  FetchOwner:
    type: boolean
  FilterRuleName:
    type: string
    enum:
      - prefix
      - suffix
  FilterRuleValue:
    type: string
  FilterRule:
    type: object
    properties:
      Name:
        $ref: '#/definitions/FilterRuleName'
        description: 'Object key name prefix or suffix identifying one or more objects to which the filtering rule applies. Maximum prefix length can be up to 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, go to <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the Amazon Simple Storage Service Developer Guide.'
      Value:
        $ref: '#/definitions/FilterRuleValue'
    description: Container for key value pair that defines the criteria for the filter rule.
  FilterRuleList:
    type: array
    description: A list of containers for key value pair that defines the criteria for the filter rule.
    items:
      $ref: '#/definitions/FilterRule'
    xml:
      wrapped: false
  ServerSideEncryptionConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/ServerSideEncryptionRules'
        description: Container for information about a particular server-side encryption configuration rule.
    description: Container for server-side encryption configuration rules. Currently S3 supports one rule only.
  InventoryConfiguration:
    type: object
    required:
      - Destination
      - IsEnabled
      - Id
      - IncludedObjectVersions
      - Schedule
    properties:
      Destination:
        $ref: '#/definitions/InventoryDestination'
        description: Contains information about where to publish the inventory results.
      IsEnabled:
        $ref: '#/definitions/IsEnabled'
        description: Specifies whether the inventory is enabled or disabled.
      Filter:
        $ref: '#/definitions/InventoryFilter'
        description: Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria.
      Id:
        $ref: '#/definitions/InventoryId'
        description: The ID used to identify the inventory configuration.
      IncludedObjectVersions:
        $ref: '#/definitions/InventoryIncludedObjectVersions'
        description: Specifies which object version(s) to included in the inventory results.
      OptionalFields:
        $ref: '#/definitions/InventoryOptionalFields'
        description: Contains the optional fields that are included in the inventory results.
      Schedule:
        $ref: '#/definitions/InventorySchedule'
        description: Specifies the schedule for generating inventory results.
  Rules:
    type: array
    items:
      $ref: '#/definitions/Rule'
    xml:
      wrapped: false
  MetricsConfiguration:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/MetricsId'
        description: The ID used to identify the metrics configuration.
      Filter:
        $ref: '#/definitions/MetricsFilter'
        description: 'Specifies a metrics configuration filter. The metrics configuration will only include objects that meet the filter''s criteria. A filter must be a prefix, a tag, or a conjunction (MetricsAndOperator).'
  Policy:
    type: string
  ReplicationConfiguration:
    type: object
    required:
      - Role
      - Rules
    properties:
      Role:
        $ref: '#/definitions/Role'
        description: Amazon Resource Name (ARN) of an IAM role for Amazon S3 to assume when replicating the objects.
      Rules:
        $ref: '#/definitions/ReplicationRules'
        description: 'Container for one or more replication rules. Replication configuration must have at least one rule and can contain up to 1,000 rules. '
    description: 'Container for replication rules. You can add as many as 1,000 rules. Total replication configuration size can be up to 2 MB.'
  Payer:
    type: string
    enum:
      - Requester
      - BucketOwner
  MFADeleteStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  RedirectAllRequestsTo:
    type: object
    required:
      - HostName
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: Name of the host where requests will be redirected.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: 'Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.'
  IndexDocument:
    type: object
    required:
      - Suffix
    properties:
      Suffix:
        $ref: '#/definitions/Suffix'
        description: A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.
  RoutingRules:
    type: array
    items:
      $ref: '#/definitions/RoutingRule'
  Restore:
    type: string
  MissingMeta:
    type: integer
  ReplicationStatus:
    type: string
    enum:
      - COMPLETE
      - PENDING
      - FAILED
      - REPLICA
  PartsCount:
    type: integer
  TagCount:
    type: integer
  IfMatch:
    type: string
  IfModifiedSince:
    type: string
    format: date-time
  IfNoneMatch:
    type: string
  IfUnmodifiedSince:
    type: string
    format: date-time
  Range:
    type: string
  ResponseCacheControl:
    type: string
  ResponseContentDisposition:
    type: string
  ResponseContentEncoding:
    type: string
  ResponseContentLanguage:
    type: string
  ResponseContentType:
    type: string
  ResponseExpires:
    type: string
    format: date-time
  Tier:
    type: string
    enum:
      - Standard
      - Bulk
      - Expedited
  GlacierJobParameters:
    type: object
    required:
      - Tier
    properties:
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
  Grantee:
    type: object
    required:
      - Type
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Screen name of the grantee.
      EmailAddress:
        $ref: '#/definitions/EmailAddress'
        description: Email address of the grantee.
      ID:
        $ref: '#/definitions/ID'
        description: The canonical user ID of the grantee.
      Type:
        $ref: '#/definitions/Type'
        description: Type of grantee
      URI:
        $ref: '#/definitions/URI'
        description: URI of the grantee group.
    xml:
      namespace: 'http://www.w3.org/2001/XMLSchema-instance'
      attribute: true
  Permission:
    type: string
    enum:
      - FULL_CONTROL
      - WRITE
      - WRITE_ACP
      - READ
      - READ_ACP
  Grant:
    type: object
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
      Permission:
        $ref: '#/definitions/Permission'
        description: Specifies the permission given to the grantee.
  ID:
    type: string
  Type:
    type: string
    enum:
      - CanonicalUser
      - AmazonCustomerByEmail
      - Group
  URI:
    type: string
  HostName:
    type: string
  HttpRedirectCode:
    type: string
  Suffix:
    type: string
  Initiated:
    type: string
    format: date-time
  Initiator:
    type: object
    properties:
      ID:
        $ref: '#/definitions/ID'
        description: 'If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value.'
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: Name of the Principal.
  JSONInput:
    type: object
    properties:
      Type:
        $ref: '#/definitions/JSONType'
        description: 'The type of JSON. Valid values: Document, Lines.'
  ParquetInput:
    type: object
    properties: {}
  InputSerialization:
    type: object
    properties:
      CSV:
        $ref: '#/definitions/CSVInput'
        description: Describes the serialization of a CSV-encoded object.
      CompressionType:
        $ref: '#/definitions/CompressionType'
        description: 'Specifies object''s compression format. Valid values: NONE, GZIP, BZIP2. Default Value: NONE.'
      JSON:
        $ref: '#/definitions/JSONInput'
        description: Specifies JSON as object's input serialization format.
      Parquet:
        $ref: '#/definitions/ParquetInput'
        description: Specifies Parquet as object's input serialization format.
    description: Describes the serialization format of the object.
  InventoryDestination:
    type: object
    required:
      - S3BucketDestination
    properties:
      S3BucketDestination:
        $ref: '#/definitions/InventoryS3BucketDestination'
        description: 'Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.'
  IsEnabled:
    type: boolean
  InventoryFilter:
    type: object
    required:
      - Prefix
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that an object must have to be included in the inventory results.
  InventoryIncludedObjectVersions:
    type: string
    enum:
      - All
      - Current
  InventoryOptionalFields:
    type: array
    items:
      $ref: '#/definitions/InventoryOptionalField'
  InventorySchedule:
    type: object
    required:
      - Frequency
    properties:
      Frequency:
        $ref: '#/definitions/InventoryFrequency'
        description: Specifies how frequently inventory results are produced.
  InventoryConfigurationList:
    type: array
    items:
      $ref: '#/definitions/InventoryConfiguration'
    xml:
      wrapped: false
  InventoryS3BucketDestination:
    type: object
    required:
      - Bucket
      - Format
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the account that owns the destination bucket.
      Bucket:
        $ref: '#/definitions/BucketName'
        description: The Amazon resource name (ARN) of the bucket where inventory results will be published.
      Format:
        $ref: '#/definitions/InventoryFormat'
        description: Specifies the output format of the inventory results.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix that is prepended to all inventory results.
      Encryption:
        $ref: '#/definitions/InventoryEncryption'
        description: Contains the type of server-side encryption used to encrypt the inventory results.
  SSES3:
    type: object
    properties: {}
    description: Specifies the use of SSE-S3 to encrypt delievered Inventory reports.
  SSEKMS:
    type: object
    required:
      - KeyId
    properties:
      KeyId:
        $ref: '#/definitions/SSEKMSKeyId'
        description: Specifies the ID of the AWS Key Management Service (KMS) master encryption key to use for encrypting Inventory reports.
    description: Specifies the use of SSE-KMS to encrypt delievered Inventory reports.
  InventoryEncryption:
    type: object
    properties:
      SSES3:
        $ref: '#/definitions/SSES3'
        description: Specifies the use of SSE-S3 to encrypt delievered Inventory reports.
      SSEKMS:
        $ref: '#/definitions/SSEKMS'
        description: Specifies the use of SSE-KMS to encrypt delievered Inventory reports.
    description: Contains the type of server-side encryption used to encrypt the inventory results.
  InventoryFormat:
    type: string
    enum:
      - CSV
      - ORC
  InventoryFrequency:
    type: string
    enum:
      - Daily
      - Weekly
  InventoryOptionalField:
    type: string
    enum:
      - Size
      - LastModifiedDate
      - StorageClass
      - ETag
      - IsMultipartUploaded
      - ReplicationStatus
      - EncryptionStatus
  IsTruncated:
    type: boolean
  JSONType:
    type: string
    enum:
      - DOCUMENT
      - LINES
  JSONOutput:
    type: object
    properties:
      RecordDelimiter:
        $ref: '#/definitions/RecordDelimiter'
        description: The value used to separate individual records in the output.
  KeyCount:
    type: integer
  KeyMarker:
    type: string
  LambdaFunctionArn:
    type: string
  NotificationConfigurationFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/S3KeyFilter'
    description: 'Container for object key name filtering rules. For information about key name filtering, go to <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring Event Notifications</a> in the Amazon Simple Storage Service Developer Guide.'
  LambdaFunctionConfiguration:
    type: object
    required:
      - LambdaFunctionArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      LambdaFunctionArn:
        $ref: '#/definitions/LambdaFunctionArn'
        description: Lambda cloud function ARN that Amazon S3 can invoke when it detects events of the specified type.
      Events:
        $ref: '#/definitions/EventList'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
    description: Container for specifying the AWS Lambda notification configuration.
  LambdaFunctionConfigurationList:
    type: array
    items:
      $ref: '#/definitions/LambdaFunctionConfiguration'
    xml:
      wrapped: false
  LifecycleConfiguration:
    type: object
    required:
      - Rules
    properties:
      Rules:
        $ref: '#/definitions/Rules'
  LifecycleExpiration:
    type: object
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
      Days:
        $ref: '#/definitions/Days'
        description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
      ExpiredObjectDeleteMarker:
        $ref: '#/definitions/ExpiredObjectDeleteMarker'
        description: 'Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.'
  LifecycleRuleFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: This tag must exist in the object's tag set in order for the rule to apply.
      And:
        $ref: '#/definitions/LifecycleRuleAndOperator'
    description: 'The Filter is used to identify objects that a Lifecycle Rule applies to. A Filter must have exactly one of Prefix, Tag, or And specified.'
  TransitionList:
    type: array
    items:
      $ref: '#/definitions/Transition'
    xml:
      wrapped: false
  NoncurrentVersionTransitionList:
    type: array
    items:
      $ref: '#/definitions/NoncurrentVersionTransition'
    xml:
      wrapped: false
  NoncurrentVersionExpiration:
    type: object
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide.'
    description: 'Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object''s lifetime.'
  LifecycleRule:
    type: object
    required:
      - Status
    properties:
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value cannot be longer than 255 characters.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies. This is deprecated; use Filter instead.
      Filter:
        $ref: '#/definitions/LifecycleRuleFilter'
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
      Transitions:
        $ref: '#/definitions/TransitionList'
      NoncurrentVersionTransitions:
        $ref: '#/definitions/NoncurrentVersionTransitionList'
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
  LifecycleRuleAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
      Tags:
        $ref: '#/definitions/TagSet'
        description: All of these tags must exist in the object's tag set in order for the rule to apply.
    description: This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
    xml:
      wrapped: false
  Token:
    type: string
  NextToken:
    type: string
  MetricsConfigurationList:
    type: array
    items:
      $ref: '#/definitions/MetricsConfiguration'
    xml:
      wrapped: false
  UploadIdMarker:
    type: string
  NextKeyMarker:
    type: string
  NextUploadIdMarker:
    type: string
  MaxUploads:
    type: integer
  MultipartUploadList:
    type: array
    items:
      $ref: '#/definitions/MultipartUpload'
    xml:
      wrapped: false
  VersionIdMarker:
    type: string
  NextVersionIdMarker:
    type: string
  ObjectVersionList:
    type: array
    items:
      $ref: '#/definitions/ObjectVersion'
    xml:
      wrapped: false
  MaxKeys:
    type: integer
  Marker:
    type: string
  NextMarker:
    type: string
  ObjectList:
    type: array
    items:
      $ref: '#/definitions/Object'
    xml:
      wrapped: false
  StartAfter:
    type: string
  PartNumberMarker:
    type: integer
  NextPartNumberMarker:
    type: integer
  MaxParts:
    type: integer
  Parts:
    type: array
    items:
      $ref: '#/definitions/Part'
    xml:
      wrapped: false
  LocationPrefix:
    type: string
  TargetBucket:
    type: string
  TargetGrants:
    type: array
    items:
      $ref: '#/definitions/TargetGrant'
  TargetPrefix:
    type: string
  MFADelete:
    type: string
    enum:
      - Enabled
      - Disabled
  MetadataKey:
    type: string
  MetadataValue:
    type: string
  MetadataEntry:
    type: object
    properties:
      Name:
        $ref: '#/definitions/MetadataKey'
      Value:
        $ref: '#/definitions/MetadataValue'
    description: A metadata key-value pair to store with an object.
  MetricsAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating an AND predicate.
      Tags:
        $ref: '#/definitions/TagSet'
        description: The list of tags used when evaluating an AND predicate.
    xml:
      wrapped: false
  MetricsFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: The prefix used when evaluating a metrics filter.
      Tag:
        $ref: '#/definitions/Tag'
        description: The tag used when evaluating a metrics filter.
      And:
        $ref: '#/definitions/MetricsAndOperator'
        description: 'A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter. The operator must have at least two predicates, and an object must match all of the predicates in order for the filter to apply.'
  MultipartUpload:
    type: object
    properties:
      UploadId:
        $ref: '#/definitions/MultipartUploadId'
        description: Upload ID that identifies the multipart upload.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key of the object for which the multipart upload was initiated.
      Initiated:
        $ref: '#/definitions/Initiated'
        description: Date and time at which the multipart upload was initiated.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the object.
      Owner:
        $ref: '#/definitions/Owner'
      Initiator:
        $ref: '#/definitions/Initiator'
        description: Identifies who initiated the multipart upload.
  TransitionStorageClass:
    type: string
    enum:
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
  NoncurrentVersionTransition:
    type: object
    properties:
      NoncurrentDays:
        $ref: '#/definitions/Days'
        description: 'Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide.'
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The class of storage used to store the object.
    description: 'Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA or GLACIER storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA or GLACIER storage class at a specific period in the object''s lifetime.'
  TopicConfigurationList:
    type: array
    items:
      $ref: '#/definitions/TopicConfiguration'
    xml:
      wrapped: false
  QueueConfigurationList:
    type: array
    items:
      $ref: '#/definitions/QueueConfiguration'
    xml:
      wrapped: false
  TopicConfigurationDeprecated:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Events:
        $ref: '#/definitions/EventList'
      Event:
        $ref: '#/definitions/Event'
        description: Bucket event for which to send notifications.
      Topic:
        $ref: '#/definitions/TopicArn'
        description: Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket.
  QueueConfigurationDeprecated:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      Event:
        $ref: '#/definitions/Event'
      Events:
        $ref: '#/definitions/EventList'
      Queue:
        $ref: '#/definitions/QueueArn'
  S3KeyFilter:
    type: object
    properties:
      FilterRules:
        $ref: '#/definitions/FilterRuleList'
    description: Container for object key name prefix and suffix filtering rules.
  Size:
    type: integer
  ObjectStorageClass:
    type: string
    enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
  Object:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
      LastModified:
        $ref: '#/definitions/LastModified'
      ETag:
        $ref: '#/definitions/ETag'
      Size:
        $ref: '#/definitions/Size'
      StorageClass:
        $ref: '#/definitions/ObjectStorageClass'
        description: The class of storage used to store the object.
      Owner:
        $ref: '#/definitions/Owner'
  ObjectIdentifier:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/ObjectKey'
        description: Key name of the object to delete.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: VersionId for the specific version of the object to delete.
  ObjectVersionStorageClass:
    type: string
    enum:
      - STANDARD
  ObjectVersion:
    type: object
    properties:
      ETag:
        $ref: '#/definitions/ETag'
      Size:
        $ref: '#/definitions/Size'
        description: Size in bytes of the object.
      StorageClass:
        $ref: '#/definitions/ObjectVersionStorageClass'
        description: The class of storage used to store the object.
      Key:
        $ref: '#/definitions/ObjectKey'
        description: The object key.
      VersionId:
        $ref: '#/definitions/ObjectVersionId'
        description: Version ID of an object.
      IsLatest:
        $ref: '#/definitions/IsLatest'
        description: Specifies whether the object is (true) or is not (false) the latest version of an object.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time the object was last modified.
      Owner:
        $ref: '#/definitions/Owner'
  S3Location:
    type: object
    required:
      - BucketName
      - Prefix
    properties:
      BucketName:
        $ref: '#/definitions/BucketName'
        description: The name of the bucket where the restore results will be placed.
      Prefix:
        $ref: '#/definitions/LocationPrefix'
        description: The prefix that is prepended to the restore results for this request.
      Encryption:
        $ref: '#/definitions/Encryption'
      CannedACL:
        $ref: '#/definitions/ObjectCannedACL'
        description: The canned ACL to apply to the restore results.
      AccessControlList:
        $ref: '#/definitions/Grants'
        description: A list of grants that control access to the staged results.
      Tagging:
        $ref: '#/definitions/Tagging'
        description: The tag-set that is applied to the restore results.
      UserMetadata:
        $ref: '#/definitions/UserMetadata'
        description: A list of metadata to store with the restore results in S3.
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: The class of storage used to store the restore results.
    description: Describes an S3 location that will receive the results of the restore request.
  OutputLocation:
    type: object
    properties:
      S3:
        $ref: '#/definitions/S3Location'
        description: Describes an S3 location that will receive the results of the restore request.
    description: Describes the location where the restore job's output is stored.
  OutputSerialization:
    type: object
    properties:
      CSV:
        $ref: '#/definitions/CSVOutput'
        description: Describes the serialization of CSV-encoded Select results.
      JSON:
        $ref: '#/definitions/JSONOutput'
        description: Specifies JSON as request's output serialization format.
    description: Describes how results of the Select job are serialized.
  Part:
    type: object
    properties:
      PartNumber:
        $ref: '#/definitions/PartNumber'
        description: 'Part number identifying the part. This is a positive integer between 1 and 10,000.'
      LastModified:
        $ref: '#/definitions/LastModified'
        description: Date and time at which the part was uploaded.
      ETag:
        $ref: '#/definitions/ETag'
        description: Entity tag returned when the part was uploaded.
      Size:
        $ref: '#/definitions/Size'
        description: Size of the uploaded part data.
  Priority:
    type: integer
  Progress:
    type: object
    properties:
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: Current number of object bytes scanned.
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: Current number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: Current number of bytes of records payload data returned.
  ProgressEvent:
    type: object
    properties:
      Details:
        $ref: '#/definitions/Progress'
        description: The Progress event details.
  Protocol:
    type: string
    enum:
      - http
      - https
  RequestPaymentConfiguration:
    type: object
    required:
      - Payer
    properties:
      Payer:
        $ref: '#/definitions/Payer'
        description: Specifies who pays for the download and request fees.
  Tagging:
    type: object
    required:
      - TagSet
    properties:
      TagSet:
        $ref: '#/definitions/TagSet'
  VersioningConfiguration:
    type: object
    properties:
      MFADelete:
        $ref: '#/definitions/MFADelete'
        description: 'Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.'
      Status:
        $ref: '#/definitions/BucketVersioningStatus'
        description: The versioning state of the bucket.
  WebsiteConfiguration:
    type: object
    properties:
      ErrorDocument:
        $ref: '#/definitions/ErrorDocument'
      IndexDocument:
        $ref: '#/definitions/IndexDocument'
      RedirectAllRequestsTo:
        $ref: '#/definitions/RedirectAllRequestsTo'
      RoutingRules:
        $ref: '#/definitions/RoutingRules'
  QueueArn:
    type: string
  QueueConfiguration:
    type: object
    required:
      - QueueArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      QueueArn:
        $ref: '#/definitions/QueueArn'
        description: Amazon SQS queue ARN to which Amazon S3 will publish a message when it detects events of specified type.
      Events:
        $ref: '#/definitions/EventList'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
    description: Container for specifying an configuration when you want Amazon S3 to publish events to an Amazon Simple Queue Service (Amazon SQS) queue.
  RecordsEvent:
    type: object
    properties:
      Payload:
        $ref: '#/definitions/Body'
        description: 'The byte array of partial, one or more result records.'
  ReplaceKeyPrefixWith:
    type: string
  ReplaceKeyWith:
    type: string
  Redirect:
    type: object
    properties:
      HostName:
        $ref: '#/definitions/HostName'
        description: The host name to use in the redirect request.
      HttpRedirectCode:
        $ref: '#/definitions/HttpRedirectCode'
        description: The HTTP redirect code to use on the response. Not required if one of the siblings is present.
      Protocol:
        $ref: '#/definitions/Protocol'
        description: 'Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request.'
      ReplaceKeyPrefixWith:
        $ref: '#/definitions/ReplaceKeyPrefixWith'
        description: 'The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.'
      ReplaceKeyWith:
        $ref: '#/definitions/ReplaceKeyWith'
        description: 'The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided.'
  Role:
    type: string
  ReplicationRules:
    type: array
    items:
      $ref: '#/definitions/ReplicationRule'
    xml:
      wrapped: false
  ReplicationRuleFilter:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Object keyname prefix that identifies subset of objects to which the rule applies.
      Tag:
        $ref: '#/definitions/Tag'
        description: <p>Container for specifying a tag key and value. </p> <p>The rule applies only to objects having the tag in its tagset.</p>
      And:
        $ref: '#/definitions/ReplicationRuleAndOperator'
        description: '<p>Container for specifying rule filters. These filters determine the subset of objects to which the rule applies. The element is required only if you specify more than one filter. For example: </p> <ul> <li> <p>You specify both a <code>Prefix</code> and a <code>Tag</code> filters. Then you wrap these in an <code>And</code> tag.</p> </li> <li> <p>You specify filter based on multiple tags. Then you wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>'
    description: 'Filter that identifies subset of objects to which the replication rule applies. A <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or an <code>And</code> child element.'
  ReplicationRuleStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  SourceSelectionCriteria:
    type: object
    properties:
      SseKmsEncryptedObjects:
        $ref: '#/definitions/SseKmsEncryptedObjects'
        description: ' Container for filter information of selection of KMS Encrypted S3 objects. The element is required if you include <code>SourceSelectionCriteria</code> in the replication configuration. '
    description: Container for filters that define which source objects should be replicated.
  ReplicationRule:
    type: object
    required:
      - Status
      - Destination
    properties:
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value cannot be longer than 255 characters.
      Priority:
        $ref: '#/definitions/Priority'
        description: '<p>The priority associated with the rule. If you specify multiple rules in a replication configuration, then Amazon S3 applies rule priority in the event there are conflicts (two or more rules identify the same object based on filter specified). The rule with higher priority takes precedence. For example,</p> <ul> <li> <p>Same object quality prefix based filter criteria If prefixes you specified in multiple rules overlap. </p> </li> <li> <p>Same object qualify tag based filter criteria specified in multiple rules</p> </li> </ul> <p>For more information, see <a href=" https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region Replication (CRR)</a> in the Amazon S3 Developer Guide.</p>'
      Prefix:
        $ref: '#/definitions/Prefix'
        description: 'Object keyname prefix identifying one or more objects to which the rule applies. Maximum prefix length can be up to 1,024 characters. '
      Filter:
        $ref: '#/definitions/ReplicationRuleFilter'
      Status:
        $ref: '#/definitions/ReplicationRuleStatus'
        description: The rule is ignored if status is not Enabled.
      SourceSelectionCriteria:
        $ref: '#/definitions/SourceSelectionCriteria'
        description: '<p> Container that describes additional filters in identifying source objects that you want to replicate. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using an AWS KMS-managed key. You can choose to enable or disable replication of these objects. </p> <p> if you want Amazon S3 to replicate objects created with server-side encryption using AWS KMS-managed keys. </p>'
      Destination:
        $ref: '#/definitions/Destination'
        description: Container for replication destination information.
      DeleteMarkerReplication:
        $ref: '#/definitions/DeleteMarkerReplication'
    description: Container for information about a particular replication rule.
  ReplicationRuleAndOperator:
    type: object
    properties:
      Prefix:
        $ref: '#/definitions/Prefix'
      Tags:
        $ref: '#/definitions/TagSet'
    xml:
      wrapped: false
  RequestProgress:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/EnableRequestProgress'
        description: 'Specifies whether periodic QueryProgress frames should be sent. Valid values: TRUE, FALSE. Default value: FALSE.'
  RestoreOutputPath:
    type: string
  RestoreRequest:
    type: object
    properties:
      Days:
        $ref: '#/definitions/Days'
        description: Lifetime of the active copy in days. Do not use with restores that specify OutputLocation.
      GlacierJobParameters:
        $ref: '#/definitions/GlacierJobParameters'
        description: Glacier related parameters pertaining to this job. Do not use with restores that specify OutputLocation.
      Type:
        $ref: '#/definitions/RestoreRequestType'
        description: Type of restore request.
      Tier:
        $ref: '#/definitions/Tier'
        description: Glacier retrieval tier at which the restore will be processed.
      Description:
        $ref: '#/definitions/Description'
        description: The optional description for the job.
      SelectParameters:
        $ref: '#/definitions/SelectParameters'
        description: Describes the parameters for Select job types.
      OutputLocation:
        $ref: '#/definitions/OutputLocation'
        description: Describes the location where the restore job's output is stored.
    description: Container for restore job parameters.
  RestoreRequestType:
    type: string
    enum:
      - SELECT
  SelectParameters:
    type: object
    required:
      - InputSerialization
      - ExpressionType
      - Expression
      - OutputSerialization
    properties:
      InputSerialization:
        $ref: '#/definitions/InputSerialization'
        description: Describes the serialization format of the object.
      ExpressionType:
        $ref: '#/definitions/ExpressionType'
        description: 'The type of the provided expression (e.g., SQL).'
      Expression:
        $ref: '#/definitions/Expression'
        description: The expression that is used to query the object.
      OutputSerialization:
        $ref: '#/definitions/OutputSerialization'
        description: Describes how the results of the Select job are serialized.
    description: Describes the parameters for Select job types.
  RoutingRule:
    type: object
    required:
      - Redirect
    properties:
      Condition:
        $ref: '#/definitions/Condition'
        description: 'A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.'
      Redirect:
        $ref: '#/definitions/Redirect'
        description: 'Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return.'
  Transition:
    type: object
    properties:
      Date:
        $ref: '#/definitions/Date'
        description: Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format.
      Days:
        $ref: '#/definitions/Days'
        description: 'Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.'
      StorageClass:
        $ref: '#/definitions/TransitionStorageClass'
        description: The class of storage used to store the object.
  Rule:
    type: object
    required:
      - Prefix
      - Status
    properties:
      Expiration:
        $ref: '#/definitions/LifecycleExpiration'
      ID:
        $ref: '#/definitions/ID'
        description: Unique identifier for the rule. The value cannot be longer than 255 characters.
      Prefix:
        $ref: '#/definitions/Prefix'
        description: Prefix identifying one or more objects to which the rule applies.
      Status:
        $ref: '#/definitions/ExpirationStatus'
        description: 'If ''Enabled'', the rule is currently being applied. If ''Disabled'', the rule is not currently being applied.'
      Transition:
        $ref: '#/definitions/Transition'
      NoncurrentVersionTransition:
        $ref: '#/definitions/NoncurrentVersionTransition'
      NoncurrentVersionExpiration:
        $ref: '#/definitions/NoncurrentVersionExpiration'
      AbortIncompleteMultipartUpload:
        $ref: '#/definitions/AbortIncompleteMultipartUpload'
  UserMetadata:
    type: array
    items:
      $ref: '#/definitions/MetadataEntry'
  StatsEvent:
    type: object
    properties:
      Details:
        $ref: '#/definitions/Stats'
        description: The Stats event details.
  SelectObjectContentEventStream:
    type: object
    properties:
      Records:
        $ref: '#/definitions/RecordsEvent'
        description: The Records Event.
      Stats:
        $ref: '#/definitions/StatsEvent'
        description: The Stats Event.
      Progress:
        $ref: '#/definitions/ProgressEvent'
        description: The Progress Event.
      Cont:
        $ref: '#/definitions/ContinuationEvent'
        description: The Continuation Event.
      End:
        $ref: '#/definitions/EndEvent'
        description: The End Event.
  ServerSideEncryptionByDefault:
    type: object
    required:
      - SSEAlgorithm
    properties:
      SSEAlgorithm:
        $ref: '#/definitions/ServerSideEncryption'
        description: Server-side encryption algorithm to use for the default encryption.
      KMSMasterKeyID:
        $ref: '#/definitions/SSEKMSKeyId'
        description: 'KMS master key ID to use for the default encryption. This parameter is allowed if SSEAlgorithm is aws:kms.'
    description: 'Describes the default server-side encryption to apply to new objects in the bucket. If Put Object request does not specify any server-side encryption, this default encryption will be applied.'
  ServerSideEncryptionRules:
    type: array
    items:
      $ref: '#/definitions/ServerSideEncryptionRule'
    xml:
      wrapped: false
  ServerSideEncryptionRule:
    type: object
    properties:
      ApplyServerSideEncryptionByDefault:
        $ref: '#/definitions/ServerSideEncryptionByDefault'
        description: 'Describes the default server-side encryption to apply to new objects in the bucket. If Put Object request does not specify any server-side encryption, this default encryption will be applied.'
    description: Container for information about a particular server-side encryption configuration rule.
  SseKmsEncryptedObjects:
    type: object
    required:
      - Status
    properties:
      Status:
        $ref: '#/definitions/SseKmsEncryptedObjectsStatus'
        description: The replication for KMS encrypted S3 objects is disabled if status is not Enabled.
    description: Container for filter information of selection of KMS Encrypted S3 objects.
  SseKmsEncryptedObjectsStatus:
    type: string
    enum:
      - Enabled
      - Disabled
  Stats:
    type: object
    properties:
      BytesScanned:
        $ref: '#/definitions/BytesScanned'
        description: Total number of object bytes scanned.
      BytesProcessed:
        $ref: '#/definitions/BytesProcessed'
        description: Total number of uncompressed object bytes processed.
      BytesReturned:
        $ref: '#/definitions/BytesReturned'
        description: Total number of bytes of records payload data returned.
  StorageClassAnalysisDataExport:
    type: object
    required:
      - OutputSchemaVersion
      - Destination
    properties:
      OutputSchemaVersion:
        $ref: '#/definitions/StorageClassAnalysisSchemaVersion'
        description: The version of the output schema to use when exporting data. Must be V_1.
      Destination:
        $ref: '#/definitions/AnalyticsExportDestination'
        description: The place to store the data for an analysis.
  StorageClassAnalysisSchemaVersion:
    type: string
    enum:
      - V_1
  Value:
    type: string
  TargetGrant:
    type: object
    properties:
      Grantee:
        $ref: '#/definitions/Grantee'
      Permission:
        $ref: '#/definitions/BucketLogsPermission'
        description: Logging permissions assigned to the Grantee for the bucket.
  TopicArn:
    type: string
  TopicConfiguration:
    type: object
    required:
      - TopicArn
      - Events
    properties:
      Id:
        $ref: '#/definitions/NotificationId'
      TopicArn:
        $ref: '#/definitions/TopicArn'
        description: Amazon SNS topic ARN to which Amazon S3 will publish a message when it detects events of specified type.
      Events:
        $ref: '#/definitions/EventList'
      Filter:
        $ref: '#/definitions/NotificationConfigurationFilter'
    description: Container for specifying the configuration when you want Amazon S3 to publish events to an Amazon Simple Notification Service (Amazon SNS) topic.
