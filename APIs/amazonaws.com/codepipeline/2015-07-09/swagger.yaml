swagger: '2.0'
info:
  version: '2015-07-09'
  x-release: v4
  title: AWS CodePipeline
  description: '<fullname>AWS CodePipeline</fullname> <p> <b>Overview</b> </p> <p>This is the AWS CodePipeline API Reference. This guide provides descriptions of the actions and data types for AWS CodePipeline. Some functionality for your pipeline is only configurable through the API. For additional information, see the <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html">AWS CodePipeline User Guide</a>.</p> <p>You can use the AWS CodePipeline API to work with pipelines, stages, actions, and transitions, as described below.</p> <p> <i>Pipelines</i> are models of automated release processes. Each pipeline is uniquely named, and consists of stages, actions, and transitions. </p> <p>You can work with pipelines by calling:</p> <ul> <li> <p> <a>CreatePipeline</a>, which creates a uniquely-named pipeline.</p> </li> <li> <p> <a>DeletePipeline</a>, which deletes the specified pipeline.</p> </li> <li> <p> <a>GetPipeline</a>, which returns information about the pipeline structure and pipeline metadata, including the pipeline Amazon Resource Name (ARN).</p> </li> <li> <p> <a>GetPipelineExecution</a>, which returns information about a specific execution of a pipeline.</p> </li> <li> <p> <a>GetPipelineState</a>, which returns information about the current state of the stages and actions of a pipeline.</p> </li> <li> <p> <a>ListPipelines</a>, which gets a summary of all of the pipelines associated with your account.</p> </li> <li> <p> <a>ListPipelineExecutions</a>, which gets a summary of the most recent executions for a pipeline.</p> </li> <li> <p> <a>StartPipelineExecution</a>, which runs the the most recent revision of an artifact through the pipeline.</p> </li> <li> <p> <a>UpdatePipeline</a>, which updates a pipeline with edits or changes to the structure of the pipeline.</p> </li> </ul> <p>Pipelines include <i>stages</i>. Each stage contains one or more actions that must complete before the next stage begins. A stage will result in success or failure. If a stage fails, then the pipeline stops at that stage and will remain stopped until either a new version of an artifact appears in the source location, or a user takes action to re-run the most recent artifact through the pipeline. You can call <a>GetPipelineState</a>, which displays the status of a pipeline, including the status of stages in the pipeline, or <a>GetPipeline</a>, which returns the entire structure of the pipeline, including the stages of that pipeline. For more information about the structure of stages and actions, also refer to the <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html">AWS CodePipeline Pipeline Structure Reference</a>.</p> <p>Pipeline stages include <i>actions</i>, which are categorized into categories such as source or build actions performed within a stage of a pipeline. For example, you can use a source action to import artifacts into a pipeline from a source such as Amazon S3. Like stages, you do not work with actions directly in most cases, but you do define and interact with actions when working with pipeline operations such as <a>CreatePipeline</a> and <a>GetPipelineState</a>. Valid action categories are:</p> <ul> <li> <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p> </li> <li> <p>Deploy</p> </li> <li> <p>Approval</p> </li> <li> <p>Invoke</p> </li> </ul> <p>Pipelines also include <i>transitions</i>, which allow the transition of artifacts from one stage to the next in a pipeline after the actions in one stage complete.</p> <p>You can work with transitions by calling:</p> <ul> <li> <p> <a>DisableStageTransition</a>, which prevents artifacts from transitioning to the next stage in a pipeline.</p> </li> <li> <p> <a>EnableStageTransition</a>, which enables transition of artifacts between stages in a pipeline. </p> </li> </ul> <p> <b>Using the API to integrate with AWS CodePipeline</b> </p> <p>For third-party integrators or developers who want to create their own integrations with AWS CodePipeline, the expected sequence varies from the standard API user. In order to integrate with AWS CodePipeline, developers will need to work with the following items:</p> <p> <b>Jobs</b>, which are instances of an action. For example, a job for a source action might import a revision of an artifact from a source. </p> <p>You can work with jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeJob</a>, which confirms whether a job worker has received the specified job,</p> </li> <li> <p> <a>GetJobDetails</a>, which returns the details of a job,</p> </li> <li> <p> <a>PollForJobs</a>, which determines whether there are any jobs to act upon, </p> </li> <li> <p> <a>PutJobFailureResult</a>, which provides details of a job failure, and</p> </li> <li> <p> <a>PutJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul> <p> <b>Third party jobs</b>, which are instances of an action created by a partner action and integrated into AWS CodePipeline. Partner actions are created by members of the AWS Partner Network.</p> <p>You can work with third party jobs by calling:</p> <ul> <li> <p> <a>AcknowledgeThirdPartyJob</a>, which confirms whether a job worker has received the specified job,</p> </li> <li> <p> <a>GetThirdPartyJobDetails</a>, which requests the details of a job for a partner action,</p> </li> <li> <p> <a>PollForThirdPartyJobs</a>, which determines whether there are any jobs to act upon, </p> </li> <li> <p> <a>PutThirdPartyJobFailureResult</a>, which provides details of a job failure, and</p> </li> <li> <p> <a>PutThirdPartyJobSuccessResult</a>, which provides details of a job success.</p> </li> </ul>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codepipeline
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codepipeline-2015-07-09.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/codepipeline/'
host: codepipeline.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AcknowledgeJob
      description: Returns information about a specified job and whether that job has been received by the job worker. Only used for custom actions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcknowledgeJobOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNonceException
          schema:
            $ref: '#/definitions/InvalidNonceException'
        '482':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcknowledgeJobInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AcknowledgeThirdPartyJob':
    post:
      operationId: AcknowledgeThirdPartyJob
      description: Confirms a job worker has received the specified job. Only used for partner actions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcknowledgeThirdPartyJobOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNonceException
          schema:
            $ref: '#/definitions/InvalidNonceException'
        '482':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcknowledgeThirdPartyJobInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateCustomActionType':
    post:
      operationId: CreateCustomActionType
      description: Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCustomActionTypeOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomActionTypeInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePipeline':
    post:
      operationId: CreatePipeline
      description: Creates a pipeline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNameInUseException
          schema:
            $ref: '#/definitions/PipelineNameInUseException'
        '482':
          description: InvalidStageDeclarationException
          schema:
            $ref: '#/definitions/InvalidStageDeclarationException'
        '483':
          description: InvalidActionDeclarationException
          schema:
            $ref: '#/definitions/InvalidActionDeclarationException'
        '484':
          description: InvalidBlockerDeclarationException
          schema:
            $ref: '#/definitions/InvalidBlockerDeclarationException'
        '485':
          description: InvalidStructureException
          schema:
            $ref: '#/definitions/InvalidStructureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePipelineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteCustomActionType':
    post:
      operationId: DeleteCustomActionType
      description: '<p>Marks a custom action as deleted. PollForJobs for the custom action will fail after the action is marked for deletion. Only used for custom actions.</p> <important> <p>To re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCustomActionTypeInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePipeline':
    post:
      operationId: DeletePipeline
      description: Deletes the specified pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePipelineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteWebhook':
    post:
      operationId: DeleteWebhook
      description: 'Deletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline from starting a pipeline every time an external event occurs. The API will return successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteWebhookOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteWebhookInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterWebhookWithThirdParty':
    post:
      operationId: DeregisterWebhookWithThirdParty
      description: Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently only supported for webhooks that target an action type of GitHub.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterWebhookWithThirdPartyOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: WebhookNotFoundException
          schema:
            $ref: '#/definitions/WebhookNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterWebhookWithThirdPartyInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisableStageTransition':
    post:
      operationId: DisableStageTransition
      description: Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableStageTransitionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#EnableStageTransition':
    post:
      operationId: EnableStageTransition
      description: Enables artifacts in a pipeline to transition to a stage in a pipeline.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableStageTransitionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetJobDetails':
    post:
      operationId: GetJobDetails
      description: '<p>Returns information about a job. Only used for custom actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobDetailsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetJobDetailsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPipeline':
    post:
      operationId: GetPipeline
      description: 'Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: PipelineVersionNotFoundException
          schema:
            $ref: '#/definitions/PipelineVersionNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPipelineExecution':
    post:
      operationId: GetPipelineExecution
      description: 'Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: PipelineExecutionNotFoundException
          schema:
            $ref: '#/definitions/PipelineExecutionNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPipelineState':
    post:
      operationId: GetPipelineState
      description: 'Returns information about the state of a pipeline, including the stages and actions.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPipelineStateOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPipelineStateInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetThirdPartyJobDetails':
    post:
      operationId: GetThirdPartyJobDetails
      description: '<p>Requests the details of a job for a third party action. Only used for partner actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetThirdPartyJobDetailsOutput'
        '480':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
        '483':
          description: InvalidJobException
          schema:
            $ref: '#/definitions/InvalidJobException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetThirdPartyJobDetailsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListActionTypes':
    post:
      operationId: ListActionTypes
      description: Gets a summary of all AWS CodePipeline action types associated with your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActionTypesOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListActionTypesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPipelineExecutions':
    post:
      operationId: ListPipelineExecutions
      description: Gets a summary of the most recent executions for a pipeline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPipelineExecutionsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPipelineExecutionsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPipelines':
    post:
      operationId: ListPipelines
      description: Gets a summary of all of the pipelines associated with your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPipelinesOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPipelinesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListWebhooks':
    post:
      operationId: ListWebhooks
      description: 'Gets a listing of all the webhooks in this region for this account. The output lists all webhooks and includes the webhook URL and ARN, as well the configuration for each webhook.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListWebhooksOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListWebhooksInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PollForJobs':
    post:
      operationId: PollForJobs
      description: '<p>Returns information about any jobs for AWS CodePipeline to act upon. PollForJobs is only valid for action types with "Custom" in the owner field. If the action type contains "AWS" or "ThirdParty" in the owner field, the PollForJobs action returns an error.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PollForJobsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ActionTypeNotFoundException
          schema:
            $ref: '#/definitions/ActionTypeNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PollForJobsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PollForThirdPartyJobs':
    post:
      operationId: PollForThirdPartyJobs
      description: '<p>Determines whether there are any third party jobs for a job worker to act on. Only used for partner actions.</p> <important> <p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PollForThirdPartyJobsOutput'
        '480':
          description: ActionTypeNotFoundException
          schema:
            $ref: '#/definitions/ActionTypeNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PollForThirdPartyJobsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutActionRevision':
    post:
      operationId: PutActionRevision
      description: Provides information to AWS CodePipeline about new revisions to a source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutActionRevisionOutput'
        '480':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '481':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '482':
          description: ActionNotFoundException
          schema:
            $ref: '#/definitions/ActionNotFoundException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutActionRevisionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutApprovalResult':
    post:
      operationId: PutApprovalResult
      description: Provides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutApprovalResultOutput'
        '480':
          description: InvalidApprovalTokenException
          schema:
            $ref: '#/definitions/InvalidApprovalTokenException'
        '481':
          description: ApprovalAlreadyCompletedException
          schema:
            $ref: '#/definitions/ApprovalAlreadyCompletedException'
        '482':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '483':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '484':
          description: ActionNotFoundException
          schema:
            $ref: '#/definitions/ActionNotFoundException'
        '485':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutApprovalResultInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutJobFailureResult':
    post:
      operationId: PutJobFailureResult
      description: Represents the failure of a job as returned to the pipeline by a job worker. Only used for custom actions.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutJobFailureResultInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutJobSuccessResult':
    post:
      operationId: PutJobSuccessResult
      description: Represents the success of a job as returned to the pipeline by a job worker. Only used for custom actions.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutJobSuccessResultInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutThirdPartyJobFailureResult':
    post:
      operationId: PutThirdPartyJobFailureResult
      description: Represents the failure of a third party job as returned to the pipeline by a job worker. Only used for partner actions.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutThirdPartyJobFailureResultInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutThirdPartyJobSuccessResult':
    post:
      operationId: PutThirdPartyJobSuccessResult
      description: Represents the success of a third party job as returned to the pipeline by a job worker. Only used for partner actions.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: JobNotFoundException
          schema:
            $ref: '#/definitions/JobNotFoundException'
        '482':
          description: InvalidJobStateException
          schema:
            $ref: '#/definitions/InvalidJobStateException'
        '483':
          description: InvalidClientTokenException
          schema:
            $ref: '#/definitions/InvalidClientTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutThirdPartyJobSuccessResultInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutWebhook':
    post:
      operationId: PutWebhook
      description: 'Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there''s a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutWebhookOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidWebhookFilterPatternException
          schema:
            $ref: '#/definitions/InvalidWebhookFilterPatternException'
        '483':
          description: InvalidWebhookAuthenticationParametersException
          schema:
            $ref: '#/definitions/InvalidWebhookAuthenticationParametersException'
        '484':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutWebhookInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterWebhookWithThirdParty':
    post:
      operationId: RegisterWebhookWithThirdParty
      description: Configures a connection between the webhook that was created and the external tool with events to be detected.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterWebhookWithThirdPartyOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: WebhookNotFoundException
          schema:
            $ref: '#/definitions/WebhookNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterWebhookWithThirdPartyInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RetryStageExecution':
    post:
      operationId: RetryStageExecution
      description: Resumes the pipeline execution by retrying the last failed actions in a stage.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RetryStageExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
        '482':
          description: StageNotFoundException
          schema:
            $ref: '#/definitions/StageNotFoundException'
        '483':
          description: StageNotRetryableException
          schema:
            $ref: '#/definitions/StageNotRetryableException'
        '484':
          description: NotLatestPipelineExecutionException
          schema:
            $ref: '#/definitions/NotLatestPipelineExecutionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RetryStageExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartPipelineExecution':
    post:
      operationId: StartPipelineExecution
      description: 'Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartPipelineExecutionOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: PipelineNotFoundException
          schema:
            $ref: '#/definitions/PipelineNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartPipelineExecutionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePipeline':
    post:
      operationId: UpdatePipeline
      description: Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure in conjunction with UpdatePipeline to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePipelineOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: InvalidStageDeclarationException
          schema:
            $ref: '#/definitions/InvalidStageDeclarationException'
        '482':
          description: InvalidActionDeclarationException
          schema:
            $ref: '#/definitions/InvalidActionDeclarationException'
        '483':
          description: InvalidBlockerDeclarationException
          schema:
            $ref: '#/definitions/InvalidBlockerDeclarationException'
        '484':
          description: InvalidStructureException
          schema:
            $ref: '#/definitions/InvalidStructureException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePipelineInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcknowledgeJobOutput:
    type: object
    properties:
      status:
        $ref: '#/definitions/JobStatus'
        description: Whether the job worker has received the specified job.
    description: Represents the output of an AcknowledgeJob action.
  AcknowledgeJobInput:
    type: object
    required:
      - jobId
      - nonce
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job for which you want to confirm receipt.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response of the <a>PollForJobs</a> request that returned this job.
    description: Represents the input of an AcknowledgeJob action.
  ValidationException:
    type: object
    properties: {}
    description: The validation was specified in an invalid format.
  InvalidNonceException:
    type: object
    properties: {}
    description: The specified nonce was specified in an invalid format.
  JobNotFoundException:
    type: object
    properties: {}
    description: The specified job was specified in an invalid format or cannot be found.
  AcknowledgeThirdPartyJobOutput:
    type: object
    properties:
      status:
        $ref: '#/definitions/JobStatus'
        description: 'The status information for the third party job, if any.'
    description: Represents the output of an AcknowledgeThirdPartyJob action.
  AcknowledgeThirdPartyJobInput:
    type: object
    required:
      - jobId
      - nonce
      - clientToken
    properties:
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The unique system-generated ID of the job.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response to a <a>GetThirdPartyJobDetails</a> request.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
    description: Represents the input of an AcknowledgeThirdPartyJob action.
  InvalidClientTokenException:
    type: object
    properties: {}
    description: The client token was specified in an invalid format
  CreateCustomActionTypeOutput:
    type: object
    required:
      - actionType
    properties:
      actionType:
        $ref: '#/definitions/ActionType'
        description: Returns information about the details of an action type.
    description: Represents the output of a CreateCustomActionType operation.
  CreateCustomActionTypeInput:
    type: object
    required:
      - category
      - provider
      - version
      - inputArtifactDetails
      - outputArtifactDetails
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: '<p>The category of the custom action, such as a build action or a test action.</p> <note> <p>Although Source and Approval are listed as valid values, they are not currently functional. These values are reserved for future use.</p> </note>'
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
      version:
        $ref: '#/definitions/Version'
        description: The version identifier of the custom action.
      settings:
        $ref: '#/definitions/ActionTypeSettings'
        description: Returns information about the settings for an action type.
      configurationProperties:
        $ref: '#/definitions/ActionConfigurationPropertyList'
        description: '<p>The configuration properties for the custom action.</p> <note> <p>You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html">Create a Custom Action for a Pipeline</a>.</p> </note>'
      inputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the input artifact for the action, such as its commit ID.'
      outputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the output artifact of the action, such as its commit ID.'
    description: Represents the input of a CreateCustomActionType operation.
  LimitExceededException:
    type: object
    properties: {}
    description: The number of pipelines associated with the AWS account has exceeded the limit allowed for the account.
  CreatePipelineOutput:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
    description: Represents the output of a CreatePipeline action.
  CreatePipelineInput:
    type: object
    required:
      - pipeline
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
    description: Represents the input of a CreatePipeline action.
  PipelineNameInUseException:
    type: object
    properties: {}
    description: The specified pipeline name is already in use.
  InvalidStageDeclarationException:
    type: object
    properties: {}
    description: The specified stage declaration was specified in an invalid format.
  InvalidActionDeclarationException:
    type: object
    properties: {}
    description: The specified action declaration was specified in an invalid format.
  InvalidBlockerDeclarationException:
    type: object
    properties: {}
    description: Reserved for future use.
  InvalidStructureException:
    type: object
    properties: {}
    description: The specified structure was specified in an invalid format.
  DeleteCustomActionTypeInput:
    type: object
    required:
      - category
      - provider
      - version
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: 'The category of the custom action that you want to delete, such as source or deploy.'
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service used in the custom action, such as AWS CodeDeploy.'
      version:
        $ref: '#/definitions/Version'
        description: The version of the custom action to delete.
    description: Represents the input of a DeleteCustomActionType operation. The custom action will be marked as deleted.
  DeletePipelineInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline to be deleted.
    description: Represents the input of a DeletePipeline action.
  DeleteWebhookOutput:
    type: object
    properties: {}
  DeleteWebhookInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/WebhookName'
        description: The name of the webhook you want to delete.
  DeregisterWebhookWithThirdPartyOutput:
    type: object
    properties: {}
  DeregisterWebhookWithThirdPartyInput:
    type: object
    properties:
      webhookName:
        $ref: '#/definitions/WebhookName'
        description: The name of the webhook you want to deregister.
  WebhookNotFoundException:
    type: object
    properties: {}
    description: The specified webhook was entered in an invalid format or cannot be found.
  DisableStageTransitionInput:
    type: object
    required:
      - pipelineName
      - stageName
      - transitionType
      - reason
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage where you want to disable the inbound or outbound transition of artifacts.
      transitionType:
        $ref: '#/definitions/StageTransitionType'
        description: 'Specifies whether artifacts will be prevented from transitioning into the stage and being processed by the actions in that stage (inbound), or prevented from transitioning from the stage after they have been processed by the actions in that stage (outbound).'
      reason:
        $ref: '#/definitions/DisabledReason'
        description: 'The reason given to the user why a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.'
    description: Represents the input of a DisableStageTransition action.
  PipelineNotFoundException:
    type: object
    properties: {}
    description: The specified pipeline was specified in an invalid format or cannot be found.
  StageNotFoundException:
    type: object
    properties: {}
    description: The specified stage was specified in an invalid format or cannot be found.
  EnableStageTransitionInput:
    type: object
    required:
      - pipelineName
      - stageName
      - transitionType
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline in which you want to enable the flow of artifacts from one stage to another.
      stageName:
        $ref: '#/definitions/StageName'
        description: 'The name of the stage where you want to enable the transition of artifacts, either into the stage (inbound) or from that stage to the next stage (outbound).'
      transitionType:
        $ref: '#/definitions/StageTransitionType'
        description: Specifies whether artifacts will be allowed to enter the stage and be processed by the actions in that stage (inbound) or whether already-processed artifacts will be allowed to transition to the next stage (outbound).
    description: Represents the input of an EnableStageTransition action.
  GetJobDetailsOutput:
    type: object
    properties:
      jobDetails:
        $ref: '#/definitions/JobDetails'
        description: '<p>The details of the job.</p> <note> <p>If AWSSessionCredentials is used, a long-running job can call GetJobDetails again to obtain new credentials.</p> </note>'
    description: Represents the output of a GetJobDetails action.
  GetJobDetailsInput:
    type: object
    required:
      - jobId
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID for the job.
    description: Represents the input of a GetJobDetails action.
  GetPipelineOutput:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: 'Represents the structure of actions and stages to be performed in the pipeline. '
      metadata:
        $ref: '#/definitions/PipelineMetadata'
        description: Represents the pipeline metadata information returned as part of the output of a GetPipeline action.
    description: Represents the output of a GetPipeline action.
  GetPipelineInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get information. Pipeline names must be unique under an Amazon Web Services (AWS) user account.
      version:
        $ref: '#/definitions/PipelineVersion'
        description: 'The version number of the pipeline. If you do not specify a version, defaults to the most current version.'
    description: Represents the input of a GetPipeline action.
  PipelineVersionNotFoundException:
    type: object
    properties: {}
    description: The specified pipeline version was specified in an invalid format or cannot be found.
  GetPipelineExecutionOutput:
    type: object
    properties:
      pipelineExecution:
        $ref: '#/definitions/PipelineExecution'
        description: Represents information about the execution of a pipeline.
    description: Represents the output of a GetPipelineExecution action.
  GetPipelineExecutionInput:
    type: object
    required:
      - pipelineName
      - pipelineExecutionId
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline about which you want to get execution details.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution about which you want to get execution details.
    description: Represents the input of a GetPipelineExecution action.
  PipelineExecutionNotFoundException:
    type: object
    properties: {}
    description: 'The pipeline execution was specified in an invalid format or cannot be found, or an execution ID does not belong to the specified pipeline. '
  GetPipelineStateOutput:
    type: object
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get the state.
      pipelineVersion:
        $ref: '#/definitions/PipelineVersion'
        description: <p>The version number of the pipeline.</p> <note> <p>A newly-created pipeline is always assigned a version number of <code>1</code>.</p> </note>
      stageStates:
        $ref: '#/definitions/StageStateList'
        description: 'A list of the pipeline stage output information, including stage name, state, most recent run details, whether the stage is disabled, and other data.'
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was last updated, in timestamp format.'
    description: Represents the output of a GetPipelineState action.
  GetPipelineStateInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline about which you want to get information.
    description: Represents the input of a GetPipelineState action.
  GetThirdPartyJobDetailsOutput:
    type: object
    properties:
      jobDetails:
        $ref: '#/definitions/ThirdPartyJobDetails'
        description: 'The details of the job, including any protected values defined for the job.'
    description: Represents the output of a GetThirdPartyJobDetails action.
  GetThirdPartyJobDetailsInput:
    type: object
    required:
      - jobId
      - clientToken
    properties:
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The unique system-generated ID used for identifying the job.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
    description: Represents the input of a GetThirdPartyJobDetails action.
  InvalidJobException:
    type: object
    properties: {}
    description: The specified job was specified in an invalid format or cannot be found.
  ListActionTypesOutput:
    type: object
    required:
      - actionTypes
    properties:
      actionTypes:
        $ref: '#/definitions/ActionTypeList'
        description: Provides details of the action types.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list action types call to return the next set of action types in the list.'
    description: Represents the output of a ListActionTypes action.
  ListActionTypesInput:
    type: object
    properties:
      actionOwnerFilter:
        $ref: '#/definitions/ActionOwner'
        description: Filters the list of action types to those created by a specified entity.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.'
    description: Represents the input of a ListActionTypes action.
  InvalidNextTokenException:
    type: object
    properties: {}
    description: The next token was specified in an invalid format. Make sure that the next token you provided is the token returned by a previous call.
  ListPipelineExecutionsOutput:
    type: object
    properties:
      pipelineExecutionSummaries:
        $ref: '#/definitions/PipelineExecutionSummaryList'
        description: A list of executions in the history of a pipeline.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used in the next ListPipelineExecutions call. To view all items in the list, continue to call this operation with each subsequent token until no more nextToken values are returned.'
    description: Represents the output of a ListPipelineExecutions action.
  ListPipelineExecutionsInput:
    type: object
    required:
      - pipelineName
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline for which you want to get execution summary information.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value. The available pipeline execution history is limited to the most recent 12 months, based on pipeline execution start times. Default value is 100.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token that was returned from the previous ListPipelineExecutions call, which can be used to return the next set of pipeline executions in the list.'
    description: Represents the input of a ListPipelineExecutions action.
  ListPipelinesOutput:
    type: object
    properties:
      pipelines:
        $ref: '#/definitions/PipelineList'
        description: The list of pipelines.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list pipelines call to return the next set of pipelines in the list.'
    description: Represents the output of a ListPipelines action.
  ListPipelinesInput:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'An identifier that was returned from the previous list pipelines call, which can be used to return the next set of pipelines in the list.'
    description: Represents the input of a ListPipelines action.
  ListWebhooksOutput:
    type: object
    properties:
      webhooks:
        $ref: '#/definitions/WebhookList'
        description: The JSON detail returned for each webhook in the list output for the ListWebhooks call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent ListWebhooks call to return the next set of webhooks in the list. '
  ListWebhooksInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token that was returned from the previous ListWebhooks call, which can be used to return the next set of webhooks in the list.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: 'The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned nextToken value.'
  PollForJobsOutput:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/JobList'
        description: Information about the jobs to take action on.
    description: Represents the output of a PollForJobs action.
  PollForJobsInput:
    type: object
    required:
      - actionTypeId
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      maxBatchSize:
        $ref: '#/definitions/MaxBatchSize'
        description: The maximum number of jobs to return in a poll for jobs call.
      queryParam:
        $ref: '#/definitions/QueryParamMap'
        description: 'A map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value will be returned.'
    description: Represents the input of a PollForJobs action.
  ActionTypeNotFoundException:
    type: object
    properties: {}
    description: The specified action type cannot be found.
  PollForThirdPartyJobsOutput:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/ThirdPartyJobList'
        description: Information about the jobs to take action on.
    description: Represents the output of a PollForThirdPartyJobs action.
  PollForThirdPartyJobsInput:
    type: object
    required:
      - actionTypeId
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      maxBatchSize:
        $ref: '#/definitions/MaxBatchSize'
        description: The maximum number of jobs to return in a poll for jobs call.
    description: Represents the input of a PollForThirdPartyJobs action.
  PutActionRevisionOutput:
    type: object
    properties:
      newRevision:
        $ref: '#/definitions/Boolean'
        description: Indicates whether the artifact revision was previously used in an execution of the specified pipeline.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the current workflow state of the pipeline.
    description: Represents the output of a PutActionRevision action.
  PutActionRevisionInput:
    type: object
    required:
      - pipelineName
      - stageName
      - actionName
      - actionRevision
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that will start processing the revision to the source.
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage that contains the action that will act upon the revision.
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action that will process the revision.
      actionRevision:
        $ref: '#/definitions/ActionRevision'
        description: Represents information about the version (or revision) of an action.
    description: Represents the input of a PutActionRevision action.
  ActionNotFoundException:
    type: object
    properties: {}
    description: The specified action cannot be found.
  PutApprovalResultOutput:
    type: object
    properties:
      approvedAt:
        $ref: '#/definitions/Timestamp'
        description: The timestamp showing when the approval or rejection was submitted.
    description: Represents the output of a PutApprovalResult action.
  PutApprovalResultInput:
    type: object
    required:
      - pipelineName
      - stageName
      - actionName
      - result
      - token
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: 'The name of the pipeline that contains the action. '
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage that contains the action.
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action for which approval is requested.
      result:
        $ref: '#/definitions/ApprovalResult'
        description: Represents information about the result of the approval request.
      token:
        $ref: '#/definitions/ApprovalToken'
        description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the <a>GetPipelineState</a> action and is used to validate that the approval request corresponding to this token is still valid.
    description: Represents the input of a PutApprovalResult action.
  InvalidApprovalTokenException:
    type: object
    properties: {}
    description: The approval request already received a response or has expired.
  ApprovalAlreadyCompletedException:
    type: object
    properties: {}
    description: The approval action has already been approved or rejected.
  PutJobFailureResultInput:
    type: object
    required:
      - jobId
      - failureDetails
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job that failed. This is the same ID returned from PollForJobs.
      failureDetails:
        $ref: '#/definitions/FailureDetails'
        description: The details about the failure of a job.
    description: Represents the input of a PutJobFailureResult action.
  InvalidJobStateException:
    type: object
    properties: {}
    description: The specified job state was specified in an invalid format.
  PutJobSuccessResultInput:
    type: object
    required:
      - jobId
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job that succeeded. This is the same ID returned from PollForJobs.
      currentRevision:
        $ref: '#/definitions/CurrentRevision'
        description: The ID of the current revision of the artifact successfully worked upon by the job.
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs will use this token in order to identify the running instance of the action. It can be reused to return additional information about the progress of the custom action. When the action is complete, no continuation token should be supplied.'
      executionDetails:
        $ref: '#/definitions/ExecutionDetails'
        description: 'The execution details of the successful job, such as the actions taken by the job worker.'
    description: Represents the input of a PutJobSuccessResult action.
  PutThirdPartyJobFailureResultInput:
    type: object
    required:
      - jobId
      - clientToken
      - failureDetails
    properties:
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The ID of the job that failed. This is the same ID returned from PollForThirdPartyJobs.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      failureDetails:
        $ref: '#/definitions/FailureDetails'
        description: Represents information about failure details.
    description: Represents the input of a PutThirdPartyJobFailureResult action.
  PutThirdPartyJobSuccessResultInput:
    type: object
    required:
      - jobId
      - clientToken
    properties:
      jobId:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The ID of the job that successfully completed. This is the same ID returned from PollForThirdPartyJobs.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      currentRevision:
        $ref: '#/definitions/CurrentRevision'
        description: Represents information about a current revision.
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a partner action in progress. Future jobs will use this token in order to identify the running instance of the action. It can be reused to return additional information about the progress of the partner action. When the action is complete, no continuation token should be supplied.'
      executionDetails:
        $ref: '#/definitions/ExecutionDetails'
        description: 'The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline. '
    description: Represents the input of a PutThirdPartyJobSuccessResult action.
  PutWebhookOutput:
    type: object
    properties:
      webhook:
        $ref: '#/definitions/ListWebhookItem'
        description: 'The detail returned from creating the webhook, such as the webhook name, webhook URL, and webhook ARN.'
  PutWebhookInput:
    type: object
    required:
      - webhook
    properties:
      webhook:
        $ref: '#/definitions/WebhookDefinition'
        description: 'The detail provided in an input file to create the webhook, such as the webhook name, the pipeline name, and the action name. Give the webhook a unique name which identifies the webhook being defined. You may choose to name the webhook after the pipeline and action it targets so that you can easily recognize what it''s used for later.'
  InvalidWebhookFilterPatternException:
    type: object
    properties: {}
    description: The specified event filter rule is in an invalid format.
  InvalidWebhookAuthenticationParametersException:
    type: object
    properties: {}
    description: The specified authentication type is in an invalid format.
  RegisterWebhookWithThirdPartyOutput:
    type: object
    properties: {}
  RegisterWebhookWithThirdPartyInput:
    type: object
    properties:
      webhookName:
        $ref: '#/definitions/WebhookName'
        description: 'The name of an existing webhook created with PutWebhook to register with a supported third party. '
  RetryStageExecutionOutput:
    type: object
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the current workflow execution in the failed stage.
    description: Represents the output of a RetryStageExecution action.
  RetryStageExecutionInput:
    type: object
    required:
      - pipelineName
      - stageName
      - pipelineExecutionId
      - retryMode
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that contains the failed stage.
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the failed stage to be retried.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution in the failed stage to be retried. Use the <a>GetPipelineState</a> action to retrieve the current pipelineExecutionId of the failed stage
      retryMode:
        $ref: '#/definitions/StageRetryMode'
        description: 'The scope of the retry attempt. Currently, the only supported value is FAILED_ACTIONS.'
    description: Represents the input of a RetryStageExecution action.
  StageNotRetryableException:
    type: object
    properties: {}
    description: 'The specified stage can''t be retried because the pipeline structure or stage state changed after the stage was not completed; the stage contains no failed actions; one or more actions are still in progress; or another retry attempt is already in progress. '
  NotLatestPipelineExecutionException:
    type: object
    properties: {}
    description: The stage has failed in a later run of the pipeline and the pipelineExecutionId associated with the request is out of date.
  StartPipelineExecutionOutput:
    type: object
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The unique system-generated ID of the pipeline execution that was started.
    description: Represents the output of a StartPipelineExecution action.
  StartPipelineExecutionInput:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline to start.
    description: Represents the input of a StartPipelineExecution action.
  UpdatePipelineOutput:
    type: object
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: The structure of the updated pipeline.
    description: Represents the output of an UpdatePipeline action.
  UpdatePipelineInput:
    type: object
    required:
      - pipeline
    properties:
      pipeline:
        $ref: '#/definitions/PipelineDeclaration'
        description: The name of the pipeline to be updated.
    description: Represents the input of an UpdatePipeline action.
  AccessKeyId:
    type: string
  SecretAccessKey:
    type: string
  SessionToken:
    type: string
  AWSSessionCredentials:
    type: object
    required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
    properties:
      accessKeyId:
        $ref: '#/definitions/AccessKeyId'
        description: The access key for the session.
      secretAccessKey:
        $ref: '#/definitions/SecretAccessKey'
        description: The secret access key for the session.
      sessionToken:
        $ref: '#/definitions/SessionToken'
        description: The token for the session.
    description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
  AccountId:
    type: string
    pattern: '[0-9]{12}'
  JobId:
    type: string
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
  Nonce:
    type: string
    minLength: 1
    maxLength: 50
  JobStatus:
    type: string
    enum:
      - Created
      - Queued
      - Dispatched
      - InProgress
      - TimedOut
      - Succeeded
      - Failed
  ThirdPartyJobId:
    type: string
    minLength: 1
    maxLength: 512
  ClientToken:
    type: string
    minLength: 1
    maxLength: 256
  ActionCategory:
    type: string
    enum:
      - Source
      - Build
      - Deploy
      - Test
      - Invoke
      - Approval
  ActionConfigurationMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ActionConfigurationKey'
        value:
          $ref: '#/definitions/ActionConfigurationValue'
  ActionConfiguration:
    type: object
    properties:
      configuration:
        $ref: '#/definitions/ActionConfigurationMap'
        description: The configuration data for the action.
    description: Represents information about an action configuration.
  ActionConfigurationKey:
    type: string
    minLength: 1
    maxLength: 50
  ActionConfigurationValue:
    type: string
    minLength: 1
    maxLength: 1000
  Boolean:
    type: boolean
  Description:
    type: string
    minLength: 1
    maxLength: 160
  ActionConfigurationPropertyType:
    type: string
    enum:
      - String
      - Number
      - Boolean
  ActionConfigurationProperty:
    type: object
    required:
      - name
      - required
      - key
      - secret
    properties:
      name:
        $ref: '#/definitions/ActionConfigurationKey'
        description: The name of the action configuration property.
      required:
        $ref: '#/definitions/Boolean'
        description: Whether the configuration property is a required value.
      key:
        $ref: '#/definitions/Boolean'
        description: Whether the configuration property is a key.
      secret:
        $ref: '#/definitions/Boolean'
        description: '<p>Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.</p> <p>When updating a pipeline, passing * * * * * without changing any other values of the action will preserve the prior value of the secret.</p>'
      queryable:
        $ref: '#/definitions/Boolean'
        description: '<p>Indicates that the property will be used in conjunction with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.</p> <p>If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to additional restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.</p>'
      description:
        $ref: '#/definitions/Description'
        description: The description of the action configuration property that will be displayed to users.
      type:
        $ref: '#/definitions/ActionConfigurationPropertyType'
        description: The type of the configuration property.
    description: Represents information about an action configuration property.
  ActionConfigurationPropertyList:
    type: array
    items:
      $ref: '#/definitions/ActionConfigurationProperty'
    maxItems: 10
  ActionConfigurationQueryableValue:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 50
  ActionName:
    type: string
    pattern: '[A-Za-z0-9.@\-_]+'
    minLength: 1
    maxLength: 100
  ActionContext:
    type: object
    properties:
      name:
        $ref: '#/definitions/ActionName'
        description: The name of the action within the context of a job.
    description: Represents the context of an action within the stage of a pipeline to a job worker.
  ActionTypeId:
    type: object
    required:
      - category
      - owner
      - provider
      - version
    properties:
      category:
        $ref: '#/definitions/ActionCategory'
        description: 'A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below.'
      owner:
        $ref: '#/definitions/ActionOwner'
        description: The creator of the action being called.
      provider:
        $ref: '#/definitions/ActionProvider'
        description: 'The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy.'
      version:
        $ref: '#/definitions/Version'
        description: A string that describes the action version.
    description: Represents information about an action type.
  ActionRunOrder:
    type: integer
    minimum: 1
    maximum: 999
  OutputArtifactList:
    type: array
    items:
      $ref: '#/definitions/OutputArtifact'
  InputArtifactList:
    type: array
    items:
      $ref: '#/definitions/InputArtifact'
  RoleArn:
    type: string
    pattern: 'arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*'
    maxLength: 1024
  ActionDeclaration:
    type: object
    required:
      - name
      - actionTypeId
    properties:
      name:
        $ref: '#/definitions/ActionName'
        description: The action declaration's name.
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: The configuration information for the action type.
      runOrder:
        $ref: '#/definitions/ActionRunOrder'
        description: The order in which actions are run.
      configuration:
        $ref: '#/definitions/ActionConfigurationMap'
        description: The action declaration's configuration.
      outputArtifacts:
        $ref: '#/definitions/OutputArtifactList'
        description: 'The name or ID of the result of the action declaration, such as a test or build artifact.'
      inputArtifacts:
        $ref: '#/definitions/InputArtifactList'
        description: 'The name or ID of the artifact consumed by the action, such as a test or build artifact.'
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
    description: Represents information about an action declaration.
  ActionExecutionStatus:
    type: string
    enum:
      - InProgress
      - Succeeded
      - Failed
  ExecutionSummary:
    type: string
    minLength: 1
    maxLength: 2048
  Timestamp:
    type: string
    format: date-time
  ActionExecutionToken:
    type: string
  LastUpdatedBy:
    type: string
  ExecutionId:
    type: string
    minLength: 1
    maxLength: 1500
  Url:
    type: string
    minLength: 1
    maxLength: 2048
  Percentage:
    type: integer
    minimum: 0
    maximum: 100
  ErrorDetails:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
        description: The system ID or error number code of the error.
      message:
        $ref: '#/definitions/Message'
        description: The text of the error message.
    description: Represents information about an error in AWS CodePipeline.
  ActionExecution:
    type: object
    properties:
      status:
        $ref: '#/definitions/ActionExecutionStatus'
        description: 'The status of the action, or for a completed action, the last status of the action.'
      summary:
        $ref: '#/definitions/ExecutionSummary'
        description: A summary of the run of the action.
      lastStatusChange:
        $ref: '#/definitions/Timestamp'
        description: The last status change of the action.
      token:
        $ref: '#/definitions/ActionExecutionToken'
        description: The system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the GetPipelineState command and is used to validate that the approval request corresponding to this token is still valid.
      lastUpdatedBy:
        $ref: '#/definitions/LastUpdatedBy'
        description: The ARN of the user who last changed the pipeline.
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: The external ID of the run of the action.
      externalExecutionUrl:
        $ref: '#/definitions/Url'
        description: 'The URL of a resource external to AWS that will be used when running the action, for example an external repository URL.'
      percentComplete:
        $ref: '#/definitions/Percentage'
        description: A percentage of completeness of the action as it runs.
      errorDetails:
        $ref: '#/definitions/ErrorDetails'
        description: The details of an error returned by a URL external to AWS.
    description: Represents information about the run of an action.
  ActionOwner:
    type: string
    enum:
      - AWS
      - ThirdParty
      - Custom
  ActionProvider:
    type: string
    pattern: '[0-9A-Za-z_-]+'
    minLength: 1
    maxLength: 25
  Revision:
    type: string
    minLength: 1
    maxLength: 1500
  RevisionChangeIdentifier:
    type: string
    minLength: 1
    maxLength: 100
  ActionRevision:
    type: object
    required:
      - revisionId
      - revisionChangeId
      - created
    properties:
      revisionId:
        $ref: '#/definitions/Revision'
        description: The system-generated unique ID that identifies the revision number of the action.
      revisionChangeId:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: 'The unique identifier of the change that set the state to this revision, for example a deployment ID or timestamp.'
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the most recent version of the action was created, in timestamp format.'
    description: Represents information about the version (or revision) of an action.
  ActionState:
    type: object
    properties:
      actionName:
        $ref: '#/definitions/ActionName'
        description: The name of the action.
      currentRevision:
        $ref: '#/definitions/ActionRevision'
        description: Represents information about the version (or revision) of an action.
      latestExecution:
        $ref: '#/definitions/ActionExecution'
        description: Represents information about the run of an action.
      entityUrl:
        $ref: '#/definitions/Url'
        description: 'A URL link for more information about the state of the action, such as a deployment group details page.'
      revisionUrl:
        $ref: '#/definitions/Url'
        description: 'A URL link for more information about the revision, such as a commit details page.'
    description: Represents information about the state of an action.
  ActionStateList:
    type: array
    items:
      $ref: '#/definitions/ActionState'
  ActionTypeSettings:
    type: object
    properties:
      thirdPartyConfigurationUrl:
        $ref: '#/definitions/Url'
        description: The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
      entityUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: 'The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display within the pipeline.'
      executionUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: 'The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.'
      revisionUrlTemplate:
        $ref: '#/definitions/UrlTemplate'
        description: The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
    description: Returns information about the settings for an action type.
  ArtifactDetails:
    type: object
    required:
      - minimumCount
      - maximumCount
    properties:
      minimumCount:
        $ref: '#/definitions/MinimumArtifactCount'
        description: The minimum number of artifacts allowed for the action type.
      maximumCount:
        $ref: '#/definitions/MaximumArtifactCount'
        description: The maximum number of artifacts allowed for the action type.
    description: Returns information about the details of an artifact.
  ActionType:
    type: object
    required:
      - id
      - inputArtifactDetails
      - outputArtifactDetails
    properties:
      id:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      settings:
        $ref: '#/definitions/ActionTypeSettings'
        description: The settings for the action type.
      actionConfigurationProperties:
        $ref: '#/definitions/ActionConfigurationPropertyList'
        description: The configuration properties for the action type.
      inputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the input artifact for the action, such as its commit ID.'
      outputArtifactDetails:
        $ref: '#/definitions/ArtifactDetails'
        description: 'The details of the output artifact of the action, such as its commit ID.'
    description: Returns information about the details of an action type.
  Version:
    type: string
    pattern: '[0-9A-Za-z_-]+'
    minLength: 1
    maxLength: 9
  ActionTypeList:
    type: array
    items:
      $ref: '#/definitions/ActionType'
  UrlTemplate:
    type: string
    minLength: 1
    maxLength: 2048
  ApprovalSummary:
    type: string
    minLength: 0
    maxLength: 512
  ApprovalStatus:
    type: string
    enum:
      - Approved
      - Rejected
  ApprovalResult:
    type: object
    required:
      - summary
      - status
    properties:
      summary:
        $ref: '#/definitions/ApprovalSummary'
        description: The summary of the current status of the approval request.
      status:
        $ref: '#/definitions/ApprovalStatus'
        description: The response submitted by a reviewer assigned to an approval action request.
    description: Represents information about the result of an approval request.
  ApprovalToken:
    type: string
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
  ArtifactName:
    type: string
    pattern: '[a-zA-Z0-9_\-]+'
    minLength: 1
    maxLength: 100
  ArtifactLocation:
    type: object
    properties:
      type:
        $ref: '#/definitions/ArtifactLocationType'
        description: The type of artifact in the location.
      s3Location:
        $ref: '#/definitions/S3ArtifactLocation'
        description: The Amazon S3 bucket that contains the artifact.
    description: Represents information about the location of an artifact.
  Artifact:
    type: object
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: The artifact's name.
      revision:
        $ref: '#/definitions/Revision'
        description: 'The artifact''s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).'
      location:
        $ref: '#/definitions/ArtifactLocation'
        description: The location of an artifact.
    description: Represents information about an artifact that will be worked upon by actions in the pipeline.
  MinimumArtifactCount:
    type: integer
    minimum: 0
    maximum: 5
  MaximumArtifactCount:
    type: integer
    minimum: 0
    maximum: 5
  ArtifactList:
    type: array
    items:
      $ref: '#/definitions/Artifact'
  ArtifactLocationType:
    type: string
    enum:
      - S3
  S3ArtifactLocation:
    type: object
    required:
      - bucketName
      - objectKey
    properties:
      bucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket.
      objectKey:
        $ref: '#/definitions/S3ObjectKey'
        description: 'The key of the object in the Amazon S3 bucket, which uniquely identifies the object in the bucket.'
    description: The location of the Amazon S3 bucket that contains a revision.
  RevisionSummary:
    type: string
    minLength: 1
    maxLength: 2048
  ArtifactRevision:
    type: object
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: 'The name of an artifact. This name might be system-generated, such as "MyApp", or might be defined by the user when an action is created.'
      revisionId:
        $ref: '#/definitions/Revision'
        description: The revision ID of the artifact.
      revisionChangeIdentifier:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: 'An additional identifier for a revision, such as a commit date or, for artifacts stored in Amazon S3 buckets, the ETag value.'
      revisionSummary:
        $ref: '#/definitions/RevisionSummary'
        description: 'Summary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code> key specified in the object metadata.'
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
      revisionUrl:
        $ref: '#/definitions/Url'
        description: 'The commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page.'
    description: 'Represents revision details of an artifact. '
  ArtifactRevisionList:
    type: array
    items:
      $ref: '#/definitions/ArtifactRevision'
  ArtifactStoreType:
    type: string
    enum:
      - S3
  ArtifactStoreLocation:
    type: string
    pattern: '[a-zA-Z0-9\-\.]+'
    minLength: 3
    maxLength: 63
  EncryptionKey:
    type: object
    required:
      - id
      - type
    properties:
      id:
        $ref: '#/definitions/EncryptionKeyId'
        description: 'The ID used to identify the key. For an AWS KMS key, this is the key ID or key ARN.'
      type:
        $ref: '#/definitions/EncryptionKeyType'
        description: 'The type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ''KMS''.'
    description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.'
  ArtifactStore:
    type: object
    required:
      - type
      - location
    properties:
      type:
        $ref: '#/definitions/ArtifactStoreType'
        description: 'The type of the artifact store, such as S3.'
      location:
        $ref: '#/definitions/ArtifactStoreLocation'
        description: The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder within the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'The encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.'
    description: The Amazon S3 bucket where artifacts are stored for the pipeline.
  BlockerName:
    type: string
    minLength: 1
    maxLength: 100
  BlockerType:
    type: string
    enum:
      - Schedule
  BlockerDeclaration:
    type: object
    required:
      - name
      - type
    properties:
      name:
        $ref: '#/definitions/BlockerName'
        description: Reserved for future use.
      type:
        $ref: '#/definitions/BlockerType'
        description: Reserved for future use.
    description: Reserved for future use.
  ClientId:
    type: string
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
  Code:
    type: string
  ContinuationToken:
    type: string
    minLength: 1
    maxLength: 2048
  PipelineDeclaration:
    type: object
    required:
      - name
      - roleArn
      - artifactStore
      - stages
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the action to be performed.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn.'
      artifactStore:
        $ref: '#/definitions/ArtifactStore'
        description: 'Represents information about the Amazon S3 bucket where artifacts are stored for the pipeline. '
      stages:
        $ref: '#/definitions/PipelineStageDeclarationList'
        description: The stage in which to perform the action.
      version:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline. A new pipeline always has a version number of 1. This number is automatically incremented when a pipeline is updated.
    description: Represents the structure of actions and stages to be performed in the pipeline.
  Time:
    type: string
    format: date-time
  CurrentRevision:
    type: object
    required:
      - revision
      - changeIdentifier
    properties:
      revision:
        $ref: '#/definitions/Revision'
        description: The revision ID of the current version of an artifact.
      changeIdentifier:
        $ref: '#/definitions/RevisionChangeIdentifier'
        description: The change identifier for the current revision.
      created:
        $ref: '#/definitions/Time'
        description: 'The date and time when the most recent revision of the artifact was created, in timestamp format.'
      revisionSummary:
        $ref: '#/definitions/RevisionSummary'
        description: The summary of the most recent revision of the artifact.
    description: Represents information about a current revision.
  PipelineName:
    type: string
    pattern: '[A-Za-z0-9.@\-_]+'
    minLength: 1
    maxLength: 100
  WebhookName:
    type: string
    pattern: '[A-Za-z0-9.@\-_]+'
    minLength: 1
    maxLength: 100
  StageName:
    type: string
    pattern: '[A-Za-z0-9.@\-_]+'
    minLength: 1
    maxLength: 100
  StageTransitionType:
    type: string
    enum:
      - Inbound
      - Outbound
  DisabledReason:
    type: string
    pattern: '[a-zA-Z0-9!@ \(\)\.\*\?\-]+'
    minLength: 1
    maxLength: 300
  Enabled:
    type: boolean
  EncryptionKeyId:
    type: string
    minLength: 1
    maxLength: 100
  EncryptionKeyType:
    type: string
    enum:
      - KMS
  Message:
    type: string
    minLength: 1
    maxLength: 5000
  ExecutionDetails:
    type: object
    properties:
      summary:
        $ref: '#/definitions/ExecutionSummary'
        description: The summary of the current status of the actions.
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: 'The system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.'
      percentComplete:
        $ref: '#/definitions/Percentage'
        description: 'The percentage of work completed on the action, represented on a scale of zero to one hundred percent.'
    description: The details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.
  FailureType:
    type: string
    enum:
      - JobFailed
      - ConfigurationError
      - PermissionError
      - RevisionOutOfSync
      - RevisionUnavailable
      - SystemUnavailable
  FailureDetails:
    type: object
    required:
      - type
      - message
    properties:
      type:
        $ref: '#/definitions/FailureType'
        description: The type of the failure.
      message:
        $ref: '#/definitions/Message'
        description: The message about the failure.
      externalExecutionId:
        $ref: '#/definitions/ExecutionId'
        description: The external ID of the run of the action that failed.
    description: Represents information about failure details.
  JobDetails:
    type: object
    properties:
      id:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job.
      data:
        $ref: '#/definitions/JobData'
        description: 'Represents additional information about a job required for a job worker to complete the job. '
      accountId:
        $ref: '#/definitions/AccountId'
        description: The AWS account ID associated with the job.
    description: Represents information about the details of a job.
  PipelineExecutionId:
    type: string
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
  PipelineExecution:
    type: object
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline that was executed.
      pipelineVersion:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline that was executed.
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution.
      status:
        $ref: '#/definitions/PipelineExecutionStatus'
        description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. </p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
      artifactRevisions:
        $ref: '#/definitions/ArtifactRevisionList'
        description: A list of ArtifactRevision objects included in a pipeline execution.
    description: Represents information about an execution of a pipeline.
  PipelineVersion:
    type: integer
    minimum: 1
  PipelineMetadata:
    type: object
    properties:
      pipelineArn:
        $ref: '#/definitions/PipelineArn'
        description: The Amazon Resource Name (ARN) of the pipeline.
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was last updated, in timestamp format.'
    description: Information about a pipeline.
  StageStateList:
    type: array
    items:
      $ref: '#/definitions/StageState'
  ThirdPartyJobDetails:
    type: object
    properties:
      id:
        $ref: '#/definitions/ThirdPartyJobId'
        description: The identifier used to identify the job details in AWS CodePipeline.
      data:
        $ref: '#/definitions/ThirdPartyJobData'
        description: The data to be returned by the third party job worker.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeThirdPartyJob</a> request.
    description: The details of a job sent in response to a GetThirdPartyJobDetails request.
  InputArtifact:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: '<p>The name of the artifact to be worked on, for example, "My App".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p>'
    description: 'Represents information about an artifact to be worked on, such as a test or build artifact.'
  JobData:
    type: object
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      actionConfiguration:
        $ref: '#/definitions/ActionConfiguration'
        description: Represents information about an action configuration.
      pipelineContext:
        $ref: '#/definitions/PipelineContext'
        description: Represents information about a pipeline to a job worker.
      inputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: The artifact supplied to the job.
      outputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: The output of the job.
      artifactCredentials:
        $ref: '#/definitions/AWSSessionCredentials'
        description: Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline.
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.'
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. '
    description: Represents additional information about a job required for a job worker to complete the job.
  Job:
    type: object
    properties:
      id:
        $ref: '#/definitions/JobId'
        description: The unique system-generated ID of the job.
      data:
        $ref: '#/definitions/JobData'
        description: Additional data about a job.
      nonce:
        $ref: '#/definitions/Nonce'
        description: A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an <a>AcknowledgeJob</a> request.
      accountId:
        $ref: '#/definitions/AccountId'
        description: The ID of the AWS account to use when performing the job.
    description: Represents information about a job.
  PipelineContext:
    type: object
    properties:
      pipelineName:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.
      stage:
        $ref: '#/definitions/StageContext'
        description: The stage of the pipeline.
      action:
        $ref: '#/definitions/ActionContext'
        description: The context of an action to a job worker within the stage of a pipeline.
    description: Represents information about a pipeline to a job worker.
  JobList:
    type: array
    items:
      $ref: '#/definitions/Job'
  JsonPath:
    type: string
    minLength: 1
    maxLength: 150
  LastChangedAt:
    type: string
    format: date-time
  LastChangedBy:
    type: string
  NextToken:
    type: string
    minLength: 1
    maxLength: 2048
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  PipelineExecutionSummaryList:
    type: array
    items:
      $ref: '#/definitions/PipelineExecutionSummary'
  PipelineList:
    type: array
    items:
      $ref: '#/definitions/PipelineSummary'
  WebhookDefinition:
    type: object
    required:
      - name
      - targetPipeline
      - targetAction
      - filters
      - authentication
      - authenticationConfiguration
    properties:
      name:
        $ref: '#/definitions/WebhookName'
        description: The name of the webhook.
      targetPipeline:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline you want to connect to the webhook.
      targetAction:
        $ref: '#/definitions/ActionName'
        description: The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
      filters:
        $ref: '#/definitions/WebhookFilters'
        description: A list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.
      authentication:
        $ref: '#/definitions/WebhookAuthenticationType'
        description: '<p>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</p> <ul> <li> <p> GITHUB_HMAC implements the authentication scheme described here: https://developer.github.com/webhooks/securing/</p> </li> <li> <p> IP will reject webhooks trigger requests unless they originate from an IP within the IP range whitelisted in the authentication configuration.</p> </li> <li> <p> UNAUTHENTICATED will accept all webhook trigger requests regardless of origin.</p> </li> </ul>'
      authenticationConfiguration:
        $ref: '#/definitions/WebhookAuthConfiguration'
        description: 'Properties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the SecretToken property must be set. For IP, only the AllowedIPRange property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.'
    description: Represents information about a webhook and its definition.
  WebhookUrl:
    type: string
    minLength: 1
    maxLength: 1000
  WebhookErrorMessage:
    type: string
  WebhookErrorCode:
    type: string
  WebhookLastTriggered:
    type: string
    format: date-time
  WebhookArn:
    type: string
  ListWebhookItem:
    type: object
    required:
      - definition
      - url
    properties:
      definition:
        $ref: '#/definitions/WebhookDefinition'
        description: 'The detail returned for each webhook, such as the webhook authentication type and filter rules.'
      url:
        $ref: '#/definitions/WebhookUrl'
        description: 'A unique URL generated by CodePipeline. When a POST request is made to this URL, the defined pipeline is started as long as the body of the post request satisfies the defined authentication and filtering conditions. Deleting and re-creating a webhook will make the old URL invalid and generate a new URL.'
      errorMessage:
        $ref: '#/definitions/WebhookErrorMessage'
        description: The text of the error message about the webhook.
      errorCode:
        $ref: '#/definitions/WebhookErrorCode'
        description: The number code of the error.
      lastTriggered:
        $ref: '#/definitions/WebhookLastTriggered'
        description: 'The date and time a webhook was last successfully triggered, in timestamp format.'
      arn:
        $ref: '#/definitions/WebhookArn'
        description: The Amazon Resource Name (ARN) of the webhook.
    description: 'The detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN.'
  WebhookList:
    type: array
    items:
      $ref: '#/definitions/ListWebhookItem'
  MatchEquals:
    type: string
    minLength: 1
    maxLength: 150
  MaxBatchSize:
    type: integer
    minimum: 1
  OutputArtifact:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/ArtifactName'
        description: '<p>The name of the output of an artifact, such as "My App".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p> <p>Output artifact names must be unique within a pipeline.</p>'
    description: Represents information about the output of an action.
  PipelineArn:
    type: string
    pattern: 'arn:aws(-[\w]+)*:codepipeline:.+:[0-9]{12}:.+'
  StageContext:
    type: object
    properties:
      name:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
    description: Represents information about a stage to a job worker.
  PipelineStageDeclarationList:
    type: array
    items:
      $ref: '#/definitions/StageDeclaration'
  PipelineExecutionStatus:
    type: string
    enum:
      - InProgress
      - Succeeded
      - Superseded
      - Failed
  SourceRevisionList:
    type: array
    items:
      $ref: '#/definitions/SourceRevision'
  PipelineExecutionSummary:
    type: object
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution.
      status:
        $ref: '#/definitions/PipelineExecutionStatus'
        description: '<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress: The pipeline execution is currently running.</p> </li> <li> <p>Succeeded: The pipeline execution was completed successfully. </p> </li> <li> <p>Superseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. </p> </li> <li> <p>Failed: The pipeline execution was not completed successfully.</p> </li> </ul>'
      startTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when the pipeline execution began, in timestamp format.'
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time of the last change to the pipeline execution, in timestamp format.'
      sourceRevisions:
        $ref: '#/definitions/SourceRevisionList'
    description: Summary information about a pipeline execution.
  PipelineSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/PipelineName'
        description: The name of the pipeline.
      version:
        $ref: '#/definitions/PipelineVersion'
        description: The version number of the pipeline.
      created:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time the pipeline was created, in timestamp format.'
      updated:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time of the last update to the pipeline, in timestamp format.'
    description: Returns a summary of a pipeline.
  StageDeclaration:
    type: object
    required:
      - name
      - actions
    properties:
      name:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
      blockers:
        $ref: '#/definitions/StageBlockerDeclarationList'
        description: Reserved for future use.
      actions:
        $ref: '#/definitions/StageActionDeclarationList'
        description: The actions included in a stage.
    description: Represents information about a stage and its definition.
  QueryParamMap:
    type: array
    minItems: 0
    maxItems: 1
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ActionConfigurationKey'
        value:
          $ref: '#/definitions/ActionConfigurationQueryableValue'
  ThirdPartyJobList:
    type: array
    items:
      $ref: '#/definitions/ThirdPartyJob'
  StageRetryMode:
    type: string
    enum:
      - FAILED_ACTIONS
  S3BucketName:
    type: string
  S3ObjectKey:
    type: string
  SourceRevision:
    type: object
    required:
      - actionName
    properties:
      actionName:
        $ref: '#/definitions/ActionName'
      revisionId:
        $ref: '#/definitions/Revision'
      revisionSummary:
        $ref: '#/definitions/RevisionSummary'
      revisionUrl:
        $ref: '#/definitions/Url'
  StageActionDeclarationList:
    type: array
    items:
      $ref: '#/definitions/ActionDeclaration'
  StageBlockerDeclarationList:
    type: array
    items:
      $ref: '#/definitions/BlockerDeclaration'
  StageExecutionStatus:
    type: string
    enum:
      - InProgress
      - Failed
      - Succeeded
  StageExecution:
    type: object
    required:
      - pipelineExecutionId
      - status
    properties:
      pipelineExecutionId:
        $ref: '#/definitions/PipelineExecutionId'
        description: The ID of the pipeline execution associated with the stage.
      status:
        $ref: '#/definitions/StageExecutionStatus'
        description: 'The status of the stage, or for a completed stage, the last status of the stage.'
    description: Represents information about the run of a stage.
  TransitionState:
    type: object
    properties:
      enabled:
        $ref: '#/definitions/Enabled'
        description: Whether the transition between stages is enabled (true) or disabled (false).
      lastChangedBy:
        $ref: '#/definitions/LastChangedBy'
        description: The ID of the user who last changed the transition state.
      lastChangedAt:
        $ref: '#/definitions/LastChangedAt'
        description: The timestamp when the transition state was last changed.
      disabledReason:
        $ref: '#/definitions/DisabledReason'
        description: The user-specified reason why the transition between two stages of a pipeline was disabled.
    description: Represents information about the state of transitions between one stage and another stage.
  StageState:
    type: object
    properties:
      stageName:
        $ref: '#/definitions/StageName'
        description: The name of the stage.
      inboundTransitionState:
        $ref: '#/definitions/TransitionState'
        description: 'The state of the inbound transition, which is either enabled or disabled.'
      actionStates:
        $ref: '#/definitions/ActionStateList'
        description: The state of the stage.
      latestExecution:
        $ref: '#/definitions/StageExecution'
        description: 'Information about the latest execution in the stage, including its ID and status.'
    description: Represents information about the state of the stage.
  ThirdPartyJob:
    type: object
    properties:
      clientId:
        $ref: '#/definitions/ClientId'
        description: The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.
      jobId:
        $ref: '#/definitions/JobId'
        description: The identifier used to identify the job in AWS CodePipeline.
    description: A response to a PollForThirdPartyJobs request returned by AWS CodePipeline when there is a job to be worked upon by a partner action.
  ThirdPartyJobData:
    type: object
    properties:
      actionTypeId:
        $ref: '#/definitions/ActionTypeId'
        description: Represents information about an action type.
      actionConfiguration:
        $ref: '#/definitions/ActionConfiguration'
        description: Represents information about an action configuration.
      pipelineContext:
        $ref: '#/definitions/PipelineContext'
        description: Represents information about a pipeline to a job worker.
      inputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: 'The name of the artifact that will be worked upon by the action, if any. This name might be system-generated, such as "MyApp", or might be defined by the user when the action is created. The input artifact name must match the name of an output artifact generated by an action in an earlier action or stage of the pipeline.'
      outputArtifacts:
        $ref: '#/definitions/ArtifactList'
        description: 'The name of the artifact that will be the result of the action, if any. This name might be system-generated, such as "MyBuiltApp", or might be defined by the user when the action is created.'
      artifactCredentials:
        $ref: '#/definitions/AWSSessionCredentials'
        description: 'Represents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the Amazon S3 bucket used to store artifact for the pipeline in AWS CodePipeline. '
      continuationToken:
        $ref: '#/definitions/ContinuationToken'
        description: 'A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.'
      encryptionKey:
        $ref: '#/definitions/EncryptionKey'
        description: 'The encryption key used to encrypt and decrypt data in the artifact store for the pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and might not be present.'
    description: Represents information about the job data for a partner action.
  WebhookAuthConfigurationAllowedIPRange:
    type: string
    minLength: 1
    maxLength: 100
  WebhookAuthConfigurationSecretToken:
    type: string
    minLength: 1
    maxLength: 100
  WebhookAuthConfiguration:
    type: object
    properties:
      AllowedIPRange:
        $ref: '#/definitions/WebhookAuthConfigurationAllowedIPRange'
      SecretToken:
        $ref: '#/definitions/WebhookAuthConfigurationSecretToken'
  WebhookAuthenticationType:
    type: string
    enum:
      - GITHUB_HMAC
      - IP
      - UNAUTHENTICATED
  WebhookFilters:
    type: array
    items:
      $ref: '#/definitions/WebhookFilterRule'
    maxItems: 5
  WebhookFilterRule:
    type: object
    required:
      - jsonPath
    properties:
      jsonPath:
        $ref: '#/definitions/JsonPath'
        description: 'A JsonPath expression that will be applied to the body/payload of the webhook. The value selected by JsonPath expression must match the value specified in the matchEquals field, otherwise the request will be ignored. More information on JsonPath expressions can be found here: https://github.com/json-path/JsonPath.'
      matchEquals:
        $ref: '#/definitions/MatchEquals'
        description: 'The value selected by the JsonPath expression must match what is supplied in the MatchEquals field, otherwise the request will be ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly braces. For example, if the value supplied here is "refs/heads/{Branch}" and the target action has an action configuration property called "Branch" with a value of "master", the MatchEquals value will be evaluated as "refs/heads/master". A list of action configuration properties for built-in action types can be found here: <a href="http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements">Pipeline Structure Reference Action Requirements</a>.'
    description: The event criteria that specify when a webhook notification is sent to your URL.
