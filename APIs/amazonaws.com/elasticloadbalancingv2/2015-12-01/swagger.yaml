swagger: '2.0'
info:
  version: '2015-12-01'
  x-release: v4
  title: Elastic Load Balancing
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports the following types of load balancers: Application Load Balancers, Network Load Balancers, and Classic Load Balancers.</p> <p>An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS). A Network Load Balancer makes routing and load balancing decisions at the transport layer (TCP). Both Application Load Balancers and Network Load Balancers can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC).</p> <p>A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. For more information, see the <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2015-12-01 API, which supports Application Load Balancers and Network Load Balancers. The 2012-06-01 API supports Classic Load Balancers.</p> <p>To get started, complete the following tasks:</p> <ol> <li> <p>Create a load balancer using <a>CreateLoadBalancer</a>.</p> </li> <li> <p>Create a target group using <a>CreateTargetGroup</a>.</p> </li> <li> <p>Register targets for the target group using <a>RegisterTargets</a>.</p> </li> <li> <p>Create one or more listeners for your load balancer using <a>CreateListener</a>.</p> </li> </ol> <p>To delete a load balancer and its related resources, complete the following tasks:</p> <ol> <li> <p>Delete the load balancer using <a>DeleteLoadBalancer</a>.</p> </li> <li> <p>Delete the target group using <a>DeleteTargetGroup</a>.</p> </li> </ol> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: elasticloadbalancingv2
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/elasticloadbalancing/'
host: elasticloadbalancing.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes: []
produces: []
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddListenerCertificates
      description: '<p>Adds the specified certificate to the specified secure listener.</p> <p>If the certificate was already added, the call is successful but the certificate is not added again.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>. To remove certificates from your listener, use <a>RemoveListenerCertificates</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '482':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddListenerCertificatesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AddTags':
    post:
      operationId: AddTags
      description: '<p>Adds the specified tags to the specified Elastic Load Balancing resource. You can tag your Application Load Balancers, Network Load Balancers, and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
        '480':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '483':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateListener':
    post:
      operationId: CreateListener
      description: '<p>Creates a listener for the specified Application Load Balancer or Network Load Balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple listeners with the same settings, each call succeeds.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html">Listeners for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '487':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '488':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '489':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLoadBalancer':
    post:
      operationId: CreateLoadBalancer
      description: '<p>Creates an Application Load Balancer or a Network Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, public subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i> and <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancer</a> in the <i>Network Load Balancers Guide</i>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple load balancers with the same settings, each call succeeds.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html">Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerOutput'
        '480':
          description: DuplicateLoadBalancerNameException
          schema:
            $ref: '#/definitions/DuplicateLoadBalancerNameException'
        '481':
          description: TooManyLoadBalancersException
          schema:
            $ref: '#/definitions/TooManyLoadBalancersException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '483':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '484':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '485':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
        '486':
          description: InvalidSchemeException
          schema:
            $ref: '#/definitions/InvalidSchemeException'
        '487':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '488':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '489':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '490':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '491':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
        '492':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateRule':
    post:
      operationId: CreateRule
      description: '<p>Creates a rule for the specified listener. The listener must be associated with an Application Load Balancer.</p> <p>Rules are evaluated in priority order, from the lowest value to the highest value. When the conditions for a rule are met, its actions are performed. If the conditions for no rules are met, the actions for the default rule are performed. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRuleOutput'
        '480':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: TooManyRulesException
          schema:
            $ref: '#/definitions/TooManyRulesException'
        '483':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '484':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '485':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '488':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '489':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '492':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTargetGroup':
    post:
      operationId: CreateTargetGroup
      description: '<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i> or <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html">Target Groups for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTargetGroupOutput'
        '480':
          description: DuplicateTargetGroupNameException
          schema:
            $ref: '#/definitions/DuplicateTargetGroupNameException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteListener':
    post:
      operationId: DeleteListener
      description: '<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer to which it is attached, using <a>DeleteLoadBalancer</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteListenerOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteLoadBalancer':
    post:
      operationId: DeleteLoadBalancer
      description: '<p>Deletes the specified Application Load Balancer or Network Load Balancer and its attached listeners.</p> <p>You can''t delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteRule':
    post:
      operationId: DeleteRule
      description: Deletes the specified rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRuleOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTargetGroup':
    post:
      operationId: DeleteTargetGroup
      description: <p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTargetGroupOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargets':
    post:
      operationId: DeregisterTargets
      description: 'Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTargetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAccountLimits':
    post:
      operationId: DescribeAccountLimits
      description: '<p>Describes the current Elastic Load Balancing resource limits for your AWS account.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancers</a> in the <i>Application Load Balancer Guide</i> or <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits for Your Network Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountLimitsOutput'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAccountLimitsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeListenerCertificates':
    post:
      operationId: DescribeListenerCertificates
      description: Describes the certificates for the specified secure listener.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeListenerCertificatesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeListeners':
    post:
      operationId: DescribeListeners
      description: Describes the specified listeners or the listeners for the specified Application Load Balancer or Network Load Balancer. You must specify either a load balancer or one or more listeners.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenersOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeListenersInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeLoadBalancerAttributes':
    post:
      operationId: DescribeLoadBalancerAttributes
      description: '<p>Describes the attributes for the specified Application Load Balancer or Network Load Balancer.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes">Load Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeLoadBalancers':
    post:
      operationId: DescribeLoadBalancers
      description: '<p>Describes the specified load balancers or all of your load balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancersOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancersInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
      x-waiters:
        - delay: 15
          operation: DescribeLoadBalancers
          maxAttempts: 40
          acceptors:
            - matcher: status
              expected: 200
              state: success
            - matcher: error
              expected: LoadBalancerNotFound
              state: retry
        - delay: 15
          operation: DescribeLoadBalancers
          maxAttempts: 40
          acceptors:
            - state: success
              matcher: pathAll
              argument: 'LoadBalancers[].State.Code'
              expected: active
            - state: retry
              matcher: pathAny
              argument: 'LoadBalancers[].State.Code'
              expected: provisioning
            - state: retry
              matcher: error
              expected: LoadBalancerNotFound
        - delay: 15
          operation: DescribeLoadBalancers
          maxAttempts: 40
          acceptors:
            - state: retry
              matcher: pathAll
              argument: 'LoadBalancers[].State.Code'
              expected: active
            - matcher: error
              expected: LoadBalancerNotFound
              state: success
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRules':
    post:
      operationId: DescribeRules
      description: Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRulesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '482':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRulesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSSLPolicies':
    post:
      operationId: DescribeSSLPolicies
      description: '<p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesOutput'
        '480':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTags':
    post:
      operationId: DescribeTags
      description: 'Describes the tags for the specified resources. You can describe the tags for one or more Application Load Balancers, Network Load Balancers, and target groups.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetGroupAttributes':
    post:
      operationId: DescribeTargetGroupAttributes
      description: '<p>Describes the attributes for the specified target group.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Application Load Balancers Guide</i> or <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes">Target Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetGroups':
    post:
      operationId: DescribeTargetGroups
      description: '<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetGroupsInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetHealth':
    post:
      operationId: DescribeTargetHealth
      description: Describes the health of the specified targets or all of your targets.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetHealthOutput'
        '480':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: HealthUnavailableException
          schema:
            $ref: '#/definitions/HealthUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetHealthInput'
      x-waiters:
        - delay: 15
          maxAttempts: 40
          operation: DescribeTargetHealth
          acceptors:
            - argument: 'TargetHealthDescriptions[].TargetHealth.State'
              expected: healthy
              matcher: pathAll
              state: success
            - matcher: error
              expected: InvalidInstance
              state: retry
        - delay: 15
          maxAttempts: 40
          operation: DescribeTargetHealth
          acceptors:
            - matcher: error
              expected: InvalidTarget
              state: success
            - argument: 'TargetHealthDescriptions[].TargetHealth.State'
              expected: unused
              matcher: pathAll
              state: success
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyListener':
    post:
      operationId: ModifyListener
      description: '<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP removes the security policy and SSL certificate properties. If you change the protocol from HTTP to HTTPS, you must add the security policy and server certificate.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '487':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '488':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '489':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '492':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '493':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '494':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyLoadBalancerAttributes':
    post:
      operationId: ModifyLoadBalancerAttributes
      description: '<p>Modifies the specified attributes of the specified Application Load Balancer or Network Load Balancer.</p> <p>If any of the specified attributes can''t be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyRule':
    post:
      operationId: ModifyRule
      description: '<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the actions for the default rule, use <a>ModifyListener</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyRuleOutput'
        '480':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '481':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '482':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '483':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '484':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
        '485':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '486':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '487':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '488':
          description: TooManyActionsException
          schema:
            $ref: '#/definitions/TooManyActionsException'
        '489':
          description: InvalidLoadBalancerActionException
          schema:
            $ref: '#/definitions/InvalidLoadBalancerActionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyTargetGroup':
    post:
      operationId: ModifyTargetGroup
      description: '<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyTargetGroupAttributes':
    post:
      operationId: ModifyTargetGroupAttributes
      description: Modifies the specified attributes of the specified target group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargets':
    post:
      operationId: RegisterTargets
      description: '<p>Registers the specified targets with the specified target group.</p> <p>You can register targets by instance ID or by IP address. If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port for the target group. Alternatively, you can override the port for a target when you register it. You can register each EC2 instance or IP address with the same target group multiple times using different ports.</p> <p>With a Network Load Balancer, you cannot register instances by instance ID if they have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You can register instances of these types by IP address.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '482':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '483':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTargetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveListenerCertificates':
    post:
      operationId: RemoveListenerCertificates
      description: '<p>Removes the specified certificate from the specified secure listener.</p> <p>You can''t remove the default certificate for a listener. To replace the default certificate, call <a>ModifyListener</a>.</p> <p>To list the certificates for your listener, use <a>DescribeListenerCertificates</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveListenerCertificatesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveListenerCertificatesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTags':
    post:
      operationId: RemoveTags
      description: '<p>Removes the specified tags from the specified Elastic Load Balancing resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '484':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetIpAddressType':
    post:
      operationId: SetIpAddressType
      description: <p>Sets the type of IP addresses used by the subnets of the specified Application Load Balancer or Network Load Balancer.</p> <p>Network Load Balancers must use <code>ipv4</code>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetIpAddressTypeOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetIpAddressTypeInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetRulePriorities':
    post:
      operationId: SetRulePriorities
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetRulePrioritiesOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetRulePrioritiesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetSecurityGroups':
    post:
      operationId: SetSecurityGroups
      description: <p>Associates the specified security groups with the specified Application Load Balancer. The specified security groups override the previously associated security groups.</p> <p>You can't specify a security group for a Network Load Balancer.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSecurityGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSecurityGroupsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetSubnets':
    post:
      operationId: SetSubnets
      description: <p>Enables the Availability Zone for the specified public subnets for the specified Application Load Balancer. The specified subnets replace the previously enabled subnets.</p> <p>You can't change the subnets for a Network Load Balancer.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSubnetsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '483':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '484':
          description: AllocationIdNotFoundException
          schema:
            $ref: '#/definitions/AllocationIdNotFoundException'
        '485':
          description: AvailabilityZoneNotSupportedException
          schema:
            $ref: '#/definitions/AvailabilityZoneNotSupportedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSubnetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddListenerCertificatesOutput:
    type: object
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: Information about the certificates.
  AddListenerCertificatesInput:
    type: object
    required:
      - ListenerArn
      - Certificates
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The certificate to add. You can specify one certificate per call.
  ListenerNotFoundException:
    type: object
    properties: {}
    description: The specified listener does not exist.
  TooManyCertificatesException:
    type: object
    properties: {}
    description: You've reached the limit on the number of certificates per load balancer.
  CertificateNotFoundException:
    type: object
    properties: {}
    description: The specified certificate does not exist.
  AddTagsOutput:
    type: object
    properties: {}
  AddTagsInput:
    type: object
    required:
      - ResourceArns
      - Tags
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Tags:
        - Key: project
          Value: lima
        - Key: department
          Value: digital-media
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags. Each resource can have a maximum of 10 tags.
  DuplicateTagKeysException:
    type: object
    properties: {}
    description: A tag key was specified more than once.
  TooManyTagsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of tags per load balancer.
  LoadBalancerNotFoundException:
    type: object
    properties: {}
    description: The specified load balancer does not exist.
  TargetGroupNotFoundException:
    type: object
    properties: {}
    description: The specified target group does not exist.
  CreateListenerOutput:
    type: object
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listener.
  CreateListenerInput:
    type: object
    required:
      - LoadBalancerArn
      - Protocol
      - Port
      - DefaultActions
    example:
      Certificates:
        - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
      DefaultActions:
        - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          Type: forward
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP.'
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: '[HTTPS listeners] The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.'
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: '[HTTPS listeners] The default SSL server certificate. You must provide exactly one default certificate. To create a certificate list, use <a>AddListenerCertificates</a>.'
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you can specify a single target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer or TCP for a Network Load Balancer.</p> <p>[HTTPS listener] If the action type is <code>authenticate-oidc</code>, you can use an identity provider that is OpenID Connect (OIDC) compliant to authenticate users as they access your application.</p> <p>[HTTPS listener] If the action type is <code>authenticate-cognito</code>, you can use Amazon Cognito to authenticate users as they access your application.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you can redirect HTTP and HTTPS requests.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you can return a custom HTTP response.</p>'
  DuplicateListenerException:
    type: object
    properties: {}
    description: A listener with the specified port already exists.
  TooManyListenersException:
    type: object
    properties: {}
    description: You've reached the limit on the number of listeners per load balancer.
  TargetGroupAssociationLimitException:
    type: object
    properties: {}
    description: You've reached the limit on the number of load balancers per target group.
  InvalidConfigurationRequestException:
    type: object
    properties: {}
    description: The requested configuration is not valid.
  IncompatibleProtocolsException:
    type: object
    properties: {}
    description: The specified configuration is not valid with this protocol.
  SSLPolicyNotFoundException:
    type: object
    properties: {}
    description: The specified SSL policy does not exist.
  UnsupportedProtocolException:
    type: object
    properties: {}
    description: The specified protocol is not supported.
  TooManyRegistrationsForTargetIdException:
    type: object
    properties: {}
    description: You've reached the limit on the number of times a target can be registered with a load balancer.
  TooManyTargetsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of targets.
  TooManyActionsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of actions per rule.
  InvalidLoadBalancerActionException:
    type: object
    properties: {}
    description: The requested action is not valid.
  CreateLoadBalancerOutput:
    type: object
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:29:48.850Z'
          DNSName: internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2'
          LoadBalancerName: my-internal-load-balancer
          Scheme: internal
          SecurityGroups:
            - sg-5943793c
          State:
            Code: provisioning
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancer.
  CreateLoadBalancerInput:
    type: object
    required:
      - Name
    example:
      Name: my-internal-load-balancer
      Scheme: internal
      SecurityGroups: []
      Subnets:
        - subnet-b7d581c0
        - subnet-8360a9e7
    properties:
      Name:
        $ref: '#/definitions/LoadBalancerName'
        description: '<p>The name of the load balancer.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".</p>'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>'
      SubnetMappings:
        $ref: '#/definitions/SubnetMappings'
        description: '<p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p> <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet.</p>'
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: '[Application Load Balancers] The IDs of the security groups for the load balancer.'
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: One or more tags to assign to the load balancer.
      Type:
        $ref: '#/definitions/LoadBalancerTypeEnum'
        description: The type of load balancer. The default is <code>application</code>.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: '[Application Load Balancers] The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.'
  DuplicateLoadBalancerNameException:
    type: object
    properties: {}
    description: A load balancer with the specified name already exists.
  TooManyLoadBalancersException:
    type: object
    properties: {}
    description: You've reached the limit on the number of load balancers for your AWS account.
  SubnetNotFoundException:
    type: object
    properties: {}
    description: The specified subnet does not exist.
  InvalidSubnetException:
    type: object
    properties: {}
    description: The specified subnet is out of available addresses.
  InvalidSecurityGroupException:
    type: object
    properties: {}
    description: The specified security group does not exist.
  InvalidSchemeException:
    type: object
    properties: {}
    description: The requested scheme is not valid.
  ResourceInUseException:
    type: object
    properties: {}
    description: A specified resource is in use.
  AllocationIdNotFoundException:
    type: object
    properties: {}
    description: The specified allocation ID does not exist.
  AvailabilityZoneNotSupportedException:
    type: object
    properties: {}
    description: The specified Availability Zone is not supported.
  OperationNotPermittedException:
    type: object
    properties: {}
    description: This operation is not allowed.
  CreateRuleOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rule.
  CreateRuleInput:
    type: object
    required:
      - ListenerArn
      - Conditions
      - Priority
      - Actions
    example:
      Actions:
        - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - /img/*
      ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
      Priority: 10
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: '<p>The conditions. Each condition specifies a field name and a single value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern. A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The rule priority. A listener can't have multiple rules with the same priority.
      Actions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.</p> <p>If the action type is <code>forward</code>, you can specify a single target group.</p> <p>[HTTPS listener] If the action type is <code>authenticate-oidc</code>, you can use an identity provider that is OpenID Connect (OIDC) compliant to authenticate users as they access your application.</p> <p>[HTTPS listener] If the action type is <code>authenticate-cognito</code>, you can use Amazon Cognito to authenticate users as they access your application.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you can redirect HTTP and HTTPS requests.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you can return a custom HTTP response.</p>'
  PriorityInUseException:
    type: object
    properties: {}
    description: The specified priority is in use.
  TooManyTargetGroupsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of target groups for your AWS account.
  TooManyRulesException:
    type: object
    properties: {}
    description: You've reached the limit on the number of rules per load balancer.
  CreateTargetGroupOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target group.
  CreateTargetGroupInput:
    type: object
    required:
      - Name
      - Protocol
      - Port
      - VpcId
    example:
      Name: my-targets
      Port: 80
      Protocol: HTTP
      VpcId: vpc-3ac0fb5f
    properties:
      Name:
        $ref: '#/definitions/TargetGroupName'
        description: '<p>The name of the target group.</p> <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>'
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP.'
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the virtual private cloud (VPC).
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: 'The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported only if the protocol of the target group is TCP. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP.'
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: 'The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which is the port on which each target receives traffic from the load balancer.'
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: '[HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.'
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5–300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds. The default is 30 seconds.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response from a target means a failed health check. For Application Load Balancers, the range is 2–60 seconds and the default is 5 seconds. For Network Load Balancers, this is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health checks successes required before considering an unhealthy target healthy. For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3.'
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health check failures required before considering a target unhealthy. For Application Load Balancers, the default is 2. For Network Load Balancers, this value must be the same as the healthy threshold count.'
      Matcher:
        $ref: '#/definitions/Matcher'
        description: '[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.'
      TargetType:
        $ref: '#/definitions/TargetTypeEnum'
        description: '<p>The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address). The default is <code>instance</code>. You can''t specify targets for a target group using both instance IDs and IP addresses.</p> <p>If the target type is <code>ip</code>, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can''t specify publicly routable IP addresses.</p>'
  DuplicateTargetGroupNameException:
    type: object
    properties: {}
    description: A target group with the specified name already exists.
  DeleteListenerOutput:
    type: object
    properties: {}
  DeleteListenerInput:
    type: object
    required:
      - ListenerArn
    example:
      ListenerArn: 'arn:aws:elasticloadbalancing:ua-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
  DeleteLoadBalancerOutput:
    type: object
    properties: {}
  DeleteLoadBalancerInput:
    type: object
    required:
      - LoadBalancerArn
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
  DeleteRuleOutput:
    type: object
    properties: {}
  DeleteRuleInput:
    type: object
    required:
      - RuleArn
    example:
      RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
  RuleNotFoundException:
    type: object
    properties: {}
    description: The specified rule does not exist.
  DeleteTargetGroupOutput:
    type: object
    properties: {}
  DeleteTargetGroupInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
  DeregisterTargetsOutput:
    type: object
    properties: {}
  DeregisterTargetsInput:
    type: object
    required:
      - TargetGroupArn
      - Targets
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
      Targets:
        - Id: i-0f76fade
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: 'The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.'
  InvalidTargetException:
    type: object
    properties: {}
    description: 'The specified target does not exist, is not in the same VPC as the target group, or has an unsupported instance type.'
  DescribeAccountLimitsOutput:
    type: object
    properties:
      Limits:
        $ref: '#/definitions/Limits'
        description: Information about the limits.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeAccountLimitsInput:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeListenerCertificatesOutput:
    type: object
    properties:
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: Information about the certificates.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeListenerCertificatesInput:
    type: object
    required:
      - ListenerArn
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Names (ARN) of the listener.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeListenersOutput:
    type: object
    example:
      Listeners:
        - DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 80
          Protocol: HTTP
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listeners.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeListenersInput:
    type: object
    example:
      ListenerArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      ListenerArns:
        $ref: '#/definitions/ListenerArns'
        description: The Amazon Resource Names (ARN) of the listeners.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeLoadBalancerAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'false'
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: access_logs.s3.prefix
          Value: ''
        - Key: deletion_protection.enabled
          Value: 'false'
        - Key: access_logs.s3.bucket
          Value: ''
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
  DescribeLoadBalancerAttributesInput:
    type: object
    required:
      - LoadBalancerArn
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
  DescribeLoadBalancersOutput:
    type: object
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:26:12.920Z'
          DNSName: my-load-balancer-424835706.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          LoadBalancerName: my-load-balancer
          Scheme: internet-facing
          SecurityGroups:
            - sg-5943793c
          State:
            Code: active
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancers.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeLoadBalancersInput:
    type: object
    example:
      LoadBalancerArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers. You can specify up to 20 load balancers in a single call.
      Names:
        $ref: '#/definitions/LoadBalancerNames'
        description: The names of the load balancers.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeRulesOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeRulesInput:
    type: object
    example:
      RuleArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      RuleArns:
        $ref: '#/definitions/RuleArns'
        description: The Amazon Resource Names (ARN) of the rules.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeSSLPoliciesOutput:
    type: object
    example:
      SslPolicies:
        - Ciphers:
            - Name: ECDHE-ECDSA-AES128-GCM-SHA256
              Priority: 1
            - Name: ECDHE-RSA-AES128-GCM-SHA256
              Priority: 2
            - Name: ECDHE-ECDSA-AES128-SHA256
              Priority: 3
            - Name: ECDHE-RSA-AES128-SHA256
              Priority: 4
            - Name: ECDHE-ECDSA-AES128-SHA
              Priority: 5
            - Name: ECDHE-RSA-AES128-SHA
              Priority: 6
            - Name: DHE-RSA-AES128-SHA
              Priority: 7
            - Name: ECDHE-ECDSA-AES256-GCM-SHA384
              Priority: 8
            - Name: ECDHE-RSA-AES256-GCM-SHA384
              Priority: 9
            - Name: ECDHE-ECDSA-AES256-SHA384
              Priority: 10
            - Name: ECDHE-RSA-AES256-SHA384
              Priority: 11
            - Name: ECDHE-RSA-AES256-SHA
              Priority: 12
            - Name: ECDHE-ECDSA-AES256-SHA
              Priority: 13
            - Name: AES128-GCM-SHA256
              Priority: 14
            - Name: AES128-SHA256
              Priority: 15
            - Name: AES128-SHA
              Priority: 16
            - Name: AES256-GCM-SHA384
              Priority: 17
            - Name: AES256-SHA256
              Priority: 18
            - Name: AES256-SHA
              Priority: 19
          Name: ELBSecurityPolicy-2015-05
          SslProtocols:
            - TLSv1
            - TLSv1.1
            - TLSv1.2
    properties:
      SslPolicies:
        $ref: '#/definitions/SslPolicies'
        description: Information about the policies.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeSSLPoliciesInput:
    type: object
    example:
      Names:
        - ELBSecurityPolicy-2015-05
    properties:
      Names:
        $ref: '#/definitions/SslPolicyNames'
        description: The names of the policies.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeTagsOutput:
    type: object
    example:
      TagDescriptions:
        - ResourceArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Tags:
            - Key: project
              Value: lima
            - Key: department
              Value: digital-media
    properties:
      TagDescriptions:
        $ref: '#/definitions/TagDescriptions'
        description: Information about the tags.
  DescribeTagsInput:
    type: object
    required:
      - ResourceArns
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Names (ARN) of the resources.
  DescribeTargetGroupAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '300'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the target group attributes
  DescribeTargetGroupAttributesInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
  DescribeTargetGroupsOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target groups.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeTargetGroupsInput:
    type: object
    example:
      TargetGroupArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      TargetGroupArns:
        $ref: '#/definitions/TargetGroupArns'
        description: The Amazon Resource Names (ARN) of the target groups.
      Names:
        $ref: '#/definitions/TargetGroupNames'
        description: The names of the target groups.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeTargetHealthOutput:
    type: object
    example:
      TargetHealthDescriptions:
        - HealthCheckPort: '80'
          Target:
            Id: i-0f76fade
            Port: 80
          TargetHealth:
            State: healthy
    properties:
      TargetHealthDescriptions:
        $ref: '#/definitions/TargetHealthDescriptions'
        description: Information about the health of the targets.
  DescribeTargetHealthInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
      Targets:
        - Id: i-0f76fade
          Port: 80
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: The targets.
  HealthUnavailableException:
    type: object
    properties: {}
    description: The health of the specified targets could not be retrieved due to an internal error.
  ModifyListenerOutput:
    type: object
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-new-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the modified listener.
  ModifyListenerInput:
    type: object
    required:
      - ListenerArn
    example:
      Certificates:
        - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-new-server-cert'
      ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Port:
        $ref: '#/definitions/Port'
        description: The port for connections from clients to the load balancer.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer. Application Load Balancers support HTTP and HTTPS and Network Load Balancers support TCP.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: '[HTTPS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security Policies</a> in the <i>Application Load Balancers Guide</i>.'
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: '[HTTPS listeners] The default SSL server certificate. You must provide exactly one default certificate. To create a certificate list, use <a>AddListenerCertificates</a>.'
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions for the default rule. The rule must include one forward action or one or more fixed-response actions.</p> <p>If the action type is <code>forward</code>, you can specify a single target group. The protocol of the target group must be HTTP or HTTPS for an Application Load Balancer or TCP for a Network Load Balancer.</p> <p>[HTTPS listener] If the action type is <code>authenticate-oidc</code>, you can use an identity provider that is OpenID Connect (OIDC) compliant to authenticate users as they access your application.</p> <p>[HTTPS listener] If the action type is <code>authenticate-cognito</code>, you can use Amazon Cognito to authenticate users as they access your application.</p> <p>[Application Load Balancer] If the action type is <code>redirect</code>, you can redirect HTTP and HTTPS requests.</p> <p>[Application Load Balancer] If the action type is <code>fixed-response</code>, you can return a custom HTTP response.</p>'
  ModifyLoadBalancerAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: my-load-balancer-logs
        - Key: access_logs.s3.prefix
          Value: myapp
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: deletion_protection.enabled
          Value: 'false'
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
  ModifyLoadBalancerAttributesInput:
    type: object
    required:
      - LoadBalancerArn
      - Attributes
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: my-loadbalancer-logs
        - Key: access_logs.s3.prefix
          Value: myapp
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: The load balancer attributes.
  ModifyRuleOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /images/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the modified rule.
  ModifyRuleInput:
    type: object
    required:
      - RuleArn
    example:
      Conditions:
        - Field: path-pattern
          Values:
            - /images/*
      RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: '<p>The conditions. Each condition specifies a field name and a single value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern. A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
      Actions:
        $ref: '#/definitions/Actions'
        description: '<p>The actions.</p> <p>If the action type is <code>forward</code>, you can specify a single target group.</p> <p>If the action type is <code>authenticate-oidc</code>, you can use an identity provider that is OpenID Connect (OIDC) compliant to authenticate users as they access your application.</p> <p>If the action type is <code>authenticate-cognito</code>, you can use Amazon Cognito to authenticate users as they access your application.</p>'
  ModifyTargetGroupOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPort: '443'
          HealthCheckProtocol: HTTPS
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 443
          Protocol: HTTPS
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f'
          TargetGroupName: my-https-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the modified target group.
  ModifyTargetGroupInput:
    type: object
    required:
      - TargetGroupArn
    example:
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported only if the protocol of the target group is TCP.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port the load balancer uses when performing health checks on targets.
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: '[HTTP/HTTPS health checks] The ping path that is the destination for the health check request.'
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5–300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: '[HTTP/HTTPS health checks] The amount of time, in seconds, during which no response means a failed health check.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: 'The number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy threshold count.'
      Matcher:
        $ref: '#/definitions/Matcher'
        description: '[HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.'
  ModifyTargetGroupAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '600'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the attributes.
  ModifyTargetGroupAttributesInput:
    type: object
    required:
      - TargetGroupArn
      - Attributes
    example:
      Attributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '600'
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: The attributes.
  RegisterTargetsOutput:
    type: object
    properties: {}
  RegisterTargetsInput:
    type: object
    required:
      - TargetGroupArn
      - Targets
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-new-targets/3bb63f11dfb0faf9'
      Targets:
        - Id: i-80c8dd94
          Port: 80
        - Id: i-80c8dd94
          Port: 766
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: The targets.
  RemoveListenerCertificatesOutput:
    type: object
    properties: {}
  RemoveListenerCertificatesInput:
    type: object
    required:
      - ListenerArn
      - Certificates
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The certificate to remove. You can specify one certificate per call.
  RemoveTagsOutput:
    type: object
    properties: {}
  RemoveTagsInput:
    type: object
    required:
      - ResourceArns
      - TagKeys
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      TagKeys:
        - project
        - department
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The tag keys for the tags to remove.
  SetIpAddressTypeOutput:
    type: object
    properties:
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type.
  SetIpAddressTypeInput:
    type: object
    required:
      - LoadBalancerArn
      - IpAddressType
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.
  SetRulePrioritiesOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '5'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
  SetRulePrioritiesInput:
    type: object
    required:
      - RulePriorities
    example:
      RulePriorities:
        - Priority: 5
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      RulePriorities:
        $ref: '#/definitions/RulePriorityList'
        description: The rule priorities.
  SetSecurityGroupsOutput:
    type: object
    example:
      SecurityGroupIds:
        - sg-5943793c
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups associated with the load balancer.
  SetSecurityGroupsInput:
    type: object
    required:
      - LoadBalancerArn
      - SecurityGroups
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      SecurityGroups:
        - sg-5943793c
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups.
  SetSubnetsOutput:
    type: object
    example:
      AvailabilityZones:
        - SubnetId: subnet-8360a9e7
          ZoneName: us-west-2a
        - SubnetId: subnet-b7d581c0
          ZoneName: us-west-2b
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: Information about the subnet and Availability Zone.
  SetSubnetsInput:
    type: object
    required:
      - LoadBalancerArn
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Subnets:
        - subnet-8360a9e7
        - subnet-b7d581c0
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.
      SubnetMappings:
        $ref: '#/definitions/SubnetMappings'
        description: <p>The IDs of the public subnets. You must specify subnets from at least two Availability Zones. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings.</p> <p>You cannot specify Elastic IP addresses for your subnets.</p>
  ActionTypeEnum:
    type: string
    enum:
      - forward
      - authenticate-oidc
      - authenticate-cognito
      - redirect
      - fixed-response
  TargetGroupArn:
    type: string
  AuthenticateOidcActionConfig:
    type: object
    required:
      - Issuer
      - AuthorizationEndpoint
      - TokenEndpoint
      - UserInfoEndpoint
      - ClientId
      - ClientSecret
    properties:
      Issuer:
        $ref: '#/definitions/AuthenticateOidcActionIssuer'
        description: 'The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      AuthorizationEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionAuthorizationEndpoint'
        description: 'The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      TokenEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionTokenEndpoint'
        description: 'The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      UserInfoEndpoint:
        $ref: '#/definitions/AuthenticateOidcActionUserInfoEndpoint'
        description: 'The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.'
      ClientId:
        $ref: '#/definitions/AuthenticateOidcActionClientId'
        description: The OAuth 2.0 client identifier.
      ClientSecret:
        $ref: '#/definitions/AuthenticateOidcActionClientSecret'
        description: The OAuth 2.0 client secret.
      SessionCookieName:
        $ref: '#/definitions/AuthenticateOidcActionSessionCookieName'
        description: The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
      Scope:
        $ref: '#/definitions/AuthenticateOidcActionScope'
        description: '<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>'
      SessionTimeout:
        $ref: '#/definitions/AuthenticateOidcActionSessionTimeout'
        description: 'The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).'
      AuthenticationRequestExtraParams:
        $ref: '#/definitions/AuthenticateOidcActionAuthenticationRequestExtraParams'
        description: The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
      OnUnauthenticatedRequest:
        $ref: '#/definitions/AuthenticateOidcActionConditionalBehaviorEnum'
        description: '<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>'
    description: Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.
  AuthenticateCognitoActionConfig:
    type: object
    required:
      - UserPoolArn
      - UserPoolClientId
      - UserPoolDomain
    properties:
      UserPoolArn:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolArn'
        description: The Amazon Resource Name (ARN) of the Amazon Cognito user pool.
      UserPoolClientId:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolClientId'
        description: The ID of the Amazon Cognito user pool client.
      UserPoolDomain:
        $ref: '#/definitions/AuthenticateCognitoActionUserPoolDomain'
        description: The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.
      SessionCookieName:
        $ref: '#/definitions/AuthenticateCognitoActionSessionCookieName'
        description: The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.
      Scope:
        $ref: '#/definitions/AuthenticateCognitoActionScope'
        description: '<p>The set of user claims to be requested from the IdP. The default is <code>openid</code>.</p> <p>To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.</p>'
      SessionTimeout:
        $ref: '#/definitions/AuthenticateCognitoActionSessionTimeout'
        description: 'The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).'
      AuthenticationRequestExtraParams:
        $ref: '#/definitions/AuthenticateCognitoActionAuthenticationRequestExtraParams'
        description: The query parameters (up to 10) to include in the redirect request to the authorization endpoint.
      OnUnauthenticatedRequest:
        $ref: '#/definitions/AuthenticateCognitoActionConditionalBehaviorEnum'
        description: '<p>The behavior if the user is not authenticated. The following are possible values:</p> <ul> <li> <p>deny<code/> - Return an HTTP 401 Unauthorized error.</p> </li> <li> <p>allow<code/> - Allow the request to be forwarded to the target.</p> </li> <li> <p>authenticate<code/> - Redirect the request to the IdP authorization endpoint. This is the default value.</p> </li> </ul>'
    description: Request parameters to use when integrating with Amazon Cognito to authenticate users.
  ActionOrder:
    type: integer
    minimum: 1
    maximum: 50000
  RedirectActionConfig:
    type: object
    required:
      - StatusCode
    properties:
      Protocol:
        $ref: '#/definitions/RedirectActionProtocol'
        description: 'The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You cannot redirect HTTPS to HTTP.'
      Port:
        $ref: '#/definitions/RedirectActionPort'
        description: 'The port. You can specify a value from 1 to 65535 or #{port}.'
      Host:
        $ref: '#/definitions/RedirectActionHost'
        description: 'The hostname. This component is not percent-encoded. The hostname can contain #{host}.'
      Path:
        $ref: '#/definitions/RedirectActionPath'
        description: 'The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.'
      Query:
        $ref: '#/definitions/RedirectActionQuery'
        description: 'The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?", as it is automatically added. You can specify any of the reserved keywords.'
      StatusCode:
        $ref: '#/definitions/RedirectActionStatusCodeEnum'
        description: The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).
    description: '<p>Information about a redirect action.</p> <p>A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.</p> <p>You can reuse URI components using the following reserved keywords:</p> <ul> <li> <p>#{protocol}</p> </li> <li> <p>#{host}</p> </li> <li> <p>#{port}</p> </li> <li> <p>#{path} (the leading "/" is removed)</p> </li> <li> <p>#{query}</p> </li> </ul> <p>For example, you can change the path to "/new/#{path}", the hostname to "example.#{host}", or the query to "#{query}&amp;value=xyz".</p>'
  FixedResponseActionConfig:
    type: object
    required:
      - StatusCode
    properties:
      MessageBody:
        $ref: '#/definitions/FixedResponseActionMessage'
        description: The message.
      StatusCode:
        $ref: '#/definitions/FixedResponseActionStatusCode'
        description: 'The HTTP response code (2XX, 4XX, or 5XX).'
      ContentType:
        $ref: '#/definitions/FixedResponseActionContentType'
        description: '<p>The content type.</p> <p>Valid Values: text/plain | text/css | text/html | application/javascript | application/json</p>'
    description: Information about an action that returns a custom HTTP response.
  Action:
    type: object
    required:
      - Type
    properties:
      Type:
        $ref: '#/definitions/ActionTypeEnum'
        description: 'The type of action. Each rule must include exactly one of the following types of actions: <code>forward</code>, <code>fixed-response</code>, or <code>redirect</code>.'
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group. Specify only when <code>Type</code> is <code>forward</code>.
      AuthenticateOidcConfig:
        $ref: '#/definitions/AuthenticateOidcActionConfig'
        description: '[HTTPS listener] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when <code>Type</code> is <code>authenticate-oidc</code>.'
      AuthenticateCognitoConfig:
        $ref: '#/definitions/AuthenticateCognitoActionConfig'
        description: '[HTTPS listener] Information for using Amazon Cognito to authenticate users. Specify only when <code>Type</code> is <code>authenticate-cognito</code>.'
      Order:
        $ref: '#/definitions/ActionOrder'
        description: The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first. The final action to be performed must be a <code>forward</code> or a <code>fixed-response</code> action.
      RedirectConfig:
        $ref: '#/definitions/RedirectActionConfig'
        description: '[Application Load Balancer] Information for creating a redirect action. Specify only when <code>Type</code> is <code>redirect</code>.'
      FixedResponseConfig:
        $ref: '#/definitions/FixedResponseActionConfig'
        description: '[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when <code>Type</code> is <code>fixed-response</code>.'
    description: Information about an action.
  Actions:
    type: array
    items:
      $ref: '#/definitions/Action'
  ListenerArn:
    type: string
  CertificateList:
    type: array
    items:
      $ref: '#/definitions/Certificate'
  ResourceArns:
    type: array
    items:
      $ref: '#/definitions/ResourceArn'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
  AllocationId:
    type: string
  AuthenticateCognitoActionAuthenticationRequestParamName:
    type: string
  AuthenticateCognitoActionAuthenticationRequestParamValue:
    type: string
  AuthenticateCognitoActionAuthenticationRequestExtraParams:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AuthenticateCognitoActionAuthenticationRequestParamName'
        value:
          $ref: '#/definitions/AuthenticateCognitoActionAuthenticationRequestParamValue'
  AuthenticateCognitoActionConditionalBehaviorEnum:
    type: string
    enum:
      - deny
      - allow
      - authenticate
  AuthenticateCognitoActionUserPoolArn:
    type: string
  AuthenticateCognitoActionUserPoolClientId:
    type: string
  AuthenticateCognitoActionUserPoolDomain:
    type: string
  AuthenticateCognitoActionSessionCookieName:
    type: string
  AuthenticateCognitoActionScope:
    type: string
  AuthenticateCognitoActionSessionTimeout:
    type: integer
  AuthenticateOidcActionAuthenticationRequestParamName:
    type: string
  AuthenticateOidcActionAuthenticationRequestParamValue:
    type: string
  AuthenticateOidcActionAuthenticationRequestExtraParams:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AuthenticateOidcActionAuthenticationRequestParamName'
        value:
          $ref: '#/definitions/AuthenticateOidcActionAuthenticationRequestParamValue'
  AuthenticateOidcActionAuthorizationEndpoint:
    type: string
  AuthenticateOidcActionClientId:
    type: string
  AuthenticateOidcActionClientSecret:
    type: string
  AuthenticateOidcActionConditionalBehaviorEnum:
    type: string
    enum:
      - deny
      - allow
      - authenticate
  AuthenticateOidcActionIssuer:
    type: string
  AuthenticateOidcActionTokenEndpoint:
    type: string
  AuthenticateOidcActionUserInfoEndpoint:
    type: string
  AuthenticateOidcActionSessionCookieName:
    type: string
  AuthenticateOidcActionScope:
    type: string
  AuthenticateOidcActionSessionTimeout:
    type: integer
  ZoneName:
    type: string
  SubnetId:
    type: string
  LoadBalancerAddresses:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerAddress'
  AvailabilityZone:
    type: object
    properties:
      ZoneName:
        $ref: '#/definitions/ZoneName'
        description: The name of the Availability Zone.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the subnet.
      LoadBalancerAddresses:
        $ref: '#/definitions/LoadBalancerAddresses'
        description: '[Network Load Balancers] The static IP address.'
    description: Information about an Availability Zone.
  AvailabilityZones:
    type: array
    items:
      $ref: '#/definitions/AvailabilityZone'
  CanonicalHostedZoneId:
    type: string
  CertificateArn:
    type: string
  Default:
    type: boolean
  Certificate:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The Amazon Resource Name (ARN) of the certificate.
      IsDefault:
        $ref: '#/definitions/Default'
        description: Indicates whether the certificate is the default certificate.
    description: Information about an SSL server certificate.
  CipherName:
    type: string
  CipherPriority:
    type: integer
  Cipher:
    type: object
    properties:
      Name:
        $ref: '#/definitions/CipherName'
        description: The name of the cipher.
      Priority:
        $ref: '#/definitions/CipherPriority'
        description: The priority of the cipher.
    description: Information about a cipher used in a policy.
  Ciphers:
    type: array
    items:
      $ref: '#/definitions/Cipher'
  ConditionFieldName:
    type: string
    maxLength: 64
  LoadBalancerArn:
    type: string
  ProtocolEnum:
    type: string
    enum:
      - HTTP
      - HTTPS
      - TCP
  Port:
    type: integer
    minimum: 1
    maximum: 65535
  SslPolicyName:
    type: string
  Listeners:
    type: array
    items:
      $ref: '#/definitions/Listener'
  LoadBalancerName:
    type: string
  Subnets:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
  SubnetMappings:
    type: array
    items:
      $ref: '#/definitions/SubnetMapping'
  SecurityGroups:
    type: array
    items:
      $ref: '#/definitions/SecurityGroupId'
  LoadBalancerSchemeEnum:
    type: string
    enum:
      - internet-facing
      - internal
  LoadBalancerTypeEnum:
    type: string
    enum:
      - application
      - network
  IpAddressType:
    type: string
    enum:
      - ipv4
      - dualstack
  LoadBalancers:
    type: array
    items:
      $ref: '#/definitions/LoadBalancer'
  RuleConditionList:
    type: array
    items:
      $ref: '#/definitions/RuleCondition'
  RulePriority:
    type: integer
    minimum: 1
    maximum: 50000
  Rules:
    type: array
    items:
      $ref: '#/definitions/Rule'
  TargetGroupName:
    type: string
  VpcId:
    type: string
  HealthCheckPort:
    type: string
  Path:
    type: string
    minLength: 1
    maxLength: 1024
  HealthCheckIntervalSeconds:
    type: integer
    minimum: 5
    maximum: 300
  HealthCheckTimeoutSeconds:
    type: integer
    minimum: 2
    maximum: 60
  HealthCheckThresholdCount:
    type: integer
    minimum: 2
    maximum: 10
  Matcher:
    type: object
    required:
      - HttpCode
    properties:
      HttpCode:
        $ref: '#/definitions/HttpCode'
        description: '<p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>'
    description: Information to use when checking for a successful response from a target.
  TargetTypeEnum:
    type: string
    enum:
      - instance
      - ip
  TargetGroups:
    type: array
    items:
      $ref: '#/definitions/TargetGroup'
  CreatedTime:
    type: string
    format: date-time
  DNSName:
    type: string
  RuleArn:
    type: string
  TargetDescriptions:
    type: array
    items:
      $ref: '#/definitions/TargetDescription'
  Marker:
    type: string
  PageSize:
    type: integer
    minimum: 1
    maximum: 400
  Limits:
    type: array
    items:
      $ref: '#/definitions/Limit'
  ListenerArns:
    type: array
    items:
      $ref: '#/definitions/ListenerArn'
  LoadBalancerAttributes:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerAttribute'
    maxItems: 20
  LoadBalancerArns:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerArn'
  LoadBalancerNames:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerName'
  RuleArns:
    type: array
    items:
      $ref: '#/definitions/RuleArn'
  SslPolicyNames:
    type: array
    items:
      $ref: '#/definitions/SslPolicyName'
  SslPolicies:
    type: array
    items:
      $ref: '#/definitions/SslPolicy'
  TagDescriptions:
    type: array
    items:
      $ref: '#/definitions/TagDescription'
  TargetGroupAttributes:
    type: array
    items:
      $ref: '#/definitions/TargetGroupAttribute'
  TargetGroupArns:
    type: array
    items:
      $ref: '#/definitions/TargetGroupArn'
  TargetGroupNames:
    type: array
    items:
      $ref: '#/definitions/TargetGroupName'
  TargetHealthDescriptions:
    type: array
    items:
      $ref: '#/definitions/TargetHealthDescription'
  Description:
    type: string
  FixedResponseActionMessage:
    type: string
    minLength: 0
    maxLength: 1024
  FixedResponseActionStatusCode:
    type: string
    pattern: ^(2|4|5)\d\d$
  FixedResponseActionContentType:
    type: string
    minLength: 0
    maxLength: 32
  HttpCode:
    type: string
  IpAddress:
    type: string
  IsDefault:
    type: boolean
  Name:
    type: string
  Max:
    type: string
  Limit:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: '<p>The name of the limit. The possible values are:</p> <ul> <li> <p>application-load-balancers</p> </li> <li> <p>listeners-per-application-load-balancer</p> </li> <li> <p>listeners-per-network-load-balancer</p> </li> <li> <p>network-load-balancers</p> </li> <li> <p>rules-per-application-load-balancer</p> </li> <li> <p>target-groups</p> </li> <li> <p>targets-per-application-load-balancer</p> </li> <li> <p>targets-per-availability-zone-per-network-load-balancer</p> </li> <li> <p>targets-per-network-load-balancer</p> </li> </ul>'
      Max:
        $ref: '#/definitions/Max'
        description: The maximum value of the limit.
    description: Information about an Elastic Load Balancing resource limit for your AWS account.
  StringValue:
    type: string
  ListOfString:
    type: array
    items:
      $ref: '#/definitions/StringValue'
  Listener:
    type: object
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The SSL server certificate. You must provide a certificate if the protocol is HTTPS.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: The default actions for the listener.
    description: Information about a listener.
  LoadBalancerState:
    type: object
    properties:
      Code:
        $ref: '#/definitions/LoadBalancerStateEnum'
        description: 'The state code. The initial state of the load balancer is <code>provisioning</code>. After the load balancer is fully set up and ready to route traffic, its state is <code>active</code>. If the load balancer could not be set up, its state is <code>failed</code>.'
      Reason:
        $ref: '#/definitions/StateReason'
        description: A description of the state.
    description: Information about the state of the load balancer.
  LoadBalancer:
    type: object
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The public DNS name of the load balancer.
      CanonicalHostedZoneId:
        $ref: '#/definitions/CanonicalHostedZoneId'
        description: The ID of the Amazon Route 53 hosted zone associated with the load balancer.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The date and time the load balancer was created.
      LoadBalancerName:
        $ref: '#/definitions/LoadBalancerName'
        description: The name of the load balancer.
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p>'
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the load balancer.
      State:
        $ref: '#/definitions/LoadBalancerState'
        description: The state of the load balancer.
      Type:
        $ref: '#/definitions/LoadBalancerTypeEnum'
        description: The type of load balancer.
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones for the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups for the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses).
    description: Information about a load balancer.
  LoadBalancerAddress:
    type: object
    properties:
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: The static IP address.
      AllocationId:
        $ref: '#/definitions/AllocationId'
        description: '[Network Load Balancers] The allocation ID of the Elastic IP address.'
    description: Information about a static IP address for a load balancer.
  LoadBalancerAttributeKey:
    type: string
    pattern: '^[a-zA-Z0-9._]+$'
    maxLength: 256
  LoadBalancerAttributeValue:
    type: string
    maxLength: 1024
  LoadBalancerAttribute:
    type: object
    properties:
      Key:
        $ref: '#/definitions/LoadBalancerAttributeKey'
        description: '<p>The name of the attribute.</p> <p>The following attributes are supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>deletion_protection.enabled</code> - Indicates whether deletion protection is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul> <p>The following attributes are supported by only Application Load Balancers:</p> <ul> <li> <p> <code>access_logs.s3.enabled</code> - Indicates whether access logs are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>access_logs.s3.bucket</code> - The name of the S3 bucket for the access logs. This attribute is required if access logs are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permissions to write to the bucket.</p> </li> <li> <p> <code>access_logs.s3.prefix</code> - The prefix for the location in the S3 bucket for the access logs.</p> </li> <li> <p> <code>idle_timeout.timeout_seconds</code> - The idle timeout value, in seconds. The valid range is 1-4000 seconds. The default is 60 seconds.</p> </li> <li> <p> <code>routing.http2.enabled</code> - Indicates whether HTTP/2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>true</code>.</p> </li> </ul> <p>The following attributes are supported by only Network Load Balancers:</p> <ul> <li> <p> <code>load_balancing.cross_zone.enabled</code> - Indicates whether cross-zone load balancing is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/LoadBalancerAttributeValue'
        description: The value of the attribute.
    description: Information about a load balancer attribute.
  LoadBalancerStateEnum:
    type: string
    enum:
      - active
      - provisioning
      - active_impaired
      - failed
  StateReason:
    type: string
  RedirectActionProtocol:
    type: string
    pattern: '^(HTTPS?|#\{protocol\})$'
  RedirectActionPort:
    type: string
  RedirectActionHost:
    type: string
    minLength: 1
    maxLength: 128
  RedirectActionPath:
    type: string
    minLength: 1
    maxLength: 128
  RedirectActionQuery:
    type: string
    minLength: 0
    maxLength: 128
  RedirectActionStatusCodeEnum:
    type: string
    enum:
      - HTTP_301
      - HTTP_302
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  ResourceArn:
    type: string
  String:
    type: string
  Rule:
    type: object
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Priority:
        $ref: '#/definitions/String'
        description: The priority.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: The conditions.
      Actions:
        $ref: '#/definitions/Actions'
        description: The actions.
      IsDefault:
        $ref: '#/definitions/IsDefault'
        description: Indicates whether this is the default rule.
    description: Information about a rule.
  RuleCondition:
    type: object
    properties:
      Field:
        $ref: '#/definitions/ConditionFieldName'
        description: The name of the field. The possible values are <code>host-header</code> and <code>path-pattern</code>.
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>The condition value.</p> <p>If the field name is <code>host-header</code>, you can specify a single host name (for example, my.example.com). A host name is case insensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>- .</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul> <p>If the field name is <code>path-pattern</code>, you can specify a single path pattern (for example, /img/*). A path pattern is case-sensitive, can be up to 128 characters in length, and can contain any of the following characters. You can include up to three wildcard characters.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
    description: Information about a condition for a rule.
  RulePriorityPair:
    type: object
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The rule priority.
    description: Information about the priorities for the rules for a listener.
  RulePriorityList:
    type: array
    items:
      $ref: '#/definitions/RulePriorityPair'
  SecurityGroupId:
    type: string
  SslPolicy:
    type: object
    properties:
      SslProtocols:
        $ref: '#/definitions/SslProtocols'
        description: The protocols.
      Ciphers:
        $ref: '#/definitions/Ciphers'
        description: The ciphers.
      Name:
        $ref: '#/definitions/SslPolicyName'
        description: The name of the policy.
    description: Information about a policy used for SSL negotiation.
  SslProtocols:
    type: array
    items:
      $ref: '#/definitions/SslProtocol'
  SslProtocol:
    type: string
  SubnetMapping:
    type: object
    properties:
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the subnet.
      AllocationId:
        $ref: '#/definitions/AllocationId'
        description: '[Network Load Balancers] The allocation ID of the Elastic IP address.'
    description: Information about a subnet mapping.
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: Information about a tag.
  TagDescription:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: Information about the tags.
    description: The tags associated with a resource.
  TargetId:
    type: string
  TargetDescription:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/TargetId'
        description: 'The ID of the target. If the target type of the target group is <code>instance</code>, specify an instance ID. If the target type is <code>ip</code>, specify an IP address.'
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the target is listening.
      AvailabilityZone:
        $ref: '#/definitions/ZoneName'
        description: '<p>An Availability Zone or <code>all</code>. This determines whether the target receives traffic from the load balancer nodes in the specified Availability Zone or from all enabled Availability Zones for the load balancer.</p> <p>This parameter is not supported if the target type of the target group is <code>instance</code>. If the IP address is in a subnet of the VPC for the target group, the Availability Zone is automatically detected and this parameter is optional. If the IP address is outside the VPC, this parameter is required.</p> <p>With an Application Load Balancer, if the IP address is outside the VPC for the target group, the only supported value is <code>all</code>.</p>'
    description: Information about a target.
  TargetGroup:
    type: object
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      TargetGroupName:
        $ref: '#/definitions/TargetGroupName'
        description: The name of the target group.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use for routing traffic to the targets.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the targets are listening.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the targets.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use to connect with the target.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response means a failed health check.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health check failures required before considering the target unhealthy.
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: The destination for the health check request.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: The HTTP codes to use when checking for a successful response from a target.
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.
      TargetType:
        $ref: '#/definitions/TargetTypeEnum'
        description: The type of target that you must specify when registering targets with this target group. The possible values are <code>instance</code> (targets are specified by instance ID) or <code>ip</code> (targets are specified by IP address).
    description: Information about a target group.
  TargetGroupAttributeKey:
    type: string
    pattern: '^[a-zA-Z0-9._]+$'
    maxLength: 256
  TargetGroupAttributeValue:
    type: string
  TargetGroupAttribute:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TargetGroupAttributeKey'
        description: '<p>The name of the attribute.</p> <p>The following attributes are supported by both Application Load Balancers and Network Load Balancers:</p> <ul> <li> <p> <code>deregistration_delay.timeout_seconds</code> - The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from <code>draining</code> to <code>unused</code>. The range is 0-3600 seconds. The default value is 300 seconds.</p> </li> </ul> <p>The following attributes are supported by only Application Load Balancers:</p> <ul> <li> <p> <code>slow_start.duration_seconds</code> - The time period, in seconds, during which a newly registered target receives a linearly increasing share of the traffic to the target group. After this time period ends, the target receives its full share of traffic. The range is 30-900 seconds (15 minutes). Slow start mode is disabled by default.</p> </li> <li> <p> <code>stickiness.enabled</code> - Indicates whether sticky sessions are enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> <li> <p> <code>stickiness.type</code> - The type of sticky sessions. The possible value is <code>lb_cookie</code>.</p> </li> <li> <p> <code>stickiness.lb_cookie.duration_seconds</code> - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</p> </li> </ul> <p>The following attributes are supported by only Network Load Balancers:</p> <ul> <li> <p> <code>proxy_protocol_v2.enabled</code> - Indicates whether Proxy Protocol version 2 is enabled. The value is <code>true</code> or <code>false</code>. The default is <code>false</code>.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/TargetGroupAttributeValue'
        description: The value of the attribute.
    description: Information about a target group attribute.
  TargetHealthStateEnum:
    type: string
    enum:
      - initial
      - healthy
      - unhealthy
      - unused
      - draining
      - unavailable
  TargetHealthReasonEnum:
    type: string
    enum:
      - Elb.RegistrationInProgress
      - Elb.InitialHealthChecking
      - Target.ResponseCodeMismatch
      - Target.Timeout
      - Target.FailedHealthChecks
      - Target.NotRegistered
      - Target.NotInUse
      - Target.DeregistrationInProgress
      - Target.InvalidState
      - Target.IpUnusable
      - Elb.InternalError
  TargetHealth:
    type: object
    properties:
      State:
        $ref: '#/definitions/TargetHealthStateEnum'
        description: The state of the target.
      Reason:
        $ref: '#/definitions/TargetHealthReasonEnum'
        description: '<p>The reason code. If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The health checks failed because the connection to the target timed out, the target response was malformed, or the target failed the health check for an unknown reason.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.IpUnusable</code> - The target IP address is reserved for use by a load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul>'
      Description:
        $ref: '#/definitions/Description'
        description: 'A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.'
    description: Information about the current health of a target.
  TargetHealthDescription:
    type: object
    properties:
      Target:
        $ref: '#/definitions/TargetDescription'
        description: The description of the target.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      TargetHealth:
        $ref: '#/definitions/TargetHealth'
        description: The health information for the target.
    description: Information about the health of a target.
