swagger: '2.0'
info:
  version: '2017-11-27'
  x-release: v4
  title: AmazonMQ
  description: 'Amazon MQ is a managed message broker service for Apache ActiveMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mq
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mq-2017-11-27.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/mq/'
host: mq.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /v1/brokers:
    post:
      operationId: CreateBroker
      description: 'Creates a broker. Note: This API is asynchronous.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBrokerResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBrokerRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBrokers
      description: Returns a list of all brokers.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBrokersResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBrokersRequest'
  /v1/configurations:
    post:
      operationId: CreateConfiguration
      description: Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConfigurationResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateConfigurationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListConfigurations
      description: Returns a list of all configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationsResponse'
        '480':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConfigurationsRequest'
  '/v1/brokers/{broker-id}/users/{username}':
    post:
      operationId: CreateUser
      description: Creates an ActiveMQ user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
        - name: broker-id
          in: path
          type: string
          required: true
        - name: username
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteUser
      description: Deletes an ActiveMQ user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
        - name: broker-id
          in: path
          type: string
          required: true
        - name: username
          in: path
          type: string
          required: true
    get:
      operationId: DescribeUser
      description: Returns information about an ActiveMQ user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUserResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeUserRequest'
        - name: broker-id
          in: path
          type: string
          required: true
        - name: username
          in: path
          type: string
          required: true
    put:
      operationId: UpdateUser
      description: Updates the information for an ActiveMQ user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateUserResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
        - name: broker-id
          in: path
          type: string
          required: true
        - name: username
          in: path
          type: string
          required: true
  '/v1/brokers/{broker-id}':
    delete:
      operationId: DeleteBroker
      description: 'Deletes a broker. Note: This API is asynchronous.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBrokerResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBrokerRequest'
        - name: broker-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeBroker
      description: Returns information about the specified broker.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBrokerResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBrokerRequest'
        - name: broker-id
          in: path
          type: string
          required: true
    put:
      operationId: UpdateBroker
      description: Adds a pending configuration change to a broker.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBrokerResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBrokerRequest'
        - name: broker-id
          in: path
          type: string
          required: true
  '/v1/configurations/{configuration-id}':
    get:
      operationId: DescribeConfiguration
      description: Returns information about the specified configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationRequest'
        - name: configuration-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateConfiguration
      description: Updates the specified configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConfigurationResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConfigurationRequest'
        - name: configuration-id
          in: path
          type: string
          required: true
  '/v1/configurations/{configuration-id}/revisions/{configuration-revision}':
    get:
      operationId: DescribeConfigurationRevision
      description: Returns the specified configuration revision for the specified configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConfigurationRevisionResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConfigurationRevisionRequest'
        - name: configuration-id
          in: path
          type: string
          required: true
        - name: configuration-revision
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/configurations/{configuration-id}/revisions':
    get:
      operationId: ListConfigurationRevisions
      description: Returns a list of all revisions for the specified configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConfigurationRevisionsResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConfigurationRevisionsRequest'
        - name: configuration-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/brokers/{broker-id}/users':
    get:
      operationId: ListUsers
      description: Returns a list of all ActiveMQ users.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsersResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
        - name: broker-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/v1/brokers/{broker-id}/reboot':
    post:
      operationId: RebootBroker
      description: 'Reboots a broker. Note: This API is asynchronous.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootBrokerResponse'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: BadRequestException
          schema:
            $ref: '#/definitions/BadRequestException'
        '482':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '483':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebootBrokerRequest'
        - name: broker-id
          in: path
          type: string
          required: true
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateBrokerResponse:
    type: object
    properties:
      BrokerArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of the broker.
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
  CreateBrokerRequest:
    type: object
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/__boolean'
        description: 'Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.'
      BrokerName:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.'
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: A list of information about the configuration.
      CreatorRequestId:
        $ref: '#/definitions/__string'
        description: 'The unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn''t require idempotency.'
      DeploymentMode:
        $ref: '#/definitions/DeploymentMode'
        description: Required. The deployment mode of the broker.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'Required. The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      HostInstanceType:
        $ref: '#/definitions/__string'
        description: Required. The broker's instance type.
      Logs:
        $ref: '#/definitions/Logs'
        description: Enables Amazon CloudWatch logging for brokers.
      MaintenanceWindowStartTime:
        $ref: '#/definitions/WeeklyStartTime'
        description: The parameters that determine the WeeklyStartTime.
      PubliclyAccessible:
        $ref: '#/definitions/__boolean'
        description: Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.
      SecurityGroups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.'
      SubnetIds:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.'
      Users:
        $ref: '#/definitions/__listOfUser'
        description: 'Required. The list of ActiveMQ users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
    description: Creates a broker using the specified properties.
  BadRequestException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  UnauthorizedException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  InternalServerErrorException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  ConflictException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  ForbiddenException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  CreateConfigurationResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The Amazon Resource Name (ARN) of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
  CreateConfigurationRequest:
    type: object
    properties:
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'Required. The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
    description: Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).
  CreateUserResponse:
    type: object
    properties: {}
  CreateUserRequest:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Password:
        $ref: '#/definitions/__string'
        description: 'Required. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.'
    description: Creates a new ActiveMQ user.
  NotFoundException:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  DeleteBrokerResponse:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
  DeleteBrokerRequest:
    type: object
    properties: {}
  DeleteUserResponse:
    type: object
    properties: {}
  DeleteUserRequest:
    type: object
    properties: {}
  DescribeBrokerResponse:
    type: object
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/__boolean'
        description: 'Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.'
      BrokerArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of the broker.
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
      BrokerInstances:
        $ref: '#/definitions/__listOfBrokerInstance'
        description: A list of information about allocated brokers.
      BrokerName:
        $ref: '#/definitions/__string'
        description: 'The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.'
      BrokerState:
        $ref: '#/definitions/BrokerState'
        description: The status of the broker.
      Configurations:
        $ref: '#/definitions/Configurations'
        description: The list of all revisions for the specified configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: The time when the broker was created.
      DeploymentMode:
        $ref: '#/definitions/DeploymentMode'
        description: Required. The deployment mode of the broker.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      HostInstanceType:
        $ref: '#/definitions/__string'
        description: The broker's instance type.
      Logs:
        $ref: '#/definitions/LogsSummary'
        description: The list of information about logs currently enabled and pending to be deployed for the specified broker.
      MaintenanceWindowStartTime:
        $ref: '#/definitions/WeeklyStartTime'
        description: The parameters that determine the WeeklyStartTime.
      PubliclyAccessible:
        $ref: '#/definitions/__boolean'
        description: Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.
      SecurityGroups:
        $ref: '#/definitions/__listOf__string'
        description: 'Required. The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.'
      SubnetIds:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.'
      Users:
        $ref: '#/definitions/__listOfUserSummary'
        description: The list of all ActiveMQ usernames for the specified broker.
  DescribeBrokerRequest:
    type: object
    properties: {}
  DescribeConfigurationResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The ARN of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration revision.
      Description:
        $ref: '#/definitions/__string'
        description: Required. The description of the configuration.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: Required. The version of the broker engine.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: Required. The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
  DescribeConfigurationRequest:
    type: object
    properties: {}
  DescribeConfigurationRevisionResponse:
    type: object
    properties:
      ConfigurationId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Data:
        $ref: '#/definitions/__string'
        description: Required. The base64-encoded XML configuration.
      Description:
        $ref: '#/definitions/__string'
        description: The description of the configuration.
  DescribeConfigurationRevisionRequest:
    type: object
    properties: {}
  DescribeUserResponse:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Pending:
        $ref: '#/definitions/UserPendingChanges'
        description: The status of the changes pending for the ActiveMQ user.
      Username:
        $ref: '#/definitions/__string'
        description: 'Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
  DescribeUserRequest:
    type: object
    properties: {}
  ListBrokersResponse:
    type: object
    properties:
      BrokerSummaries:
        $ref: '#/definitions/__listOfBrokerSummary'
        description: A list of information about all brokers.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
  ListBrokersRequest:
    type: object
    properties: {}
  ListConfigurationRevisionsResponse:
    type: object
    properties:
      ConfigurationId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the configuration.
      MaxResults:
        $ref: '#/definitions/__integer'
        description: The maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
      Revisions:
        $ref: '#/definitions/__listOfConfigurationRevision'
        description: The list of all revisions for the specified configuration.
  ListConfigurationRevisionsRequest:
    type: object
    properties: {}
  ListConfigurationsResponse:
    type: object
    properties:
      Configurations:
        $ref: '#/definitions/__listOfConfiguration'
        description: The list of all revisions for the specified configuration.
      MaxResults:
        $ref: '#/definitions/__integer'
        description: The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
  ListConfigurationsRequest:
    type: object
    properties: {}
  ListUsersResponse:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      MaxResults:
        $ref: '#/definitions/__integerMin5Max100'
        description: Required. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
      Users:
        $ref: '#/definitions/__listOfUserSummary'
        description: Required. The list of all ActiveMQ usernames for the specified broker.
  ListUsersRequest:
    type: object
    properties: {}
  RebootBrokerResponse:
    type: object
    properties: {}
  RebootBrokerRequest:
    type: object
    properties: {}
  UpdateBrokerResponse:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the updated configuration.
      Logs:
        $ref: '#/definitions/Logs'
        description: The list of information about logs to be enabled for the specified broker.
  UpdateBrokerRequest:
    type: object
    properties:
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: A list of information about the configuration.
      Logs:
        $ref: '#/definitions/Logs'
        description: Enables Amazon CloudWatch logging for brokers.
    description: Updates the broker using the specified properties.
  UpdateConfigurationResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The Amazon Resource Name (ARN) of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
      Warnings:
        $ref: '#/definitions/__listOfSanitizationWarning'
        description: The list of the first 20 warnings about the configuration XML elements or attributes that were sanitized.
  UpdateConfigurationRequest:
    type: object
    properties:
      Data:
        $ref: '#/definitions/__string'
        description: Required. The base64-encoded XML configuration.
      Description:
        $ref: '#/definitions/__string'
        description: The description of the configuration.
    description: Updates the specified configuration.
  UpdateUserResponse:
    type: object
    properties: {}
  UpdateUserRequest:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Password:
        $ref: '#/definitions/__string'
        description: 'The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.'
    description: Updates the information for an ActiveMQ user.
  __string:
    type: string
  __listOf__string:
    type: array
    items:
      $ref: '#/definitions/__string'
  BrokerInstance:
    type: object
    properties:
      ConsoleURL:
        $ref: '#/definitions/__string'
        description: The URL of the broker's ActiveMQ Web Console.
      Endpoints:
        $ref: '#/definitions/__listOf__string'
        description: The broker's wire-level protocol endpoints.
      IpAddress:
        $ref: '#/definitions/__string'
        description: The IP address of the ENI attached to the broker.
    description: Returns information about all brokers.
  BrokerState:
    type: string
    enum:
      - CREATION_IN_PROGRESS
      - CREATION_FAILED
      - DELETION_IN_PROGRESS
      - RUNNING
      - REBOOT_IN_PROGRESS
    description: The status of the broker.
  __timestampIso8601:
    type: string
    format: date-time
  DeploymentMode:
    type: string
    enum:
      - SINGLE_INSTANCE
      - ACTIVE_STANDBY_MULTI_AZ
    description: The deployment mode of the broker.
  BrokerSummary:
    type: object
    properties:
      BrokerArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of the broker.
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
      BrokerName:
        $ref: '#/definitions/__string'
        description: 'The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.'
      BrokerState:
        $ref: '#/definitions/BrokerState'
        description: The status of the broker.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: The time when the broker was created.
      DeploymentMode:
        $ref: '#/definitions/DeploymentMode'
        description: Required. The deployment mode of the broker.
      HostInstanceType:
        $ref: '#/definitions/__string'
        description: The broker's instance type.
    description: The Amazon Resource Name (ARN) of the broker.
  ChangeType:
    type: string
    enum:
      - CREATE
      - UPDATE
      - DELETE
    description: The type of change pending for the ActiveMQ user.
  EngineType:
    type: string
    enum:
      - ACTIVEMQ
    description: 'The type of broker engine. Note: Currently, Amazon MQ supports only ActiveMQ.'
  ConfigurationRevision:
    type: object
    properties:
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration revision.
      Description:
        $ref: '#/definitions/__string'
        description: The description of the configuration revision.
      Revision:
        $ref: '#/definitions/__integer'
        description: Required. The revision number of the configuration.
    description: Returns information about the specified configuration revision.
  Configuration:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The ARN of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration revision.
      Description:
        $ref: '#/definitions/__string'
        description: Required. The description of the configuration.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: Required. The version of the broker engine.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: Required. The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
    description: Returns information about all configurations.
  __integer:
    type: integer
  ConfigurationId:
    type: object
    properties:
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      Revision:
        $ref: '#/definitions/__integer'
        description: The revision number of the configuration.
    description: A list of information about the configuration.
  __listOfConfigurationId:
    type: array
    items:
      $ref: '#/definitions/ConfigurationId'
  Configurations:
    type: object
    properties:
      Current:
        $ref: '#/definitions/ConfigurationId'
        description: The current configuration of the broker.
      History:
        $ref: '#/definitions/__listOfConfigurationId'
        description: The history of configurations applied to the broker.
      Pending:
        $ref: '#/definitions/ConfigurationId'
        description: The pending configuration of the broker.
    description: Broker configuration information
  __boolean:
    type: boolean
  Logs:
    type: object
    properties:
      Audit:
        $ref: '#/definitions/__boolean'
        description: Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.
      General:
        $ref: '#/definitions/__boolean'
        description: Enables general logging.
    description: The list of information about logs to be enabled for the specified broker.
  WeeklyStartTime:
    type: object
    properties:
      DayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: Required. The day of the week.
      TimeOfDay:
        $ref: '#/definitions/__string'
        description: 'Required. The time, in 24-hour format.'
      TimeZone:
        $ref: '#/definitions/__string'
        description: 'The time zone, UTC by default, in either the Country/City format, or the UTC offset format.'
    description: The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker.
  __listOfUser:
    type: array
    items:
      $ref: '#/definitions/User'
  CreateBrokerInput:
    type: object
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/__boolean'
        description: 'Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.'
      BrokerName:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.'
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: A list of information about the configuration.
      CreatorRequestId:
        $ref: '#/definitions/__string'
        description: 'The unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn''t require idempotency.'
      DeploymentMode:
        $ref: '#/definitions/DeploymentMode'
        description: Required. The deployment mode of the broker.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'Required. The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      HostInstanceType:
        $ref: '#/definitions/__string'
        description: Required. The broker's instance type.
      Logs:
        $ref: '#/definitions/Logs'
        description: Enables Amazon CloudWatch logging for brokers.
      MaintenanceWindowStartTime:
        $ref: '#/definitions/WeeklyStartTime'
        description: The parameters that determine the WeeklyStartTime.
      PubliclyAccessible:
        $ref: '#/definitions/__boolean'
        description: Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.
      SecurityGroups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.'
      SubnetIds:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.'
      Users:
        $ref: '#/definitions/__listOfUser'
        description: 'Required. The list of ActiveMQ users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
    description: Required. The time period during which Amazon MQ applies pending updates or patches to the broker.
  CreateBrokerOutput:
    type: object
    properties:
      BrokerArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of the broker.
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
    description: Returns information about the created broker.
  CreateConfigurationInput:
    type: object
    properties:
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'Required. The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
    description: Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).
  CreateConfigurationOutput:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The Amazon Resource Name (ARN) of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
    description: Returns information about the created configuration.
  CreateUserInput:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Password:
        $ref: '#/definitions/__string'
        description: 'Required. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.'
    description: Creates a new ActiveMQ user.
  DayOfWeek:
    type: string
    enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
  DeleteBrokerOutput:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
    description: Returns information about the deleted broker.
  __listOfBrokerInstance:
    type: array
    items:
      $ref: '#/definitions/BrokerInstance'
  LogsSummary:
    type: object
    properties:
      Audit:
        $ref: '#/definitions/__boolean'
        description: Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.
      AuditLogGroup:
        $ref: '#/definitions/__string'
        description: Location of CloudWatch Log group where audit logs will be sent.
      General:
        $ref: '#/definitions/__boolean'
        description: Enables general logging.
      GeneralLogGroup:
        $ref: '#/definitions/__string'
        description: Location of CloudWatch Log group where general logs will be sent.
      Pending:
        $ref: '#/definitions/PendingLogs'
        description: The list of information about logs pending to be deployed for the specified broker.
    description: The list of information about logs currently enabled and pending to be deployed for the specified broker.
  __listOfUserSummary:
    type: array
    items:
      $ref: '#/definitions/UserSummary'
  DescribeBrokerOutput:
    type: object
    properties:
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/__boolean'
        description: 'Required. Enables automatic upgrades to new minor versions for brokers, as Apache releases the versions. The automatic upgrades occur during the maintenance window of the broker or after a manual broker reboot.'
      BrokerArn:
        $ref: '#/definitions/__string'
        description: The Amazon Resource Name (ARN) of the broker.
      BrokerId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the broker.
      BrokerInstances:
        $ref: '#/definitions/__listOfBrokerInstance'
        description: A list of information about allocated brokers.
      BrokerName:
        $ref: '#/definitions/__string'
        description: 'The name of the broker. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain whitespaces, brackets, wildcard characters, or special characters.'
      BrokerState:
        $ref: '#/definitions/BrokerState'
        description: The status of the broker.
      Configurations:
        $ref: '#/definitions/Configurations'
        description: The list of all revisions for the specified configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: The time when the broker was created.
      DeploymentMode:
        $ref: '#/definitions/DeploymentMode'
        description: Required. The deployment mode of the broker.
      EngineType:
        $ref: '#/definitions/EngineType'
        description: 'Required. The type of broker engine. Note: Currently, Amazon MQ supports only ACTIVEMQ.'
      EngineVersion:
        $ref: '#/definitions/__string'
        description: 'The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
      HostInstanceType:
        $ref: '#/definitions/__string'
        description: The broker's instance type.
      Logs:
        $ref: '#/definitions/LogsSummary'
        description: The list of information about logs currently enabled and pending to be deployed for the specified broker.
      MaintenanceWindowStartTime:
        $ref: '#/definitions/WeeklyStartTime'
        description: The parameters that determine the WeeklyStartTime.
      PubliclyAccessible:
        $ref: '#/definitions/__boolean'
        description: Required. Enables connections from applications outside of the VPC that hosts the broker's subnets.
      SecurityGroups:
        $ref: '#/definitions/__listOf__string'
        description: 'Required. The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.'
      SubnetIds:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (2 maximum) that define which subnets and IP ranges the broker can use from different Availability Zones. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ deployment requires two subnets.'
      Users:
        $ref: '#/definitions/__listOfUserSummary'
        description: The list of all ActiveMQ usernames for the specified broker.
    description: 'The version of the broker engine. Note: Currently, Amazon MQ supports only 5.15.0.'
  DescribeConfigurationRevisionOutput:
    type: object
    properties:
      ConfigurationId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Data:
        $ref: '#/definitions/__string'
        description: Required. The base64-encoded XML configuration.
      Description:
        $ref: '#/definitions/__string'
        description: The description of the configuration.
    description: Returns the specified configuration revision for the specified configuration.
  UserPendingChanges:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      PendingChange:
        $ref: '#/definitions/ChangeType'
        description: Required. The type of change pending for the ActiveMQ user.
    description: Returns information about the status of the changes pending for the ActiveMQ user.
  DescribeUserOutput:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Pending:
        $ref: '#/definitions/UserPendingChanges'
        description: The status of the changes pending for the ActiveMQ user.
      Username:
        $ref: '#/definitions/__string'
        description: 'Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
    description: Returns information about an ActiveMQ user.
  Error:
    type: object
    properties:
      ErrorAttribute:
        $ref: '#/definitions/__string'
        description: The attribute which caused the error.
      Message:
        $ref: '#/definitions/__string'
        description: The explanation of the error.
    description: Returns information about an error.
  __listOfBrokerSummary:
    type: array
    items:
      $ref: '#/definitions/BrokerSummary'
  ListBrokersOutput:
    type: object
    properties:
      BrokerSummaries:
        $ref: '#/definitions/__listOfBrokerSummary'
        description: A list of information about all brokers.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
    description: A list of information about all brokers.
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  __listOfConfigurationRevision:
    type: array
    items:
      $ref: '#/definitions/ConfigurationRevision'
  ListConfigurationRevisionsOutput:
    type: object
    properties:
      ConfigurationId:
        $ref: '#/definitions/__string'
        description: The unique ID that Amazon MQ generates for the configuration.
      MaxResults:
        $ref: '#/definitions/__integer'
        description: The maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
      Revisions:
        $ref: '#/definitions/__listOfConfigurationRevision'
        description: The list of all revisions for the specified configuration.
    description: Returns a list of all revisions for the specified configuration.
  __listOfConfiguration:
    type: array
    items:
      $ref: '#/definitions/Configuration'
  ListConfigurationsOutput:
    type: object
    properties:
      Configurations:
        $ref: '#/definitions/__listOfConfiguration'
        description: The list of all revisions for the specified configuration.
      MaxResults:
        $ref: '#/definitions/__integer'
        description: The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
    description: Returns a list of all configurations.
  __integerMin5Max100:
    type: integer
    minimum: 5
    maximum: 100
  ListUsersOutput:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      MaxResults:
        $ref: '#/definitions/__integerMin5Max100'
        description: Required. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.
      NextToken:
        $ref: '#/definitions/__string'
        description: 'The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.'
      Users:
        $ref: '#/definitions/__listOfUserSummary'
        description: Required. The list of all ActiveMQ usernames for the specified broker.
    description: Returns a list of all ActiveMQ users.
  PendingLogs:
    type: object
    properties:
      Audit:
        $ref: '#/definitions/__boolean'
        description: Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.
      General:
        $ref: '#/definitions/__boolean'
        description: Enables general logging.
    description: The list of information about logs to be enabled for the specified broker.
  SanitizationWarningReason:
    type: string
    enum:
      - DISALLOWED_ELEMENT_REMOVED
      - DISALLOWED_ATTRIBUTE_REMOVED
      - INVALID_ATTRIBUTE_VALUE_REMOVED
    description: The reason for which the XML elements or attributes were sanitized.
  SanitizationWarning:
    type: object
    properties:
      AttributeName:
        $ref: '#/definitions/__string'
        description: The name of the XML attribute that has been sanitized.
      ElementName:
        $ref: '#/definitions/__string'
        description: The name of the XML element that has been sanitized.
      Reason:
        $ref: '#/definitions/SanitizationWarningReason'
        description: Required. The reason for which the XML elements or attributes were sanitized.
    description: Returns information about the XML element or attribute that was sanitized in the configuration.
  UpdateBrokerInput:
    type: object
    properties:
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: A list of information about the configuration.
      Logs:
        $ref: '#/definitions/Logs'
        description: Enables Amazon CloudWatch logging for brokers.
    description: Updates the broker using the specified properties.
  UpdateBrokerOutput:
    type: object
    properties:
      BrokerId:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the broker.
      Configuration:
        $ref: '#/definitions/ConfigurationId'
        description: The ID of the updated configuration.
      Logs:
        $ref: '#/definitions/Logs'
        description: The list of information about logs to be enabled for the specified broker.
    description: Returns information about the updated broker.
  UpdateConfigurationInput:
    type: object
    properties:
      Data:
        $ref: '#/definitions/__string'
        description: Required. The base64-encoded XML configuration.
      Description:
        $ref: '#/definitions/__string'
        description: The description of the configuration.
    description: Updates the specified configuration.
  __listOfSanitizationWarning:
    type: array
    items:
      $ref: '#/definitions/SanitizationWarning'
  UpdateConfigurationOutput:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/__string'
        description: Required. The Amazon Resource Name (ARN) of the configuration.
      Created:
        $ref: '#/definitions/__timestampIso8601'
        description: Required. The date and time of the configuration.
      Id:
        $ref: '#/definitions/__string'
        description: Required. The unique ID that Amazon MQ generates for the configuration.
      LatestRevision:
        $ref: '#/definitions/ConfigurationRevision'
        description: The latest revision of the configuration.
      Name:
        $ref: '#/definitions/__string'
        description: 'Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.'
      Warnings:
        $ref: '#/definitions/__listOfSanitizationWarning'
        description: The list of the first 20 warnings about the configuration XML elements or attributes that were sanitized.
    description: Returns information about the updated configuration.
  UpdateUserInput:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Password:
        $ref: '#/definitions/__string'
        description: 'The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.'
    description: Updates the information for an ActiveMQ user.
  User:
    type: object
    properties:
      ConsoleAccess:
        $ref: '#/definitions/__boolean'
        description: Enables access to the the ActiveMQ Web Console for the ActiveMQ user.
      Groups:
        $ref: '#/definitions/__listOf__string'
        description: 'The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
      Password:
        $ref: '#/definitions/__string'
        description: 'Required. The password of the ActiveMQ user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas.'
      Username:
        $ref: '#/definitions/__string'
        description: 'Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
    description: An ActiveMQ user associated with the broker.
  UserSummary:
    type: object
    properties:
      PendingChange:
        $ref: '#/definitions/ChangeType'
        description: The type of change pending for the ActiveMQ user.
      Username:
        $ref: '#/definitions/__string'
        description: 'Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.'
    description: Returns a list of all ActiveMQ users.
  __double:
    type: number
    format: double
  __long:
    type: integer
  __timestampUnix:
    type: string
    format: date-time
