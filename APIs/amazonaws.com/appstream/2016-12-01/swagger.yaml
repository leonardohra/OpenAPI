swagger: '2.0'
info:
  version: '2016-12-01'
  x-release: v4
  title: Amazon AppStream
  description: '<fullname>Amazon AppStream 2.0</fullname> <p>You can use Amazon AppStream 2.0 to stream desktop applications to any device running a web browser, without rewriting them.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: appstream
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/appstream2/'
host: appstream2.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AssociateFleet
      description: Associates the specified fleet with the specified stack.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateFleetResult'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '484':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '485':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CopyImage':
    post:
      operationId: CopyImage
      description: Copies the image within the same region or to a new region within the same AWS account. Note that any tags you added to the image will not be copied.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyImageResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '485':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CopyImageRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDirectoryConfig':
    post:
      operationId: CreateDirectoryConfig
      description: Creates a Directory Config object in AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryConfigResult'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateFleet':
    post:
      operationId: CreateFleet
      description: Creates a fleet. A fleet consists of streaming instances that run a specified image.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFleetResult'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '485':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '486':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '487':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '488':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '489':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateImageBuilder':
    post:
      operationId: CreateImageBuilder
      description: '<p>Creates an image builder. An image builder is a virtual machine that is used to create an image.</p> <p>The initial state of the builder is <code>PENDING</code>. When it is ready, the state is <code>RUNNING</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageBuilderResult'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '486':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '487':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '488':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '489':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateImageBuilderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateImageBuilderStreamingURL':
    post:
      operationId: CreateImageBuilderStreamingURL
      description: Creates a URL to start an image builder streaming session.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageBuilderStreamingURLResult'
        '480':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateImageBuilderStreamingURLRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateStack':
    post:
      operationId: CreateStack
      description: 'Creates a stack to start streaming applications to users. A stack consists of an associated fleet, user access policies, and storage configurations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStackResult'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '484':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStackRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateStreamingURL':
    post:
      operationId: CreateStreamingURL
      description: 'Creates a temporary URL to start an AppStream 2.0 streaming session for the specified user. A streaming URL enables application streaming to be tested without user setup. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamingURLResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStreamingURLRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDirectoryConfig':
    post:
      operationId: DeleteDirectoryConfig
      description: Deletes the specified Directory Config object from AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteFleet':
    post:
      operationId: DeleteFleet
      description: Deletes the specified fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteImage':
    post:
      operationId: DeleteImage
      description: 'Deletes the specified image. You cannot delete an image when it is in use. After you delete an image, you cannot provision new capacity using the image.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteImageRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteImageBuilder':
    post:
      operationId: DeleteImageBuilder
      description: Deletes the specified image builder and releases the capacity.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageBuilderResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteImageBuilderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteImagePermissions':
    post:
      operationId: DeleteImagePermissions
      description: 'Deletes permissions for the specified private image. After you delete permissions for an image, AWS accounts to which you previously granted these permissions can no longer use the image.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImagePermissionsResult'
        '480':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteImagePermissionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteStack':
    post:
      operationId: DeleteStack
      description: 'Deletes the specified stack. After the stack is deleted, the application streaming environment provided by the stack is no longer available to users. Also, any reservations made for application streaming sessions for the stack are released.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStackResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteStackRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDirectoryConfigs':
    post:
      operationId: DescribeDirectoryConfigs
      description: '<p>Retrieves a list that describes one or more specified Directory Config objects for AppStream 2.0, if the names for these objects are provided. Otherwise, all Directory Config objects in the account are described. These objects include the information required to join streaming instances to an Active Directory domain. </p> <p>Although the response syntax in this topic includes the account password, this password is not returned in the actual response.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDirectoryConfigsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDirectoryConfigsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleets':
    post:
      operationId: DescribeFleets
      description: 'Retrieves a list that describes one or more specified fleets, if the fleet names are provided. Otherwise, all fleets in the account are described.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetsRequest'
      x-waiters:
        - delay: 30
          maxAttempts: 40
          operation: DescribeFleets
          acceptors:
            - state: success
              matcher: pathAll
              argument: 'Fleets[].State'
              expected: ACTIVE
            - state: failure
              matcher: pathAny
              argument: 'Fleets[].State'
              expected: PENDING_DEACTIVATE
            - state: failure
              matcher: pathAny
              argument: 'Fleets[].State'
              expected: INACTIVE
        - delay: 30
          maxAttempts: 40
          operation: DescribeFleets
          acceptors:
            - state: success
              matcher: pathAll
              argument: 'Fleets[].State'
              expected: INACTIVE
            - state: failure
              matcher: pathAny
              argument: 'Fleets[].State'
              expected: PENDING_ACTIVATE
            - state: failure
              matcher: pathAny
              argument: 'Fleets[].State'
              expected: ACTIVE
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeImageBuilders':
    post:
      operationId: DescribeImageBuilders
      description: 'Retrieves a list that describes one or more specified image builders, if the image builder names are provided. Otherwise, all image builders in the account are described.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeImageBuildersResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeImageBuildersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeImagePermissions':
    post:
      operationId: DescribeImagePermissions
      description: 'Retrieves a list that describes the permissions for shared AWS account IDs on a private image that you own. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeImagePermissionsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeImagePermissionsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeImages':
    post:
      operationId: DescribeImages
      description: 'Retrieves a list that describes one or more specified images, if the image names or image ARNs are provided. Otherwise, all images in the account are described.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeImagesResult'
        '480':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeImagesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSessions':
    post:
      operationId: DescribeSessions
      description: 'Retrieves a list that describes the streaming sessions for a specified stack and fleet. If a user ID is provided for the stack and fleet, only streaming sessions for that user are described. If an authentication type is not provided, the default is to authenticate users using a streaming URL.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSessionsResult'
        '480':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSessionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeStacks':
    post:
      operationId: DescribeStacks
      description: 'Retrieves a list that describes one or more specified stacks, if the stack names are provided. Otherwise, all stacks in the account are described.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStacksResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeStacksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateFleet':
    post:
      operationId: DisassociateFleet
      description: Disassociates the specified fleet from the specified stack.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ExpireSession':
    post:
      operationId: ExpireSession
      description: Immediately stops the specified streaming session.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExpireSessionResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ExpireSessionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociatedFleets':
    post:
      operationId: ListAssociatedFleets
      description: Retrieves the name of the fleet that is associated with the specified stack.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociatedFleetsResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociatedFleetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociatedStacks':
    post:
      operationId: ListAssociatedStacks
      description: Retrieves the name of the stack with which the specified fleet is associated.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociatedStacksResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociatedStacksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: '<p>Retrieves a list of all tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets, and stacks.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartFleet':
    post:
      operationId: StartFleet
      description: Starts the specified fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartFleetResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartImageBuilder':
    post:
      operationId: StartImageBuilder
      description: Starts the specified image builder.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartImageBuilderResult'
        '480':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '484':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartImageBuilderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopFleet':
    post:
      operationId: StopFleet
      description: Stops the specified fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopFleetResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopImageBuilder':
    post:
      operationId: StopImageBuilder
      description: Stops the specified image builder.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopImageBuilderResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopImageBuilderRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TagResource':
    post:
      operationId: TagResource
      description: '<p>Adds or overwrites one or more tags for the specified AppStream 2.0 resource. You can tag AppStream 2.0 image builders, images, fleets, and stacks.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.</p> <p>To list the current tags for your resources, use <a>ListTagsForResource</a>. To disassociate tags from your resources, use <a>UntagResource</a>.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UntagResource':
    post:
      operationId: UntagResource
      description: '<p>Disassociates one or more specified tags from the specified AppStream 2.0 resource.</p> <p>To list the current tags for your resources, use <a>ListTagsForResource</a>.</p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging Your Resources</a> in the <i>Amazon AppStream 2.0 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDirectoryConfig':
    post:
      operationId: UpdateDirectoryConfig
      description: Updates the specified Directory Config object in AppStream 2.0. This object includes the information required to join streaming instances to an Active Directory domain.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDirectoryConfigResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDirectoryConfigRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateFleet':
    post:
      operationId: UpdateFleet
      description: '<p>Updates the specified fleet.</p> <p>If the fleet is in the <code>STOPPED</code> state, you can update any attribute except the fleet name. If the fleet is in the <code>RUNNING</code> state, you can update the <code>DisplayName</code> and <code>ComputeCapacity</code> attributes. If the fleet is in the <code>STARTING</code> or <code>STOPPING</code> state, you can''t update it.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFleetResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '483':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '486':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '487':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '488':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '489':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFleetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateImagePermissions':
    post:
      operationId: UpdateImagePermissions
      description: 'Adds or updates permissions for the specified private image. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateImagePermissionsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceNotAvailableException
          schema:
            $ref: '#/definitions/ResourceNotAvailableException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateImagePermissionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateStack':
    post:
      operationId: UpdateStack
      description: Updates the specified fields for the specified stack.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStackResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidRoleException
          schema:
            $ref: '#/definitions/InvalidRoleException'
        '483':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: InvalidAccountStatusException
          schema:
            $ref: '#/definitions/InvalidAccountStatusException'
        '486':
          description: IncompatibleImageException
          schema:
            $ref: '#/definitions/IncompatibleImageException'
        '487':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStackRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AssociateFleetResult:
    type: object
    properties: {}
  AssociateFleetRequest:
    type: object
    required:
      - FleetName
      - StackName
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: 'The name of the fleet. '
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack.
  LimitExceededException: {}
  InvalidAccountStatusException: {}
  ResourceNotFoundException: {}
  ConcurrentModificationException: {}
  IncompatibleImageException: {}
  OperationNotPermittedException: {}
  CopyImageResponse:
    type: object
    properties:
      DestinationImageName:
        $ref: '#/definitions/Name'
        description: The name of the destination image.
  CopyImageRequest:
    type: object
    required:
      - SourceImageName
      - DestinationImageName
      - DestinationRegion
    properties:
      SourceImageName:
        $ref: '#/definitions/Name'
        description: The name of the image to copy.
      DestinationImageName:
        $ref: '#/definitions/Name'
        description: The name that the image will have when it is copied to the destination.
      DestinationRegion:
        $ref: '#/definitions/RegionName'
        description: 'The destination region to which the image will be copied. This parameter is required, even if you are copying an image within the same region.'
      DestinationImageDescription:
        $ref: '#/definitions/Description'
        description: The description that the image will have when it is copied to the destination.
  ResourceAlreadyExistsException: {}
  ResourceNotAvailableException: {}
  CreateDirectoryConfigResult:
    type: object
    properties:
      DirectoryConfig:
        $ref: '#/definitions/DirectoryConfig'
        description: Information about the directory configuration.
  CreateDirectoryConfigRequest:
    type: object
    required:
      - DirectoryName
      - OrganizationalUnitDistinguishedNames
      - ServiceAccountCredentials
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory (for example, corp.example.com).'
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The distinguished names of the organizational units for computer accounts.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: The credentials for the service account used by the streaming instance to connect to the directory.
  CreateFleetResult:
    type: object
    properties:
      Fleet:
        $ref: '#/definitions/Fleet'
        description: Information about the fleet.
  CreateFleetRequest:
    type: object
    required:
      - Name
      - InstanceType
      - ComputeCapacity
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: A unique name for the fleet.
      ImageName:
        $ref: '#/definitions/String'
        description: The name of the image used to create the fleet.
      ImageArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the public, private, or shared image to use.'
      InstanceType:
        $ref: '#/definitions/String'
        description: '<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
      FleetType:
        $ref: '#/definitions/FleetType'
        description: '<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.</p> </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.</p> </dd> </dl>'
      ComputeCapacity:
        $ref: '#/definitions/ComputeCapacity'
        description: The desired capacity for the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600.'
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600.'
      Description:
        $ref: '#/definitions/Description'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The fleet name for display.
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the fleet.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: The information needed to join a Microsoft Active Directory domain.
  InvalidRoleException: {}
  InvalidParameterCombinationException: {}
  CreateImageBuilderResult:
    type: object
    properties:
      ImageBuilder:
        $ref: '#/definitions/ImageBuilder'
        description: Information about the image builder.
  CreateImageBuilderRequest:
    type: object
    required:
      - Name
      - InstanceType
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: A unique name for the image builder.
      ImageName:
        $ref: '#/definitions/String'
        description: The name of the image used to create the builder.
      ImageArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the public, private, or shared image to use.'
      InstanceType:
        $ref: '#/definitions/String'
        description: The instance type to use when launching the image builder.
      Description:
        $ref: '#/definitions/Description'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The image builder name for display.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the image builder. You can specify only one subnet.
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the image builder.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: The information needed to join a Microsoft Active Directory domain.
      AppstreamAgentVersion:
        $ref: '#/definitions/AppstreamAgentVersion'
        description: 'The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST]. '
  CreateImageBuilderStreamingURLResult:
    type: object
    properties:
      StreamingURL:
        $ref: '#/definitions/String'
        description: The URL to start the AppStream 2.0 streaming session.
      Expires:
        $ref: '#/definitions/Timestamp'
        description: 'The elapsed time, in seconds after the Unix epoch, when this URL expires.'
  CreateImageBuilderStreamingURLRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the image builder.
      Validity:
        $ref: '#/definitions/Long'
        description: 'The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 3600 seconds.'
  CreateStackResult:
    type: object
    properties:
      Stack:
        $ref: '#/definitions/Stack'
        description: Information about the stack.
  CreateStackRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the stack.
      Description:
        $ref: '#/definitions/Description'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The stack name for display.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to enable.
      RedirectURL:
        $ref: '#/definitions/RedirectURL'
        description: The URL that users are redirected to after their streaming session ends.
      FeedbackURL:
        $ref: '#/definitions/FeedbackURL'
        description: 'The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
      UserSettings:
        $ref: '#/definitions/UserSettingList'
        description: 'The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled. '
      ApplicationSettings:
        $ref: '#/definitions/ApplicationSettings'
        description: 'The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.'
  CreateStreamingURLResult:
    type: object
    properties:
      StreamingURL:
        $ref: '#/definitions/String'
        description: The URL to start the AppStream 2.0 streaming session.
      Expires:
        $ref: '#/definitions/Timestamp'
        description: 'The elapsed time, in seconds after the Unix epoch, when this URL expires.'
  CreateStreamingURLRequest:
    type: object
    required:
      - StackName
      - FleetName
      - UserId
    properties:
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack.
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      UserId:
        $ref: '#/definitions/StreamingUrlUserId'
        description: The ID of the user.
      ApplicationId:
        $ref: '#/definitions/String'
        description: The name of the application to launch after the session starts. This is the name that you specified as <b>Name</b> in the Image Assistant.
      Validity:
        $ref: '#/definitions/Long'
        description: 'The time that the streaming URL will be valid, in seconds. Specify a value between 1 and 604800 seconds. The default is 60 seconds.'
      SessionContext:
        $ref: '#/definitions/String'
        description: 'The session context. For more information, see <a href="http://docs.aws.amazon.com/appstream2/latest/developerguide/managing-stacks-fleets.html#managing-stacks-fleets-parameters">Session Context</a> in the <i>Amazon AppStream 2.0 Developer Guide</i>.'
  DeleteDirectoryConfigResult:
    type: object
    properties: {}
  DeleteDirectoryConfigRequest:
    type: object
    required:
      - DirectoryName
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: The name of the directory configuration.
  ResourceInUseException: {}
  DeleteFleetResult:
    type: object
    properties: {}
  DeleteFleetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
  DeleteImageResult:
    type: object
    properties:
      Image:
        $ref: '#/definitions/Image'
        description: Information about the image.
  DeleteImageRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the image.
  DeleteImageBuilderResult:
    type: object
    properties:
      ImageBuilder:
        $ref: '#/definitions/ImageBuilder'
        description: Information about the image builder.
  DeleteImageBuilderRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the image builder.
  DeleteImagePermissionsResult:
    type: object
    properties: {}
  DeleteImagePermissionsRequest:
    type: object
    required:
      - Name
      - SharedAccountId
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the private image.
      SharedAccountId:
        $ref: '#/definitions/AwsAccountId'
        description: The 12-digit ID of the AWS account for which to delete image permissions.
  DeleteStackResult:
    type: object
    properties: {}
  DeleteStackRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the stack.
  DescribeDirectoryConfigsResult:
    type: object
    properties:
      DirectoryConfigs:
        $ref: '#/definitions/DirectoryConfigList'
        description: 'Information about the directory configurations. Note that although the response syntax in this topic includes the account password, this password is not returned in the actual response. '
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  DescribeDirectoryConfigsRequest:
    type: object
    properties:
      DirectoryNames:
        $ref: '#/definitions/DirectoryNameList'
        description: The directory names.
      MaxResults:
        $ref: '#/definitions/Integer'
        description: The maximum size of each page of results.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  DescribeFleetsResult:
    type: object
    properties:
      Fleets:
        $ref: '#/definitions/FleetList'
        description: Information about the fleets.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  DescribeFleetsRequest:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of the fleets to describe.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  DescribeImageBuildersResult:
    type: object
    properties:
      ImageBuilders:
        $ref: '#/definitions/ImageBuilderList'
        description: Information about the image builders.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  DescribeImageBuildersRequest:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of the image builders to describe.
      MaxResults:
        $ref: '#/definitions/Integer'
        description: The maximum size of each page of results.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  DescribeImagePermissionsResult:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the private image.
      SharedImagePermissionsList:
        $ref: '#/definitions/SharedImagePermissionsList'
        description: 'The permissions for a private image that you own. '
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results. If this value is empty, only the first page is retrieved.'
  DescribeImagePermissionsRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: 'The name of the private image for which to describe permissions. The image must be one that you own. '
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum size of each results page.
      SharedAwsAccountIds:
        $ref: '#/definitions/AwsAccountIdList'
        description: The 12-digit ID of one or more AWS accounts with which the image is shared.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results. If this value is empty, only the first page is retrieved.'
  DescribeImagesResult:
    type: object
    properties:
      Images:
        $ref: '#/definitions/ImageList'
        description: Information about the images.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results. If there are no more pages, this value is null.'
  DescribeImagesRequest:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of the public or private images to describe.
      Arns:
        $ref: '#/definitions/ArnList'
        description: 'The ARNs of the public, private, and shared images to describe.'
      Type:
        $ref: '#/definitions/VisibilityType'
        description: 'The type of image (public, private, or shared) to describe. '
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results. If this value is empty, only the first page is retrieved.'
      MaxResults:
        $ref: '#/definitions/DescribeImagesMaxResults'
        description: The maximum size of each page of results.
  DescribeSessionsResult:
    type: object
    properties:
      Sessions:
        $ref: '#/definitions/SessionList'
        description: Information about the streaming sessions.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  DescribeSessionsRequest:
    type: object
    required:
      - StackName
      - FleetName
    properties:
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack. This value is case-sensitive.
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet. This value is case-sensitive.
      UserId:
        $ref: '#/definitions/UserId'
        description: The user ID.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
      Limit:
        $ref: '#/definitions/Integer'
        description: The size of each page of results. The default value is 20 and the maximum value is 50.
      AuthenticationType:
        $ref: '#/definitions/AuthenticationType'
        description: The authentication method. Specify <code>API</code> for a user authenticated using a streaming URL or <code>SAML</code> for a SAML federated user. The default is to authenticate users using a streaming URL.
  DescribeStacksResult:
    type: object
    properties:
      Stacks:
        $ref: '#/definitions/StackList'
        description: Information about the stacks.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  DescribeStacksRequest:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The names of the stacks to describe.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  DisassociateFleetResult:
    type: object
    properties: {}
  DisassociateFleetRequest:
    type: object
    required:
      - FleetName
      - StackName
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack.
  ExpireSessionResult:
    type: object
    properties: {}
  ExpireSessionRequest:
    type: object
    required:
      - SessionId
    properties:
      SessionId:
        $ref: '#/definitions/String'
        description: The ID of the streaming session.
  ListAssociatedFleetsResult:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The name of the fleet.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  ListAssociatedFleetsRequest:
    type: object
    required:
      - StackName
    properties:
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  ListAssociatedStacksResult:
    type: object
    properties:
      Names:
        $ref: '#/definitions/StringList'
        description: The name of the stack.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.'
  ListAssociatedStacksRequest:
    type: object
    required:
      - FleetName
    properties:
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: The information about the tags.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
  StartFleetResult:
    type: object
    properties: {}
  StartFleetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
  StartImageBuilderResult:
    type: object
    properties:
      ImageBuilder:
        $ref: '#/definitions/ImageBuilder'
        description: Information about the image builder.
  StartImageBuilderRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the image builder.
      AppstreamAgentVersion:
        $ref: '#/definitions/AppstreamAgentVersion'
        description: 'The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST]. '
  StopFleetResult:
    type: object
    properties: {}
  StopFleetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
  StopImageBuilderResult:
    type: object
    properties:
      ImageBuilder:
        $ref: '#/definitions/ImageBuilder'
        description: Information about the image builder.
  StopImageBuilderRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the image builder.
  TagResourceResponse:
    type: object
    properties: {}
  TagResourceRequest:
    type: object
    required:
      - ResourceArn
      - Tags
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/Tags'
        description: '<p>The tags to associate. A tag is a key-value pair (the value is optional). For example, <code>Environment=Test</code>, or, if you do not specify a value, <code>Environment=</code>. </p> <p>If you do not specify a value, we set the value to an empty string.</p>'
  UntagResourceResponse:
    type: object
    properties: {}
  UntagResourceRequest:
    type: object
    required:
      - ResourceArn
      - TagKeys
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The tag keys for the tags to disassociate.
  UpdateDirectoryConfigResult:
    type: object
    properties:
      DirectoryConfig:
        $ref: '#/definitions/DirectoryConfig'
        description: Information about the Directory Config object.
  UpdateDirectoryConfigRequest:
    type: object
    required:
      - DirectoryName
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: The name of the Directory Config object.
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The distinguished names of the organizational units for computer accounts.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: The credentials for the service account used by the streaming instance to connect to the directory.
  UpdateFleetResult:
    type: object
    properties:
      Fleet:
        $ref: '#/definitions/Fleet'
        description: Information about the fleet.
  UpdateFleetRequest:
    type: object
    properties:
      ImageName:
        $ref: '#/definitions/String'
        description: The name of the image used to create the fleet.
      ImageArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the public, private, or shared image to use.'
      Name:
        $ref: '#/definitions/String'
        description: A unique name for the fleet.
      InstanceType:
        $ref: '#/definitions/String'
        description: '<p>The instance type to use when launching fleet instances. The following instance types are available:</p> <ul> <li> <p>stream.standard.medium</p> </li> <li> <p>stream.standard.large</p> </li> <li> <p>stream.compute.large</p> </li> <li> <p>stream.compute.xlarge</p> </li> <li> <p>stream.compute.2xlarge</p> </li> <li> <p>stream.compute.4xlarge</p> </li> <li> <p>stream.compute.8xlarge</p> </li> <li> <p>stream.memory.large</p> </li> <li> <p>stream.memory.xlarge</p> </li> <li> <p>stream.memory.2xlarge</p> </li> <li> <p>stream.memory.4xlarge</p> </li> <li> <p>stream.memory.8xlarge</p> </li> <li> <p>stream.graphics-design.large</p> </li> <li> <p>stream.graphics-design.xlarge</p> </li> <li> <p>stream.graphics-design.2xlarge</p> </li> <li> <p>stream.graphics-design.4xlarge</p> </li> <li> <p>stream.graphics-desktop.2xlarge</p> </li> <li> <p>stream.graphics-pro.4xlarge</p> </li> <li> <p>stream.graphics-pro.8xlarge</p> </li> <li> <p>stream.graphics-pro.16xlarge</p> </li> </ul>'
      ComputeCapacity:
        $ref: '#/definitions/ComputeCapacity'
        description: The desired capacity for the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600.'
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600.'
      DeleteVpcConfig:
        $ref: '#/definitions/Boolean'
        description: Deletes the VPC association for the specified fleet.
      Description:
        $ref: '#/definitions/Description'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The fleet name for display.
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the fleet.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: The information needed to join a Microsoft Active Directory domain.
      AttributesToDelete:
        $ref: '#/definitions/FleetAttributes'
        description: The fleet attributes to delete.
  UpdateImagePermissionsResult:
    type: object
    properties: {}
  UpdateImagePermissionsRequest:
    type: object
    required:
      - Name
      - SharedAccountId
      - ImagePermissions
    properties:
      Name:
        $ref: '#/definitions/Name'
        description: The name of the private image.
      SharedAccountId:
        $ref: '#/definitions/AwsAccountId'
        description: The 12-digit ID of the AWS account for which you want add or update image permissions.
      ImagePermissions:
        $ref: '#/definitions/ImagePermissions'
        description: The permissions for the image.
  UpdateStackResult:
    type: object
    properties:
      Stack:
        $ref: '#/definitions/Stack'
        description: Information about the stack.
  UpdateStackRequest:
    type: object
    required:
      - Name
    properties:
      DisplayName:
        $ref: '#/definitions/DisplayName'
        description: The stack name for display.
      Description:
        $ref: '#/definitions/Description'
        description: The description for display.
      Name:
        $ref: '#/definitions/String'
        description: The name of the stack.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to enable.
      DeleteStorageConnectors:
        $ref: '#/definitions/Boolean'
        description: Deletes the storage connectors currently enabled for the stack.
      RedirectURL:
        $ref: '#/definitions/RedirectURL'
        description: The URL that users are redirected to after their streaming session ends.
      FeedbackURL:
        $ref: '#/definitions/FeedbackURL'
        description: 'The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
      AttributesToDelete:
        $ref: '#/definitions/StackAttributes'
        description: The stack attributes to delete.
      UserSettings:
        $ref: '#/definitions/UserSettingList'
        description: 'The actions that are enabled or disabled for users during their streaming sessions. By default, these actions are enabled.'
      ApplicationSettings:
        $ref: '#/definitions/ApplicationSettings'
        description: 'The persistent application settings for users of a stack. When these settings are enabled, changes that users make to applications and Windows settings are automatically saved after each session and applied to the next session.'
  AccountName:
    type: string
    minLength: 1
    format: password
  AccountPassword:
    type: string
    minLength: 1
    maxLength: 127
    format: password
  Action:
    type: string
    enum:
      - CLIPBOARD_COPY_FROM_LOCAL_DEVICE
      - CLIPBOARD_COPY_TO_LOCAL_DEVICE
      - FILE_UPLOAD
      - FILE_DOWNLOAD
      - PRINTING_TO_LOCAL_DEVICE
  String:
    type: string
    minLength: 1
  Boolean:
    type: boolean
  Metadata:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  Application:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the application.
      DisplayName:
        $ref: '#/definitions/String'
        description: The application name for display.
      IconURL:
        $ref: '#/definitions/String'
        description: The URL for the application icon. This URL might be time-limited.
      LaunchPath:
        $ref: '#/definitions/String'
        description: The path to the application executable in the instance.
      LaunchParameters:
        $ref: '#/definitions/String'
        description: The arguments that are passed to the application at launch.
      Enabled:
        $ref: '#/definitions/Boolean'
        description: 'If there is a problem, the application can be disabled after image creation.'
      Metadata:
        $ref: '#/definitions/Metadata'
        description: Additional attributes that describe the application.
    description: Describes an application in the application catalog.
  SettingsGroup:
    type: string
    maxLength: 100
  ApplicationSettings:
    type: object
    required:
      - Enabled
    properties:
      Enabled:
        $ref: '#/definitions/Boolean'
        description: 'Enables or disables persistent application settings for users during their streaming sessions. '
      SettingsGroup:
        $ref: '#/definitions/SettingsGroup'
        description: 'The path prefix for the S3 bucket where users’ persistent application settings are stored. You can allow the same persistent application settings to be used across multiple stacks by specifying the same settings group for each stack. '
    description: The persistent application settings for users of a stack.
  ApplicationSettingsResponse:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/Boolean'
        description: Specifies whether persistent application settings are enabled for users during their streaming sessions.
      SettingsGroup:
        $ref: '#/definitions/SettingsGroup'
        description: The path prefix for the S3 bucket where users’ persistent application settings are stored.
      S3BucketName:
        $ref: '#/definitions/String'
        description: 'The S3 bucket where users’ persistent application settings are stored. When persistent application settings are enabled for the first time for an account in an AWS Region, an S3 bucket is created. The bucket is unique to the AWS account and the Region. '
    description: Describes the persistent application settings for users of a stack.
  Applications:
    type: array
    items:
      $ref: '#/definitions/Application'
  AppstreamAgentVersion:
    type: string
    minLength: 1
    maxLength: 100
  Arn:
    type: string
    pattern: '^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$'
  ArnList:
    type: array
    items:
      $ref: '#/definitions/Arn'
  AuthenticationType:
    type: string
    enum:
      - API
      - SAML
      - USERPOOL
  AwsAccountId:
    type: string
    pattern: ^\d+$
  AwsAccountIdList:
    type: array
    items:
      $ref: '#/definitions/AwsAccountId'
    minItems: 1
    maxItems: 5
  BooleanObject:
    type: boolean
  Integer:
    type: integer
  ComputeCapacity:
    type: object
    required:
      - DesiredInstances
    properties:
      DesiredInstances:
        $ref: '#/definitions/Integer'
        description: The desired number of streaming instances.
    description: Describes the capacity for a fleet.
  ComputeCapacityStatus:
    type: object
    required:
      - Desired
    properties:
      Desired:
        $ref: '#/definitions/Integer'
        description: The desired number of streaming instances.
      Running:
        $ref: '#/definitions/Integer'
        description: The total number of simultaneous streaming instances that are running.
      InUse:
        $ref: '#/definitions/Integer'
        description: The number of instances in use for streaming.
      Available:
        $ref: '#/definitions/Integer'
        description: The number of currently available instances that can be used to stream sessions.
    description: Describes the capacity status for a fleet.
  Name:
    type: string
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$'
  RegionName:
    type: string
    minLength: 1
    maxLength: 32
  Description:
    type: string
    maxLength: 256
  DirectoryName:
    type: string
  OrganizationalUnitDistinguishedNamesList:
    type: array
    items:
      $ref: '#/definitions/OrganizationalUnitDistinguishedName'
  ServiceAccountCredentials:
    type: object
    required:
      - AccountName
      - AccountPassword
    properties:
      AccountName:
        $ref: '#/definitions/AccountName'
        description: 'The user name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.'
      AccountPassword:
        $ref: '#/definitions/AccountPassword'
        description: The password for the account.
    description: Describes the credentials for the service account used by the streaming instance to connect to the directory.
  DirectoryConfig:
    type: object
    required:
      - DirectoryName
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory (for example, corp.example.com).'
      OrganizationalUnitDistinguishedNames:
        $ref: '#/definitions/OrganizationalUnitDistinguishedNamesList'
        description: The distinguished names of the organizational units for computer accounts.
      ServiceAccountCredentials:
        $ref: '#/definitions/ServiceAccountCredentials'
        description: The credentials for the service account used by the streaming instance to connect to the directory.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time the directory configuration was created.
    description: Configuration information for the directory used to join domains.
  FleetType:
    type: string
    enum:
      - ALWAYS_ON
      - ON_DEMAND
  VpcConfig:
    type: object
    properties:
      SubnetIds:
        $ref: '#/definitions/SubnetIdList'
        description: The subnets to which a network interface is established from the fleet instance.
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIdList'
        description: The security groups for the fleet.
    description: Describes VPC configuration information.
  DisplayName:
    type: string
    maxLength: 100
  DomainJoinInfo:
    type: object
    properties:
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the directory (for example, corp.example.com).'
      OrganizationalUnitDistinguishedName:
        $ref: '#/definitions/OrganizationalUnitDistinguishedName'
        description: The distinguished name of the organizational unit for computer accounts.
    description: Contains the information needed to join a Microsoft Active Directory domain.
  Fleet:
    type: object
    required:
      - Arn
      - Name
      - InstanceType
      - ComputeCapacityStatus
      - State
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN for the fleet.
      Name:
        $ref: '#/definitions/String'
        description: The name of the fleet.
      DisplayName:
        $ref: '#/definitions/String'
        description: The fleet name for display.
      Description:
        $ref: '#/definitions/String'
        description: The description for display.
      ImageName:
        $ref: '#/definitions/String'
        description: The name of the image used to create the fleet.
      ImageArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN for the public, private, or shared image.'
      InstanceType:
        $ref: '#/definitions/String'
        description: The instance type to use when launching fleet instances.
      FleetType:
        $ref: '#/definitions/FleetType'
        description: '<p>The fleet type.</p> <dl> <dt>ALWAYS_ON</dt> <dd> <p>Provides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.</p> </dd> <dt>ON_DEMAND</dt> <dd> <p>Provide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.</p> </dd> </dl>'
      ComputeCapacityStatus:
        $ref: '#/definitions/ComputeCapacityStatus'
        description: The capacity status for the fleet.
      MaxUserDurationInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The maximum time that a streaming session can run, in seconds. Specify a value between 600 and 57600.'
      DisconnectTimeoutInSeconds:
        $ref: '#/definitions/Integer'
        description: 'The time after disconnection when a session is considered to have ended, in seconds. If a user who was disconnected reconnects within this time interval, the user is connected to their previous session. Specify a value between 60 and 57600.'
      State:
        $ref: '#/definitions/FleetState'
        description: The current state for the fleet.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration for the fleet.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time the fleet was created.
      FleetErrors:
        $ref: '#/definitions/FleetErrors'
        description: The fleet errors.
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether default internet access is enabled for the fleet.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: The information needed to join a Microsoft Active Directory domain.
    description: Contains the parameters for a fleet.
  ImageBuilder:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the image builder.
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN for the image builder.
      ImageArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the image from which this builder was created.
      Description:
        $ref: '#/definitions/String'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/String'
        description: The image builder name for display.
      VpcConfig:
        $ref: '#/definitions/VpcConfig'
        description: The VPC configuration of the image builder.
      InstanceType:
        $ref: '#/definitions/String'
        description: The instance type for the image builder.
      Platform:
        $ref: '#/definitions/PlatformType'
        description: The operating system platform of the image builder.
      State:
        $ref: '#/definitions/ImageBuilderState'
        description: The state of the image builder.
      StateChangeReason:
        $ref: '#/definitions/ImageBuilderStateChangeReason'
        description: The reason why the last state change occurred.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time stamp when the image builder was created.
      EnableDefaultInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: Enables or disables default internet access for the image builder.
      DomainJoinInfo:
        $ref: '#/definitions/DomainJoinInfo'
        description: The information needed to join a Microsoft Active Directory domain.
      ImageBuilderErrors:
        $ref: '#/definitions/ResourceErrors'
        description: The image builder errors.
      AppstreamAgentVersion:
        $ref: '#/definitions/AppstreamAgentVersion'
        description: 'The version of the AppStream 2.0 agent that is currently being used by this image builder. '
    description: Describes a streaming instance used for editing an image. New images are created from a snapshot through an image builder.
  Long:
    type: integer
  Timestamp:
    type: string
    format: date-time
  StorageConnectorList:
    type: array
    description: The storage connectors.
    items:
      $ref: '#/definitions/StorageConnector'
  RedirectURL:
    type: string
    maxLength: 1000
  FeedbackURL:
    type: string
    maxLength: 1000
  UserSettingList:
    type: array
    items:
      $ref: '#/definitions/UserSetting'
    minItems: 1
  Stack:
    type: object
    required:
      - Name
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the stack.
      Name:
        $ref: '#/definitions/String'
        description: The name of the stack.
      Description:
        $ref: '#/definitions/String'
        description: The description for display.
      DisplayName:
        $ref: '#/definitions/String'
        description: The stack name for display.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time the stack was created.
      StorageConnectors:
        $ref: '#/definitions/StorageConnectorList'
        description: The storage connectors to enable.
      RedirectURL:
        $ref: '#/definitions/RedirectURL'
        description: The URL that users are redirected to after their streaming session ends.
      FeedbackURL:
        $ref: '#/definitions/FeedbackURL'
        description: 'The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.'
      StackErrors:
        $ref: '#/definitions/StackErrors'
        description: The errors for the stack.
      UserSettings:
        $ref: '#/definitions/UserSettingList'
        description: The actions that are enabled or disabled for users during their streaming sessions. By default these actions are enabled.
      ApplicationSettings:
        $ref: '#/definitions/ApplicationSettingsResponse'
        description: The persistent application settings for users of the stack.
    description: Describes a stack.
  StreamingUrlUserId:
    type: string
    pattern: '[\w+=,.@-]*'
    minLength: 2
    maxLength: 32
  Image:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the image.
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the image.
      BaseImageArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the image from which this image was created.
      DisplayName:
        $ref: '#/definitions/String'
        description: The image name for display.
      State:
        $ref: '#/definitions/ImageState'
        description: 'The image starts in the <code>PENDING</code> state. If image creation succeeds, the state is <code>AVAILABLE</code>. If image creation fails, the state is <code>FAILED</code>.'
      Visibility:
        $ref: '#/definitions/VisibilityType'
        description: Indicates whether the image is public or private.
      ImageBuilderSupported:
        $ref: '#/definitions/Boolean'
        description: Indicates whether an image builder can be launched from this image.
      Platform:
        $ref: '#/definitions/PlatformType'
        description: The operating system platform of the image.
      Description:
        $ref: '#/definitions/String'
        description: The description for display.
      StateChangeReason:
        $ref: '#/definitions/ImageStateChangeReason'
        description: The reason why the last state change occurred.
      Applications:
        $ref: '#/definitions/Applications'
        description: The applications associated with the image.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time the image was created.
      PublicBaseImageReleasedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The release date of the public base image. For private images, this date is the release date of the base image from which the image was created.'
      AppstreamAgentVersion:
        $ref: '#/definitions/AppstreamAgentVersion'
        description: 'The version of the AppStream 2.0 agent to use for instances that are launched from this image. '
      ImagePermissions:
        $ref: '#/definitions/ImagePermissions'
        description: The permissions to provide to the destination AWS account for the specified image.
    description: Describes an image.
  DirectoryNameList:
    type: array
    items:
      $ref: '#/definitions/DirectoryName'
  DirectoryConfigList:
    type: array
    items:
      $ref: '#/definitions/DirectoryConfig'
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  FleetList:
    type: array
    description: The fleets.
    items:
      $ref: '#/definitions/Fleet'
  ImageBuilderList:
    type: array
    items:
      $ref: '#/definitions/ImageBuilder'
  MaxResults:
    type: integer
    minimum: 0
    maximum: 500
  SharedImagePermissionsList:
    type: array
    items:
      $ref: '#/definitions/SharedImagePermissions'
  DescribeImagesMaxResults:
    type: integer
    minimum: 0
    maximum: 25
  VisibilityType:
    type: string
    enum:
      - PUBLIC
      - PRIVATE
      - SHARED
  ImageList:
    type: array
    items:
      $ref: '#/definitions/Image'
  UserId:
    type: string
    minLength: 2
    maxLength: 32
  SessionList:
    type: array
    description: List of sessions.
    items:
      $ref: '#/definitions/Session'
  StackList:
    type: array
    description: The stacks.
    items:
      $ref: '#/definitions/Stack'
  Domain:
    type: string
    description: GSuite domain for GDrive integration.
    maxLength: 64
  OrganizationalUnitDistinguishedName:
    type: string
    maxLength: 2000
  DomainList:
    type: array
    items:
      $ref: '#/definitions/Domain'
    maxItems: 10
  FleetState:
    type: string
    enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
  FleetErrors:
    type: array
    items:
      $ref: '#/definitions/FleetError'
  FleetAttribute:
    type: string
    enum:
      - VPC_CONFIGURATION
      - VPC_CONFIGURATION_SECURITY_GROUP_IDS
      - DOMAIN_JOIN_INFO
    description: The fleet attribute.
  FleetAttributes:
    type: array
    description: The fleet attributes.
    items:
      $ref: '#/definitions/FleetAttribute'
  FleetErrorCode:
    type: string
    enum:
      - IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION
      - IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION
      - NETWORK_INTERFACE_LIMIT_EXCEEDED
      - INTERNAL_SERVICE_ERROR
      - IAM_SERVICE_ROLE_IS_MISSING
      - SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION
      - SUBNET_NOT_FOUND
      - IMAGE_NOT_FOUND
      - INVALID_SUBNET_CONFIGURATION
      - SECURITY_GROUPS_NOT_FOUND
      - IGW_NOT_ATTACHED
      - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION
      - DOMAIN_JOIN_ERROR_FILE_NOT_FOUND
      - DOMAIN_JOIN_ERROR_ACCESS_DENIED
      - DOMAIN_JOIN_ERROR_LOGON_FAILURE
      - DOMAIN_JOIN_ERROR_INVALID_PARAMETER
      - DOMAIN_JOIN_ERROR_MORE_DATA
      - DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN
      - DOMAIN_JOIN_ERROR_NOT_SUPPORTED
      - DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME
      - DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED
      - DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED
      - DOMAIN_JOIN_NERR_PASSWORD_EXPIRED
      - DOMAIN_JOIN_INTERNAL_SERVICE_ERROR
  FleetError:
    type: object
    properties:
      ErrorCode:
        $ref: '#/definitions/FleetErrorCode'
        description: The error code.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message.
    description: Describes a fleet error.
  ImageState:
    type: string
    enum:
      - PENDING
      - AVAILABLE
      - FAILED
      - COPYING
      - DELETING
  PlatformType:
    type: string
    enum:
      - WINDOWS
  ImageStateChangeReason:
    type: object
    properties:
      Code:
        $ref: '#/definitions/ImageStateChangeReasonCode'
        description: The state change reason code.
      Message:
        $ref: '#/definitions/String'
        description: The state change reason message.
    description: Describes the reason why the last image state change occurred.
  ImagePermissions:
    type: object
    properties:
      allowFleet:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether the image can be used for a fleet.
      allowImageBuilder:
        $ref: '#/definitions/BooleanObject'
        description: Indicates whether the image can be used for an image builder.
    description: 'Describes the permissions for an image. '
  ImageBuilderState:
    type: string
    enum:
      - PENDING
      - UPDATING_AGENT
      - RUNNING
      - STOPPING
      - STOPPED
      - REBOOTING
      - SNAPSHOTTING
      - DELETING
      - FAILED
  ImageBuilderStateChangeReason:
    type: object
    properties:
      Code:
        $ref: '#/definitions/ImageBuilderStateChangeReasonCode'
        description: The state change reason code.
      Message:
        $ref: '#/definitions/String'
        description: The state change reason message.
    description: Describes the reason why the last image builder state change occurred.
  ResourceErrors:
    type: array
    items:
      $ref: '#/definitions/ResourceError'
  ImageBuilderStateChangeReasonCode:
    type: string
    enum:
      - INTERNAL_ERROR
      - IMAGE_UNAVAILABLE
  ImageStateChangeReasonCode:
    type: string
    enum:
      - INTERNAL_ERROR
      - IMAGE_BUILDER_NOT_AVAILABLE
      - IMAGE_COPY_FAILURE
  Tags:
    type: array
    minItems: 1
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/TagKey'
        value:
          $ref: '#/definitions/TagValue'
  NetworkAccessConfiguration:
    type: object
    properties:
      EniPrivateIpAddress:
        $ref: '#/definitions/String'
        description: The private IP address of the elastic network interface that is attached to instances in your VPC.
      EniId:
        $ref: '#/definitions/String'
        description: The resource identifier of the elastic network interface that is attached to instances in your VPC. All network interfaces have the eni-xxxxxxxx resource identifier.
    description: The network details of the fleet instance for the streaming session.
  Permission:
    type: string
    enum:
      - ENABLED
      - DISABLED
  ResourceError:
    type: object
    properties:
      ErrorCode:
        $ref: '#/definitions/FleetErrorCode'
        description: The error code.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message.
      ErrorTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The time the error occurred.
    description: Describes a resource error.
  ResourceIdentifier:
    type: string
    description: The ARN of the resource.
    minLength: 1
  SecurityGroupIdList:
    type: array
    description: The security group IDs.
    items:
      $ref: '#/definitions/String'
    maxItems: 5
  SessionState:
    type: string
    enum:
      - ACTIVE
      - PENDING
      - EXPIRED
    description: Possible values for the state of a streaming session.
  Session:
    type: object
    required:
      - Id
      - UserId
      - StackName
      - FleetName
      - State
    properties:
      Id:
        $ref: '#/definitions/String'
        description: The ID of the streaming session.
      UserId:
        $ref: '#/definitions/UserId'
        description: The identifier of the user for whom the session was created.
      StackName:
        $ref: '#/definitions/String'
        description: The name of the stack for the streaming session.
      FleetName:
        $ref: '#/definitions/String'
        description: The name of the fleet for the streaming session.
      State:
        $ref: '#/definitions/SessionState'
        description: The current state of the streaming session.
      AuthenticationType:
        $ref: '#/definitions/AuthenticationType'
        description: The authentication method. The user is authenticated using a streaming URL (<code>API</code>) or SAML federation (<code>SAML</code>).
      NetworkAccessConfiguration:
        $ref: '#/definitions/NetworkAccessConfiguration'
        description: The network details for the streaming session.
    description: Describes a streaming session.
  SharedImagePermissions:
    type: object
    required:
      - sharedAccountId
      - imagePermissions
    properties:
      sharedAccountId:
        $ref: '#/definitions/AwsAccountId'
        description: The 12-digit ID of the AWS account with which the image is shared.
      imagePermissions:
        $ref: '#/definitions/ImagePermissions'
        description: Describes the permissions for a shared image.
    description: Describes the permissions that are available to the specified AWS account for a shared image.
  StackErrors:
    type: array
    description: The stack errors.
    items:
      $ref: '#/definitions/StackError'
  StackAttribute:
    type: string
    enum:
      - STORAGE_CONNECTORS
      - STORAGE_CONNECTOR_HOMEFOLDERS
      - STORAGE_CONNECTOR_GOOGLE_DRIVE
      - STORAGE_CONNECTOR_ONE_DRIVE
      - REDIRECT_URL
      - FEEDBACK_URL
      - THEME_NAME
      - USER_SETTINGS
  StackAttributes:
    type: array
    items:
      $ref: '#/definitions/StackAttribute'
  StackErrorCode:
    type: string
    enum:
      - STORAGE_CONNECTOR_ERROR
      - INTERNAL_SERVICE_ERROR
  StackError:
    type: object
    properties:
      ErrorCode:
        $ref: '#/definitions/StackErrorCode'
        description: The error code.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message.
    description: Describes a stack error.
  StorageConnectorType:
    type: string
    enum:
      - HOMEFOLDERS
      - GOOGLE_DRIVE
      - ONE_DRIVE
    description: The type of storage connector.
  StorageConnector:
    type: object
    required:
      - ConnectorType
    properties:
      ConnectorType:
        $ref: '#/definitions/StorageConnectorType'
        description: The type of storage connector.
      ResourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: The ARN of the storage connector.
      Domains:
        $ref: '#/definitions/DomainList'
        description: The names of the domains for the G Suite account.
    description: Describes a connector to enable persistent storage for users.
  SubnetIdList:
    type: array
    description: The subnet IDs.
    items:
      $ref: '#/definitions/String'
  TagKey:
    type: string
    pattern: '^(^(?!aws:).[\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  UserSetting:
    type: object
    required:
      - Action
      - Permission
    properties:
      Action:
        $ref: '#/definitions/Action'
        description: The action that is enabled or disabled.
      Permission:
        $ref: '#/definitions/Permission'
        description: Indicates whether the action is enabled or disabled.
    description: Describes an action and whether the action is enabled or disabled for users during their streaming sessions.
