swagger: '2.0'
schemes:
  - https
host: api.api2cart.com
basePath: /v1.1
info:
  contact:
    email: contact@api2cart.com
    x-twitter: API2Cart
  description: API2Cart
  termsOfService: 'https://api2cart.com/terms-service'
  title: Swagger API2Cart
  version: 1.0.0
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: 'https://twitter.com/API2Cart/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://app.api2cart.com/default/index/swagger-json'
      version: '2.0'
  x-providerName: api2cart.com
externalDocs:
  description: Find out more about API2Cart
  url: 'http://docs.api2cart.com'
produces:
  - application/json
securityDefinitions:
  api_key:
    in: query
    name: api_key
    type: apiKey
  store_key:
    in: query
    name: store_key
    type: apiKey
tags:
  - name: account
  - name: cart
  - name: product
  - name: category
  - name: order
  - name: customer
  - name: attribute
  - name: tax
  - name: webhook
paths:
  /account.cart.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of carts.
      operationId: AccountCartList
      parameters:
        - default: 'id,url,store_key,cart_id,requests_count'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: request_from_date
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: request_to_date
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  carts:
                    items:
                      properties:
                        cart_id:
                          type: string
                        id:
                          type: string
                        store_key:
                          type: string
                        total_calls:
                          type: string
                        url:
                          type: string
                      type: object
                    type: array
                  carts_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
      tags:
        - account
  /account.config.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update configs in the API2Cart database.
      operationId: AccountConfigUpdate
      parameters:
        - description: 'This parameter is deprecated for this method. Please, use this parameter in method account.config.update'
          in: query
          name: db_tables_prefix
          required: false
          type: string
        - description: Client ID of the requesting app.
          in: query
          name: client_id
          required: false
          type: string
        - description: This parameter allows to set up store with custom bridge url (you must use store_root parameter if a bridge folder is not in the root folder of the store)
          in: query
          name: bridge_url
          required: false
          type: string
        - description: Absolute path to the store root directory (used with "bridge_url" parameter)
          in: query
          name: store_root
          required: false
          type: string
        - description: Shared secret
          in: query
          name: shared_secret
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - account
  /account.failed_webhooks.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: List webhooks that was not delivered to the callback.
      operationId: AccountFailedWebhooks
      parameters:
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - description: List of —Åomma-separated webhook ids
          in: query
          name: ids
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  all_failed_webhook:
                    type: string
                  webhook:
                    items:
                      properties:
                        entity_id:
                          type: string
                        time:
                          $ref: '#/definitions/DateTime'
                        webhook_id:
                          type: integer
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
      tags:
        - account
  /attribute.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add new attribute
      operationId: AttributeAdd
      parameters:
        - description: Defines attribute's type
          enum:
            - text
            - select
            - textarea
            - date
            - price
            - multiselect
            - boolean
          in: query
          name: type
          required: true
          type: string
        - description: Defines attributes's name
          in: query
          name: name
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - default: false
          description: Set visibility status
          in: query
          name: visible
          required: false
          type: boolean
        - default: false
          description: Defines if the option is required
          in: query
          name: required
          required: false
          type: boolean
        - default: 0
          description: Attribute`s position
          in: query
          name: position
          required: false
          type: integer
        - default: Store
          description: Attribute saving scope
          enum:
            - Global
            - Store
            - Website
          in: query
          name: is_global
          required: false
          type: string
        - default: false
          description: Use attribute in Quick Search
          in: query
          name: is_searchable
          required: false
          type: boolean
        - default: 'No'
          description: Use In Layered Navigation
          enum:
            - Filterable (with results)
            - Filterable (no results)
            - 'No'
          in: query
          name: is_filterable
          required: false
          type: string
        - default: false
          description: Comparable on Front-end
          in: query
          name: is_comparable
          required: false
          type: boolean
        - default: false
          description: Allow HTML Tags on Frontend
          in: query
          name: is_html_allowed_on_front
          required: false
          type: boolean
        - default: false
          description: Use In Search Results Layered Navigation
          in: query
          name: is_filterable_in_search
          required: false
          type: boolean
        - default: false
          description: Use To Create Configurable Product
          in: query
          name: is_configurable
          required: false
          type: boolean
        - default: false
          description: Use in Advanced Search
          in: query
          name: is_visible_in_advanced_search
          required: false
          type: boolean
        - default: false
          description: Use for Promo Rule Conditions
          in: query
          name: is_used_for_promo_rules
          required: false
          type: boolean
        - default: false
          description: Used in Product Listing
          in: query
          name: used_in_product_listing
          required: false
          type: boolean
        - default: false
          description: Used for Sorting in Product Listing
          in: query
          name: used_for_sort_by
          required: false
          type: boolean
        - default: all_types
          description: Types of products which can have this attribute
          enum:
            - simple
            - configurable
            - virtual
            - bundle
            - downloadable
            - all_types
          in: query
          name: apply_to
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.assign.group.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Assign attribute to the group
      operationId: AttributeAssignGroup
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Attribute group_id
          in: query
          name: group_id
          required: true
          type: integer
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  assigned:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.assign.set.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Assign attribute to the attribute set
      operationId: AttributeAssignSet
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Attribute group_id
          in: query
          name: group_id
          required: false
          type: integer
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  assigned:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.attributeset.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get attribute_set list
      operationId: AttributeAttributesetList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                items:
                  $ref: '#/definitions/StoreAttribute_Group'
                type: array
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get attributes count
      operationId: AttributeCount
      parameters:
        - description: Defines attribute's type
          enum:
            - text
            - select
            - textarea
            - date
            - price
            - multiselect
            - boolean
          in: query
          name: type
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Filter items by visibility status
          in: query
          name: visible
          required: false
          type: boolean
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  attributes_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete attribute from store
      operationId: AttributeDelete
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.group.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get attribute group list
      operationId: AttributeGroupList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                items:
                  $ref: '#/definitions/StoreAttribute_Group'
                type: array
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get attribute info
      operationId: AttributeInfo
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - default: force_all
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/StoreAttribute'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get attributes list
      operationId: AttributeList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: Defines attribute's type
          enum:
            - text
            - select
            - textarea
            - date
            - price
            - multiselect
            - boolean
          in: query
          name: type
          required: false
          type: string
        - description: Filter attributes by ids
          in: query
          name: attribute_ids
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves attributes on specified language id
          in: query
          name: lang_id
          required: false
          type: integer
        - default: 'id,name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Filter items by visibility status
          in: query
          name: visible
          required: false
          type: boolean
        - description: Defines if the option is required
          in: query
          name: required
          required: false
          type: boolean
        - description: True if attribute is system
          in: query
          name: system
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/StoreAttribute'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.type.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of supported attributes types
      operationId: AttributeTypeList
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  attribute_type:
                    items:
                      type: string
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.unassign.group.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Unassign attribute from group
      operationId: AttributeUnassignGroup
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Customer group_id
          in: query
          name: group_id
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  unassigned:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /attribute.unassign.set.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Unassign attribute from attribute set
      operationId: AttributeUnassignSet
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Attribute set id
          in: query
          name: attribute_set_id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  unassigned:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - attribute
  /basket.item.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add item to basket
      operationId: BasketItemAdd
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: true
          type: string
        - description: Defines id of the product which should be added to the basket
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: variant_id
          required: false
          type: string
        - default: 0
          description: Defines new items quantity
          in: query
          name: quantity
          required: false
          type: number
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  added:
                    type: boolean
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - basket
  /bridge.delete.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete bridge from the store.
      operationId: BridgeDelete
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: boolean
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - bridge
  /bridge.download.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Download bridge for store
      operationId: BridgeDownload
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /bridge.update.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Update bridge in the store.
      operationId: BridgeUpdate
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated:
                    type: boolean
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - bridge
  /cart.bridge.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get bridge key and store key
      operationId: CartBridge
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  bridge:
                    type: string
                  store_key:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
      tags:
        - cart
  /cart.clear_cache.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Clear cache on store.
      operationId: CartClearCache
      parameters:
        - description: Defines which cache should be cleared.
          in: query
          name: cache_type
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  cache_cleared:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.config.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of cart configs
      operationId: CartConfig
      parameters:
        - default: 'store_name,store_url,db_prefix'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  db_prefix:
                    type: string
                  store_name:
                    type: string
                  store_url:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.config.update.json:
    put:
      consumes:
        - application/json
      deprecated: true
      description: Use this API method to update custom data in client database.
      operationId: CartConfigUpdate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CartConfigUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create new coupon
      operationId: CartCouponAdd
      parameters:
        - description: Coupon code
          in: query
          name: code
          required: true
          type: string
        - description: Coupon discount type
          enum:
            - percent
            - fixed
          in: query
          name: action_type
          required: true
          type: string
        - description: Defines where discount should be applied
          enum:
            - order_total
            - item_price
            - shipping
          in: query
          name: action_apply_to
          required: true
          type: string
        - description: 'Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.'
          enum:
            - order
            - matching_items
          in: query
          name: action_scope
          required: true
          type: string
        - description: Defines the discount amount value.
          in: query
          name: action_amount
          required: true
          type: number
        - default: Current date and time
          description: Defines when discount code will be available.
          in: query
          name: date_start
          required: false
          type: string
        - description: Defines when discount code will be expired.
          in: query
          name: date_end
          required: false
          type: string
        - description: Usage limit for coupon.
          in: query
          name: usage_limit
          required: false
          type: integer
        - description: Usage limit per customer.
          in: query
          name: usage_limit_per_customer
          required: false
          type: integer
        - description: Defines entity for action condition.
          enum:
            - order
            - order_shipping_address
            - product
            - customer
          in: query
          name: action_condition_entity
          required: false
          type: string
        - description: Defines entity attribute code for action condition.
          enum:
            - product_id
            - category_id
            - variant_id
            - country
          in: query
          name: action_condition_key
          required: false
          type: string
        - description: Defines condition operator.
          enum:
            - ONE_OF
            - ==
          in: query
          name: action_condition_operator
          required: false
          type: string
        - description: Defines condition attribute value/s. Can be comma separated string.
          in: query
          name: action_condition_value
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  coupon_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get cart coupons count.
      operationId: CartCouponCount
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Filter entity by date_start (greater or equal)
          in: query
          name: date_start_from
          required: false
          type: string
        - description: Filter entity by date_start (less or equal)
          in: query
          name: date_start_to
          required: false
          type: string
        - description: Filter entity by date_end (greater or equal)
          in: query
          name: date_end_from
          required: false
          type: string
        - description: Filter entity by date_end (less or equal)
          in: query
          name: date_end_to
          required: false
          type: string
        - default: true
          description: Defines category's visibility status
          in: query
          name: avail
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  coupons_count:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete coupon
      operationId: CartCouponDelete
      parameters:
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.coupon.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get cart coupon discounts.
      operationId: CartCouponList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved. Max allowed count=250
          in: query
          name: count
          required: false
          type: integer
        - description: Filter coupons by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Filter entity by date_start (greater or equal)
          in: query
          name: date_start_from
          required: false
          type: string
        - description: Filter entity by date_start (less or equal)
          in: query
          name: date_start_to
          required: false
          type: string
        - description: Filter entity by date_end (greater or equal)
          in: query
          name: date_end_from
          required: false
          type: string
        - description: Filter entity by date_end (less or equal)
          in: query
          name: date_end_to
          required: false
          type: string
        - description: Filter coupons by avail status
          in: query
          name: avail
          required: false
          type: boolean
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - default: force_all
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  coupon:
                    items:
                      $ref: '#/definitions/Coupon'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.create.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add store to the account
      operationId: CartCreate
      parameters:
        - description: Store‚Äôs identifier which you can get from cart_list method
          in: query
          name: cart_id
          required: true
          type: string
        - description: A web address of a store that you would like to connect to API2Cart
          in: query
          name: store_url
          required: true
          type: string
        - description: This parameter allows to set up store with custom bridge url (you must use store_root parameter if a bridge folder is not in the root folder of the store)
          in: query
          name: bridge_url
          required: false
          type: string
        - description: Absolute path to the store root directory (used with "bridge_url" parameter)
          in: query
          name: store_root
          required: false
          type: string
        - description: Set this parameter if bridge is already uploaded to store
          in: query
          name: store_key
          required: false
          type: string
        - description: Shared secret
          in: query
          name: shared_secret
          required: false
          type: string
        - default: false
          description: Specify if api2cart should validate cart version
          in: query
          name: validate_version
          required: false
          type: boolean
        - default: true
          description: Enables or disables cart's verification
          in: query
          name: verify
          required: false
          type: boolean
        - description: 'This parameter is deprecated for this method. Please, use this parameter in method account.config.update'
          in: query
          name: db_tables_prefix
          required: false
          type: string
        - description: FTP connection host
          in: query
          name: ftp_host
          required: false
          type: string
        - description: FTP User
          in: query
          name: ftp_user
          required: false
          type: string
        - description: FTP Password
          in: query
          name: ftp_password
          required: false
          type: string
        - description: FTP Port
          in: query
          name: ftp_port
          required: false
          type: integer
        - description: FTP Store dir
          in: query
          name: ftp_store_dir
          required: false
          type: string
        - description: 3DCart API Key
          in: query
          name: apiKey_3dcart
          required: false
          type: string
        - description: It's a BigCommerce account for which API is enabled
          in: query
          name: AdminAccount
          required: false
          type: string
        - description: BigCommerce API URL
          in: query
          name: ApiPath
          required: false
          type: string
        - description: Bigcommerce API Key
          in: query
          name: ApiKey
          required: false
          type: string
        - description: Client ID of the requesting app.
          in: query
          name: client_id
          required: false
          type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: accessToken
          required: false
          type: string
        - description: Access token authorizing the app to access resources on behalf of a user
          in: query
          name: access_token
          required: false
          type: string
        - description: Shopify API Key
          in: query
          name: apiKey_shopify
          required: false
          type: string
        - description: Shopify API Password
          in: query
          name: apiPassword
          required: false
          type: string
        - description: Volusion API Password
          in: query
          name: EncryptedPassword
          required: false
          type: string
        - description: It's a Volusion account for which API is enabled
          in: query
          name: Login
          required: false
          type: string
        - description: It's a AspDotNetStorefront account for which API is available
          in: query
          name: apiUser_adnsf
          required: false
          type: string
        - description: AspDotNetStorefront API Password
          in: query
          name: apiPass
          required: false
          type: string
        - description: Shopping Cart Elite Access Key
          in: query
          name: accessKey_scelite
          required: false
          type: string
        - description: Shopping Cart Elite API Key
          in: query
          name: apiKey_scelite
          required: false
          type: string
        - description: Shopping Cart Elite API Secret Key
          in: query
          name: apiSecretKey_scelite
          required: false
          type: string
        - description: 3DCart Application Private Key
          in: query
          name: privateKey
          required: false
          type: string
        - description: 3DCart Token from Application
          in: query
          name: appToken
          required: false
          type: string
        - description: Etsy keystring
          in: query
          name: etsy_keystring
          required: false
          type: string
        - description: Etsy shared secret
          in: query
          name: etsy_shared_secret
          required: false
          type: string
        - description: Secret token authorizing the app to access resources on behalf of a user
          in: query
          name: tokenSecret
          required: false
          type: string
        - description: Application ID (AppID).
          in: query
          name: ebay_client_id
          required: false
          type: string
        - description: Shared Secret from eBay application
          in: query
          name: ebay_client_secret
          required: false
          type: string
        - description: The RuName value that eBay assigns to your application.
          in: query
          name: ebay_runame
          required: false
          type: string
        - description: Used to authenticate API requests.
          in: query
          name: ebay_access_token
          required: false
          type: string
        - description: Used to renew the access token.
          in: query
          name: ebay_refresh_token
          required: false
          type: string
        - default: production
          description: ''
          enum:
            - production
            - sandbox
          in: query
          name: ebay_environment
          required: false
          type: string
        - description: Demandware client id
          in: query
          name: dw_client_id
          required: false
          type: string
        - description: Demandware api password
          in: query
          name: dw_api_pass
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Seller Id
          in: query
          name: seller_id
          required: true
          type: string
        - description: Comma separated marketplaces ids
          in: query
          name: marketplaces_ids
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  store_key:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
      tags:
        - cart
  /cart.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Remove store from API2Cart
      operationId: CartDelete
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  store:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.disconnect.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Disconnect with the store and clear store session data.
      operationId: CartDisconnect
      parameters:
        - default: false
          description: Identifies if there is a necessity to delete bridge
          in: query
          name: delete_bridge
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  connection:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create new gift card
      operationId: CartGiftcardAdd
      parameters:
        - description: Defines the gift card amount value.
          in: query
          name: amount
          required: true
          type: number
        - description: Gift card code
          in: query
          name: code
          required: false
          type: string
        - description: Gift card owner email
          in: query
          name: owner_email
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  code:
                    type: string
                  id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get gift cards count.
      operationId: CartGiftcardCount
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  gift_cards_count:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.giftcard.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get gift cards list.
      operationId: CartGiftcardList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - default: force_all
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  gift_card:
                    items:
                      $ref: '#/definitions/GiftCard'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get cart information
      operationId: CartInfo
      parameters:
        - default: 'store_name,store_url,db_prefix'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Cart'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of supported carts
      operationId: CartList
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  supported_carts:
                    items:
                      properties:
                        cart_id:
                          type: string
                        cart_name:
                          type: string
                        cart_versions:
                          type: string
                        params:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
      tags:
        - cart
  /cart.methods.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of cart methods
      operationId: CartMethods
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  method:
                    items:
                      type: string
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.plugin.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of installed plugins
      operationId: CartPluginList
      parameters:
        - description: Set this parameter if bridge is already uploaded to store
          in: query
          name: store_key
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  all_plugins:
                    type: integer
                  plugins:
                    items:
                      $ref: '#/definitions/PluginList'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /cart.validate.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: 'Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.'
      operationId: CartValidate
      parameters:
        - default: false
          description: Specify if api2cart should validate cart version
          in: query
          name: validate_version
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  status:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - cart
  /category.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add new category in store
      operationId: CategoryAdd
      parameters:
        - description: Defines category's name that has to be added
          in: query
          name: name
          required: true
          type: string
        - description: Adds categories specified by parent id
          in: query
          name: parent_id
          required: false
          type: string
        - default: '0'
          description: Create category in the stores that is specified by comma-separated stores' id
          in: query
          name: stores_ids
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - default: true
          description: Defines category's visibility status
          in: query
          name: avail
          required: false
          type: boolean
        - default: 0
          description: Sort number in the list
          in: query
          name: sort_order
          required: false
          type: integer
        - description: Entity's date creation
          in: query
          name: created_time
          required: false
          type: string
        - description: Entity's date modification
          in: query
          name: modified_time
          required: false
          type: string
        - description: Defines category's description
          in: query
          name: description
          required: false
          type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          type: string
        - description: Defines unique category's URL for SEO
          in: query
          name: seo_url
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  category_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.assign.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Assign category to product
      operationId: CategoryAssign
      parameters:
        - description: 'Defines category assign to the product, specified by product id'
          in: query
          name: product_id
          required: true
          type: string
        - description: 'Defines category assign, specified by category id'
          in: query
          name: category_id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Count categories in store.
      operationId: CategoryCount
      parameters:
        - description: Counts categories specified by parent id
          in: query
          name: parent_id
          required: false
          type: string
        - description: Counts category specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Counts category specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  categories_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete category in store
      operationId: CategoryDelete
      parameters:
        - description: 'Defines category removal, specified by category id'
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.find.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Search category in store. "Laptop" is specified here by default.
      operationId: CategoryFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          type: string
        - default: name
          description: Entity search that is specified by the comma-separated unique fields
          enum:
            - name
            - description
          in: query
          name: find_where
          required: false
          type: string
        - default: whole_words
          description: Entity search that is specified by comma-separated parameters
          enum:
            - regex
            - case_sensitive
            - whole_words
          in: query
          name: find_params
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  category:
                    items:
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.image.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add image to category
      operationId: CategoryImageAdd
      parameters:
        - description: Defines category id where the image should be added
          in: query
          name: category_id
          required: true
          type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: true
          type: string
        - description: Defines URL of the image that has to be added
          in: query
          name: url
          required: true
          type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          type: string
        - description: 'Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.'
          in: query
          name: mime
          required: false
          type: string
        - description: Defines image's types that are specified by comma-separated list
          enum:
            - base
            - thumbnail
          in: query
          name: type
          required: true
          type: string
        - default: 0
          description: Defines image‚Äôs position in the list
          in: query
          name: position
          required: false
          type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  image_path:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.image.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete image
      operationId: CategoryImageDelete
      parameters:
        - description: Defines category id where the image should be deleted
          in: query
          name: category_id
          required: true
          type: string
        - description: Define image id
          in: query
          name: image_id
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get category info about category ID*** or specify other category ID.
      operationId: CategoryInfo
      parameters:
        - description: Retrieves category's info specified by category id
          in: query
          name: id
          required: true
          type: string
        - default: 'id,parent_id,name,description'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves category info  specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves category info  specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Category'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of categories from store. Returns 4 categories by default.
      operationId: CategoryList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: Retrieves categories specified by parent id
          in: query
          name: parent_id
          required: false
          type: string
        - default: 'id,parent_id,name,description'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves categories specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves categorys specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  category:
                    items:
                      $ref: '#/definitions/Category'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.unassign.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Unassign category to product
      operationId: CategoryUnassign
      parameters:
        - description: 'Defines category unassign, specified by category id'
          in: query
          name: category_id
          required: true
          type: string
        - description: 'Defines category unassign to the product, specified by product id'
          in: query
          name: product_id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /category.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update category in store
      operationId: CategoryUpdate
      parameters:
        - description: Defines category update specified by category id
          in: query
          name: id
          required: true
          type: string
        - description: Defines new category‚Äôs name
          in: query
          name: name
          required: false
          type: string
        - description: Defines new parent category id
          in: query
          name: parent_id
          required: false
          type: string
        - default: '0'
          description: Update category in the stores that is specified by comma-separated stores' id
          in: query
          name: stores_ids
          required: false
          type: string
        - description: Defines category's visibility status
          in: query
          name: avail
          required: false
          type: boolean
        - description: Sort number in the list
          in: query
          name: sort_order
          required: false
          type: integer
        - description: Entity's date modification
          in: query
          name: modified_time
          required: false
          type: string
        - description: Defines new category's description
          in: query
          name: description
          required: false
          type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          type: string
        - description: Defines unique category's URL for SEO
          in: query
          name: seo_url
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - category
  /customer.add.json:
    post:
      consumes:
        - application/json
      description: Add customer into store.
      operationId: CustomerAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  customer_id:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get number of customers from store.
      operationId: CustomerCount
      parameters:
        - description: Customer group_id
          in: query
          name: group_id
          required: false
          type: integer
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Counts customer specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: The numeric ID of the customer list in Demandware.
          in: query
          name: customer_list_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  customers_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.find.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Find customers in store.
      operationId: CustomerFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          type: string
        - default: email
          description: Entity search that is specified by the comma-separated unique fields
          enum:
            - email
            - first_name
            - last_name
          in: query
          name: find_where
          required: false
          type: string
        - default: whole_words
          description: Entity search that is specified by comma-separated parameters
          enum:
            - regex
            - case_sensitive
            - whole_words
          in: query
          name: find_params
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  email:
                    type: string
                  first_name:
                    type: string
                  id:
                    type: string
                  last_name:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get customers' details from store.
      operationId: CustomerInfo
      parameters:
        - description: Retrieves customer's info specified by customer id
          in: query
          name: id
          required: true
          type: string
        - default: 'id,email,first_name,last_name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves customer info specified by store id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Customer'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /customer.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of customers from store.
      operationId: CustomerList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - default: 'id,email,first_name,last_name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Customer group_id
          in: query
          name: group_id
          required: false
          type: integer
        - description: Retrieves customers specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: The numeric ID of the customer list in Demandware.
          in: query
          name: customer_list_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/Customer'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - customer
  /order.abandoned.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of orders that were left by customers before completing the order.
      operationId: OrderAbandonedList
      parameters:
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'customer,totals,address,items'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/OrderAbandoned'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.add.json:
    post:
      consumes:
        - application/json
      description: Add a new order to the cart.
      operationId: OrderAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Count orders in store
      operationId: OrderCount
      parameters:
        - description: Counts orders quantity specified by customer id
          in: query
          name: customer_id
          required: false
          type: string
        - description: Counts orders quantity specified by customer email
          in: query
          name: customer_email
          required: false
          type: string
        - description: Counts orders quantity specified by order status
          in: query
          name: order_status
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Counts orders quantity specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Counts orders specified by order ids
          in: query
          name: order_ids
          required: false
          type: string
        - description: Counts orders quantity specified by financial status
          enum:
            - pending
            - authorized
            - partially_paid
            - paid
            - partially_refunded
            - refunded
            - voided
          in: query
          name: financial_status
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  orders_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.financial_status.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Retrieve list of financial statuses
      operationId: OrderFinancialStatusList
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order_financial_statuses:
                    items:
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.find.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Find orders
      operationId: OrderFind
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          type: string
        - description: Retrieves orders specified by order status
          in: query
          name: order_status
          required: false
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'order_id,customer,totals,address,items,status'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieves orders specified by financial status
          enum:
            - pending
            - authorized
            - partially_paid
            - paid
            - partially_refunded
            - refunded
            - voided
          in: query
          name: financial_status
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/Order'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Info about a specific order by ID
      operationId: OrderInfo
      parameters:
        - description: Retrieves order‚Äôs info specified by order id
          in: query
          name: order_id
          required: true
          type: string
        - default: 'order_id,customer,totals,address,items,status'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Defines store id where the order should be found
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Order'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of orders from store. Returns 4 orders by default.
      operationId: OrderList
      parameters:
        - description: Retrieves orders specified by customer id
          in: query
          name: customer_id
          required: false
          type: string
        - description: Retrieves orders specified by customer email
          in: query
          name: customer_email
          required: false
          type: string
        - description: Retrieves orders specified by order status
          in: query
          name: order_status
          required: false
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: order_id
          description: Set field to sort by
          in: query
          name: sort_by
          required: false
          type: string
        - default: asc
          description: Set sorting direction
          enum:
            - asc
            - desc
          in: query
          name: sort_direction
          required: false
          type: string
        - default: 'order_id,customer,totals,address,items,status'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves orders specified by order ids
          in: query
          name: order_ids
          required: false
          type: string
        - description: Retrieves orders specified by financial status
          enum:
            - pending
            - authorized
            - partially_paid
            - paid
            - partially_refunded
            - refunded
            - voided
          in: query
          name: financial_status
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/Order'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.refund.add.json:
    post:
      consumes:
        - application/json
      description: Add a refund to the order.
      operationId: OrderRefundAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderRefundAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  refund_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.add.json:
    post:
      consumes:
        - application/json
      description: Add a shipment to the order.
      operationId: OrderShipmentAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderShipmentAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  shipment_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of shipments by orders.
      operationId: OrderShipmentList
      parameters:
        - description: Retrieves shipments specified by order id
          in: query
          name: order_id
          required: true
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,order_id,tracking_numbers'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  order:
                    items:
                      $ref: '#/definitions/Shipment'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.shipment.update.json:
    put:
      consumes:
        - application/json
      description: Update order's shipment information.
      operationId: OrderShipmentUpdate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderShipmentUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.status.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Retrieve list of statuses
      operationId: OrderStatusList
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  cart_order_statuses:
                    items:
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /order.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update existing order.
      operationId: OrderUpdate
      parameters:
        - description: Defines the orders specified by order id
          in: query
          name: order_id
          required: true
          type: string
        - description: Defines store id where the order should be found
          in: query
          name: store_id
          required: false
          type: string
        - description: Defines new order's status
          in: query
          name: order_status
          required: false
          type: string
        - description: Specifies order comment
          in: query
          name: comment
          required: false
          type: string
        - description: Specifies order's  modification date
          in: query
          name: date_modified
          required: false
          type: string
        - description: Specifies order's  finished date
          in: query
          name: date_finished
          required: false
          type: string
        - description: Update order financial status to specified
          enum:
            - paid
          in: query
          name: financial_status
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - order
  /product.add.json:
    post:
      consumes:
        - application/json
      description: Add new product to store.
      operationId: ProductAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.attribute.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of attributes.
      operationId: ProductAttributeList
      parameters:
        - description: Retrieves attributes specified by product id
          in: query
          name: product_id
          required: true
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'attribute_id,name'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - default: attribute_id
          description: Set field to sort by
          in: query
          name: sort_by
          required: false
          type: string
        - default: asc
          description: Set sorting direction
          enum:
            - asc
            - desc
          in: query
          name: sort_direction
          required: false
          type: string
        - description: Retrieves attributes specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Retrieves attributes specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves info for specified attribute_id
          in: query
          name: attribute_id
          required: false
          type: string
        - description: Filter by attribute_group_id
          in: query
          name: attribute_group_id
          required: false
          type: string
        - description: Retrieves attributes specified by set_name in Magento
          in: query
          name: set_name
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  attributes:
                    items:
                      $ref: '#/definitions/Product_Attribute'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.attribute.value.set.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Set attribute value to product.
      operationId: ProductAttributeValueSet
      parameters:
        - description: Defines product id where the attribute should be added
          in: query
          name: product_id
          required: true
          type: string
        - description: Filter by attribute_id
          in: query
          name: attribute_id
          required: false
          type: string
        - description: Filter by attribute_group_id
          in: query
          name: attribute_group_id
          required: false
          type: string
        - description: Define attribute name
          in: query
          name: attribute_name
          required: false
          type: string
        - description: Define attribute value
          in: query
          name: value
          required: false
          type: string
        - description: Define attribute value id
          in: query
          name: value_id
          required: false
          type: integer
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  attribute_id:
                    type: string
                  product_id:
                    type: string
                  value_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.child_item.find.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Search product child item (bundled item or configurable product variant) in store catalog.
      operationId: ProductChildItemFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          type: string
        - default: name
          description: Entity search that is specified by the comma-separated unique fields
          enum:
            - name
            - sku
            - description
          in: query
          name: find_where
          required: false
          type: string
        - default: whole_words
          description: Entity search that is specified by comma-separated parameters
          enum:
            - regex
            - case_sensitive
            - whole_words
          in: query
          name: find_params
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  children:
                    items:
                      $ref: '#/definitions/Child'
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.child_item.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get child items list of specific product.
      operationId: ProductChildItemList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: force_all
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Filter by parent product id
          in: query
          name: product_id
          required: true
          type: string
        - description: Filter by parent product id
          in: query
          name: product_ids
          required: false
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  children:
                    items:
                      $ref: '#/definitions/Child'
                    type: array
                  total_count:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Count products in store.
      operationId: ProductCount
      parameters:
        - description: Counts products specified by category id
          in: query
          name: category_id
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Specifies the set of visible/invisible products
          in: query
          name: avail_view
          required: false
          type: boolean
        - description: Specifies the set of available/not available products for sale
          in: query
          name: avail_sale
          required: false
          type: boolean
        - description: Counts products specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Counts products specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Counts products specified by product ids
          in: query
          name: product_ids
          required: false
          type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          type: string
        - default: false
          description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  products_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.currency.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add currency and/or set default in store
      operationId: ProductCurrencyAdd
      parameters:
        - description: Specifies standardized currency code
          in: query
          name: iso3
          required: true
          type: string
        - description: Defines the numerical identifier against to the major currency
          in: query
          name: rate
          required: true
          type: number
        - description: Defines currency's name
          in: query
          name: name
          required: false
          type: string
        - default: true
          description: Specifies whether the currency is available
          in: query
          name: avail
          required: false
          type: boolean
        - description: Defines the symbol that is located before the currency
          in: query
          name: symbol_left
          required: false
          type: string
        - description: Defines the symbol that is located after the currency
          in: query
          name: symbol_right
          required: false
          type: string
        - default: false
          description: Specifies currency's default meaning
          in: query
          name: default
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  currency_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.currency.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of currencies
      operationId: ProductCurrencyList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'name,iso3,default,avail'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Specifies the set of default/not default currencies
          in: query
          name: default
          required: false
          type: boolean
        - description: Specifies the set of available/not available currencies
          in: query
          name: avail
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  currency:
                    items:
                      $ref: '#/definitions/Currency'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Product delete
      operationId: ProductDelete
      parameters:
        - description: Product id that will be removed
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  delete_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.fields.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Retrieve all available fields for product item in store.
      operationId: ProductFields
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.find.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Search product in store catalog. "Apple" is specified here by default.
      operationId: ProductFind
      parameters:
        - description: Entity search that is specified by some value
          in: query
          name: find_value
          required: true
          type: string
        - default: name
          description: Entity search that is specified by the comma-separated unique fields
          enum:
            - name
            - model
            - description
          in: query
          name: find_where
          required: false
          type: string
        - default: whole_words
          description: Entity search that is specified by comma-separated parameters
          enum:
            - regex
            - case_sensitive
            - whole_words
          in: query
          name: find_params
          required: false
          type: string
        - default: product
          description: Parameter's value specifies the entity that has to be found
          enum:
            - product
            - variant
            - each
          in: query
          name: find_what
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product:
                    items:
                      properties:
                        description:
                          type: string
                        id:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add image to product
      operationId: ProductImageAdd
      parameters:
        - description: Defines product id where the image should be added
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: true
          type: string
        - description: Defines image's types that are specified by comma-separated list
          enum:
            - small
            - base
            - additional
            - thumbnail
          in: query
          name: type
          required: true
          type: string
        - description: Defines URL of the image that has to be added
          in: query
          name: url
          required: true
          type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          type: string
        - description: 'Mime type of image http://en.wikipedia.org/wiki/Internet_media_type.'
          in: query
          name: mime
          required: false
          type: string
        - default: 0
          description: Defines image‚Äôs position in the list
          in: query
          name: position
          required: false
          type: integer
        - description: Content(body) encoded in base64 of image file
          in: query
          name: content
          required: false
          type: string
        - description: Defines product's variants specified by variant id
          in: query
          name: product_variant_id
          required: false
          type: integer
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  image_path:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete image
      operationId: ProductImageDelete
      parameters:
        - description: Defines product id where the image should be deleted
          in: query
          name: product_id
          required: true
          type: string
        - description: Entity id
          in: query
          name: id
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.image.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update details of image
      operationId: ProductImageUpdate
      parameters:
        - description: Defines product id where the image should be updated
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines image's name
          in: query
          name: image_name
          required: false
          type: string
        - default: additional
          description: Defines image's types that are specified by comma-separated list
          enum:
            - small
            - base
            - additional
            - thumbnail
          in: query
          name: type
          required: false
          type: string
        - description: Defines alternative text that has to be attached to the picture
          in: query
          name: label
          required: false
          type: string
        - description: Defines image‚Äôs position in the list
          in: query
          name: position
          required: false
          type: integer
        - description: Defines image update specified by image id
          in: query
          name: id
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Define is hide image
          in: query
          name: hidden
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get product info about product ID *** or specify other product ID.
      operationId: ProductInfo
      parameters:
        - description: Retrieves product's info specified by product id
          in: query
          name: id
          required: true
          type: string
        - default: 'id,name,description,price,categories_ids'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves product info specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves product info specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
        - default: force_all
          description: Set this parameter in order to choose which product variants fields you want to retrieve
          in: query
          name: product_variant_params
          required: false
          type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          type: string
        - default: false
          description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Product'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of products from your store. Returns 4 products by default.
      operationId: ProductList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,name,description,price,categories_ids'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves products specified by category id
          in: query
          name: category_id
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Specifies the set of visible/invisible products
          in: query
          name: avail_view
          required: false
          type: boolean
        - description: Specifies the set of available/not available products for sale
          in: query
          name: avail_sale
          required: false
          type: boolean
        - description: Retrieves products specified by store id
          in: query
          name: store_id
          required: false
          type: string
        - description: Retrieves products specified by language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Retrieves products specified by product ids
          in: query
          name: product_ids
          required: false
          type: string
        - default: force_all
          description: Set this parameter in order to choose which product variants fields you want to retrieve
          in: query
          name: product_variant_params
          required: false
          type: string
        - description: Retrieve products starting from the specified product id
          in: query
          name: since_id
          required: false
          type: integer
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          type: string
        - default: false
          description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product:
                    items:
                      $ref: '#/definitions/Product'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.manufacturer.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add manufacturer to store and assign to product
      operationId: ProductManufacturerAdd
      parameters:
        - description: Defines products specified by product id
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines product‚Äôs manufacturer's name
          in: query
          name: manufacturer
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  manufacturer_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add product option from store.
      operationId: ProductOptionAdd
      parameters:
        - description: Defines option's name
          in: query
          name: name
          required: true
          type: string
        - description: Defines option's type that has to be added
          enum:
            - option_type_select
            - option_type_text
            - option_type_radio
            - option_type_checkbox
            - option_type_textarea
            - option_type_readonly
            - option_type_multiselect
            - option_type_multicheckbox
            - option_type_file
            - option_type_date
            - option_type_datetime
            - option_type_time
          in: query
          name: type
          required: true
          type: string
        - description: Defines product id where the option should be added
          in: query
          name: product_id
          required: false
          type: string
        - description: Defines option values that has to be added in Magento
          in: query
          name: option_values
          required: false
          type: string
        - description: Defines option's description
          in: query
          name: description
          required: false
          type: string
        - default: true
          description: Defines whether the option is available
          in: query
          name: avail
          required: false
          type: boolean
        - default: 0
          description: Sort number in the list
          in: query
          name: sort_order
          required: false
          type: integer
        - default: false
          description: Defines if the option is required
          in: query
          name: required
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  option_id:
                    type: string
                  product_option_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.assign.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Assign option from product.
      operationId: ProductOptionAssign
      parameters:
        - description: Defines product id where the option should be assigned
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines option id which has to be assigned
          in: query
          name: option_id
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product_option_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list of options.
      operationId: ProductOptionList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,name,description'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves products' options specified by product id
          in: query
          name: product_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  option:
                    items:
                      $ref: '#/definitions/Product_Option'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add product option item from option.
      operationId: ProductOptionValueAdd
      parameters:
        - description: Defines option id where the value has to be added
          in: query
          name: option_id
          required: true
          type: integer
        - description: Defines option value that has to be added
          in: query
          name: option_value
          required: true
          type: string
        - default: 0
          description: Sort number in the list
          in: query
          name: sort_order
          required: false
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  option_value_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.assign.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Assign product option item from product.
      operationId: ProductOptionValueAssign
      parameters:
        - description: Defines product's option id where the value has to be assigned
          in: query
          name: product_option_id
          required: true
          type: integer
        - description: Defines value id that has to be assigned
          in: query
          name: option_value_id
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product_option_value_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.option.value.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update product option item from option.
      operationId: ProductOptionValueUpdate
      parameters:
        - description: Defines value id that has to be assigned
          in: query
          name: option_value_id
          required: true
          type: integer
        - description: Defines new product option price
          in: query
          name: price
          required: false
          type: number
        - description: Defines new products' options quantity
          in: query
          name: quantity
          required: false
          type: number
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.add.json:
    post:
      consumes:
        - application/json
      description: Add some prices to the product.
      operationId: ProductPriceAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductPriceAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  status:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete some prices of the product
      operationId: ProductPriceDelete
      parameters:
        - description: Defines the product where the price has to be deleted
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines product's group prices
          in: query
          name: group_prices
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.price.update.json:
    put:
      consumes:
        - application/json
      description: Update some prices of the product.
      operationId: ProductPriceUpdate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductPriceUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.review.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get reviews of a specific product.
      operationId: ProductReviewList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: Product id
          in: query
          name: product_id
          required: true
          type: string
        - description: Store Id
          in: query
          name: store_id
          required: false
          type: string
        - description: Defines status
          enum:
            - approved
            - pending
            - disapproved
          in: query
          name: status
          required: false
          type: string
        - default: 'id,customer_id,email,message,status'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  reviews:
                    items:
                      $ref: '#/definitions/Product_Review'
                    type: array
                  total_count:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.tax.add.json:
    post:
      consumes:
        - application/json
      description: Add tax class and tax rate to store and assign to product.
      operationId: ProductTaxAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductTaxAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  tax_class_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update price and quantity for a specific product
      operationId: ProductUpdate
      parameters:
        - description: Defines product id that has to be updated
          in: query
          name: id
          required: true
          type: string
        - description: Defines new product's price
          in: query
          name: price
          required: false
          type: number
        - description: Defines new product's special price
          in: query
          name: special_price
          required: false
          type: number
        - description: Defines the date of special price creation
          in: query
          name: sprice_create
          required: false
          type: string
        - description: Defines the term of special price offer duration
          in: query
          name: sprice_expire
          required: false
          type: string
        - description: Defines new product's cost price
          in: query
          name: cost_price
          required: false
          type: number
        - description: Defines new product's retail price
          in: query
          name: retail_price
          required: false
          type: number
        - description: Defines new product's quantity
          in: query
          name: quantity
          required: false
          type: number
        - description: Weight
          in: query
          name: weight
          required: false
          type: number
        - description: Defines the incremental changes in product quantity
          in: query
          name: increase_quantity
          required: false
          type: number
        - description: Defines the decrement changes in product quantity
          in: query
          name: reduce_quantity
          required: false
          type: number
        - description: 'This parameter is used for selecting a warehouse where you need to update a product quantity. Also, it has to be used along with this parameters: in_stock,quantity,increase_quantity,reduce_quantity.'
          in: query
          name: warehouse_id
          required: false
          type: string
        - description: This parameter allows to reserve/unreserve product quantity.
          in: query
          name: reserve_quantity
          required: false
          type: number
        - description: Defines inventory tracking for product
          in: query
          name: manage_stock
          required: false
          type: boolean
        - description: Defines product's name that has to be updated
          in: query
          name: name
          required: false
          type: string
        - description: Defines new product's sku
          in: query
          name: sku
          required: false
          type: string
        - description: Set visibility status
          enum:
            - nowhere
            - catalog
            - search
            - everywhere
          in: query
          name: visible
          required: false
          type: string
        - description: Defines product's manufacturer
          in: query
          name: manufacturer
          required: false
          type: string
        - description: Defines product's manufacturer by manufacturer_id
          in: query
          name: manufacturer_id
          required: false
          type: string
        - description: Defines new product's description
          in: query
          name: description
          required: false
          type: string
        - description: Defines short description
          in: query
          name: short_description
          required: false
          type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          type: string
        - description: Defines store id where the product should be found
          in: query
          name: store_id
          required: false
          type: string
        - description: Language id
          in: query
          name: lang_id
          required: false
          type: integer
        - description: Set stock status
          in: query
          name: in_stock
          required: false
          type: boolean
        - description: Defines product's status
          enum:
            - enabled
            - disabled
          in: query
          name: status
          required: false
          type: string
        - description: Defines unique URL for SEO
          in: query
          name: seo_url
          required: false
          type: string
        - description: Report request id
          in: query
          name: report_request_id
          required: false
          type: string
        - default: false
          description: Disable report cache for current request
          in: query
          name: disable_report_cache
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.add.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Add variant to product.
      operationId: ProductVariantAdd
      parameters:
        - description: Defines product's id where the variant has to be added
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines variant's name that has to be added
          in: query
          name: name
          required: false
          type: string
        - description: Specifies variant's model that has to be added
          in: query
          name: model
          required: true
          type: string
        - description: Defines new product's variant price
          in: query
          name: price
          required: false
          type: number
        - description: Defines variant's attributes list
          in: query
          items:
            type: string
          name: attributes
          required: false
          type: array
        - description: Specifies variant's description
          in: query
          name: description
          required: false
          type: string
        - description: Specifies variant's model that has to be added
          in: query
          name: special_price
          required: false
          type: number
        - description: Defines the date of special price creation
          in: query
          name: sprice_create
          required: false
          type: string
        - description: Defines the date of special price modification
          in: query
          name: sprice_modified
          required: false
          type: string
        - description: Defines the term of special price offer duration
          in: query
          name: sprice_expire
          required: false
          type: string
        - default: true
          description: Specifies the set of visible/invisible product's variants for users
          in: query
          name: available_for_view
          required: false
          type: boolean
        - default: true
          description: Specifies the set of visible/invisible product's variants for sale
          in: query
          name: available_for_sale
          required: false
          type: boolean
        - default: 0
          description: Weight
          in: query
          name: weight
          required: false
          type: number
        - description: Defines short description
          in: query
          name: short_description
          required: false
          type: string
        - default: 0
          description: Defines product variant's quantity that has to be added
          in: query
          name: quantity
          required: false
          type: number
        - description: Defines the date of entity creation
          in: query
          name: created_at
          required: false
          type: string
        - description: Specifies the product variant's manufacturer
          in: query
          name: manufacturer
          required: false
          type: string
        - description: Defines tax classes where entity has to be added
          in: query
          name: tax_class_id
          required: false
          type: integer
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          type: string
        - description: Defines unique product variant's URL
          in: query
          name: url
          required: false
          type: string
        - description: Add variants specified by store id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  product_variant_id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get count variants.
      operationId: ProductVariantCount
      parameters:
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Counts products‚Äô variants specified by category id
          in: query
          name: category_id
          required: false
          type: string
        - description: Retrieves products' variants specified by product id
          in: query
          name: product_id
          required: false
          type: string
        - description: Retrieves variants specified by store id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  variants_count:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete variant.
      operationId: ProductVariantDelete
      parameters:
        - description: 'Defines variant removal, specified by variant id'
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get variant info.
      operationId: ProductVariantInfo
      parameters:
        - default: 'id,name,description,price'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieves variant's info specified by variant id
          in: query
          name: id
          required: true
          type: string
        - description: Retrieves variant info specified by store id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/Product'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get list variants.
      operationId: ProductVariantList
      parameters:
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - default: 'id,name,description,price'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
        - description: Retrieve entities from their creation date
          in: query
          name: created_from
          required: false
          type: string
        - description: Retrieve entities to their creation date
          in: query
          name: created_to
          required: false
          type: string
        - description: Retrieve entities from their modification date
          in: query
          name: modified_from
          required: false
          type: string
        - description: Retrieve entities to their modification date
          in: query
          name: modified_to
          required: false
          type: string
        - description: Retrieves products‚Äô variants specified by category id
          in: query
          name: category_id
          required: false
          type: string
        - description: Retrieves products' variants specified by product id
          in: query
          name: product_id
          required: false
          type: string
        - description: Retrieves variants specified by store id
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  variant:
                    items:
                      $ref: '#/definitions/Product'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.add.json:
    post:
      consumes:
        - application/json
      description: Add some prices to the product variant.
      operationId: ProductVariantPriceAdd
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductVariantPriceAdd'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  status:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete some prices of the product variant.
      operationId: ProductVariantPriceDelete
      parameters:
        - description: Defines the variant where the price has to be deleted
          in: query
          name: id
          required: true
          type: string
        - description: Defines variants's group prices
          in: query
          name: group_prices
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.price.update.json:
    put:
      consumes:
        - application/json
      description: Update some prices of the product variant.
      operationId: ProductVariantPriceUpdate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductVariantPriceUpdate'
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /product.variant.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update variant.
      operationId: ProductVariantUpdate
      parameters:
        - description: Defines variant update specified by variant id
          in: query
          name: id
          required: true
          type: string
        - description: Defines product's id where the variant has to be updated
          in: query
          name: product_id
          required: true
          type: string
        - description: Defines new products' variants quantity
          in: query
          name: quantity
          required: false
          type: number
        - description: Defines new product's variant price
          in: query
          name: price
          required: false
          type: number
        - description: Defines new product's variant special price
          in: query
          name: special_price
          required: false
          type: number
        - description: Defines inventory tracking for product variant
          in: query
          name: manage_stock
          required: false
          type: boolean
        - description: Defines variant's name that has to be updated
          in: query
          name: name
          required: true
          type: string
        - description: Defines new product's variant sku
          in: query
          name: sku
          required: false
          type: string
        - description: Defines unique meta title for each entity
          in: query
          name: meta_title
          required: false
          type: string
        - description: Defines unique meta description of a entity
          in: query
          name: meta_description
          required: false
          type: string
        - description: Defines unique meta keywords for each entity
          in: query
          name: meta_keywords
          required: false
          type: string
        - description: Specifies variant's description
          in: query
          name: description
          required: false
          type: string
        - description: Defines short description
          in: query
          name: short_description
          required: false
          type: string
        - description: Set visibility status
          enum:
            - nowhere
            - catalog
            - search
            - everywhere
          in: query
          name: visible
          required: false
          type: string
        - description: Defines product variant's status
          enum:
            - enabled
            - disabled
          in: query
          name: status
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated_items:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - product
  /tax.class.info.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Get info about tax
      operationId: TaxClassInfo
      parameters:
        - description: Retrieves taxes specified by class id
          in: query
          name: tax_class_id
          required: true
          type: string
        - default: 'tax_class_id,name,avail'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - description: Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
          in: query
          name: exclude
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                $ref: '#/definitions/TaxClass'
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - tax
  /webhook.count.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: Count registered webhooks on the store.
      operationId: WebhookCount
      parameters:
        - description: The entity you want to filter webhooks by (e.g. order or product)
          in: query
          name: entity
          required: false
          type: string
        - description: The action you want to filter webhooks by (e.g. order or product)
          in: query
          name: action
          required: false
          type: string
        - description: The webhook status you want to filter webhooks by
          in: query
          name: active
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  webhook_count:
                    type: integer
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.create.json:
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create webhook on the store and subscribe to it.
      operationId: WebhookCreate
      parameters:
        - description: 'Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)'
          in: query
          name: entity
          required: true
          type: string
        - description: 'Specify what action (event) will trigger the webhook (e.g add, delete, or update)'
          in: query
          name: action
          required: true
          type: string
        - description: Callback where the webhook should send the POST request when the event occurs
          in: query
          name: callback
          required: true
          type: string
        - description: The name you give to the webhook
          in: query
          name: label
          required: false
          type: string
        - default: id
          description: Fields the webhook should send
          in: query
          name: fields
          required: false
          type: string
        - default: true
          description: Webhook status
          in: query
          name: active
          required: false
          type: boolean
        - description: Defines store id where the webhook should be assigned
          in: query
          name: store_id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  id:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.delete.json:
    delete:
      consumes:
        - application/x-www-form-urlencoded
      description: Delete registered webhook on the store.
      operationId: WebhookDelete
      parameters:
        - description: Webhook id
          in: query
          name: id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  deleted:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.events.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: List all Webhooks that are available on this store.
      operationId: WebhookEvents
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  events:
                    items:
                      properties:
                        action:
                          type: string
                        entity:
                          type: string
                        webhook_name:
                          type: string
                      type: object
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.list.json:
    get:
      consumes:
        - application/x-www-form-urlencoded
      description: List registered webhook on the store.
      operationId: WebhookList
      parameters:
        - default: 'id,entity,action,callback'
          description: Set this parameter in order to choose which entity fields you want to retrieve
          in: query
          name: params
          required: false
          type: string
        - default: 0
          description: This parameter sets the number from which you want to get entities
          in: query
          name: start
          required: false
          type: integer
        - default: 10
          description: This parameter sets the entity amount that has to be retrieved
          in: query
          name: count
          required: false
          type: integer
        - description: The entity you want to filter webhooks by (e.g. order or product)
          in: query
          name: entity
          required: false
          type: string
        - description: 'The action you want to filter webhooks by (e.g. add, update, or delete)'
          in: query
          name: action
          required: false
          type: string
        - description: The webhook status you want to filter webhooks by
          in: query
          name: active
          required: false
          type: boolean
        - description: List of —Åomma-separated webhook ids
          in: query
          name: ids
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  webhook:
                    items:
                      $ref: '#/definitions/Webhook'
                    type: array
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
  /webhook.update.json:
    put:
      consumes:
        - application/x-www-form-urlencoded
      description: Update Webhooks parameters.
      operationId: WebhookUpdate
      parameters:
        - description: Webhook id
          in: query
          name: id
          required: true
          type: string
        - description: Callback where the webhook should send the POST request when the event occurs
          in: query
          name: callback
          required: false
          type: string
        - description: The name you give to the webhook
          in: query
          name: label
          required: false
          type: string
        - description: Fields the webhook should send
          in: query
          name: fields
          required: false
          type: string
        - description: Webhook status
          in: query
          name: active
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              result:
                properties:
                  updated:
                    type: string
                type: object
              return_code:
                type: integer
              return_message:
                type: string
            type: object
      security:
        - api_key: []
          store_key: []
      tags:
        - webhook
definitions:
  Carrier:
    properties:
      active:
        type: boolean
      additional_fields:
        type: object
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
      shipping_methods:
        items:
          $ref: '#/definitions/Order_ShippingMethod'
        type: array
    type: object
  Cart:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      db_prefix:
        type: string
      name:
        type: string
      shipping_zones:
        items:
          $ref: '#/definitions/Cart_ShippingZone'
        type: array
      stores_info:
        items:
          $ref: '#/definitions/Cart_StoreInfo'
        type: array
      url:
        type: string
      version:
        type: string
      warehouses:
        items:
          $ref: '#/definitions/Cart_Warehouse'
        type: array
    type: object
  CartConfigUpdate:
    properties:
      custom_fields:
        description: This parameter sets the list of params to the shopping cart.
        type: object
      db_tables_prefix:
        description: 'This parameter is deprecated for this method. Please, use this parameter in method account.config.update'
        type: string
      store_id:
        description: Store Id
        type: string
    type: object
  Cart_ShippingZone:
    properties:
      additional_fields:
        type: object
      code:
        type: string
      country:
        type: string
      country_iso2_codes:
        items:
          type: string
        type: array
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
    type: object
  Cart_StoreInfo:
    properties:
      active:
        type: boolean
      additional_fields:
        type: object
      carrier_info:
        items:
          $ref: '#/definitions/Carrier'
        type: array
      country:
        type: string
      currency:
        $ref: '#/definitions/Currency'
      custom_fields:
        type: object
      dimension_unit:
        type: string
      language:
        type: string
      multi_store_url:
        type: string
      name:
        type: string
      prices_include_tax:
        type: boolean
      root_category_id:
        type: integer
      store_id:
        type: string
      store_languages:
        items:
          $ref: '#/definitions/Language'
        type: array
      store_owner_info:
        $ref: '#/definitions/Info'
      timezone:
        type: string
      weight_unit:
        type: string
    type: object
  Cart_Warehouse:
    properties:
      additional_fields:
        type: object
      address:
        $ref: '#/definitions/Customer_Address'
      avail:
        type: boolean
      carriers_ids:
        items:
          type: string
        type: array
      custom_fields:
        type: object
      description:
        type: string
      id:
        type: string
      name:
        type: string
      stores_ids:
        items:
          type: string
        type: array
    type: object
  Category:
    properties:
      additional_fields:
        type: object
      avail:
        type: boolean
      created_at:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      description:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/Image'
        type: array
      keywords:
        type: string
      meta_description:
        type: string
      meta_title:
        type: string
      modified_at:
        $ref: '#/definitions/DateTime'
      name:
        type: string
      parent_id:
        type: string
      path:
        type: string
      seo_url:
        type: string
      short_description:
        type: string
      sort_order:
        type: integer
      stores_ids:
        items:
          type: string
        type: array
    type: object
  Child:
    properties:
      additional_fields:
        type: object
      advanced_price:
        items:
          $ref: '#/definitions/Product_AdvancedPrice'
        type: array
      allow_backorders:
        type: boolean
      avail_for_sale:
        type: boolean
      combination:
        items:
          properties:
            option_id:
              type: string
            option_value_id:
              type: string
          type: object
        type: array
      created_time:
        type: string
      custom_fields:
        type: object
      default_price:
        type: number
      default_qty_in_pack:
        type: number
      dimensions_unit:
        type: string
      ean:
        type: string
      full_description:
        type: string
      gtin:
        type: string
      height:
        type: number
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/Image'
        type: array
      in_stock:
        type: boolean
      inventory:
        items:
          $ref: '#/definitions/Product_Inventory'
        type: array
      inventory_level:
        type: number
      is_qty_in_pack_fixed:
        type: boolean
      length:
        type: number
      list_price:
        type: number
      manage_stock:
        type: boolean
      min_quantity:
        type: number
      modified_time:
        type: string
      mpn:
        type: string
      name:
        type: string
      parent_id:
        type: string
      short_description:
        type: string
      sku:
        type: string
      sort_order:
        type: integer
      tax_class_id:
        type: string
      upc:
        type: string
      weight:
        type: number
      weight_unit:
        type: string
      wholesale_price:
        type: number
      width:
        type: number
    type: object
  Country:
    properties:
      additional_fields:
        type: object
      code2:
        type: string
      code3:
        type: string
      custom_fields:
        type: object
      name:
        type: string
    type: object
  Coupon:
    properties:
      actions:
        items:
          $ref: '#/definitions/Coupon_Action'
        type: array
      additional_fields:
        type: object
      avail:
        type: boolean
      code:
        type: string
      conditions:
        items:
          $ref: '#/definitions/Coupon_Condition'
        type: array
      custom_fields:
        type: object
      date_end:
        $ref: '#/definitions/DateTime'
      date_start:
        $ref: '#/definitions/DateTime'
      description:
        type: string
      id:
        type: string
      logic_operator:
        type: string
      name:
        type: string
      priority:
        type: integer
      usage_history:
        items:
          $ref: '#/definitions/Coupon_History'
        type: array
      usage_limit:
        type: integer
      usage_limit_per_customer:
        type: integer
      used_times:
        type: integer
    type: object
  Coupon_Action:
    properties:
      additional_fields:
        type: object
      amount:
        type: number
      apply_to:
        type: string
      conditions:
        items:
          $ref: '#/definitions/Coupon_Condition'
        type: array
      currency_code:
        type: string
      custom_fields:
        type: object
      discount_quantity_step:
        type: integer
      discounted_quantity:
        type: number
      include_tax:
        type: boolean
      logic_operator:
        type: string
      scope:
        type: string
      type:
        type: string
    type: object
  Coupon_Condition:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      entity:
        type: string
      id:
        type: string
      key:
        type: string
      logic_operator:
        type: string
      match_items:
        type: string
      operator:
        type: string
      sub-conditions:
        items:
          $ref: '#/definitions/Coupon_Condition'
        type: array
      value:
        type: string
      value_type:
        type: string
    type: object
  Coupon_History:
    properties:
      additional_fields:
        type: object
      amount:
        type: number
      custom_fields:
        type: object
      order_id:
        type: string
    type: object
  Currency:
    properties:
      additional_fields:
        type: object
      avail:
        type: boolean
      custom_fields:
        type: object
      default:
        type: boolean
      iso3:
        type: string
      name:
        type: string
      rate:
        type: number
      symbol_left:
        type: string
      symbol_right:
        type: string
    type: object
  Customer:
    properties:
      additional_fields:
        type: object
      address_book:
        items:
          $ref: '#/definitions/Customer_Address'
        type: array
      birth_day:
        $ref: '#/definitions/DateTime'
      company:
        type: string
      created_time:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      email:
        type: string
      fax:
        type: string
      first_name:
        type: string
      gender:
        type: string
      group:
        items:
          $ref: '#/definitions/Customer_Group'
        type: array
      id:
        type: string
      ip_address:
        type: string
      last_login:
        $ref: '#/definitions/DateTime'
      last_name:
        type: string
      login:
        type: string
      modified_time:
        $ref: '#/definitions/DateTime'
      news_letter_subscription:
        type: boolean
      phone:
        type: string
      status:
        type: string
      stores_ids:
        items:
          type: string
        type: array
      website:
        type: string
    type: object
  CustomerAdd:
    properties:
      address:
        items:
          properties:
            address_book_address1:
              description: Specifies customer's first address in the address book
              type: string
            address_book_address2:
              description: Specifies customer's second address in the address book
              type: string
            address_book_city:
              description: Specifies customer's city in the address book
              type: string
            address_book_company:
              description: Specifies customer's company name in the address book
              type: string
            address_book_country:
              description: ISO code or name of country
              type: string
            address_book_default:
              description: Defines whether the address is used by default
              type: boolean
            address_book_fax:
              description: Specifies customer's fax in the address book
              type: string
            address_book_first_name:
              description: Specifies customer's first name in the address book
              type: string
            address_book_gender:
              description: Specifies customer's gender
              enum:
                - male
                - female
              type: string
            address_book_last_name:
              description: Specifies customer's last name in the address book
              type: string
            address_book_phone:
              description: Specifies customer's phone number in the address book
              type: string
            address_book_postcode:
              description: Specifies customer's postcode
              type: string
            address_book_region:
              description: Specifies customer's region
              type: string
            address_book_state:
              description: ISO code or name of state.
              type: string
            address_book_type:
              description: Specifies customer's address type
              enum:
                - billing
                - shipping
              type: string
            address_book_website:
              description: Specifies customer's website in the address book
              type: string
          type: object
        type: array
      birth_day:
        description: Defines customer's birthday
        type: string
      company:
        description: Defines customer's company
        type: string
      created_time:
        description: Entity's date creation
        type: string
      email:
        description: Defines customer's email
        type: string
      fax:
        description: Defines customer's fax
        type: string
      first_name:
        description: Defines customer's first name
        type: string
      gender:
        description: Defines customer's gender
        enum:
          - male
          - female
        type: string
      group:
        description: Defines the group where the customer
        type: string
      last_login:
        description: Defines customer's last login time
        type: string
      last_name:
        description: Defines customer's last name
        type: string
      login:
        description: Specifies customer's login name
        type: string
      modified_time:
        description: Entity's date modification
        type: string
      news_letter_subscription:
        default: false
        description: Defines whether the newsletter subscription is available for the user
        type: boolean
      password:
        description: Defines customer's unique password
        type: string
      phone:
        description: Defines customer's phone number
        type: string
      status:
        default: enabled
        description: Defines customer's status
        enum:
          - enabled
          - disabled
        type: string
      website:
        description: Link to customer website
        type: string
    required:
      - email
      - first_name
      - last_name
    type: object
  Customer_Address:
    properties:
      additional_fields:
        type: object
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      company:
        type: string
      country:
        $ref: '#/definitions/Country'
      custom_fields:
        type: object
      default:
        type: boolean
      fax:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
      postcode:
        type: string
      region:
        type: string
      state:
        $ref: '#/definitions/State'
      type:
        type: string
      website:
        type: string
    type: object
  Customer_Group:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
    type: object
  DateTime:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      format:
        type: string
      value:
        type: string
    type: object
  GiftCard:
    properties:
      additional_fields:
        type: object
      amount:
        type: number
      avail_to:
        type: string
      code:
        type: string
      created_at:
        type: string
      currency_code:
        type: string
      custom_fields:
        type: object
      free_product_ids:
        type: string
      id:
        type: string
      initial_amount:
        type: number
      message:
        type: string
      name:
        type: string
      owner_email:
        type: string
      owner_name:
        type: string
      recipient_email:
        type: string
      recipient_name:
        type: string
      status:
        type: string
      type:
        type: string
      usage_history:
        items:
          $ref: '#/definitions/Coupon_History'
        type: array
    type: object
  Image:
    properties:
      additional_fields:
        type: object
      alt:
        type: string
      avail:
        type: boolean
      create_at:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      file_name:
        type: string
      http_path:
        type: string
      id:
        type: string
      mime-type:
        type: string
      modified_at:
        $ref: '#/definitions/DateTime'
      size:
        type: integer
      sort_order:
        type: integer
      type:
        type: string
    type: object
  Info:
    properties:
      additional_fields:
        type: object
      city:
        type: string
      country:
        type: string
      custom_fields:
        type: object
      email:
        type: string
      owner:
        type: string
      phone:
        type: string
      state:
        type: string
      state_code:
        type: string
      street_address:
        type: string
      street_address_line_2:
        type: string
      zip_code:
        type: string
    type: object
  Language:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      id:
        type: string
      iso_code:
        type: string
      name:
        type: string
    type: object
  Order:
    properties:
      additional_fields:
        type: object
      billing_address:
        $ref: '#/definitions/Customer_Address'
      comment:
        type: string
      create_at:
        $ref: '#/definitions/DateTime'
      currency:
        $ref: '#/definitions/Currency'
      custom_fields:
        type: object
      customer:
        properties:
          email:
            type: string
          first_name:
            type: string
          id:
            type: string
          last_name:
            type: string
      discounts:
        items:
          $ref: '#/definitions/Order_Totals_NewDiscount'
        type: array
      finished_time:
        $ref: '#/definitions/DateTime'
      id:
        type: string
      modified_at:
        $ref: '#/definitions/DateTime'
      order_id:
        type: string
      order_products:
        items:
          $ref: '#/definitions/Order_Item'
        type: array
      payment_method:
        $ref: '#/definitions/Order_PaymentMethod'
      shipping_address:
        $ref: '#/definitions/Customer_Address'
      shipping_method:
        $ref: '#/definitions/Order_ShippingMethod'
      status:
        $ref: '#/definitions/Order_Status'
      store_id:
        type: string
      total:
        $ref: '#/definitions/Order_Total'
      totals:
        $ref: '#/definitions/Order_Totals'
    type: object
  OrderAbandoned:
    properties:
      additional_fields:
        type: object
      basket_url:
        type: string
      created_at:
        $ref: '#/definitions/DateTime'
      currency:
        $ref: '#/definitions/Currency'
      custom_fields:
        type: object
      customer:
        properties:
          email:
            type: string
          first_name:
            type: string
          id:
            type: string
          last_name:
            type: string
      id:
        type: integer
      modified_at:
        $ref: '#/definitions/DateTime'
      order_products:
        items:
          $ref: '#/definitions/Order_Item'
        type: array
      totals:
        $ref: '#/definitions/Order_Totals'
    type: object
  OrderAdd:
    properties:
      admin_comment:
        description: Specifies admin's order comment
        type: string
      bill_address_1:
        description: Specifies first billing address
        type: string
      bill_address_2:
        description: Specifies second billing address
        type: string
      bill_city:
        description: Specifies billing city
        type: string
      bill_company:
        description: Specifies billing company
        type: string
      bill_country:
        description: Specifies billing country code
        type: string
      bill_fax:
        description: Specifies billing fax
        type: string
      bill_first_name:
        description: Specifies billing first name
        type: string
      bill_last_name:
        description: Specifies billing last name
        type: string
      bill_phone:
        description: Specifies billing phone
        type: string
      bill_postcode:
        description: Specifies billing postcode
        type: string
      bill_state:
        description: Specifies billing state code
        type: string
      comment:
        description: Specifies order comment
        type: string
      coupon_discount:
        default: 0
        description: Specifies order's coupon discount
        type: number
      currency:
        description: Currency code of order
        type: string
      customer_birthday:
        description: Specifies customer‚Äôs birthday
        type: string
      customer_email:
        description: Defines the customer specified by email for whom order has to be created
        type: string
      customer_fax:
        description: Specifies customer‚Äôs fax
        type: string
      customer_first_name:
        description: Specifies customer's first name
        type: string
      customer_last_name:
        description: Specifies customer‚Äôs last name
        type: string
      customer_phone:
        description: Specifies customer‚Äôs phone
        type: string
      date:
        description: 'Specifies an order creation date in format Y-m-d H:i:s'
        type: string
      date_finished:
        description: Specifies order's  finished date
        type: string
      date_modified:
        description: Specifies order's  modification date
        type: string
      discount:
        default: 0
        description: Specifies order's discount
        type: number
      financial_status:
        description: Create order with financial status
        enum:
          - pending
          - authorized
          - partially_paid
          - paid
          - partially_refunded
          - refunded
          - voided
        type: string
      fulfillment_status:
        description: Create order with fulfillment status
        enum:
          - fulfilled
          - 'null'
          - partial
        type: string
      gift_certificate_discount:
        default: 0
        description: Discounts for order with gift certificates
        type: number
      order_id:
        description: Defines the order id if it is supported by the cart
        type: string
      order_item:
        items:
          properties:
            order_item_id:
              description: Defines orders specified by order item id
              type: string
            order_item_model:
              description: Defines orders specified by order item model
              type: string
            order_item_name:
              description: Defines orders specified by order item name
              type: string
            order_item_option:
              items:
                properties:
                  order_item_option_name:
                    description: 'Ordered Product Option Name. Where x is order item ID, y is order item option ID'
                    type: string
                  order_item_option_price:
                    description: 'Ordered product option price Where x is order item ID, y - order item option ID'
                    type: number
                  order_item_option_value:
                    description: 'Ordered product option value Where x is order item ID, y - order item option ID'
                    type: string
                type: object
              type: array
            order_item_price:
              description: Defines orders specified by order item price
              type: number
            order_item_quantity:
              description: Defines orders specified by order item quantity
              type: integer
            order_item_tax:
              default: 0
              description: Percentage of tax for product order
              type: number
            order_item_variant_id:
              description: Ordered product variant. Where x is order item ID
              type: string
          type: object
        type: array
      order_payment_method:
        description: Defines order payment method
        type: string
      order_shipping_method:
        description: Defines order shipping method
        type: string
      order_status:
        description: Defines order status.
        type: string
      send_notifications:
        default: false
        description: Send notifications to customer after order was created
        type: boolean
      shipp_address_1:
        description: Specifies first shipping address
        type: string
      shipp_address_2:
        description: Specifies second shipping address
        type: string
      shipp_city:
        description: Specifies shipping city
        type: string
      shipp_company:
        description: Specifies shipping company
        type: string
      shipp_country:
        description: Specifies shipping country code
        type: string
      shipp_fax:
        description: Specifies shipping fax
        type: string
      shipp_first_name:
        description: Specifies shipping first name
        type: string
      shipp_last_name:
        description: Specifies shipping last name
        type: string
      shipp_phone:
        description: Specifies shipping phone
        type: string
      shipp_postcode:
        description: Specifies shipping postcode
        type: string
      shipp_state:
        description: Specifies shipping state code
        type: string
      shipping_price:
        default: 0
        description: Specifies order's shipping price
        type: number
      store_id:
        description: Defines store id where the order should be assigned
        type: string
      subtotal_price:
        description: 'Total price of all ordered products multiplied by their number, excluding tax, shipping price and discounts'
        type: number
      tax_price:
        default: 0
        description: The value of tax cost for order
        type: number
      total_paid:
        description: Defines total paid amount for the order
        type: number
      total_price:
        description: Defines order's total price
        type: number
    required:
      - order_status
      - customer_email
      - bill_first_name
      - bill_last_name
      - bill_address_1
      - bill_city
      - bill_postcode
      - bill_state
      - bill_country
      - total_price
    type: object
  OrderRefundAdd:
    properties:
      date:
        description: 'Specifies an order creation date in format Y-m-d H:i:s'
        type: string
      fee_price:
        description: Specifies refund's fee price
        type: number
      item_restock:
        default: false
        description: 'Boolean, whether or not to add the line items back to the store inventory.'
        type: boolean
      items:
        description: Defines items in the order that will be shipped
        items:
          properties:
            order_product_id:
              type: string
            price:
              type: number
            quantity:
              type: number
          type: object
        type: array
      message:
        description: 'Refund reason, or some else message which assigned to refund.'
        type: string
      order_id:
        description: Defines the order for which the refund will be created.
        type: string
      send_notifications:
        default: false
        description: Send notifications to customer after refund was created
        type: boolean
      shipping_price:
        default: 0
        description: Defines refund shipping amount.
        type: number
      total_price:
        description: Defines order refund amount.
        type: number
    required:
      - order_id
    type: object
  OrderShipmentAdd:
    properties:
      items:
        description: Defines items in the order that will be shipped
        items:
          properties:
            order_product_id:
              type: string
            quantity:
              type: number
          type: object
        type: array
      order_id:
        description: Defines the order for which the shipment will be created
        type: string
      send_notifications:
        default: false
        description: Send notifications to customer after shipment was created
        type: boolean
      shipment_provider:
        description: Defines company name that provide tracking of shipment
        type: string
      tracking_numbers:
        description: 'Defines shipment''s tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = "http://docs.api2cart.com/cart-info">cart.info</a > method'
        items:
          properties:
            carrier_id:
              type: string
            tracking_number:
              type: string
          type: object
        type: array
    required:
      - order_id
    type: object
  OrderShipmentUpdate:
    properties:
      order_id:
        description: Defines the order that will be updated
        type: string
      replace:
        default: true
        description: Allows rewrite tracking numbers
        type: boolean
      shipment_id:
        description: Shipment id indicates the number of delivery
        type: string
      tracking_numbers:
        description: 'Defines shipment''s tracking numbers that have to be added</br> How set tracking numbers to appropriate carrier:<ul><li>tracking_numbers[]=a2c.demo1,a2c.demo2 - set default carrier</li><li>tracking_numbers[<b>carrier_id</b>]=a2c.demo - set appropriate carrier</li></ul>To get the list of carriers IDs that are available in your store, use the <a href = "http://docs.api2cart.com/cart-info">cart.info</a > method'
        items:
          properties:
            carrier_id:
              type: string
            tracking_number:
              type: string
          type: object
        type: array
    required:
      - shipment_id
      - order_id
    type: object
  Order_Item:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      model:
        type: string
      name:
        type: string
      options:
        items:
          $ref: '#/definitions/Order_Item_Option'
        type: array
      order_product_id:
        type: string
      price:
        type: number
      product_id:
        type: string
      quantity:
        type: number
      tax_percent:
        type: number
      tax_value:
        type: number
      total_price:
        type: number
      variant_id:
        type: string
      weight:
        type: number
      weight_unit:
        type: string
    type: object
  Order_Item_Option:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      name:
        type: string
      option_id:
        type: string
      price:
        type: number
      product_option_value_id:
        type: integer
      type:
        type: string
      value:
        type: string
      weight:
        type: number
    type: object
  Order_PaymentMethod:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      name:
        type: string
    type: object
  Order_ShippingMethod:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      name:
        type: string
    type: object
  Order_Status:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      history:
        items:
          $ref: '#/definitions/Order_Status_HistoryItem'
        type: array
      id:
        type: string
      name:
        type: string
      refund_info:
        $ref: '#/definitions/Order_Status_Refund'
    type: object
  Order_Status_HistoryItem:
    properties:
      additional_fields:
        type: object
      comment:
        type: string
      custom_fields:
        type: object
      id:
        type: string
      modified_time:
        $ref: '#/definitions/DateTime'
      name:
        type: string
      notify:
        type: boolean
    type: object
  Order_Status_Refund:
    properties:
      additional_fields:
        type: object
      comment:
        type: string
      custom_fields:
        type: object
      fee:
        type: number
      refunded_items:
        items:
          $ref: '#/definitions/Order_Status_Refund_Item'
        type: array
      shipping:
        type: number
      tax:
        type: number
      time:
        $ref: '#/definitions/DateTime'
      total_refunded:
        type: number
    type: object
  Order_Status_Refund_Item:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      product_id:
        type: string
      qty:
        type: number
      refund:
        type: number
      variant_id:
        type: string
    type: object
  Order_Total:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      shipping_ex_tax:
        type: number
      subtotal_ex_tax:
        type: number
      total:
        type: number
      total_discount:
        type: number
      total_paid:
        type: number
      total_tax:
        type: number
      wrapping_ex_tax:
        type: number
    type: object
  Order_Totals:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      discount:
        type: number
      shipping:
        type: number
      subtotal:
        type: number
      tax:
        type: number
      total:
        type: number
    type: object
  Order_Totals_NewDiscount:
    properties:
      additional_fields:
        type: object
      code:
        type: string
      custom_fields:
        type: object
      type:
        type: string
      value:
        type: number
    type: object
  Plugin:
    properties:
      active:
        type: boolean
      additional_fields:
        type: object
      custom_fields:
        type: object
      name:
        type: string
    type: object
  PluginList:
    properties:
      additional_fields:
        type: object
      all_plugins:
        type: integer
      custom_fields:
        type: object
      plugins:
        items:
          $ref: '#/definitions/Plugin'
        type: array
    type: object
  Product:
    properties:
      additional_fields:
        type: object
      avail_sale:
        type: boolean
      avail_view:
        type: boolean
      backorders:
        type: string
      categories_ids:
        items:
          type: string
        type: array
      create_at:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      description:
        type: string
      dimensions_unit:
        type: string
      group_price:
        items:
          $ref: '#/definitions/Product_GroupPrice'
        type: array
      height:
        type: number
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/Image'
        type: array
      inventory:
        items:
          $ref: '#/definitions/Product_Inventory'
        type: array
      is_downloadable:
        type: boolean
      is_virtual:
        type: boolean
      length:
        type: number
      manage_stock:
        type: string
      meta_description:
        type: string
      meta_keywords:
        type: string
      meta_title:
        type: string
      modified_at:
        $ref: '#/definitions/DateTime'
      name:
        type: string
      price:
        type: number
      product_options:
        items:
          $ref: '#/definitions/Product_Option'
        type: array
      quantity:
        type: number
      related_products_ids:
        items:
          type: string
        type: array
      seo_url:
        type: string
      short_description:
        type: string
      sort_order:
        type: integer
      special_price:
        $ref: '#/definitions/SpecialPrice'
      stores_ids:
        items:
          type: string
        type: array
      tax_class_id:
        type: string
      tier_price:
        items:
          $ref: '#/definitions/Product_TierPrice'
        type: array
      type:
        type: string
      u_brand:
        type: string
      u_model:
        type: string
      u_mpn:
        type: string
      u_sku:
        type: string
      u_upc:
        type: string
      url:
        type: string
      weight:
        type: number
      weight_unit:
        type: string
      width:
        type: number
    type: object
  ProductAdd:
    properties:
      attribute_name:
        description: Defines product‚Äôs attribute name separated with a comma in Magento
        type: string
      attribute_set_name:
        default: Default
        description: Defines product‚Äôs attribute set name in Magento
        type: string
      available_for_sale:
        default: true
        description: Specifies the set of visible/invisible products for sale
        type: boolean
      available_for_view:
        default: true
        description: Specifies the set of visible/invisible products for users
        type: boolean
      best_offer:
        description: 'The price at which Best Offers are automatically accepted.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">best_offer[<b>minimum_offer_price</b>] = decimal</br>best_offer[<b>auto_accept_price</b>] = decimal</br></code></div></div>'
        items:
          type: string
        type: array
      categories_ids:
        description: Defines product add that is specified by comma-separated categories id
        type: string
      condition:
        description: 'The human-readable label for the condition (e.g., "New").'
        enum:
          - Brand New
          - Like New
          - Very Good
          - Good
          - Acceptable
        type: string
      created_at:
        description: Defines the date of entity creation
        type: string
      description:
        description: Defines product's description that has to be added
        type: string
      downloadable:
        default: false
        description: Defines whether the product is downloadable
        type: boolean
      ean:
        description: European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
        type: string
      group_prices:
        description: Defines product's group prices
        items:
          properties:
            group_id:
              type: string
            price:
              type: number
          type: object
        type: array
      isbn:
        description: International Standard Book Number. An ISBN is a unique identifier for books.
        type: string
      lang_id:
        description: Language id
        type: integer
      listing_duration:
        description: Describes the number of days the seller wants the listing to be active.
        enum:
          - 'See cart.info method, param `listing_duration`'
        type: string
      listing_type:
        default: FixedPrice
        description: Indicates the selling format of the eBay listing.
        enum:
          - Auction
          - FixedPrice
        type: string
      manufacturer:
        description: Defines product's manufacturer
        type: string
      meta_description:
        description: Defines unique meta description of a entity
        type: string
      meta_keywords:
        description: Defines unique meta keywords for each entity
        type: string
      meta_title:
        description: Defines unique meta title for each entity
        type: string
      model:
        description: Defines product's model that has to be added
        type: string
      name:
        description: Defines product's name that has to be added
        type: string
      ordered_count:
        default: 0
        description: Defines how many times the product was ordered
        type: integer
      package_details:
        description: 'If the seller is subscribed to "Business Policies", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>'
        items:
          type: string
        type: array
      payment_methods:
        description: 'Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">payment_methods[0] = string</br>payment_methods[1] = string</br></code></div></div>'
        enum:
          - 'See cart.info method, param `payment_methods`'
        items:
          type: string
        type: array
      paypal_email:
        description: Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.
        type: string
      price:
        description: Defines product's price that has to be added
        type: number
      quantity:
        default: 0
        description: Defines product's quantity that has to be added
        type: number
      return_accepted:
        description: Indicates whether the seller allows the buyer to return the item.
        type: boolean
      sales_tax:
        description: 'Percent of an item''s price to be charged as the sales tax for the order.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">sales_tax[<b>tax_percent</b>] = decimal (##.###)</br>sales_tax[<b>tax_state</b>] = string</br>sales_tax[<b>shipping_inc_in_tax</b>] = bool</br></code></div></div>'
        enum:
          - 'See cart.info method, param `eBay_tax_states`'
        items:
          type: string
        type: array
      shipping_details:
        description: 'The shipping details, including flat and calculated shipping costs and shipping insurance costs.<hr><div style="font-style:normal">Param structure:<div style="margin-left: 2%;"><code style="padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;">shipping_details[<b>shipping_type</b>] = string </br>shipping_details[0][<b>shipping_service</b>] = string</br>shipping_details[0][<b>shipping_cost</b>] = decimal</br>shipping_details[1][<b>shipping_service</b>] = string</br>shipping_details[1][<b>shipping_cost</b>] = decimal</br></code></div></div>'
        enum:
          - 'See cart.info method, param `eBay_shipping_services`'
        items:
          type: string
        type: array
      shipping_template_id:
        default: 0
        description: The numeric ID of the shipping template associated with the products in Etsy.
        type: integer
      short_description:
        description: Defines short description
        type: string
      sku:
        description: Defines product's sku that has to be added
        type: string
      special_price:
        description: Defines product's model that has to be added
        type: number
      sprice_create:
        description: Defines the date of special price creation
        type: string
      sprice_expire:
        description: Defines the term of special price offer duration
        type: string
      sprice_modified:
        description: Defines the date of special price modification
        type: string
      tax_class_id:
        description: Defines tax classes where entity has to be added
        type: integer
      tier_prices:
        description: Defines product's tier prices
        items:
          properties:
            price:
              type: number
            quantity:
              type: number
          type: object
        type: array
      type:
        default: simple
        description: Defines product's type
        enum:
          - simple
          - configurable
        type: string
      upc:
        description: Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
        type: string
      url:
        description: Defines unique product's URL
        type: string
      viewed_count:
        default: 0
        description: Specifies the number of product's reviews
        type: integer
      weight:
        default: 0
        description: Weight
        type: number
      weight_unit:
        description: Weight Unit
        enum:
          - g
          - kg
          - oz
          - lb
        type: string
      wholesale_price:
        description: Defines product's sale price
        type: number
    required:
      - name
      - model
      - description
      - price
      - shipping_template_id
      - condition
      - listing_duration
      - payment_methods
      - return_accepted
      - shipping_details
      - paypal_email
    type: object
  ProductPriceAdd:
    properties:
      group_prices:
        description: Defines product's group prices
        items:
          properties:
            group_id:
              type: string
            price:
              type: number
          type: object
        type: array
      product_id:
        description: Defines the product to which the price has to be added
        type: string
    required:
      - product_id
    type: object
  ProductPriceUpdate:
    properties:
      group_prices:
        description: Defines product's group prices
        items:
          properties:
            group_id:
              type: string
            id:
              type: integer
            price:
              type: number
          type: object
        type: array
      product_id:
        description: Defines the product where the price has to be updated
        type: string
    required:
      - product_id
    type: object
  ProductTaxAdd:
    properties:
      name:
        description: Defines tax class name where tax has to be added
        type: string
      product_id:
        description: Defines products specified by product id
        type: string
      tax_rates:
        description: Defines tax rates of specified tax classes
        items:
          properties:
            name:
              type: string
            type:
              type: string
            value:
              type: number
          type: object
        type: array
    required:
      - product_id
      - name
      - tax_rates
    type: object
  ProductVariantPriceAdd:
    properties:
      group_prices:
        description: Defines variants's group prices
        items:
          properties:
            group_id:
              type: string
            price:
              type: number
          type: object
        type: array
      id:
        description: Defines the variant to which the price has to be added
        type: string
    required:
      - id
    type: object
  ProductVariantPriceUpdate:
    properties:
      group_prices:
        description: Defines variants's group prices
        items:
          properties:
            group_id:
              type: string
            id:
              type: integer
            price:
              type: number
          type: object
        type: array
      id:
        description: Defines the variant where the price has to be updated
        type: string
    required:
      - id
    type: object
  Product_AdvancedPrice:
    properties:
      additional_fields:
        type: object
      avail:
        type: boolean
      custom_fields:
        type: object
      expire_time:
        $ref: '#/definitions/DateTime'
      group_id:
        type: string
      id:
        type: string
      quantity_from:
        type: number
      start_time:
        $ref: '#/definitions/DateTime'
      value:
        type: number
    type: object
  Product_Attribute:
    properties:
      additional_fields:
        type: object
      attribute_group_id:
        type: string
      attribute_id:
        type: string
      code:
        type: string
      custom_fields:
        type: object
      lang_id:
        type: integer
      name:
        type: string
      position:
        type: integer
      product_id:
        type: integer
      required:
        type: boolean
      store_id:
        type: integer
      type:
        type: string
      value:
        type: string
      visible:
        type: boolean
    type: object
  Product_GroupPrice:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      expire_time:
        type: string
      group_id:
        type: string
      id:
        type: string
      price:
        type: number
      quantity:
        type: number
      start_time:
        type: string
      store_id:
        type: string
    type: object
  Product_Inventory:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      in_stock:
        type: boolean
      priority:
        type: integer
      quantity:
        type: number
      warehouse_id:
        type: string
    type: object
  Product_Option:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      description:
        type: string
      id:
        type: string
      name:
        type: string
      option_items:
        items:
          $ref: '#/definitions/Product_Option_Item'
        type: array
      product_option_id:
        type: string
      required:
        type: boolean
      sort_order:
        type: integer
      type:
        type: string
    type: object
  Product_Option_Item:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
      price:
        type: string
      product_option_item_id:
        type: string
      quantity:
        type: integer
      sku:
        type: string
      sort_order:
        type: integer
      type_price:
        type: string
      weight:
        type: string
    type: object
  Product_Review:
    properties:
      additional_fields:
        type: object
      created_time:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      customer_id:
        type: string
      email:
        type: string
      id:
        type: string
      message:
        type: string
      nick_name:
        type: string
      rating:
        type: integer
      status:
        type: string
      summary:
        type: string
    type: object
  Product_TierPrice:
    properties:
      additional_fields:
        type: object
      custom_fields:
        type: object
      price:
        type: number
      qty:
        type: number
    type: object
  Shipment:
    properties:
      additional_fields:
        type: object
      created_at:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      id:
        type: string
      items:
        items:
          properties:
            model:
              type: string
            name:
              type: string
            price:
              type: number
            product_id:
              type: string
            quantity:
              type: number
          type: object
        type: array
      order_id:
        type: string
      shipment_provider:
        type: string
      tracking_numbers:
        items:
          $ref: '#/definitions/Shipment_TrackingNumber'
        type: array
    type: object
  Shipment_TrackingNumber:
    properties:
      additional_fields:
        type: object
      carrier_id:
        type: string
      custom_fields:
        type: object
      tracking_number:
        type: string
    type: object
  SpecialPrice:
    properties:
      additional_fields:
        type: object
      avail:
        type: boolean
      created_at:
        $ref: '#/definitions/DateTime'
      custom_fields:
        type: object
      expired_at:
        $ref: '#/definitions/DateTime'
      modified_at:
        $ref: '#/definitions/DateTime'
      value:
        type: number
    type: object
  State:
    properties:
      additional_fields:
        type: object
      code:
        type: string
      custom_fields:
        type: object
      name:
        type: string
    type: object
  StoreAttribute:
    properties:
      additional_fields:
        type: object
      code:
        type: string
      custom_fields:
        type: object
      default_values:
        items:
          type: string
        type: array
      id:
        type: string
      lang_id:
        type: string
      name:
        type: string
      position:
        type: integer
      required:
        type: boolean
      store_id:
        type: string
      system:
        type: boolean
      type:
        type: string
      values:
        items:
          type: string
        type: array
      visible:
        type: boolean
    type: object
  StoreAttribute_Group:
    properties:
      additional_fields:
        type: object
      assigned_attribute_ids:
        items:
          type: string
        type: array
      attribute_set_id:
        type: string
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
      position:
        type: integer
    type: object
  TaxClass:
    properties:
      additional_fields:
        type: object
      avail:
        type: boolean
      custom_fields:
        type: object
      id:
        type: string
      name:
        type: string
      tax:
        type: number
      tax_rates:
        items:
          $ref: '#/definitions/Tax_Rate'
        type: array
      tax_type:
        type: integer
    type: object
  Tax_Rate:
    properties:
      additional_fields:
        type: object
      created_at:
        type: string
      custom_fields:
        type: object
      id:
        type: string
      modified_at:
        type: string
      name:
        type: string
      type:
        type: integer
      value:
        type: number
    type: object
  Webhook:
    properties:
      action:
        type: string
      active:
        type: boolean
      additional_fields:
        type: object
      callback:
        type: string
      created_at:
        type: string
      custom_fields:
        type: object
      entity:
        type: string
      fields:
        type: string
      id:
        type: integer
      label:
        type: string
      store_id:
        type: string
      updated_at:
        type: string
    type: object
